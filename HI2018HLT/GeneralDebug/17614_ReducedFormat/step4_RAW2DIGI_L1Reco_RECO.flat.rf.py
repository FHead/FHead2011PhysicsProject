import FWCore.ParameterSet.Config as cms

process = cms.Process("reRECO")

process.source = cms.Source("PoolSource",
    fileNames = cms.untracked.vstring('file:outputStreamMuonRFRAW.root'),
    secondaryFileNames = cms.untracked.vstring()
)
process.AODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'drop doubles_*Jets_rhos_*',
        'drop doubles_*Jets_sigmas_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'drop recoHcalNoiseRBXs_*_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'drop *_gedPhotons_valMapPFEgammaCandToPhoton_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'drop *_pfElectronTranslator_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoTracks_hiGeneralTracks_*_*',
        'keep recoTracks_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep CaloTowersSorted_towerMaker_*_*',
        'drop recoCandidatesOwned_caloTowers_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep HFRecHitsSorted_hfreco_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
     ) )
)

process.AODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'drop doubles_*Jets_rhos_*',
        'drop doubles_*Jets_sigmas_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'drop recoHcalNoiseRBXs_*_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'drop *_gedPhotons_valMapPFEgammaCandToPhoton_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'drop *_pfElectronTranslator_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep recoTracks_hiGeneralTracks_*_*',
        'keep recoTracks_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep CaloTowersSorted_towerMaker_*_*',
        'drop recoCandidatesOwned_caloTowers_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep HFRecHitsSorted_hfreco_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*'
     ) )
)

process.AnomalousCellParameters = cms.PSet(
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999)
)

process.BeamSpotAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.BeamSpotRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_offlineBeamSpot_*_*')
)

process.CSCSegAlgoDF = cms.PSet(
    algo_name = cms.string('CSCSegAlgoDF'),
    algo_psets = cms.VPSet(
        cms.PSet(
            CSCSegmentDebug = cms.untracked.bool(False),
            Pruning = cms.untracked.bool(False),
            chi2Max = cms.double(5000.0),
            dPhiFineMax = cms.double(0.025),
            dRPhiFineMax = cms.double(8.0),
            dXclusBoxMax = cms.double(8.0),
            dYclusBoxMax = cms.double(8.0),
            maxDPhi = cms.double(999.0),
            maxDTheta = cms.double(999.0),
            maxRatioResidualPrune = cms.double(3.0),
            minHitsForPreClustering = cms.int32(10),
            minHitsPerSegment = cms.int32(3),
            minLayersApart = cms.int32(2),
            nHitsPerClusterIsShower = cms.int32(20),
            preClustering = cms.untracked.bool(False),
            tanPhiMax = cms.double(0.5),
            tanThetaMax = cms.double(1.2)
        ),
        cms.PSet(
            CSCSegmentDebug = cms.untracked.bool(False),
            Pruning = cms.untracked.bool(False),
            chi2Max = cms.double(5000.0),
            dPhiFineMax = cms.double(0.025),
            dRPhiFineMax = cms.double(12.0),
            dXclusBoxMax = cms.double(8.0),
            dYclusBoxMax = cms.double(12.0),
            maxDPhi = cms.double(999.0),
            maxDTheta = cms.double(999.0),
            maxRatioResidualPrune = cms.double(3.0),
            minHitsForPreClustering = cms.int32(10),
            minHitsPerSegment = cms.int32(3),
            minLayersApart = cms.int32(2),
            nHitsPerClusterIsShower = cms.int32(20),
            preClustering = cms.untracked.bool(False),
            tanPhiMax = cms.double(0.8),
            tanThetaMax = cms.double(2.0)
        ),
        cms.PSet(
            CSCSegmentDebug = cms.untracked.bool(False),
            Pruning = cms.untracked.bool(False),
            chi2Max = cms.double(5000.0),
            dPhiFineMax = cms.double(0.025),
            dRPhiFineMax = cms.double(8.0),
            dXclusBoxMax = cms.double(8.0),
            dYclusBoxMax = cms.double(8.0),
            maxDPhi = cms.double(999.0),
            maxDTheta = cms.double(999.0),
            maxRatioResidualPrune = cms.double(3.0),
            minHitsForPreClustering = cms.int32(30),
            minHitsPerSegment = cms.int32(3),
            minLayersApart = cms.int32(2),
            nHitsPerClusterIsShower = cms.int32(20),
            preClustering = cms.untracked.bool(False),
            tanPhiMax = cms.double(0.5),
            tanThetaMax = cms.double(1.2)
        )
    ),
    chamber_types = cms.vstring(
        'ME1/a',
        'ME1/b',
        'ME1/2',
        'ME1/3',
        'ME2/1',
        'ME2/2',
        'ME3/1',
        'ME3/2',
        'ME4/1',
        'ME4/2'
    ),
    parameters_per_chamber_type = cms.vint32(
        3, 1, 2, 2, 1,
        2, 1, 2, 1, 2
    )
)

process.CSCSegAlgoRU = cms.PSet(
    algo_name = cms.string('CSCSegAlgoRU'),
    algo_psets = cms.VPSet(
        cms.PSet(
            chi2Max = cms.double(100.0),
            chi2Norm_2D_ = cms.double(35),
            chi2_str = cms.double(50.0),
            dPhiIntMax = cms.double(0.005),
            dPhiMax = cms.double(0.006),
            dRIntMax = cms.double(2.0),
            dRMax = cms.double(1.5),
            doCollisions = cms.bool(True),
            minLayersApart = cms.int32(1),
            wideSeg = cms.double(3.0)
        ),
        cms.PSet(
            chi2Max = cms.double(100.0),
            chi2Norm_2D_ = cms.double(35),
            chi2_str = cms.double(50.0),
            dPhiIntMax = cms.double(0.004),
            dPhiMax = cms.double(0.005),
            dRIntMax = cms.double(2.0),
            dRMax = cms.double(1.5),
            doCollisions = cms.bool(True),
            minLayersApart = cms.int32(1),
            wideSeg = cms.double(3.0)
        ),
        cms.PSet(
            chi2Max = cms.double(100.0),
            chi2Norm_2D_ = cms.double(35),
            chi2_str = cms.double(50.0),
            dPhiIntMax = cms.double(0.003),
            dPhiMax = cms.double(0.004),
            dRIntMax = cms.double(2.0),
            dRMax = cms.double(1.5),
            doCollisions = cms.bool(True),
            minLayersApart = cms.int32(1),
            wideSeg = cms.double(3.0)
        ),
        cms.PSet(
            chi2Max = cms.double(60.0),
            chi2Norm_2D_ = cms.double(20),
            chi2_str = cms.double(30.0),
            dPhiIntMax = cms.double(0.002),
            dPhiMax = cms.double(0.003),
            dRIntMax = cms.double(2.0),
            dRMax = cms.double(1.5),
            doCollisions = cms.bool(True),
            minLayersApart = cms.int32(1),
            wideSeg = cms.double(3.0)
        ),
        cms.PSet(
            chi2Max = cms.double(180.0),
            chi2Norm_2D_ = cms.double(60),
            chi2_str = cms.double(80.0),
            dPhiIntMax = cms.double(0.005),
            dPhiMax = cms.double(0.007),
            dRIntMax = cms.double(2.0),
            dRMax = cms.double(1.5),
            doCollisions = cms.bool(True),
            minLayersApart = cms.int32(1),
            wideSeg = cms.double(3.0)
        ),
        cms.PSet(
            chi2Max = cms.double(100.0),
            chi2Norm_2D_ = cms.double(35),
            chi2_str = cms.double(50.0),
            dPhiIntMax = cms.double(0.004),
            dPhiMax = cms.double(0.006),
            dRIntMax = cms.double(2.0),
            dRMax = cms.double(1.5),
            doCollisions = cms.bool(True),
            minLayersApart = cms.int32(1),
            wideSeg = cms.double(3.0)
        )
    ),
    chamber_types = cms.vstring(
        'ME1/a',
        'ME1/b',
        'ME1/2',
        'ME1/3',
        'ME2/1',
        'ME2/2',
        'ME3/1',
        'ME3/2',
        'ME4/1',
        'ME4/2'
    ),
    parameters_per_chamber_type = cms.vint32(
        1, 2, 3, 4, 5,
        6, 5, 6, 5, 6
    )
)

process.CSCSegAlgoSK = cms.PSet(
    algo_name = cms.string('CSCSegAlgoSK'),
    algo_psets = cms.VPSet(
        cms.PSet(
            chi2Max = cms.double(99999.0),
            dPhiFineMax = cms.double(0.025),
            dPhiMax = cms.double(0.003),
            dRPhiFineMax = cms.double(8.0),
            dRPhiMax = cms.double(8.0),
            minLayersApart = cms.int32(2),
            verboseInfo = cms.untracked.bool(True),
            wideSeg = cms.double(3.0)
        ),
        cms.PSet(
            chi2Max = cms.double(99999.0),
            dPhiFineMax = cms.double(0.025),
            dPhiMax = cms.double(0.025),
            dRPhiFineMax = cms.double(3.0),
            dRPhiMax = cms.double(8.0),
            minLayersApart = cms.int32(2),
            verboseInfo = cms.untracked.bool(True),
            wideSeg = cms.double(3.0)
        )
    ),
    chamber_types = cms.vstring(
        'ME1/a',
        'ME1/b',
        'ME1/2',
        'ME1/3',
        'ME2/1',
        'ME2/2',
        'ME3/1',
        'ME3/2',
        'ME4/1',
        'ME4/2'
    ),
    parameters_per_chamber_type = cms.vint32(
        2, 1, 1, 1, 1,
        1, 1, 1, 1, 1
    )
)

process.CSCSegAlgoST = cms.PSet(
    algo_name = cms.string('CSCSegAlgoST'),
    algo_psets = cms.VPSet(
        cms.PSet(
            BPMinImprovement = cms.double(10000.0),
            BrutePruning = cms.bool(True),
            CSCDebug = cms.untracked.bool(False),
            CorrectTheErrors = cms.bool(True),
            Covariance = cms.double(0.0),
            ForceCovariance = cms.bool(False),
            ForceCovarianceAll = cms.bool(False),
            NormChi2Cut2D = cms.double(20.0),
            NormChi2Cut3D = cms.double(10.0),
            Pruning = cms.bool(True),
            SeedBig = cms.double(0.0015),
            SeedSmall = cms.double(0.0002),
            curvePenalty = cms.double(2.0),
            curvePenaltyThreshold = cms.double(0.85),
            dPhiFineMax = cms.double(0.025),
            dRPhiFineMax = cms.double(8.0),
            dXclusBoxMax = cms.double(4.0),
            dYclusBoxMax = cms.double(8.0),
            hitDropLimit4Hits = cms.double(0.6),
            hitDropLimit5Hits = cms.double(0.8),
            hitDropLimit6Hits = cms.double(0.3333),
            maxDPhi = cms.double(999.0),
            maxDTheta = cms.double(999.0),
            maxRatioResidualPrune = cms.double(3),
            maxRecHitsInCluster = cms.int32(20),
            minHitsPerSegment = cms.int32(3),
            onlyBestSegment = cms.bool(False),
            preClustering = cms.bool(True),
            preClusteringUseChaining = cms.bool(True),
            prePrun = cms.bool(True),
            prePrunLimit = cms.double(3.17),
            tanPhiMax = cms.double(0.5),
            tanThetaMax = cms.double(1.2),
            useShowering = cms.bool(False),
            yweightPenalty = cms.double(1.5),
            yweightPenaltyThreshold = cms.double(1.0)
        ),
        cms.PSet(
            BPMinImprovement = cms.double(10000.0),
            BrutePruning = cms.bool(True),
            CSCDebug = cms.untracked.bool(False),
            CorrectTheErrors = cms.bool(True),
            Covariance = cms.double(0.0),
            ForceCovariance = cms.bool(False),
            ForceCovarianceAll = cms.bool(False),
            NormChi2Cut2D = cms.double(20.0),
            NormChi2Cut3D = cms.double(10.0),
            Pruning = cms.bool(True),
            SeedBig = cms.double(0.0015),
            SeedSmall = cms.double(0.0002),
            curvePenalty = cms.double(2.0),
            curvePenaltyThreshold = cms.double(0.85),
            dPhiFineMax = cms.double(0.025),
            dRPhiFineMax = cms.double(8.0),
            dXclusBoxMax = cms.double(4.0),
            dYclusBoxMax = cms.double(8.0),
            hitDropLimit4Hits = cms.double(0.6),
            hitDropLimit5Hits = cms.double(0.8),
            hitDropLimit6Hits = cms.double(0.3333),
            maxDPhi = cms.double(999.0),
            maxDTheta = cms.double(999.0),
            maxRatioResidualPrune = cms.double(3),
            maxRecHitsInCluster = cms.int32(24),
            minHitsPerSegment = cms.int32(3),
            onlyBestSegment = cms.bool(False),
            preClustering = cms.bool(True),
            preClusteringUseChaining = cms.bool(True),
            prePrun = cms.bool(True),
            prePrunLimit = cms.double(3.17),
            tanPhiMax = cms.double(0.5),
            tanThetaMax = cms.double(1.2),
            useShowering = cms.bool(False),
            yweightPenalty = cms.double(1.5),
            yweightPenaltyThreshold = cms.double(1.0)
        )
    ),
    chamber_types = cms.vstring(
        'ME1/a',
        'ME1/b',
        'ME1/2',
        'ME1/3',
        'ME2/1',
        'ME2/2',
        'ME3/1',
        'ME3/2',
        'ME4/1',
        'ME4/2'
    ),
    parameters_per_chamber_type = cms.vint32(
        2, 1, 1, 1, 1,
        1, 1, 1, 1, 1
    )
)

process.CSCSegAlgoTC = cms.PSet(
    algo_name = cms.string('CSCSegAlgoTC'),
    algo_psets = cms.VPSet(
        cms.PSet(
            SegmentSorting = cms.int32(1),
            chi2Max = cms.double(6000.0),
            chi2ndfProbMin = cms.double(0.0001),
            dPhiFineMax = cms.double(0.02),
            dPhiMax = cms.double(0.003),
            dRPhiFineMax = cms.double(6.0),
            dRPhiMax = cms.double(1.2),
            minLayersApart = cms.int32(2),
            verboseInfo = cms.untracked.bool(True)
        ),
        cms.PSet(
            SegmentSorting = cms.int32(1),
            chi2Max = cms.double(6000.0),
            chi2ndfProbMin = cms.double(0.0001),
            dPhiFineMax = cms.double(0.013),
            dPhiMax = cms.double(0.00198),
            dRPhiFineMax = cms.double(3.0),
            dRPhiMax = cms.double(0.6),
            minLayersApart = cms.int32(2),
            verboseInfo = cms.untracked.bool(True)
        )
    ),
    chamber_types = cms.vstring(
        'ME1/a',
        'ME1/b',
        'ME1/2',
        'ME1/3',
        'ME2/1',
        'ME2/2',
        'ME3/1',
        'ME3/2',
        'ME4/1',
        'ME4/2'
    ),
    parameters_per_chamber_type = cms.vint32(
        2, 1, 1, 1, 1,
        1, 1, 1, 1, 1
    )
)

process.CSCTimingExtractorBlock = cms.PSet(
    CSCTimingParameters = cms.PSet(
        CSCStripError = cms.double(7.0),
        CSCStripTimeOffset = cms.double(0.0),
        CSCWireError = cms.double(8.6),
        CSCWireTimeOffset = cms.double(0.0),
        PruneCut = cms.double(9.0),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring(
                'SteppingHelixPropagatorAny',
                'PropagatorWithMaterial',
                'PropagatorWithMaterialOpposite'
            ),
            RPCLayers = cms.bool(True)
        ),
        UseStripTime = cms.bool(True),
        UseWireTime = cms.bool(True),
        debug = cms.bool(False)
    )
)

process.ChargeSignificanceTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('ChargeSignificanceTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0)
)

process.CkfBaseTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.CkfTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    estimator = cms.string('Chi2'),
    intermediateCleaning = cms.bool(False),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    updator = cms.string('KFUpdator')
)

process.ClusterShapeTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('ClusterShapeTrajectoryFilter'),
    cacheSrc = cms.InputTag("siPixelClusterShapeCache")
)

process.CommonEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_logErrorHarvester_*_*')
)

process.CompositeTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet()
)

process.DATAMIXEREventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep CSCDetIdCSCALCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCALCTDigi_*',
        'keep CSCDetIdCSCCLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCLCTDigi_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_muonCSCDigis_MuonCSCComparatorDigi_*',
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_csctfDigis_*_*',
        'keep CSCDetIdCSCCorrelatedLCTDigiMuonDigiCollection_muonCSCDigis_MuonCSCCorrelatedLCTDigi_*',
        'keep CSCDetIdCSCRPCDigiMuonDigiCollection_muonCSCDigis_MuonCSCRPCDigi_*',
        'keep CSCDetIdCSCStripDigiMuonDigiCollection_muonCSCDigis_MuonCSCStripDigi_*',
        'keep CSCDetIdCSCWireDigiMuonDigiCollection_muonCSCDigis_MuonCSCWireDigi_*',
        'keep DTLayerIdDTDigiMuonDigiCollection_muonDTDigis_*_*',
        'keep PixelDigiedmDetSetVector_siPixelDigis_*_*',
        'keep SiStripDigiedmDetSetVector_siStripDigis_*_*',
        'keep RPCDetIdRPCDigiMuonDigiCollection_muonRPCDigis_*_*',
        'keep HBHEDataFramesSorted_hcalDigis_*_*',
        'keep HFDataFramesSorted_hcalDigis_*_*',
        'keep HODataFramesSorted_hcalDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_*_*',
        'keep QIE11DataFrameHcalDataFrameContainer_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep CastorDataFramesSorted_castorDigis_*_*',
        'keep EBDigiCollection_ecalDigis_*_*',
        'keep EEDigiCollection_ecalDigis_*_*',
        'keep ESDigiCollection_ecalPreshowerDigis_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.DF_ME1234_1 = cms.PSet(
    CSCSegmentDebug = cms.untracked.bool(False),
    Pruning = cms.untracked.bool(False),
    chi2Max = cms.double(5000.0),
    dPhiFineMax = cms.double(0.025),
    dRPhiFineMax = cms.double(8.0),
    dXclusBoxMax = cms.double(8.0),
    dYclusBoxMax = cms.double(8.0),
    maxDPhi = cms.double(999.0),
    maxDTheta = cms.double(999.0),
    maxRatioResidualPrune = cms.double(3.0),
    minHitsForPreClustering = cms.int32(10),
    minHitsPerSegment = cms.int32(3),
    minLayersApart = cms.int32(2),
    nHitsPerClusterIsShower = cms.int32(20),
    preClustering = cms.untracked.bool(False),
    tanPhiMax = cms.double(0.5),
    tanThetaMax = cms.double(1.2)
)

process.DF_ME1234_2 = cms.PSet(
    CSCSegmentDebug = cms.untracked.bool(False),
    Pruning = cms.untracked.bool(False),
    chi2Max = cms.double(5000.0),
    dPhiFineMax = cms.double(0.025),
    dRPhiFineMax = cms.double(12.0),
    dXclusBoxMax = cms.double(8.0),
    dYclusBoxMax = cms.double(12.0),
    maxDPhi = cms.double(999.0),
    maxDTheta = cms.double(999.0),
    maxRatioResidualPrune = cms.double(3.0),
    minHitsForPreClustering = cms.int32(10),
    minHitsPerSegment = cms.int32(3),
    minLayersApart = cms.int32(2),
    nHitsPerClusterIsShower = cms.int32(20),
    preClustering = cms.untracked.bool(False),
    tanPhiMax = cms.double(0.8),
    tanThetaMax = cms.double(2.0)
)

process.DF_ME1A = cms.PSet(
    CSCSegmentDebug = cms.untracked.bool(False),
    Pruning = cms.untracked.bool(False),
    chi2Max = cms.double(5000.0),
    dPhiFineMax = cms.double(0.025),
    dRPhiFineMax = cms.double(8.0),
    dXclusBoxMax = cms.double(8.0),
    dYclusBoxMax = cms.double(8.0),
    maxDPhi = cms.double(999.0),
    maxDTheta = cms.double(999.0),
    maxRatioResidualPrune = cms.double(3.0),
    minHitsForPreClustering = cms.int32(30),
    minHitsPerSegment = cms.int32(3),
    minLayersApart = cms.int32(2),
    nHitsPerClusterIsShower = cms.int32(20),
    preClustering = cms.untracked.bool(False),
    tanPhiMax = cms.double(0.5),
    tanThetaMax = cms.double(1.2)
)

process.DQMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_MEtoEDMConverter_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.DTLinearDriftAlgo_CosmicData = cms.PSet(
    recAlgo = cms.string('DTLinearDriftAlgo'),
    recAlgoConfig = cms.PSet(
        debug = cms.untracked.bool(False),
        driftVelocity = cms.double(0.00543),
        hitResolution = cms.double(0.02),
        maxTime = cms.double(420.0),
        minTime = cms.double(-3.0),
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        tTrigModeConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doT0Correction = cms.bool(True),
            doTOFCorrection = cms.bool(False),
            doWirePropCorrection = cms.bool(False),
            tTrigLabel = cms.string('cosmics'),
            tofCorrType = cms.int32(0),
            vPropWire = cms.double(24.4),
            wirePropCorrType = cms.int32(0)
        )
    )
)

process.DTLinearDriftFromDBAlgo = cms.PSet(
    recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
    recAlgoConfig = cms.PSet(
        debug = cms.untracked.bool(False),
        doVdriftCorr = cms.bool(True),
        maxTime = cms.double(420.0),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        tTrigModeConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doT0Correction = cms.bool(True),
            doTOFCorrection = cms.bool(True),
            doWirePropCorrection = cms.bool(True),
            tTrigLabel = cms.string(''),
            tofCorrType = cms.int32(0),
            vPropWire = cms.double(24.4),
            wirePropCorrType = cms.int32(0)
        ),
        useUncertDB = cms.bool(True)
    )
)

process.DTLinearDriftFromDBAlgo_CosmicData = cms.PSet(
    recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
    recAlgoConfig = cms.PSet(
        debug = cms.untracked.bool(False),
        doVdriftCorr = cms.bool(False),
        maxTime = cms.double(420.0),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        tTrigModeConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doT0Correction = cms.bool(True),
            doTOFCorrection = cms.bool(False),
            doWirePropCorrection = cms.bool(False),
            tTrigLabel = cms.string('cosmics'),
            tofCorrType = cms.int32(0),
            vPropWire = cms.double(24.4),
            wirePropCorrType = cms.int32(0)
        ),
        useUncertDB = cms.bool(False)
    )
)

process.DTMeantimerPatternReco2DAlgo_LinearDriftFromDB = cms.PSet(
    Reco2DAlgoConfig = cms.PSet(
        AlphaMaxPhi = cms.double(1.0),
        AlphaMaxTheta = cms.double(0.9),
        MaxAllowedHits = cms.uint32(50),
        MaxChi2 = cms.double(4.0),
        debug = cms.untracked.bool(False),
        hit_afterT0_resolution = cms.double(0.03),
        nSharedHitsMax = cms.int32(2),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False),
        performT0_vdriftSegCorrection = cms.bool(False),
        perform_delta_rejecting = cms.bool(False),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doVdriftCorr = cms.bool(True),
            maxTime = cms.double(420.0),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            tTrigModeConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doT0Correction = cms.bool(True),
                doTOFCorrection = cms.bool(True),
                doWirePropCorrection = cms.bool(True),
                tTrigLabel = cms.string(''),
                tofCorrType = cms.int32(0),
                vPropWire = cms.double(24.4),
                wirePropCorrType = cms.int32(0)
            ),
            useUncertDB = cms.bool(True)
        ),
        segmCleanerMode = cms.int32(2)
    ),
    Reco2DAlgoName = cms.string('DTMeantimerPatternReco')
)

process.DTMeantimerPatternReco2DAlgo_LinearDriftFromDB_CosmicData = cms.PSet(
    Reco2DAlgoConfig = cms.PSet(
        AlphaMaxPhi = cms.double(100.0),
        AlphaMaxTheta = cms.double(100.0),
        MaxAllowedHits = cms.uint32(50),
        MaxChi2 = cms.double(4.0),
        debug = cms.untracked.bool(False),
        hit_afterT0_resolution = cms.double(0.03),
        intime_cut = cms.double(-1.0),
        nSharedHitsMax = cms.int32(2),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False),
        performT0_vdriftSegCorrection = cms.bool(False),
        perform_delta_rejecting = cms.bool(False),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doVdriftCorr = cms.bool(False),
            maxTime = cms.double(420.0),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            tTrigModeConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doT0Correction = cms.bool(True),
                doTOFCorrection = cms.bool(False),
                doWirePropCorrection = cms.bool(False),
                tTrigLabel = cms.string('cosmics'),
                tofCorrType = cms.int32(0),
                vPropWire = cms.double(24.4),
                wirePropCorrType = cms.int32(0)
            ),
            useUncertDB = cms.bool(False)
        ),
        segmCleanerMode = cms.int32(2)
    ),
    Reco2DAlgoName = cms.string('DTMeantimerPatternReco')
)

process.DTMeantimerPatternReco4DAlgo_LinearDriftFromDB = cms.PSet(
    Reco4DAlgoConfig = cms.PSet(
        AllDTRecHits = cms.bool(True),
        Reco2DAlgoConfig = cms.PSet(
            AlphaMaxPhi = cms.double(1.0),
            AlphaMaxTheta = cms.double(0.9),
            MaxAllowedHits = cms.uint32(50),
            MaxChi2 = cms.double(4.0),
            debug = cms.untracked.bool(False),
            hit_afterT0_resolution = cms.double(0.03),
            nSharedHitsMax = cms.int32(2),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False),
            performT0_vdriftSegCorrection = cms.bool(False),
            perform_delta_rejecting = cms.bool(False),
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doVdriftCorr = cms.bool(True),
                maxTime = cms.double(420.0),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                tTrigModeConfig = cms.PSet(
                    debug = cms.untracked.bool(False),
                    doT0Correction = cms.bool(True),
                    doTOFCorrection = cms.bool(True),
                    doWirePropCorrection = cms.bool(True),
                    tTrigLabel = cms.string(''),
                    tofCorrType = cms.int32(0),
                    vPropWire = cms.double(24.4),
                    wirePropCorrType = cms.int32(0)
                ),
                useUncertDB = cms.bool(True)
            ),
            segmCleanerMode = cms.int32(2)
        ),
        Reco2DAlgoName = cms.string('DTMeantimerPatternReco'),
        debug = cms.untracked.bool(False),
        hit_afterT0_resolution = cms.double(0.03),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False),
        performT0_vdriftSegCorrection = cms.bool(False),
        perform_delta_rejecting = cms.bool(False),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doVdriftCorr = cms.bool(True),
            maxTime = cms.double(420.0),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            tTrigModeConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doT0Correction = cms.bool(True),
                doTOFCorrection = cms.bool(True),
                doWirePropCorrection = cms.bool(True),
                tTrigLabel = cms.string(''),
                tofCorrType = cms.int32(0),
                vPropWire = cms.double(24.4),
                wirePropCorrType = cms.int32(0)
            ),
            useUncertDB = cms.bool(True)
        )
    ),
    Reco4DAlgoName = cms.string('DTMeantimerPatternReco4D')
)

process.DTMeantimerPatternReco4DAlgo_LinearDriftFromDB_CosmicData = cms.PSet(
    Reco4DAlgoConfig = cms.PSet(
        AllDTRecHits = cms.bool(True),
        Reco2DAlgoConfig = cms.PSet(
            AlphaMaxPhi = cms.double(100.0),
            AlphaMaxTheta = cms.double(100.0),
            MaxAllowedHits = cms.uint32(50),
            MaxChi2 = cms.double(4.0),
            debug = cms.untracked.bool(False),
            hit_afterT0_resolution = cms.double(0.03),
            intime_cut = cms.double(-1.0),
            nSharedHitsMax = cms.int32(2),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False),
            performT0_vdriftSegCorrection = cms.bool(False),
            perform_delta_rejecting = cms.bool(False),
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doVdriftCorr = cms.bool(False),
                maxTime = cms.double(420.0),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                tTrigModeConfig = cms.PSet(
                    debug = cms.untracked.bool(False),
                    doT0Correction = cms.bool(True),
                    doTOFCorrection = cms.bool(False),
                    doWirePropCorrection = cms.bool(False),
                    tTrigLabel = cms.string('cosmics'),
                    tofCorrType = cms.int32(0),
                    vPropWire = cms.double(24.4),
                    wirePropCorrType = cms.int32(0)
                ),
                useUncertDB = cms.bool(False)
            ),
            segmCleanerMode = cms.int32(2)
        ),
        Reco2DAlgoName = cms.string('DTMeantimerPatternReco'),
        debug = cms.untracked.bool(False),
        hit_afterT0_resolution = cms.double(0.03),
        intime_cut = cms.double(-1.0),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False),
        performT0_vdriftSegCorrection = cms.bool(False),
        perform_delta_rejecting = cms.bool(False),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doVdriftCorr = cms.bool(False),
            maxTime = cms.double(420.0),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            tTrigModeConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doT0Correction = cms.bool(True),
                doTOFCorrection = cms.bool(False),
                doWirePropCorrection = cms.bool(False),
                tTrigLabel = cms.string('cosmics'),
                tofCorrType = cms.int32(0),
                vPropWire = cms.double(24.4),
                wirePropCorrType = cms.int32(0)
            ),
            useUncertDB = cms.bool(False)
        )
    ),
    Reco4DAlgoName = cms.string('DTMeantimerPatternReco4D')
)

process.DTTimingExtractorBlock = cms.PSet(
    DTTimingParameters = cms.PSet(
        DTTimeOffset = cms.double(0.0),
        DoWireCorr = cms.bool(True),
        DropTheta = cms.bool(True),
        HitError = cms.double(2.8),
        HitsMin = cms.int32(3),
        PruneCut = cms.double(5.0),
        RequireBothProjections = cms.bool(False),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring(
                'SteppingHelixPropagatorAny',
                'PropagatorWithMaterial',
                'PropagatorWithMaterialOpposite'
            ),
            RPCLayers = cms.bool(True)
        ),
        UseSegmentT0 = cms.bool(False),
        debug = cms.bool(False)
    )
)

process.DefaultAlgorithms = cms.PSet(
    APVInspectMode = cms.string('BaselineFollower'),
    APVRestoreMode = cms.string('BaselineFollower'),
    ApplyBaselineCleaner = cms.bool(True),
    ApplyBaselineRejection = cms.bool(True),
    CleaningSequence = cms.uint32(1),
    CommonModeNoiseSubtractionMode = cms.string('IteratedMedian'),
    CutToAvoidSignal = cms.double(2.0),
    DeltaCMThreshold = cms.uint32(20),
    Deviation = cms.uint32(25),
    ForceNoRestore = cms.bool(False),
    Fraction = cms.double(0.2),
    Iterations = cms.int32(3),
    MeanCM = cms.int32(0),
    PedestalSubtractionFedMode = cms.bool(False),
    SiStripFedZeroSuppressionMode = cms.uint32(4),
    TruncateInSuppressor = cms.bool(True),
    Use10bitsTruncation = cms.bool(False),
    consecThreshold = cms.uint32(5),
    discontinuityThreshold = cms.int32(12),
    distortionThreshold = cms.uint32(20),
    doAPVRestore = cms.bool(True),
    filteredBaselineDerivativeSumSquare = cms.double(30),
    filteredBaselineMax = cms.double(6),
    hitStripThreshold = cms.uint32(40),
    lastGradient = cms.int32(10),
    minStripsToFit = cms.uint32(4),
    nSaturatedStrip = cms.uint32(2),
    nSigmaNoiseDerTh = cms.uint32(4),
    nSmooth = cms.uint32(9),
    restoreThreshold = cms.double(0.5),
    sizeWindow = cms.int32(1),
    slopeX = cms.int32(3),
    slopeY = cms.int32(4),
    useCMMeanMap = cms.bool(False),
    useRealMeanCM = cms.bool(False),
    widthCluster = cms.int32(64)
)

process.DefaultClusterizer = cms.PSet(
    Algorithm = cms.string('ThreeThresholdAlgorithm'),
    ChannelThreshold = cms.double(2.0),
    ClusterThreshold = cms.double(5.0),
    MaxAdjacentBad = cms.uint32(0),
    MaxSequentialBad = cms.uint32(1),
    MaxSequentialHoles = cms.uint32(0),
    QualityLabel = cms.string(''),
    RemoveApvShots = cms.bool(True),
    SeedThreshold = cms.double(3.0),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    )
)

process.DigiToRawFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*'
    )
)

process.EITopPAGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*'
    )
)

process.EvtScalersAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*'
    )
)

process.EvtScalersRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*'
    )
)

process.FASTPUEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_fastSimProducer_*_*',
        'keep *_MuonSimHits_*_*',
        'drop *_fastSimProducer_VertexTypes_*',
        'keep *_generalTracksBeforeMixing_*_*',
        'drop *_generalTracksBeforeMixing_MVAValues_*',
        'drop *_generalTracksBeforeMixing_QualityMasks_*',
        'keep edmHepMCProduct_generatorSmeared_*_*'
    )
)

process.FEVTDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*',
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep *_hiPixel3PrimTracks_*_*',
        'keep *_hiPixel3ProtoTracks_*_*',
        'keep *_hiSelectedProtoTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_siStripZeroSuppression_BADAPVBASELINE_*',
        'keep SiStripRawDigiedmDetSetVector_siStripZeroSuppression_VirginRaw_*',
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep recoSuperClusters_*_*_*',
        'keep recoCaloClusters_*_*_*',
        'keep EcalRecHitsSorted_*_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoPFCandidates_*_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_*_*_*',
        'keep recoGsfElectrons_*_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTDEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilter_*_*',
        'keep *_hltAlCaPhiSymStream_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilter_*_*',
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCSVJetTagSingleTopEle27_*_*',
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*',
        'keep *_hltCaloJetCorrectedRegional_*_*',
        'keep *_hltCaloJetCorrected_*_*',
        'keep *_hltCaloJetL1FastJetCorrected_*_*',
        'keep *_hltCaloStage2Digis_*_*',
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*',
        'keep *_hltConvPFTausTightIso_*_*',
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*',
        'keep *_hltConvPFTausTrackFinding_*_*',
        'keep *_hltConvPFTaus_*_*',
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltDoublePFTau25TrackPt5_*_*',
        'keep *_hltDoublePFTau25_*_*',
        'keep *_hltDoublePFTauTightIso45Track5_*_*',
        'keep *_hltDoublePFTauTightIso45Track_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHitAll_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*',
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorLumiPixels_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices3D_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*',
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*',
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFullIterativeTrackingMergedForRefPP_*_*',
        'keep *_hltGmtStage2Digis_*_*',
        'keep *_hltGoodOnlinePVs_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHICaloJetCorrected_*_*',
        'keep *_hltHICaloJetIDPassed_*_*',
        'keep *_hltHIGoodLooseTracks_*_*',
        'keep *_hltHIPixel3PrimTracks_*_*',
        'keep *_hltHISelectedVertex_*_*',
        'keep *_hltHISiPixelClusters_*_*',
        'keep *_hltHITIPTCorrectorHB_*_*',
        'keep *_hltHITIPTCorrectorHE_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltHiIslandSuperClustersHI_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter1Merged_*_*',
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2HighPtTkMuMerged_*_*',
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2IterL3FromL1MuonMerged_*_*',
        'keep *_hltIter2IterL3MuonMerged_*_*',
        'keep *_hltIter2MergedForBTag_*_*',
        'keep *_hltIter2MergedForElectrons_*_*',
        'keep *_hltIter2Merged_*_*',
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter3Merged_*_*',
        'keep *_hltIter4Merged_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*',
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*',
        'keep *_hltL1IsoElectronTrackIsol_*_*',
        'keep *_hltL1NonIsoElectronTrackIsol_*_*',
        'keep *_hltL1SeededRecoEcalCandidate_*_*',
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*',
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*',
        'keep *_hltL1sL1EG18er_*_*',
        'keep *_hltL1sL1ETM36ORETM40_*_*',
        'keep *_hltL1sL1Jet52ETM30_*_*',
        'keep *_hltL1sL1SingleEG12_*_*',
        'keep *_hltL1sL1SingleEG15_*_*',
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltL1sL1SingleMu10_*_*',
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*',
        'keep *_hltL1sMu16Eta2p1_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonCandidates_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3SecondaryVertexTagInfos_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*',
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*',
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*',
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*',
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltOnlinePrimaryVertices_*_*',
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*',
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau15TrackLooseIso_*_*',
        'keep *_hltPFTau15Track_*_*',
        'keep *_hltPFTau15_*_*',
        'keep *_hltPFTau20IsoMuVertex_*_*',
        'keep *_hltPFTau20TrackLooseIso_*_*',
        'keep *_hltPFTau20Track_*_*',
        'keep *_hltPFTau20_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltPFTau25TrackPt5_*_*',
        'keep *_hltPFTau25_*_*',
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*',
        'keep *_hltPFTau35TrackPt20LooseIso_*_*',
        'keep *_hltPFTau35TrackPt20_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPFTauEleVertex20_*_*',
        'keep *_hltPFTauJetTracksAssociator_*_*',
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*',
        'keep *_hltPFTauMediumIso20Track_*_*',
        'keep *_hltPFTauMediumIso20_*_*',
        'keep *_hltPFTauMediumIso35Track_*_*',
        'keep *_hltPFTauMediumIso35_*_*',
        'keep *_hltPFTauTagInfo_*_*',
        'keep *_hltPFTauTightIso20TrackTightIso_*_*',
        'keep *_hltPFTauTightIso20Track_*_*',
        'keep *_hltPFTauTightIso20_*_*',
        'keep *_hltPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltPixelMatch3HitElectronsActivity_*_*',
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchElectronsActivity_*_*',
        'keep *_hltPixelMatchElectronsL1Iso_*_*',
        'keep *_hltPixelMatchElectronsL1NonIso_*_*',
        'keep *_hltPixelMatchElectronsL1Seeded_*_*',
        'keep *_hltPixelTracksElectrons_*_*',
        'keep *_hltPixelTracksMerged_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices3DbbPhi_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelCluster_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltSingleMu15L3Filtered15_*_*',
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*',
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTowerMakerForMuons_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep LumiScalerss_hltScalersRawToDigi_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3MuonsOIHit_*_*',
        'keep recoTracks_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3Muons_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_*_MergedTrackTruth_*',
        'keep *_*_StripDigiSimLink_*',
        'keep *_*_PixelDigiSimLink_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*',
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep *_hiPixel3PrimTracks_*_*',
        'keep *_hiPixel3ProtoTracks_*_*',
        'keep *_hiSelectedProtoTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_siStripZeroSuppression_BADAPVBASELINE_*',
        'keep SiStripRawDigiedmDetSetVector_siStripZeroSuppression_VirginRaw_*',
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep recoSuperClusters_*_*_*',
        'keep recoCaloClusters_*_*_*',
        'keep EcalRecHitsSorted_*_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoPFCandidates_*_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_*_*_*',
        'keep recoGsfElectrons_*_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep *_hiPixel3PrimTracks_*_*',
        'keep *_hiPixel3ProtoTracks_*_*',
        'keep *_hiSelectedProtoTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_siStripZeroSuppression_BADAPVBASELINE_*',
        'keep SiStripRawDigiedmDetSetVector_siStripZeroSuppression_VirginRaw_*',
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep recoSuperClusters_*_*_*',
        'keep recoCaloClusters_*_*_*',
        'keep EcalRecHitsSorted_*_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoPFCandidates_*_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_*_*_*',
        'keep recoGsfElectrons_*_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTHLTALLEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep *_*_*_HLT',
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep *_hiPixel3PrimTracks_*_*',
        'keep *_hiPixel3ProtoTracks_*_*',
        'keep *_hiSelectedProtoTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_siStripZeroSuppression_BADAPVBASELINE_*',
        'keep SiStripRawDigiedmDetSetVector_siStripZeroSuppression_VirginRaw_*',
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep recoSuperClusters_*_*_*',
        'keep recoCaloClusters_*_*_*',
        'keep EcalRecHitsSorted_*_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoPFCandidates_*_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_*_*_*',
        'keep recoGsfElectrons_*_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.FEVTSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*',
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep *_hiPixel3PrimTracks_*_*',
        'keep *_hiPixel3ProtoTracks_*_*',
        'keep *_hiSelectedProtoTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_siStripZeroSuppression_BADAPVBASELINE_*',
        'keep SiStripRawDigiedmDetSetVector_siStripZeroSuppression_VirginRaw_*',
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep recoSuperClusters_*_*_*',
        'keep recoCaloClusters_*_*_*',
        'keep EcalRecHitsSorted_*_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoPFCandidates_*_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_*_*_*',
        'keep recoGsfElectrons_*_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.GENRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep recoGenMETs_*_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_logErrorHarvester_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.GeneratorInterfaceAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.GeneratorInterfaceLHE = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep *_externalLHEProducer_LHEScriptOutput_*'
    )
)

process.GeneratorInterfaceRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.GeneratorInterfaceRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.GlobalMuonRefitter = cms.PSet(
    CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
    Chi2CutCSC = cms.double(1.0),
    Chi2CutDT = cms.double(30.0),
    Chi2CutGEM = cms.double(1.0),
    Chi2CutME0 = cms.double(1.0),
    Chi2CutRPC = cms.double(1.0),
    Chi2ProbabilityCut = cms.double(30.0),
    DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
    DYTselector = cms.int32(1),
    DYTthrs = cms.vint32(10, 10),
    DYTupdator = cms.bool(True),
    DYTuseAPE = cms.bool(False),
    DoPredictionsOnly = cms.bool(False),
    Fitter = cms.string('KFFitterForRefitInsideOut'),
    GEMRecHitLabel = cms.InputTag("gemRecHits"),
    HitThreshold = cms.int32(1),
    ME0RecHitLabel = cms.InputTag("me0Segments"),
    MuonHitsOption = cms.int32(1),
    MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
    PropDirForCosmics = cms.bool(False),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    PtCut = cms.double(1.0),
    RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
    RefitDirection = cms.string('insideOut'),
    RefitFlag = cms.bool(True),
    RefitRPCHits = cms.bool(True),
    SkipStation = cms.int32(-1),
    Smoother = cms.string('KFSmootherForRefitInsideOut'),
    TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
    TrackerSkipSection = cms.int32(-1),
    TrackerSkipSystem = cms.int32(-1)
)

process.GlobalMuonTrackMatcher = cms.PSet(
    GlobalMuonTrackMatcher = cms.PSet(
        Chi2Cut_1 = cms.double(50.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaDCut_2 = cms.double(10.0),
        DeltaDCut_3 = cms.double(15.0),
        DeltaRCut_1 = cms.double(0.1),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        Eta_threshold = cms.double(1.2),
        LocChi2Cut = cms.double(20.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Pt_threshold1 = cms.double(0.0),
        Pt_threshold2 = cms.double(999999999.0),
        Quality_1 = cms.double(20.0),
        Quality_2 = cms.double(15.0),
        Quality_3 = cms.double(7.0)
    )
)

process.GlobalTrajectoryBuilderCommon = cms.PSet(
    GlbRefitterParameters = cms.PSet(
        CSCRecSegmentLabel = cms.InputTag("cscSegments"),
        Chi2CutCSC = cms.double(150.0),
        Chi2CutDT = cms.double(10.0),
        Chi2CutGEM = cms.double(1.0),
        Chi2CutME0 = cms.double(1.0),
        Chi2CutRPC = cms.double(1.0),
        Chi2ProbabilityCut = cms.double(30.0),
        DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
        DYTselector = cms.int32(1),
        DYTthrs = cms.vint32(20, 30),
        DYTupdator = cms.bool(False),
        DYTuseAPE = cms.bool(False),
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('GlbMuKFFitter'),
        GEMRecHitLabel = cms.InputTag("gemRecHits"),
        HitThreshold = cms.int32(1),
        ME0RecHitLabel = cms.InputTag("me0Segments"),
        MuonHitsOption = cms.int32(1),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        PropDirForCosmics = cms.bool(False),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        PtCut = cms.double(1.0),
        RefitDirection = cms.string('insideOut'),
        RefitFlag = cms.bool(True),
        RefitRPCHits = cms.bool(True),
        SkipStation = cms.int32(-1),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        TrackerSkipSection = cms.int32(-1),
        TrackerSkipSystem = cms.int32(-1)
    ),
    GlobalMuonTrackMatcher = cms.PSet(
        Chi2Cut_1 = cms.double(50.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaDCut_2 = cms.double(10.0),
        DeltaDCut_3 = cms.double(15.0),
        DeltaRCut_1 = cms.double(0.1),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        Eta_threshold = cms.double(1.2),
        LocChi2Cut = cms.double(20.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Pt_threshold1 = cms.double(0.0),
        Pt_threshold2 = cms.double(999999999.0),
        Quality_1 = cms.double(20.0),
        Quality_2 = cms.double(15.0),
        Quality_3 = cms.double(7.0)
    ),
    MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
    MuonTrackingRegionBuilder = cms.PSet(
        DeltaEta = cms.double(0.2),
        DeltaPhi = cms.double(0.2),
        DeltaR = cms.double(0.2),
        DeltaZ = cms.double(15.9),
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        Eta_fixed = cms.bool(False),
        Eta_min = cms.double(0.1),
        MeasurementTrackerName = cms.InputTag(""),
        OnDemand = cms.int32(-1),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        Phi_fixed = cms.bool(False),
        Phi_min = cms.double(0.1),
        Pt_fixed = cms.bool(False),
        Pt_min = cms.double(1.5),
        Rescale_Dz = cms.double(3.0),
        Rescale_eta = cms.double(3.0),
        Rescale_phi = cms.double(3.0),
        UseVertex = cms.bool(False),
        Z_fixed = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        input = cms.InputTag(""),
        maxRegions = cms.int32(1),
        precise = cms.bool(True),
        vertexCollection = cms.InputTag("")
    ),
    PCut = cms.double(2.5),
    PtCut = cms.double(1.0),
    RefitRPCHits = cms.bool(True),
    ScaleTECxFactor = cms.double(-1.0),
    ScaleTECyFactor = cms.double(-1.0),
    TrackTransformer = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
    ),
    TrackerPropagator = cms.string('SteppingHelixPropagatorAny'),
    TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
)

process.GroupedCkfTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('Chi2'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(5),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.GroupedCkfTrajectoryBuilderP5 = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('Chi2MeasurementEstimatorForP5'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(1),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('ckfBaseTrajectoryFilterP5')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.HFRecalParameterBlock = cms.PSet(
    HFdepthOneParameterA = cms.vdouble(
        0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
        0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
        0.058939, 0.125497
    ),
    HFdepthOneParameterB = cms.vdouble(
        -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
        2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
        0.000425, 0.000209
    ),
    HFdepthTwoParameterA = cms.vdouble(
        0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
        0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
        0.051579, 0.086593
    ),
    HFdepthTwoParameterB = cms.vdouble(
        -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
        1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
        0.000157, -3e-06
    )
)

process.HLTDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'keep *_logErrorHarvester_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilter_*_*',
        'keep *_hltAlCaPhiSymStream_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilter_*_*',
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCSVJetTagSingleTopEle27_*_*',
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*',
        'keep *_hltCaloJetCorrectedRegional_*_*',
        'keep *_hltCaloJetCorrected_*_*',
        'keep *_hltCaloJetL1FastJetCorrected_*_*',
        'keep *_hltCaloStage2Digis_*_*',
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*',
        'keep *_hltConvPFTausTightIso_*_*',
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*',
        'keep *_hltConvPFTausTrackFinding_*_*',
        'keep *_hltConvPFTaus_*_*',
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltDoublePFTau25TrackPt5_*_*',
        'keep *_hltDoublePFTau25_*_*',
        'keep *_hltDoublePFTauTightIso45Track5_*_*',
        'keep *_hltDoublePFTauTightIso45Track_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHitAll_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*',
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorLumiPixels_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices3D_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*',
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*',
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFullIterativeTrackingMergedForRefPP_*_*',
        'keep *_hltGmtStage2Digis_*_*',
        'keep *_hltGoodOnlinePVs_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHICaloJetCorrected_*_*',
        'keep *_hltHICaloJetIDPassed_*_*',
        'keep *_hltHIGoodLooseTracks_*_*',
        'keep *_hltHIPixel3PrimTracks_*_*',
        'keep *_hltHISelectedVertex_*_*',
        'keep *_hltHISiPixelClusters_*_*',
        'keep *_hltHITIPTCorrectorHB_*_*',
        'keep *_hltHITIPTCorrectorHE_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltHiIslandSuperClustersHI_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter1Merged_*_*',
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2HighPtTkMuMerged_*_*',
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2IterL3FromL1MuonMerged_*_*',
        'keep *_hltIter2IterL3MuonMerged_*_*',
        'keep *_hltIter2MergedForBTag_*_*',
        'keep *_hltIter2MergedForElectrons_*_*',
        'keep *_hltIter2Merged_*_*',
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter3Merged_*_*',
        'keep *_hltIter4Merged_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*',
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*',
        'keep *_hltL1IsoElectronTrackIsol_*_*',
        'keep *_hltL1NonIsoElectronTrackIsol_*_*',
        'keep *_hltL1SeededRecoEcalCandidate_*_*',
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*',
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*',
        'keep *_hltL1sL1EG18er_*_*',
        'keep *_hltL1sL1ETM36ORETM40_*_*',
        'keep *_hltL1sL1Jet52ETM30_*_*',
        'keep *_hltL1sL1SingleEG12_*_*',
        'keep *_hltL1sL1SingleEG15_*_*',
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltL1sL1SingleMu10_*_*',
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*',
        'keep *_hltL1sMu16Eta2p1_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonCandidates_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3SecondaryVertexTagInfos_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*',
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*',
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*',
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*',
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltOnlinePrimaryVertices_*_*',
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*',
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau15TrackLooseIso_*_*',
        'keep *_hltPFTau15Track_*_*',
        'keep *_hltPFTau15_*_*',
        'keep *_hltPFTau20IsoMuVertex_*_*',
        'keep *_hltPFTau20TrackLooseIso_*_*',
        'keep *_hltPFTau20Track_*_*',
        'keep *_hltPFTau20_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltPFTau25TrackPt5_*_*',
        'keep *_hltPFTau25_*_*',
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*',
        'keep *_hltPFTau35TrackPt20LooseIso_*_*',
        'keep *_hltPFTau35TrackPt20_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPFTauEleVertex20_*_*',
        'keep *_hltPFTauJetTracksAssociator_*_*',
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*',
        'keep *_hltPFTauMediumIso20Track_*_*',
        'keep *_hltPFTauMediumIso20_*_*',
        'keep *_hltPFTauMediumIso35Track_*_*',
        'keep *_hltPFTauMediumIso35_*_*',
        'keep *_hltPFTauTagInfo_*_*',
        'keep *_hltPFTauTightIso20TrackTightIso_*_*',
        'keep *_hltPFTauTightIso20Track_*_*',
        'keep *_hltPFTauTightIso20_*_*',
        'keep *_hltPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltPixelMatch3HitElectronsActivity_*_*',
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchElectronsActivity_*_*',
        'keep *_hltPixelMatchElectronsL1Iso_*_*',
        'keep *_hltPixelMatchElectronsL1NonIso_*_*',
        'keep *_hltPixelMatchElectronsL1Seeded_*_*',
        'keep *_hltPixelTracksElectrons_*_*',
        'keep *_hltPixelTracksMerged_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices3DbbPhi_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelCluster_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltSingleMu15L3Filtered15_*_*',
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*',
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTowerMakerForMuons_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep LumiScalerss_hltScalersRawToDigi_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3MuonsOIHit_*_*',
        'keep recoTracks_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3Muons_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.HLTDebugFEVT = cms.PSet(
    outputCommands = cms.vstring( (
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilter_*_*',
        'keep *_hltAlCaPhiSymStream_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilter_*_*',
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCSVJetTagSingleTopEle27_*_*',
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*',
        'keep *_hltCaloJetCorrectedRegional_*_*',
        'keep *_hltCaloJetCorrected_*_*',
        'keep *_hltCaloJetL1FastJetCorrected_*_*',
        'keep *_hltCaloStage2Digis_*_*',
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*',
        'keep *_hltConvPFTausTightIso_*_*',
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*',
        'keep *_hltConvPFTausTrackFinding_*_*',
        'keep *_hltConvPFTaus_*_*',
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltDoublePFTau25TrackPt5_*_*',
        'keep *_hltDoublePFTau25_*_*',
        'keep *_hltDoublePFTauTightIso45Track5_*_*',
        'keep *_hltDoublePFTauTightIso45Track_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHitAll_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*',
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorLumiPixels_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices3D_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*',
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*',
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFullIterativeTrackingMergedForRefPP_*_*',
        'keep *_hltGmtStage2Digis_*_*',
        'keep *_hltGoodOnlinePVs_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHICaloJetCorrected_*_*',
        'keep *_hltHICaloJetIDPassed_*_*',
        'keep *_hltHIGoodLooseTracks_*_*',
        'keep *_hltHIPixel3PrimTracks_*_*',
        'keep *_hltHISelectedVertex_*_*',
        'keep *_hltHISiPixelClusters_*_*',
        'keep *_hltHITIPTCorrectorHB_*_*',
        'keep *_hltHITIPTCorrectorHE_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltHiIslandSuperClustersHI_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter1Merged_*_*',
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2HighPtTkMuMerged_*_*',
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2IterL3FromL1MuonMerged_*_*',
        'keep *_hltIter2IterL3MuonMerged_*_*',
        'keep *_hltIter2MergedForBTag_*_*',
        'keep *_hltIter2MergedForElectrons_*_*',
        'keep *_hltIter2Merged_*_*',
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter3Merged_*_*',
        'keep *_hltIter4Merged_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*',
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*',
        'keep *_hltL1IsoElectronTrackIsol_*_*',
        'keep *_hltL1NonIsoElectronTrackIsol_*_*',
        'keep *_hltL1SeededRecoEcalCandidate_*_*',
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*',
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*',
        'keep *_hltL1sL1EG18er_*_*',
        'keep *_hltL1sL1ETM36ORETM40_*_*',
        'keep *_hltL1sL1Jet52ETM30_*_*',
        'keep *_hltL1sL1SingleEG12_*_*',
        'keep *_hltL1sL1SingleEG15_*_*',
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltL1sL1SingleMu10_*_*',
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*',
        'keep *_hltL1sMu16Eta2p1_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonCandidates_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3SecondaryVertexTagInfos_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*',
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*',
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*',
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*',
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltOnlinePrimaryVertices_*_*',
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*',
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau15TrackLooseIso_*_*',
        'keep *_hltPFTau15Track_*_*',
        'keep *_hltPFTau15_*_*',
        'keep *_hltPFTau20IsoMuVertex_*_*',
        'keep *_hltPFTau20TrackLooseIso_*_*',
        'keep *_hltPFTau20Track_*_*',
        'keep *_hltPFTau20_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltPFTau25TrackPt5_*_*',
        'keep *_hltPFTau25_*_*',
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*',
        'keep *_hltPFTau35TrackPt20LooseIso_*_*',
        'keep *_hltPFTau35TrackPt20_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPFTauEleVertex20_*_*',
        'keep *_hltPFTauJetTracksAssociator_*_*',
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*',
        'keep *_hltPFTauMediumIso20Track_*_*',
        'keep *_hltPFTauMediumIso20_*_*',
        'keep *_hltPFTauMediumIso35Track_*_*',
        'keep *_hltPFTauMediumIso35_*_*',
        'keep *_hltPFTauTagInfo_*_*',
        'keep *_hltPFTauTightIso20TrackTightIso_*_*',
        'keep *_hltPFTauTightIso20Track_*_*',
        'keep *_hltPFTauTightIso20_*_*',
        'keep *_hltPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltPixelMatch3HitElectronsActivity_*_*',
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchElectronsActivity_*_*',
        'keep *_hltPixelMatchElectronsL1Iso_*_*',
        'keep *_hltPixelMatchElectronsL1NonIso_*_*',
        'keep *_hltPixelMatchElectronsL1Seeded_*_*',
        'keep *_hltPixelTracksElectrons_*_*',
        'keep *_hltPixelTracksMerged_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices3DbbPhi_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelCluster_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltSingleMu15L3Filtered15_*_*',
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*',
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTowerMakerForMuons_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep LumiScalerss_hltScalersRawToDigi_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3MuonsOIHit_*_*',
        'keep recoTracks_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3Muons_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
     ) )
)

process.HLTDebugRAW = cms.PSet(
    outputCommands = cms.vstring( (
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilter_*_*',
        'keep *_hltAlCaPhiSymStream_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilter_*_*',
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCSVJetTagSingleTopEle27_*_*',
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*',
        'keep *_hltCaloJetCorrectedRegional_*_*',
        'keep *_hltCaloJetCorrected_*_*',
        'keep *_hltCaloJetL1FastJetCorrected_*_*',
        'keep *_hltCaloStage2Digis_*_*',
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*',
        'keep *_hltConvPFTausTightIso_*_*',
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*',
        'keep *_hltConvPFTausTrackFinding_*_*',
        'keep *_hltConvPFTaus_*_*',
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltDoublePFTau25TrackPt5_*_*',
        'keep *_hltDoublePFTau25_*_*',
        'keep *_hltDoublePFTauTightIso45Track5_*_*',
        'keep *_hltDoublePFTauTightIso45Track_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHitAll_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*',
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorLumiPixels_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices3D_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*',
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*',
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFullIterativeTrackingMergedForRefPP_*_*',
        'keep *_hltGmtStage2Digis_*_*',
        'keep *_hltGoodOnlinePVs_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHICaloJetCorrected_*_*',
        'keep *_hltHICaloJetIDPassed_*_*',
        'keep *_hltHIGoodLooseTracks_*_*',
        'keep *_hltHIPixel3PrimTracks_*_*',
        'keep *_hltHISelectedVertex_*_*',
        'keep *_hltHISiPixelClusters_*_*',
        'keep *_hltHITIPTCorrectorHB_*_*',
        'keep *_hltHITIPTCorrectorHE_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltHiIslandSuperClustersHI_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter1Merged_*_*',
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2HighPtTkMuMerged_*_*',
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2IterL3FromL1MuonMerged_*_*',
        'keep *_hltIter2IterL3MuonMerged_*_*',
        'keep *_hltIter2MergedForBTag_*_*',
        'keep *_hltIter2MergedForElectrons_*_*',
        'keep *_hltIter2Merged_*_*',
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter3Merged_*_*',
        'keep *_hltIter4Merged_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*',
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*',
        'keep *_hltL1IsoElectronTrackIsol_*_*',
        'keep *_hltL1NonIsoElectronTrackIsol_*_*',
        'keep *_hltL1SeededRecoEcalCandidate_*_*',
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*',
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*',
        'keep *_hltL1sL1EG18er_*_*',
        'keep *_hltL1sL1ETM36ORETM40_*_*',
        'keep *_hltL1sL1Jet52ETM30_*_*',
        'keep *_hltL1sL1SingleEG12_*_*',
        'keep *_hltL1sL1SingleEG15_*_*',
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltL1sL1SingleMu10_*_*',
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*',
        'keep *_hltL1sMu16Eta2p1_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonCandidates_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3SecondaryVertexTagInfos_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*',
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*',
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*',
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*',
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltOnlinePrimaryVertices_*_*',
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*',
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau15TrackLooseIso_*_*',
        'keep *_hltPFTau15Track_*_*',
        'keep *_hltPFTau15_*_*',
        'keep *_hltPFTau20IsoMuVertex_*_*',
        'keep *_hltPFTau20TrackLooseIso_*_*',
        'keep *_hltPFTau20Track_*_*',
        'keep *_hltPFTau20_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltPFTau25TrackPt5_*_*',
        'keep *_hltPFTau25_*_*',
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*',
        'keep *_hltPFTau35TrackPt20LooseIso_*_*',
        'keep *_hltPFTau35TrackPt20_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPFTauEleVertex20_*_*',
        'keep *_hltPFTauJetTracksAssociator_*_*',
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*',
        'keep *_hltPFTauMediumIso20Track_*_*',
        'keep *_hltPFTauMediumIso20_*_*',
        'keep *_hltPFTauMediumIso35Track_*_*',
        'keep *_hltPFTauMediumIso35_*_*',
        'keep *_hltPFTauTagInfo_*_*',
        'keep *_hltPFTauTightIso20TrackTightIso_*_*',
        'keep *_hltPFTauTightIso20Track_*_*',
        'keep *_hltPFTauTightIso20_*_*',
        'keep *_hltPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltPixelMatch3HitElectronsActivity_*_*',
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchElectronsActivity_*_*',
        'keep *_hltPixelMatchElectronsL1Iso_*_*',
        'keep *_hltPixelMatchElectronsL1NonIso_*_*',
        'keep *_hltPixelMatchElectronsL1Seeded_*_*',
        'keep *_hltPixelTracksElectrons_*_*',
        'keep *_hltPixelTracksMerged_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices3DbbPhi_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelCluster_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltSingleMu15L3Filtered15_*_*',
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*',
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTowerMakerForMuons_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep LumiScalerss_hltScalersRawToDigi_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3MuonsOIHit_*_*',
        'keep recoTracks_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3Muons_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
     ) )
)

process.HLTScouting = cms.PSet(
    outputCommands = cms.vstring(
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerAOD = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerRAW = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HLTriggerRECO = cms.PSet(
    outputCommands = cms.vstring(
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
    )
)

process.HiCaloJetDefaults = cms.PSet(
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    puPtMin = cms.double(10),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)

process.HiCaloJetParameters = cms.PSet(
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)

process.HiLowPtTrackingRegionWithVertexBlock = cms.PSet(
    VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    fixedError = cms.double(0.2),
    nSigmaZ = cms.double(3.0),
    originRadius = cms.double(0.2),
    precise = cms.bool(True),
    ptMin = cms.double(0.25),
    sigmaZVertex = cms.double(3.0),
    useFakeVertices = cms.bool(False),
    useFixedError = cms.bool(True),
    useFoundVertices = cms.bool(True),
    useMultipleScattering = cms.bool(False)
)

process.HiMixAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*'
    )
)

process.HiMixRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*'
    )
)

process.HiMixRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*'
    )
)

process.HiPFJetDefaults = cms.PSet(
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetPtMin = cms.double(10),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)

process.HiPFJetParameters = cms.PSet(
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetPtMin = cms.double(10),
    jetType = cms.string('PFJet'),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puWidth = cms.double(0.8),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)

process.HiTrackingRegionFactoryFromJetsBlock = cms.PSet(
    ComponentName = cms.string('TauRegionalPixelSeedGenerator'),
    RegionPSet = cms.PSet(
        JetSrc = cms.InputTag("iterativeConePu5CaloJets"),
        deltaEtaRegion = cms.double(0.1),
        deltaPhiRegion = cms.double(0.1),
        howToUseMeasurementTracker = cms.string('ForSiStrips'),
        measurementTrackerName = cms.InputTag("MeasurementTrackerEvent"),
        originHalfLength = cms.double(0.2),
        originRadius = cms.double(0.2),
        originZPos = cms.double(0.0),
        precise = cms.bool(True),
        ptMin = cms.double(5.0),
        vertexSrc = cms.InputTag("hiSelectedPixelVertex")
    )
)

process.HiTrackingRegionForPrimaryVertexBlock = cms.PSet(
    beamSpot = cms.InputTag("offlineBeamSpot"),
    directionXCoord = cms.double(1.0),
    directionYCoord = cms.double(1.0),
    directionZCoord = cms.double(0.0),
    doVariablePtMin = cms.bool(True),
    nSigmaZ = cms.double(3.0),
    originRadius = cms.double(0.1),
    precise = cms.bool(True),
    ptMin = cms.double(0.7),
    siPixelRecHits = cms.InputTag("siPixelRecHits"),
    useFakeVertices = cms.bool(False),
    useMultipleScattering = cms.bool(False)
)

process.IOMCRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_randomEngineStateProducer_*_*')
)

process.L1TriggerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*'
    )
)

process.L1TriggerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simCscTriggerPrimitiveDigis_*_*',
        'keep *_simDtTriggerPrimitiveDigis_*_*',
        'keep *_simRpcTriggerDigis_*_*',
        'keep *_simRctDigis_*_*',
        'keep *_simCsctfDigis_*_*',
        'keep *_simCsctfTrackDigis_*_*',
        'keep *_simDttfDigis_*_*',
        'keep *_simGctDigis_*_*',
        'keep *_simCaloStage1Digis_*_*',
        'keep *_simCaloStage1FinalDigis_*_*',
        'keep *_simCaloStage2Layer1Digis_*_*',
        'keep *_simCaloStage2Digis_*_*',
        'keep *_simGmtDigis_*_*',
        'keep *_simBmtfDigis_*_*',
        'keep *_simOmtfDigis_*_*',
        'keep *_simEmtfDigis_*_*',
        'keep *_simGmtStage2Digis_*_*',
        'keep *_simGtDigis_*_*',
        'keep *_simGtStage2Digis_*_*',
        'keep *_cscTriggerPrimitiveDigis_*_*',
        'keep *_dtTriggerPrimitiveDigis_*_*',
        'keep *_rpcTriggerDigis_*_*',
        'keep *_rctDigis_*_*',
        'keep *_csctfDigis_*_*',
        'keep *_csctfTrackDigis_*_*',
        'keep *_dttfDigis_*_*',
        'keep *_gctDigis_*_*',
        'keep *_gmtDigis_*_*',
        'keep *_gtDigis_*_*',
        'keep *_gtEvmDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*'
    )
)

process.L1TriggerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*'
    )
)

process.L1TriggerRAWDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*'
    )
)

process.L1TriggerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*'
    )
)

process.LHEEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep *_externalLHEProducer_LHEScriptOutput_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.ME0SegAlgoRU = cms.PSet(
    algo_name = cms.string('ME0SegAlgoRU'),
    algo_pset = cms.PSet(
        allowWideSegments = cms.bool(True),
        doCollisions = cms.bool(True),
        maxChi2Additional = cms.double(100.0),
        maxChi2GoodSeg = cms.double(50),
        maxChi2Prune = cms.double(50),
        maxETASeeds = cms.double(0.1),
        maxPhiAdditional = cms.double(0.001096605744),
        maxPhiSeeds = cms.double(0.001096605744),
        maxTOFDiff = cms.double(25),
        minNumberOfHits = cms.uint32(4),
        requireCentralBX = cms.bool(True)
    )
)

process.ME0SegmentAlgorithm = cms.PSet(
    algo_name = cms.string('ME0SegmentAlgorithm'),
    algo_pset = cms.PSet(
        ME0Debug = cms.untracked.bool(True),
        dEtaChainBoxMax = cms.double(0.05),
        dPhiChainBoxMax = cms.double(0.02),
        dTimeChainBoxMax = cms.double(15.0),
        dXclusBoxMax = cms.double(1.0),
        dYclusBoxMax = cms.double(5.0),
        maxRecHitsInCluster = cms.int32(6),
        minHitsPerSegment = cms.uint32(3),
        preClustering = cms.bool(True),
        preClusteringUseChaining = cms.bool(True)
    )
)

process.MEtoEDMConverterAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MEtoEDMConverterFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_MEtoEDMConverter_*_*')
)

process.MEtoEDMConverterRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.MINIAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(-900),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJets_*_*',
        'drop recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoTracks_displacedStandAloneMuons__*'
    )
)

process.MINIAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(-900),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJets_*_*',
        'drop recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*'
    )
)

process.MINIGENEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(15728640),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*'
    )
)

process.MIXINGMODULEEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_cfWriter_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.MIdIsoExtractorPSetBlock = cms.PSet(
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("ak4CaloJets"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("generalTracks")
    ),
    ecalDepositName = cms.string('ecal'),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    jetDepositName = cms.string('jets'),
    trackDepositName = cms.string('tracker')
)

process.MIsoCaloExtractorByAssociatorHitsBlock = cms.PSet(
    CenterConeOnCalIntersection = cms.bool(False),
    ComponentName = cms.string('CaloExtractorByAssociator'),
    DR_Max = cms.double(0.5),
    DR_Veto_E = cms.double(0.07),
    DR_Veto_H = cms.double(0.1),
    DR_Veto_HO = cms.double(0.1),
    DepositInstanceLabels = cms.vstring(
        'ecal',
        'hcal',
        'ho'
    ),
    DepositLabel = cms.untracked.string('Cal'),
    NoiseTow_EB = cms.double(0.04),
    NoiseTow_EE = cms.double(0.15),
    Noise_EB = cms.double(0.025),
    Noise_EE = cms.double(0.1),
    Noise_HB = cms.double(0.2),
    Noise_HE = cms.double(0.2),
    Noise_HO = cms.double(0.2),
    PrintTimeReport = cms.untracked.bool(False),
    PropagatorName = cms.string('SteppingHelixPropagatorAny'),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(False),
        UseMuonNavigation = cms.untracked.bool(False)
    ),
    Threshold_E = cms.double(0.025),
    Threshold_H = cms.double(0.1),
    Threshold_HO = cms.double(0.1),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        dRHcal = cms.double(1.0),
        dRHcalPreselection = cms.double(1.0),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(False),
        usePreshower = cms.bool(False)
    ),
    UseRecHitsFlag = cms.bool(True)
)

process.MIsoCaloExtractorByAssociatorTowersBlock = cms.PSet(
    CenterConeOnCalIntersection = cms.bool(False),
    ComponentName = cms.string('CaloExtractorByAssociator'),
    DR_Max = cms.double(0.5),
    DR_Veto_E = cms.double(0.07),
    DR_Veto_H = cms.double(0.1),
    DR_Veto_HO = cms.double(0.1),
    DepositInstanceLabels = cms.vstring(
        'ecal',
        'hcal',
        'ho'
    ),
    DepositLabel = cms.untracked.string('Cal'),
    NoiseTow_EB = cms.double(0.04),
    NoiseTow_EE = cms.double(0.15),
    Noise_EB = cms.double(0.025),
    Noise_EE = cms.double(0.1),
    Noise_HB = cms.double(0.2),
    Noise_HE = cms.double(0.2),
    Noise_HO = cms.double(0.2),
    PrintTimeReport = cms.untracked.bool(False),
    PropagatorName = cms.string('SteppingHelixPropagatorAny'),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(False),
        UseMuonNavigation = cms.untracked.bool(False)
    ),
    Threshold_E = cms.double(0.2),
    Threshold_H = cms.double(0.5),
    Threshold_HO = cms.double(0.5),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        dRHcal = cms.double(1.0),
        dRHcalPreselection = cms.double(1.0),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(True),
        useEcal = cms.bool(False),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(False),
        useME0 = cms.bool(False),
        useMuon = cms.bool(False),
        usePreshower = cms.bool(False)
    ),
    UseRecHitsFlag = cms.bool(False)
)

process.MIsoCaloExtractorEcalBlock = cms.PSet(
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    ComponentName = cms.string('CaloExtractor'),
    DR_Max = cms.double(1.0),
    DR_Veto_E = cms.double(0.07),
    DR_Veto_H = cms.double(0.1),
    DepositLabel = cms.untracked.string('EcalPlusHcal'),
    Threshold_E = cms.double(0.2),
    Threshold_H = cms.double(0.5),
    Vertex_Constraint_XY = cms.bool(False),
    Vertex_Constraint_Z = cms.bool(False),
    Weight_E = cms.double(1.0),
    Weight_H = cms.double(0.0)
)

process.MIsoCaloExtractorHLTBlock = cms.PSet(
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    ComponentName = cms.string('CaloExtractor'),
    DR_Max = cms.double(1.0),
    DR_Veto_E = cms.double(0.07),
    DR_Veto_H = cms.double(0.1),
    DepositLabel = cms.untracked.string('EcalPlusHcal'),
    Threshold_E = cms.double(0.2),
    Threshold_H = cms.double(0.5),
    Vertex_Constraint_XY = cms.bool(False),
    Vertex_Constraint_Z = cms.bool(False),
    Weight_E = cms.double(1.5),
    Weight_H = cms.double(1.0)
)

process.MIsoCaloExtractorHcalBlock = cms.PSet(
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    ComponentName = cms.string('CaloExtractor'),
    DR_Max = cms.double(1.0),
    DR_Veto_E = cms.double(0.07),
    DR_Veto_H = cms.double(0.1),
    DepositLabel = cms.untracked.string('EcalPlusHcal'),
    Threshold_E = cms.double(0.2),
    Threshold_H = cms.double(0.5),
    Vertex_Constraint_XY = cms.bool(False),
    Vertex_Constraint_Z = cms.bool(False),
    Weight_E = cms.double(0.0),
    Weight_H = cms.double(1.0)
)

process.MIsoDepositGlobalIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    InputType = cms.string('TrackCollection'),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('track'),
    inputMuonCollection = cms.InputTag("globalMuons")
)

process.MIsoDepositGlobalMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    InputType = cms.string('TrackCollection'),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('track'),
    inputMuonCollection = cms.InputTag("globalMuons")
)

process.MIsoDepositParamGlobalIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    InputType = cms.string('MuonCollection'),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('track'),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
)

process.MIsoDepositParamGlobalMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    InputType = cms.string('MuonCollection'),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('track'),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
)

process.MIsoDepositParamGlobalViewIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    InputType = cms.string('MuonCollection'),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('bestTrkSta'),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
)

process.MIsoDepositParamGlobalViewMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    InputType = cms.string('MuonCollection'),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('bestTrkSta'),
    inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
)

process.MIsoDepositViewIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    InputType = cms.string('MuonCollection'),
    MultipleDepositsFlag = cms.bool(False),
    MuonTrackRefType = cms.string('bestTrkSta'),
    inputMuonCollection = cms.InputTag("muons1stStep")
)

process.MIsoDepositViewMultiIOBlock = cms.PSet(
    ExtractForCandidate = cms.bool(False),
    InputType = cms.string('MuonCollection'),
    MultipleDepositsFlag = cms.bool(True),
    MuonTrackRefType = cms.string('bestTrkSta'),
    inputMuonCollection = cms.InputTag("muons1stStep")
)

process.MIsoJetExtractorBlock = cms.PSet(
    ComponentName = cms.string('JetExtractor'),
    DR_Max = cms.double(1.0),
    DR_Veto = cms.double(0.1),
    ExcludeMuonVeto = cms.bool(True),
    JetCollectionLabel = cms.InputTag("ak4CaloJets"),
    PrintTimeReport = cms.untracked.bool(False),
    PropagatorName = cms.string('SteppingHelixPropagatorAny'),
    ServiceParameters = cms.PSet(
        Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
        RPCLayers = cms.bool(False),
        UseMuonNavigation = cms.untracked.bool(False)
    ),
    Threshold = cms.double(5.0),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(0.5),
        dREcalPreselection = cms.double(0.5),
        dRHcal = cms.double(0.5),
        dRHcalPreselection = cms.double(0.5),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(True),
        useEcal = cms.bool(False),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(False),
        useME0 = cms.bool(False),
        useMuon = cms.bool(False),
        usePreshower = cms.bool(False)
    )
)

process.MIsoTrackAssociatorDefault = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        dRHcal = cms.double(1.0),
        dRHcalPreselection = cms.double(1.0),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(True),
        useEcal = cms.bool(False),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(False),
        useME0 = cms.bool(False),
        useMuon = cms.bool(False),
        usePreshower = cms.bool(False)
    )
)

process.MIsoTrackAssociatorHits = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        dRHcal = cms.double(1.0),
        dRHcalPreselection = cms.double(1.0),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(False),
        usePreshower = cms.bool(False)
    )
)

process.MIsoTrackAssociatorJets = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(0.5),
        dREcalPreselection = cms.double(0.5),
        dRHcal = cms.double(0.5),
        dRHcalPreselection = cms.double(0.5),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(True),
        useEcal = cms.bool(False),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(False),
        useME0 = cms.bool(False),
        useMuon = cms.bool(False),
        usePreshower = cms.bool(False)
    )
)

process.MIsoTrackAssociatorTowers = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(1.0),
        dREcalPreselection = cms.double(1.0),
        dRHcal = cms.double(1.0),
        dRHcalPreselection = cms.double(1.0),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(True),
        useEcal = cms.bool(False),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(False),
        useME0 = cms.bool(False),
        useMuon = cms.bool(False),
        usePreshower = cms.bool(False)
    )
)

process.MIsoTrackExtractorBlock = cms.PSet(
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    BeamlineOption = cms.string('BeamSpotFromEvent'),
    Chi2Ndof_Max = cms.double(1e+64),
    Chi2Prob_Min = cms.double(-1.0),
    ComponentName = cms.string('TrackExtractor'),
    DR_Max = cms.double(0.5),
    DR_Veto = cms.double(0.01),
    DepositLabel = cms.untracked.string(''),
    Diff_r = cms.double(0.1),
    Diff_z = cms.double(0.2),
    NHits_Min = cms.uint32(0),
    Pt_Min = cms.double(-1.0),
    inputTrackCollection = cms.InputTag("generalTracks")
)

process.MIsoTrackExtractorCtfBlock = cms.PSet(
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    BeamlineOption = cms.string('BeamSpotFromEvent'),
    Chi2Ndof_Max = cms.double(1e+64),
    Chi2Prob_Min = cms.double(-1.0),
    ComponentName = cms.string('TrackExtractor'),
    DR_Max = cms.double(0.5),
    DR_Veto = cms.double(0.01),
    DepositLabel = cms.untracked.string(''),
    Diff_r = cms.double(0.1),
    Diff_z = cms.double(0.2),
    NHits_Min = cms.uint32(0),
    Pt_Min = cms.double(-1.0),
    inputTrackCollection = cms.InputTag("generalTracks")
)

process.MIsoTrackExtractorGsBlock = cms.PSet(
    BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    BeamlineOption = cms.string('BeamSpotFromEvent'),
    Chi2Ndof_Max = cms.double(1e+64),
    Chi2Prob_Min = cms.double(-1.0),
    ComponentName = cms.string('TrackExtractor'),
    DR_Max = cms.double(0.5),
    DR_Veto = cms.double(0.01),
    DepositLabel = cms.untracked.string(''),
    Diff_r = cms.double(0.1),
    Diff_z = cms.double(0.2),
    NHits_Min = cms.uint32(0),
    Pt_Min = cms.double(-1.0),
    inputTrackCollection = cms.InputTag("ctfGSWithMaterialTracks")
)

process.MaxCCCLostHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxCCCLostHitsTrajectoryFilter'),
    maxCCCLostHits = cms.int32(3),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    )
)

process.MaxConsecLostHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxConsecLostHitsTrajectoryFilter'),
    maxConsecLostHits = cms.int32(1)
)

process.MaxHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxHitsTrajectoryFilter'),
    maxNumberOfHits = cms.int32(100)
)

process.MaxLostHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MaxLostHitsTrajectoryFilter'),
    maxLostHits = cms.int32(2)
)

process.MicroEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJets_*_*',
        'drop recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoTracks_displacedStandAloneMuons__*'
    )
)

process.MicroEventContentGEN = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*'
    )
)

process.MicroEventContentMC = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJets_*_*',
        'drop recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*'
    )
)

process.MinHitsTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MinHitsTrajectoryFilter'),
    minimumNumberOfHits = cms.int32(5)
)

process.MinPtTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('MinPtTrajectoryFilter'),
    minHitsMinPt = cms.int32(3),
    minPt = cms.double(1.0),
    nSigmaMinPt = cms.double(5.0)
)

process.MultipleAlgoIteratorBlock = cms.PSet(
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False)
)

process.MuonCaloCompatibilityBlock = cms.PSet(
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    )
)

process.MuonCosmicCompatibilityParameters = cms.PSet(
    CosmicCompFillerParameters = cms.PSet(
        InputCosmicMuonCollection = cms.InputTag("muonsFromCosmics1Leg"),
        InputMuonCollections = cms.VInputTag(cms.InputTag("globalMuons"), cms.InputTag("muons1stStep")),
        InputTrackCollections = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cosmicsVetoTracks")),
        InputVertexCollection = cms.InputTag("offlinePrimaryVertices"),
        ServiceParameters = cms.PSet(
            CSCLayers = cms.untracked.bool(True),
            GEMLayers = cms.untracked.bool(False),
            ME0Layers = cms.bool(False),
            Propagators = cms.untracked.vstring(
                'SteppingHelixPropagatorAny',
                'SteppingHelixPropagatorAlong',
                'SteppingHelixPropagatorOpposite',
                'SteppingHelixPropagatorL2Any',
                'SteppingHelixPropagatorL2Along',
                'SteppingHelixPropagatorL2Opposite',
                'SteppingHelixPropagatorAnyNoError',
                'SteppingHelixPropagatorAlongNoError',
                'SteppingHelixPropagatorOppositeNoError',
                'SteppingHelixPropagatorL2AnyNoError',
                'SteppingHelixPropagatorL2AlongNoError',
                'SteppingHelixPropagatorL2OppositeNoError',
                'PropagatorWithMaterial',
                'PropagatorWithMaterialOpposite',
                'SmartPropagator',
                'SmartPropagatorOpposite',
                'SmartPropagatorAnyOpposite',
                'SmartPropagatorAny',
                'SmartPropagatorRK',
                'SmartPropagatorAnyRK',
                'StraightLinePropagator'
            ),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        angleCut = cms.double(0.1),
        corrTimeNeg = cms.double(-10),
        corrTimePos = cms.double(5),
        deltaPt = cms.double(0.1),
        hIpTrdxy = cms.double(0.02),
        hIpTrvProb = cms.double(0.5),
        ipCut = cms.double(0.02),
        largedxy = cms.double(2.0),
        largedxyMult = cms.double(3.0),
        maxdxyLoose = cms.double(0.01),
        maxdxyLooseMult = cms.double(0.01),
        maxdxyTight = cms.double(1.0),
        maxdxyTightMult = cms.double(1.0),
        maxdzLoose = cms.double(0.1),
        maxdzLooseMult = cms.double(0.1),
        maxdzTight = cms.double(10.0),
        maxdzTightMult = cms.double(10.0),
        maxvertRho = cms.double(5),
        maxvertZ = cms.double(20),
        minvProb = cms.double(0.001),
        nChamberMatches = cms.int32(1),
        nTrackThreshold = cms.int32(3),
        offTimeNegLoose = cms.double(-15.0),
        offTimeNegLooseMult = cms.double(-15.0),
        offTimeNegTight = cms.double(-20.0),
        offTimeNegTightMult = cms.double(-20.0),
        offTimePosLoose = cms.double(15.0),
        offTimePosLooseMult = cms.double(15.0),
        offTimePosTight = cms.double(25.0),
        offTimePosTightMult = cms.double(25.0),
        segmentComp = cms.double(0.4),
        sharedFrac = cms.double(0.75),
        sharedHits = cms.int32(5)
    )
)

process.MuonSegmentMatcher = cms.PSet(
    MatchParameters = cms.PSet(
        CSCsegments = cms.InputTag("cscSegments"),
        DTradius = cms.double(0.01),
        DTsegments = cms.InputTag("dt4DSegments"),
        RPChits = cms.InputTag("rpcRecHits"),
        TightMatchCSC = cms.bool(True),
        TightMatchDT = cms.bool(False)
    )
)

process.MuonServiceProxy = cms.PSet(
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)

process.MuonShowerParameters = cms.PSet(
    MuonShowerInformationFillerParameters = cms.PSet(
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        CSCSegmentLabel = cms.InputTag("cscSegments"),
        DT4DRecSegmentLabel = cms.InputTag("dt4DSegments"),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        ServiceParameters = cms.PSet(
            CSCLayers = cms.untracked.bool(True),
            GEMLayers = cms.untracked.bool(False),
            ME0Layers = cms.bool(False),
            Propagators = cms.untracked.vstring(
                'SteppingHelixPropagatorAny',
                'SteppingHelixPropagatorAlong',
                'SteppingHelixPropagatorOpposite',
                'SteppingHelixPropagatorL2Any',
                'SteppingHelixPropagatorL2Along',
                'SteppingHelixPropagatorL2Opposite',
                'SteppingHelixPropagatorAnyNoError',
                'SteppingHelixPropagatorAlongNoError',
                'SteppingHelixPropagatorOppositeNoError',
                'SteppingHelixPropagatorL2AnyNoError',
                'SteppingHelixPropagatorL2AlongNoError',
                'SteppingHelixPropagatorL2OppositeNoError',
                'PropagatorWithMaterial',
                'PropagatorWithMaterialOpposite',
                'SmartPropagator',
                'SmartPropagatorOpposite',
                'SmartPropagatorAnyOpposite',
                'SmartPropagatorAny',
                'SmartPropagatorRK',
                'SmartPropagatorAnyRK',
                'StraightLinePropagator'
            ),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        TrackerRecHitBuilder = cms.string('WithTrackAngle')
    )
)

process.MuonTrackLoaderForCosmic = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        AllowNoVertex = cms.untracked.bool(True),
        DoSmoothing = cms.bool(False),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorAny')
        ),
        PutTrajectoryIntoEvent = cms.untracked.bool(False),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)

process.MuonTrackLoaderForGLB = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(True),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)

process.MuonTrackLoaderForL2 = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(False),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(True),
        beamSpot = cms.InputTag("hltOfflineBeamSpot")
    )
)

process.MuonTrackLoaderForL3 = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(True),
        MuonSeededTracksInstance = cms.untracked.string('L2Seeded'),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        PutTkTrackIntoEvent = cms.untracked.bool(True),
        SmoothTkTrack = cms.untracked.bool(False),
        Smoother = cms.string('KFSmootherForMuonTrackLoaderL3'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("hltOfflineBeamSpot")
    )
)

process.MuonTrackLoaderForSTA = cms.PSet(
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(False),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)

process.MuonTrackingRegionCommon = cms.PSet(
    MuonTrackingRegionBuilder = cms.PSet(
        DeltaEta = cms.double(0.2),
        DeltaPhi = cms.double(0.2),
        DeltaR = cms.double(0.2),
        DeltaZ = cms.double(15.9),
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        Eta_fixed = cms.bool(False),
        Eta_min = cms.double(0.1),
        MeasurementTrackerName = cms.InputTag(""),
        OnDemand = cms.int32(-1),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        Phi_fixed = cms.bool(False),
        Phi_min = cms.double(0.1),
        Pt_fixed = cms.bool(False),
        Pt_min = cms.double(1.5),
        Rescale_Dz = cms.double(3.0),
        Rescale_eta = cms.double(3.0),
        Rescale_phi = cms.double(3.0),
        UseVertex = cms.bool(False),
        Z_fixed = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        input = cms.InputTag(""),
        maxRegions = cms.int32(1),
        precise = cms.bool(True),
        vertexCollection = cms.InputTag("")
    )
)

process.MuonUpdatorAtVertex = cms.PSet(
    MuonUpdatorAtVertexParameters = cms.PSet(
        BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
        MaxChi2 = cms.double(1000000.0),
        Propagator = cms.string('SteppingHelixPropagatorOpposite')
    )
)

process.MuonUpdatorAtVertexAnyDirection = cms.PSet(
    MuonUpdatorAtVertexParameters = cms.PSet(
        BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
        MaxChi2 = cms.double(1000000.0),
        Propagator = cms.string('SteppingHelixPropagatorAny')
    )
)

process.NANOAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.NANOAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(9),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.NanoAODEDMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep nanoaodFlatTable_*Table_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep nanoaodMergeableCounterTable_*Table_*_*',
        'keep nanoaodUniqueString_nanoMetadata_*_*'
    )
)

process.OnlineMetaDataContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*'
    )
)

process.PREMIXEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep recoGenMETs_*_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep RPCDetIdRPCDigiMuonDigiCollection_simMuonRPCDigis_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_*_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.PREMIXRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'drop CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_*_MergedTrackTruth_*',
        'keep *_*_StripDigiSimLink_*',
        'keep *_*_PixelDigiSimLink_*',
        'keep *_*_MuonCSCStripDigiSimLinks_*',
        'keep *_*_MuonCSCWireDigiSimLinks_*',
        'keep *_*_RPCDigiSimLink_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_*_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.ParametrizedSubtractorBlock = cms.PSet(
    interpolate = cms.bool(False),
    subtractorName = cms.string('ParametrizedSubtractorBlock'),
    sumRecHits = cms.bool(False)
)

process.PixelTripletHLTGenerator = cms.PSet(
    ComponentName = cms.string('PixelTripletHLTGenerator'),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(100000),
    phiPreFiltering = cms.double(0.3),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)

process.PixelTripletHLTGeneratorWithFilter = cms.PSet(
    ComponentName = cms.string('PixelTripletHLTGenerator'),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(100000),
    phiPreFiltering = cms.double(0.3),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)

process.RAWAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(31457280),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'drop doubles_*Jets_rhos_*',
        'drop doubles_*Jets_sigmas_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'drop recoHcalNoiseRBXs_*_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'drop *_gedPhotons_valMapPFEgammaCandToPhoton_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'drop *_pfElectronTranslator_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
     ) )
)

process.RAWAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'drop doubles_*Jets_rhos_*',
        'drop doubles_*Jets_sigmas_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'drop recoHcalNoiseRBXs_*_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'drop *_gedPhotons_valMapPFEgammaCandToPhoton_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'drop *_pfElectronTranslator_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep SimVertexs_g4SimHits_*_*'
     ) )
)

process.RAWDEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWDEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilter_*_*',
        'keep *_hltAlCaPhiSymStream_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilter_*_*',
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCSVJetTagSingleTopEle27_*_*',
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*',
        'keep *_hltCaloJetCorrectedRegional_*_*',
        'keep *_hltCaloJetCorrected_*_*',
        'keep *_hltCaloJetL1FastJetCorrected_*_*',
        'keep *_hltCaloStage2Digis_*_*',
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*',
        'keep *_hltConvPFTausTightIso_*_*',
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*',
        'keep *_hltConvPFTausTrackFinding_*_*',
        'keep *_hltConvPFTaus_*_*',
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltDoublePFTau25TrackPt5_*_*',
        'keep *_hltDoublePFTau25_*_*',
        'keep *_hltDoublePFTauTightIso45Track5_*_*',
        'keep *_hltDoublePFTauTightIso45Track_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHitAll_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*',
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorLumiPixels_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices3D_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*',
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*',
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFullIterativeTrackingMergedForRefPP_*_*',
        'keep *_hltGmtStage2Digis_*_*',
        'keep *_hltGoodOnlinePVs_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHICaloJetCorrected_*_*',
        'keep *_hltHICaloJetIDPassed_*_*',
        'keep *_hltHIGoodLooseTracks_*_*',
        'keep *_hltHIPixel3PrimTracks_*_*',
        'keep *_hltHISelectedVertex_*_*',
        'keep *_hltHISiPixelClusters_*_*',
        'keep *_hltHITIPTCorrectorHB_*_*',
        'keep *_hltHITIPTCorrectorHE_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltHiIslandSuperClustersHI_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter1Merged_*_*',
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2HighPtTkMuMerged_*_*',
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2IterL3FromL1MuonMerged_*_*',
        'keep *_hltIter2IterL3MuonMerged_*_*',
        'keep *_hltIter2MergedForBTag_*_*',
        'keep *_hltIter2MergedForElectrons_*_*',
        'keep *_hltIter2Merged_*_*',
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter3Merged_*_*',
        'keep *_hltIter4Merged_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*',
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*',
        'keep *_hltL1IsoElectronTrackIsol_*_*',
        'keep *_hltL1NonIsoElectronTrackIsol_*_*',
        'keep *_hltL1SeededRecoEcalCandidate_*_*',
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*',
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*',
        'keep *_hltL1sL1EG18er_*_*',
        'keep *_hltL1sL1ETM36ORETM40_*_*',
        'keep *_hltL1sL1Jet52ETM30_*_*',
        'keep *_hltL1sL1SingleEG12_*_*',
        'keep *_hltL1sL1SingleEG15_*_*',
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltL1sL1SingleMu10_*_*',
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*',
        'keep *_hltL1sMu16Eta2p1_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonCandidates_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3SecondaryVertexTagInfos_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*',
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*',
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*',
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*',
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltOnlinePrimaryVertices_*_*',
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*',
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau15TrackLooseIso_*_*',
        'keep *_hltPFTau15Track_*_*',
        'keep *_hltPFTau15_*_*',
        'keep *_hltPFTau20IsoMuVertex_*_*',
        'keep *_hltPFTau20TrackLooseIso_*_*',
        'keep *_hltPFTau20Track_*_*',
        'keep *_hltPFTau20_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltPFTau25TrackPt5_*_*',
        'keep *_hltPFTau25_*_*',
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*',
        'keep *_hltPFTau35TrackPt20LooseIso_*_*',
        'keep *_hltPFTau35TrackPt20_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPFTauEleVertex20_*_*',
        'keep *_hltPFTauJetTracksAssociator_*_*',
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*',
        'keep *_hltPFTauMediumIso20Track_*_*',
        'keep *_hltPFTauMediumIso20_*_*',
        'keep *_hltPFTauMediumIso35Track_*_*',
        'keep *_hltPFTauMediumIso35_*_*',
        'keep *_hltPFTauTagInfo_*_*',
        'keep *_hltPFTauTightIso20TrackTightIso_*_*',
        'keep *_hltPFTauTightIso20Track_*_*',
        'keep *_hltPFTauTightIso20_*_*',
        'keep *_hltPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltPixelMatch3HitElectronsActivity_*_*',
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchElectronsActivity_*_*',
        'keep *_hltPixelMatchElectronsL1Iso_*_*',
        'keep *_hltPixelMatchElectronsL1NonIso_*_*',
        'keep *_hltPixelMatchElectronsL1Seeded_*_*',
        'keep *_hltPixelTracksElectrons_*_*',
        'keep *_hltPixelTracksMerged_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices3DbbPhi_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelCluster_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltSingleMu15L3Filtered15_*_*',
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*',
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTowerMakerForMuons_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep LumiScalerss_hltScalersRawToDigi_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3MuonsOIHit_*_*',
        'keep recoTracks_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3Muons_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWMINIAODEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJets_*_*',
        'drop recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
    )
)

process.RAWMINIAODSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(4),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep *_slimmedPhotons_*_*',
        'keep *_slimmedOOTPhotons_*_*',
        'keep *_slimmedElectrons_*_*',
        'keep *_slimmedMuons_*_*',
        'keep *_slimmedTaus_*_*',
        'keep *_slimmedTausBoosted_*_*',
        'keep *_slimmedCaloJets_*_*',
        'keep *_slimmedJets_*_*',
        'drop recoBaseTagInfosOwned_slimmedJets_*_*',
        'keep *_slimmedJetsAK8_*_*',
        'drop recoBaseTagInfosOwned_slimmedJetsAK8_*_*',
        'keep *_slimmedJetsPuppi_*_*',
        'keep *_slimmedMETs_*_*',
        'keep *_slimmedMETsNoHF_*_*',
        'keep *_slimmedMETsPuppi_*_*',
        'keep *_slimmedSecondaryVertices_*_*',
        'keep *_slimmedLambdaVertices_*_*',
        'keep *_slimmedKshortVertices_*_*',
        'keep *_slimmedJetsAK8PFPuppiSoftDropPacked_SubJets_*',
        'keep recoPhotonCores_reducedEgamma_*_*',
        'keep recoGsfElectronCores_reducedEgamma_*_*',
        'keep recoConversions_reducedEgamma_*_*',
        'keep recoSuperClusters_reducedEgamma_*_*',
        'keep recoCaloClusters_reducedEgamma_*_*',
        'keep EcalRecHitsSorted_reducedEgamma_*_*',
        'keep recoGsfTracks_reducedEgamma_*_*',
        'keep HBHERecHitsSorted_reducedEgamma_*_*',
        'drop *_*_caloTowers_*',
        'drop *_*_pfCandidates_*',
        'drop *_*_genJets_*',
        'keep *_offlineBeamSpot_*_*',
        'keep *_offlineSlimmedPrimaryVertices_*_*',
        'keep patPackedCandidates_packedPFCandidates_*_*',
        'keep *_isolatedTracks_*_*',
        'keep *_oniaPhotonCandidates_*_*',
        'keep *_bunchSpacingProducer_*_*',
        'keep double_fixedGridRhoAll__*',
        'keep double_fixedGridRhoFastjetAll__*',
        'keep double_fixedGridRhoFastjetAllCalo__*',
        'keep double_fixedGridRhoFastjetCentral_*_*',
        'keep double_fixedGridRhoFastjetCentralCalo__*',
        'keep double_fixedGridRhoFastjetCentralChargedPileUp__*',
        'keep double_fixedGridRhoFastjetCentralNeutral__*',
        'keep *_slimmedPatTrigger_*_*',
        'keep patPackedTriggerPrescales_patTrigger__*',
        'keep patPackedTriggerPrescales_patTrigger_l1max_*',
        'keep patPackedTriggerPrescales_patTrigger_l1min_*',
        'keep *_l1extraParticles_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_gtStage2Digis__*',
        'keep *_gmtStage2Digis_Muon_*',
        'keep *_caloStage2Digis_Jet_*',
        'keep *_caloStage2Digis_Tau_*',
        'keep *_caloStage2Digis_EGamma_*',
        'keep *_caloStage2Digis_EtSum_*',
        'keep *_TriggerResults_*_HLT',
        'keep *_TriggerResults_*_*',
        'keep patPackedCandidates_lostTracks_*_*',
        'keep HcalNoiseSummary_hcalnoise__*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep patPackedGenParticles_packedGenParticles_*_*',
        'keep recoGenParticles_prunedGenParticles_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_*_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep recoGenParticles_genPUProtons_*_*',
        'keep *_slimmedGenJetsFlavourInfos_*_*',
        'keep *_slimmedGenJets__*',
        'keep *_slimmedGenJetsAK8__*',
        'keep *_slimmedGenJetsAK8SoftDropSubJets__*',
        'keep *_genMetTrue_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep GenRunInfoProduct_*_*_*',
        'keep *_genParticles_xyz0_*',
        'keep *_genParticles_t0_*',
        'keep PileupSummaryInfos_slimmedAddPileupInfo_*_*',
        'keep L1GtTriggerMenuLite_l1GtTriggerMenuLite__*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
    )
)

process.RAWRECODEBUGHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilter_*_*',
        'keep *_hltAlCaPhiSymStream_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilter_*_*',
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCSVJetTagSingleTopEle27_*_*',
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*',
        'keep *_hltCaloJetCorrectedRegional_*_*',
        'keep *_hltCaloJetCorrected_*_*',
        'keep *_hltCaloJetL1FastJetCorrected_*_*',
        'keep *_hltCaloStage2Digis_*_*',
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*',
        'keep *_hltConvPFTausTightIso_*_*',
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*',
        'keep *_hltConvPFTausTrackFinding_*_*',
        'keep *_hltConvPFTaus_*_*',
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltDoublePFTau25TrackPt5_*_*',
        'keep *_hltDoublePFTau25_*_*',
        'keep *_hltDoublePFTauTightIso45Track5_*_*',
        'keep *_hltDoublePFTauTightIso45Track_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHitAll_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*',
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorLumiPixels_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices3D_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*',
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*',
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFullIterativeTrackingMergedForRefPP_*_*',
        'keep *_hltGmtStage2Digis_*_*',
        'keep *_hltGoodOnlinePVs_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHICaloJetCorrected_*_*',
        'keep *_hltHICaloJetIDPassed_*_*',
        'keep *_hltHIGoodLooseTracks_*_*',
        'keep *_hltHIPixel3PrimTracks_*_*',
        'keep *_hltHISelectedVertex_*_*',
        'keep *_hltHISiPixelClusters_*_*',
        'keep *_hltHITIPTCorrectorHB_*_*',
        'keep *_hltHITIPTCorrectorHE_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltHiIslandSuperClustersHI_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter1Merged_*_*',
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2HighPtTkMuMerged_*_*',
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2IterL3FromL1MuonMerged_*_*',
        'keep *_hltIter2IterL3MuonMerged_*_*',
        'keep *_hltIter2MergedForBTag_*_*',
        'keep *_hltIter2MergedForElectrons_*_*',
        'keep *_hltIter2Merged_*_*',
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter3Merged_*_*',
        'keep *_hltIter4Merged_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*',
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*',
        'keep *_hltL1IsoElectronTrackIsol_*_*',
        'keep *_hltL1NonIsoElectronTrackIsol_*_*',
        'keep *_hltL1SeededRecoEcalCandidate_*_*',
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*',
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*',
        'keep *_hltL1sL1EG18er_*_*',
        'keep *_hltL1sL1ETM36ORETM40_*_*',
        'keep *_hltL1sL1Jet52ETM30_*_*',
        'keep *_hltL1sL1SingleEG12_*_*',
        'keep *_hltL1sL1SingleEG15_*_*',
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltL1sL1SingleMu10_*_*',
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*',
        'keep *_hltL1sMu16Eta2p1_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonCandidates_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3SecondaryVertexTagInfos_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*',
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*',
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*',
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*',
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltOnlinePrimaryVertices_*_*',
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*',
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau15TrackLooseIso_*_*',
        'keep *_hltPFTau15Track_*_*',
        'keep *_hltPFTau15_*_*',
        'keep *_hltPFTau20IsoMuVertex_*_*',
        'keep *_hltPFTau20TrackLooseIso_*_*',
        'keep *_hltPFTau20Track_*_*',
        'keep *_hltPFTau20_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltPFTau25TrackPt5_*_*',
        'keep *_hltPFTau25_*_*',
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*',
        'keep *_hltPFTau35TrackPt20LooseIso_*_*',
        'keep *_hltPFTau35TrackPt20_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPFTauEleVertex20_*_*',
        'keep *_hltPFTauJetTracksAssociator_*_*',
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*',
        'keep *_hltPFTauMediumIso20Track_*_*',
        'keep *_hltPFTauMediumIso20_*_*',
        'keep *_hltPFTauMediumIso35Track_*_*',
        'keep *_hltPFTauMediumIso35_*_*',
        'keep *_hltPFTauTagInfo_*_*',
        'keep *_hltPFTauTightIso20TrackTightIso_*_*',
        'keep *_hltPFTauTightIso20Track_*_*',
        'keep *_hltPFTauTightIso20_*_*',
        'keep *_hltPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltPixelMatch3HitElectronsActivity_*_*',
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchElectronsActivity_*_*',
        'keep *_hltPixelMatchElectronsL1Iso_*_*',
        'keep *_hltPixelMatchElectronsL1NonIso_*_*',
        'keep *_hltPixelMatchElectronsL1Seeded_*_*',
        'keep *_hltPixelTracksElectrons_*_*',
        'keep *_hltPixelTracksMerged_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices3DbbPhi_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelCluster_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltSingleMu15L3Filtered15_*_*',
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*',
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTowerMakerForMuons_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep LumiScalerss_hltScalersRawToDigi_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3MuonsOIHit_*_*',
        'keep recoTracks_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3Muons_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWRECOEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWRECOSIMHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilter_*_*',
        'keep *_hltAlCaPhiSymStream_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilter_*_*',
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCSVJetTagSingleTopEle27_*_*',
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*',
        'keep *_hltCaloJetCorrectedRegional_*_*',
        'keep *_hltCaloJetCorrected_*_*',
        'keep *_hltCaloJetL1FastJetCorrected_*_*',
        'keep *_hltCaloStage2Digis_*_*',
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*',
        'keep *_hltConvPFTausTightIso_*_*',
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*',
        'keep *_hltConvPFTausTrackFinding_*_*',
        'keep *_hltConvPFTaus_*_*',
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltDoublePFTau25TrackPt5_*_*',
        'keep *_hltDoublePFTau25_*_*',
        'keep *_hltDoublePFTauTightIso45Track5_*_*',
        'keep *_hltDoublePFTauTightIso45Track_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHitAll_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*',
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorLumiPixels_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices3D_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*',
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*',
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFullIterativeTrackingMergedForRefPP_*_*',
        'keep *_hltGmtStage2Digis_*_*',
        'keep *_hltGoodOnlinePVs_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHICaloJetCorrected_*_*',
        'keep *_hltHICaloJetIDPassed_*_*',
        'keep *_hltHIGoodLooseTracks_*_*',
        'keep *_hltHIPixel3PrimTracks_*_*',
        'keep *_hltHISelectedVertex_*_*',
        'keep *_hltHISiPixelClusters_*_*',
        'keep *_hltHITIPTCorrectorHB_*_*',
        'keep *_hltHITIPTCorrectorHE_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltHiIslandSuperClustersHI_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter1Merged_*_*',
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2HighPtTkMuMerged_*_*',
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2IterL3FromL1MuonMerged_*_*',
        'keep *_hltIter2IterL3MuonMerged_*_*',
        'keep *_hltIter2MergedForBTag_*_*',
        'keep *_hltIter2MergedForElectrons_*_*',
        'keep *_hltIter2Merged_*_*',
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter3Merged_*_*',
        'keep *_hltIter4Merged_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*',
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*',
        'keep *_hltL1IsoElectronTrackIsol_*_*',
        'keep *_hltL1NonIsoElectronTrackIsol_*_*',
        'keep *_hltL1SeededRecoEcalCandidate_*_*',
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*',
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*',
        'keep *_hltL1sL1EG18er_*_*',
        'keep *_hltL1sL1ETM36ORETM40_*_*',
        'keep *_hltL1sL1Jet52ETM30_*_*',
        'keep *_hltL1sL1SingleEG12_*_*',
        'keep *_hltL1sL1SingleEG15_*_*',
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltL1sL1SingleMu10_*_*',
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*',
        'keep *_hltL1sMu16Eta2p1_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonCandidates_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3SecondaryVertexTagInfos_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*',
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*',
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*',
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*',
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltOnlinePrimaryVertices_*_*',
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*',
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau15TrackLooseIso_*_*',
        'keep *_hltPFTau15Track_*_*',
        'keep *_hltPFTau15_*_*',
        'keep *_hltPFTau20IsoMuVertex_*_*',
        'keep *_hltPFTau20TrackLooseIso_*_*',
        'keep *_hltPFTau20Track_*_*',
        'keep *_hltPFTau20_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltPFTau25TrackPt5_*_*',
        'keep *_hltPFTau25_*_*',
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*',
        'keep *_hltPFTau35TrackPt20LooseIso_*_*',
        'keep *_hltPFTau35TrackPt20_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPFTauEleVertex20_*_*',
        'keep *_hltPFTauJetTracksAssociator_*_*',
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*',
        'keep *_hltPFTauMediumIso20Track_*_*',
        'keep *_hltPFTauMediumIso20_*_*',
        'keep *_hltPFTauMediumIso35Track_*_*',
        'keep *_hltPFTauMediumIso35_*_*',
        'keep *_hltPFTauTagInfo_*_*',
        'keep *_hltPFTauTightIso20TrackTightIso_*_*',
        'keep *_hltPFTauTightIso20Track_*_*',
        'keep *_hltPFTauTightIso20_*_*',
        'keep *_hltPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltPixelMatch3HitElectronsActivity_*_*',
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchElectronsActivity_*_*',
        'keep *_hltPixelMatchElectronsL1Iso_*_*',
        'keep *_hltPixelMatchElectronsL1NonIso_*_*',
        'keep *_hltPixelMatchElectronsL1Seeded_*_*',
        'keep *_hltPixelTracksElectrons_*_*',
        'keep *_hltPixelTracksMerged_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices3DbbPhi_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelCluster_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltSingleMu15L3Filtered15_*_*',
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*',
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTowerMakerForMuons_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep LumiScalerss_hltScalersRawToDigi_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3MuonsOIHit_*_*',
        'keep recoTracks_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3Muons_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWSIMEventContent = cms.PSet(
    compressionAlgorithm = cms.untracked.string('LZMA'),
    compressionLevel = cms.untracked.int32(1),
    eventAutoFlushCompressedSize = cms.untracked.int32(20971520),
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RAWSIMHLTEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'drop *_hlt*_*_*',
        'keep *_hltAK4CaloJetsCorrectedIDPassed_*_*',
        'keep *_hltAK4CaloJetsIDPassed_*_*',
        'keep *_hltAK4CaloJets_*_*',
        'keep *_hltAK4PFJetsCorrected_*_*',
        'keep *_hltAK4PFJetsForTaus_*_*',
        'keep *_hltAK4PFJets_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEBRechitsToDigis_*_*',
        'keep *_hltAlCaEtaEERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaEtaEERechitsToDigis_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEBonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegionalLowPU_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonlyRegional_etaEcalRecHitsES_*',
        'keep *_hltAlCaEtaRecHitsFilterEEonly_*_*',
        'keep *_hltAlCaEtaRecHitsFilter_*_*',
        'keep *_hltAlCaPhiSymStream_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EBRechitsToDigis_*_*',
        'keep *_hltAlCaPi0EERechitsToDigisLowPU_*_*',
        'keep *_hltAlCaPi0EERechitsToDigis_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEBonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegionalLowPU_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonlyRegional_pi0EcalRecHitsES_*',
        'keep *_hltAlCaPi0RecHitsFilterEEonly_*_*',
        'keep *_hltAlCaPi0RecHitsFilter_*_*',
        'keep *_hltBLifetimeL25AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL25TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3AssociatorbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3BJetTagsbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeL3TagInfosbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet110Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet20Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet40Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5L3FilterByDR_*_*',
        'keep *_hltBSoftMuonDiJet70Mu5SelL3BJetTagsByDR_*_*',
        'keep *_hltBSoftMuonMu5L3_*_*',
        'keep *_hltCSVJetTagSingleTopEle27_*_*',
        'keep *_hltCSVJetTagSingleTopIsoMu24_*_*',
        'keep *_hltCaloJetCorrectedRegional_*_*',
        'keep *_hltCaloJetCorrected_*_*',
        'keep *_hltCaloJetL1FastJetCorrected_*_*',
        'keep *_hltCaloStage2Digis_*_*',
        'keep *_hltCleanedCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCleanedHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltConvPFTausTightIsoTrackFindingIsolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackFinding_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5Isolation_*_*',
        'keep *_hltConvPFTausTightIsoTrackPt5_*_*',
        'keep *_hltConvPFTausTightIso_*_*',
        'keep *_hltConvPFTausTrackFindingLooseIsolation_*_*',
        'keep *_hltConvPFTausTrackFinding_*_*',
        'keep *_hltConvPFTaus_*_*',
        'keep *_hltCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltCsc2DRecHits_*_*',
        'keep *_hltCscSegments_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfosCalo_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsInfos_*_*',
        'keep *_hltDeepCombinedSecondaryVertexBJetTagsPF_*_*',
        'keep *_hltDisplacedhltIter4PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4L1HLTMatched_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltDoublePFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltDoublePFTau25TrackPt5_*_*',
        'keep *_hltDoublePFTau25_*_*',
        'keep *_hltDoublePFTauTightIso45Track5_*_*',
        'keep *_hltDoublePFTauTightIso45Track_*_*',
        'keep *_hltDt4DSegments_*_*',
        'keep *_hltEcalPhiSymFilter_*_*',
        'keep *_hltEcalRecHitAll_*_*',
        'keep *_hltEcalRecHit_*_*',
        'keep *_hltEgammaCandidates_*_*',
        'keep *_hltEgammaGsfElectrons_*_*',
        'keep *_hltEgammaGsfTracks_*_*',
        'keep *_hltEle20CaloIdVTCaloIsoTTrkIdTTrkIsoTTrackIsoFilterL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltEle20CaloIdVTTrkIdTDphiFilter_*_*',
        'keep *_hltEle27WP85PixelMatchElectronsL1Seeded_*_*',
        'keep *_hltElectronsVertex_*_*',
        'keep *_hltFEDSelectorLumiPixels_*_*',
        'keep *_hltFastPVPixelTracksMerger_*_*',
        'keep *_hltFastPVPixelTracksRecover_*_*',
        'keep *_hltFastPVPixelTracks_*_*',
        'keep *_hltFastPVPixelVertices3D_*_*',
        'keep *_hltFastPVPixelVertices_*_*',
        'keep *_hltFastPixelBLifetimeL3TagInfos_*_*',
        'keep *_hltFastPrimaryVertex_*_*',
        'keep *_hltFilterDoubleIsoPFTau45Trk5LeadTrack5IsolationL1HLTMatched_*_*',
        'keep *_hltFilterL2EtCutDoublePFIsoTau45Trk5_*_*',
        'keep *_hltFilterL2EtCutSingleIsoPFTau35Trk20MET70_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20LeadTrackPt20_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET60LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFilterSingleIsoPFTau35Trk20MET70LeadTrack20IsolationL1HLTMatched_*_*',
        'keep *_hltFullIterativeTrackingMergedForRefPP_*_*',
        'keep *_hltGmtStage2Digis_*_*',
        'keep *_hltGoodOnlinePVs_*_*',
        'keep *_hltGtStage2Digis_*_*',
        'keep *_hltHICaloJetCorrected_*_*',
        'keep *_hltHICaloJetIDPassed_*_*',
        'keep *_hltHIGoodLooseTracks_*_*',
        'keep *_hltHIPixel3PrimTracks_*_*',
        'keep *_hltHISelectedVertex_*_*',
        'keep *_hltHISiPixelClusters_*_*',
        'keep *_hltHITIPTCorrectorHB_*_*',
        'keep *_hltHITIPTCorrectorHE_*_*',
        'keep *_hltHbhereco_*_*',
        'keep *_hltHfreco_*_*',
        'keep *_hltHiCorrectedIslandBarrelSuperClustersHI_*_*',
        'keep *_hltHiCorrectedIslandEndcapSuperClustersHI_*_*',
        'keep *_hltHiIslandSuperClustersHI_*_*',
        'keep *_hltHoreco_*_*',
        'keep *_hltIsolPixelTrackProdHB_*_*',
        'keep *_hltIsolPixelTrackProdHE_*_*',
        'keep *_hltIter0ElectronsTrackSelectionHighPurity_*_*',
        'keep *_hltIter0HighPtTkMuPixelTracks_*_*',
        'keep *_hltIter0HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter0PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter1Merged_*_*',
        'keep *_hltIter1PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter2HighPtTkMuMerged_*_*',
        'keep *_hltIter2HighPtTkMuTrackSelectionHighPurity_*_*',
        'keep *_hltIter2IterL3FromL1MuonMerged_*_*',
        'keep *_hltIter2IterL3MuonMerged_*_*',
        'keep *_hltIter2MergedForBTag_*_*',
        'keep *_hltIter2MergedForElectrons_*_*',
        'keep *_hltIter2Merged_*_*',
        'keep *_hltIter2PFlowTrackSelectionHighPurity_*_*',
        'keep *_hltIter3Merged_*_*',
        'keep *_hltIter4Merged_*_*',
        'keep *_hltIterL3GlbMuon_*_*',
        'keep *_hltIterL3MuonMerged_*_*',
        'keep *_hltIterL3MuonsNoID_*_*',
        'keep *_hltIterL3Muons_*_*',
        'keep *_hltIterL3OIMuonTrackSelectionHighPurity_*_*',
        'keep *_hltIterativeCone5PileupSubtractionCaloJets_*_*',
        'keep *_hltL1HLTSingleIsoPFTau35Trk20Met60JetsMatch_*_*',
        'keep *_hltL1IsoElectronTrackIsol_*_*',
        'keep *_hltL1NonIsoElectronTrackIsol_*_*',
        'keep *_hltL1SeededRecoEcalCandidate_*_*',
        'keep *_hltL1sDoubleTauJet44Eta2p17orDoubleJet64Central_*_*',
        'keep *_hltL1sDoubleTauJet44erorDoubleJetC64_*_*',
        'keep *_hltL1sL1EG18er_*_*',
        'keep *_hltL1sL1ETM36ORETM40_*_*',
        'keep *_hltL1sL1Jet52ETM30_*_*',
        'keep *_hltL1sL1SingleEG12_*_*',
        'keep *_hltL1sL1SingleEG15_*_*',
        'keep *_hltL1sL1SingleEG18orL1SingleEG20_*_*',
        'keep *_hltL1sL1SingleMu10_*_*',
        'keep *_hltL1sL1SingleMu14Eta2p1_*_*',
        'keep *_hltL1sMu16Eta2p1_*_*',
        'keep *_hltL2MuonCandidatesNoVtx_*_*',
        'keep *_hltL2MuonCandidates_*_*',
        'keep *_hltL2MuonSeeds_*_*',
        'keep *_hltL2Muons_*_*',
        'keep *_hltL2TauJets_*_*',
        'keep *_hltL3MuonCandidates_*_*',
        'keep *_hltL3MuonsIOHit_*_*',
        'keep *_hltL3MuonsLinksCombination_*_*',
        'keep *_hltL3MuonsOIHit_*_*',
        'keep *_hltL3MuonsOIState_*_*',
        'keep *_hltL3Muons_*_*',
        'keep *_hltL3NoFiltersNoVtxMuonCandidates_*_*',
        'keep *_hltL3NoFiltersNoVtxMuons_*_*',
        'keep *_hltL3SecondaryVertexTagInfos_*_*',
        'keep *_hltL3TkFromL2OICombination_*_*',
        'keep *_hltL3TkTracksFromL2IOHit_*_*',
        'keep *_hltL3TkTracksFromL2OIHit_*_*',
        'keep *_hltL3TkTracksFromL2OIState_*_*',
        'keep *_hltL3TkTracksFromL2_*_*',
        'keep *_hltL3TrackCandidateFromL2IOHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIHit_*_*',
        'keep *_hltL3TrackCandidateFromL2OIState_*_*',
        'keep *_hltL3TrajSeedIOHit_*_*',
        'keep *_hltL3TrajSeedOIHit_*_*',
        'keep *_hltL3TrajSeedOIState_*_*',
        'keep *_hltL3TrajectorySeed_*_*',
        'keep *_hltL3crIsoL1sMu16Eta2p1L1f0L2f16QL3f18QL3crIsoRhoFiltered0p15_*_*',
        'keep *_hltLeadingCentralJets30SingleTopEle27_*_*',
        'keep *_hltLeadingCentralJets30SingleTopIsoMu24_*_*',
        'keep *_hltMergedTracks_*_*',
        'keep *_hltMet_*_*',
        'keep *_hltMu8Ele17CaloIdTCaloIsoVLPixelMatchFilter_*_*',
        'keep *_hltMuTrackJpsiCtfTrackCands_*_*',
        'keep *_hltMuTrackJpsiPixelTrackCands_*_*',
        'keep *_hltMuonCSCDigis_*_*',
        'keep *_hltMuonCSCDigis_MuonCSCStripDigi_*',
        'keep *_hltMuonCSCDigis_MuonCSCWireDigi_*',
        'keep *_hltMuonDTDigis_*_*',
        'keep *_hltMuonRPCDigis_*_*',
        'keep *_hltOnlineBeamSpot_*_*',
        'keep *_hltOnlinePrimaryVertices_*_*',
        'keep *_hltOverlapFilterEle20LooseIsoPFTau20OldVersion_*_*',
        'keep *_hltOverlapFilterIsoEle20MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15IsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15MediumIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu15TightIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18LooseIsoPFTau20_*_*',
        'keep *_hltOverlapFilterIsoMu18PFTau25TrackPt5Prong4_*_*',
        'keep *_hltPFJetForBtag_*_*',
        'keep *_hltPFMuonMerging_*_*',
        'keep *_hltPFTau15TrackLooseIso_*_*',
        'keep *_hltPFTau15Track_*_*',
        'keep *_hltPFTau15_*_*',
        'keep *_hltPFTau20IsoMuVertex_*_*',
        'keep *_hltPFTau20TrackLooseIso_*_*',
        'keep *_hltPFTau20Track_*_*',
        'keep *_hltPFTau20_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4IsoMuVertex_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolationProng4_*_*',
        'keep *_hltPFTau25TrackPt5MediumIsolation_*_*',
        'keep *_hltPFTau25TrackPt5_*_*',
        'keep *_hltPFTau25_*_*',
        'keep *_hltPFTau35TrackPt20LooseIsoProng2_*_*',
        'keep *_hltPFTau35TrackPt20LooseIso_*_*',
        'keep *_hltPFTau35TrackPt20_*_*',
        'keep *_hltPFTau35Track_*_*',
        'keep *_hltPFTau35_*_*',
        'keep *_hltPFTauEleVertex20_*_*',
        'keep *_hltPFTauJetTracksAssociator_*_*',
        'keep *_hltPFTauMediumIso20TrackMediumIso_*_*',
        'keep *_hltPFTauMediumIso20Track_*_*',
        'keep *_hltPFTauMediumIso20_*_*',
        'keep *_hltPFTauMediumIso35Track_*_*',
        'keep *_hltPFTauMediumIso35_*_*',
        'keep *_hltPFTauTagInfo_*_*',
        'keep *_hltPFTauTightIso20TrackTightIso_*_*',
        'keep *_hltPFTauTightIso20Track_*_*',
        'keep *_hltPFTauTightIso20_*_*',
        'keep *_hltPFlowTrackSelectionHighPurity_*_*',
        'keep *_hltParticleFlowForTaus_*_*',
        'keep *_hltParticleFlow_*_*',
        'keep *_hltPixelMatch3HitElectronsActivity_*_*',
        'keep *_hltPixelMatch3HitElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchCleanElectronsL1Seeded_*_*',
        'keep *_hltPixelMatchElectronsActivity_*_*',
        'keep *_hltPixelMatchElectronsL1Iso_*_*',
        'keep *_hltPixelMatchElectronsL1NonIso_*_*',
        'keep *_hltPixelMatchElectronsL1Seeded_*_*',
        'keep *_hltPixelTracksElectrons_*_*',
        'keep *_hltPixelTracksMerged_*_*',
        'keep *_hltPixelTracks_*_*',
        'keep *_hltPixelVertices3DbbPhi_*_*',
        'keep *_hltPixelVertices_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC4_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidateSC5_*_*',
        'keep *_hltRecoEcalSuperClusterActivityCandidate_*_*',
        'keep *_hltRpcRecHits_*_*',
        'keep *_hltSelector4CentralJetsL1FastJet_*_*',
        'keep *_hltSelector8CentralJetsL1FastJet_*_*',
        'keep *_hltSelectorJets20L1FastJet_*_*',
        'keep *_hltSiPixelCluster_*_*',
        'keep *_hltSiPixelClustersCache_*_*',
        'keep *_hltSiPixelClusters_*_*',
        'keep *_hltSiStripClusters_*_*',
        'keep *_hltSiStripRawToClustersFacility_*_*',
        'keep *_hltSingleMu15L3Filtered15_*_*',
        'keep *_hltSingleMuIsoL1s14L3IsoFiltered15eta2p1_*_*',
        'keep *_hltSingleMuIsoL3IsoFiltered15_*_*',
        'keep *_hltTowerMakerForAll_*_*',
        'keep *_hltTowerMakerForMuons_*_*',
        'keep *_hltTriggerSummaryAOD_*_*',
        'keep *_hltTriggerSummaryRAW_*_*',
        'keep *_hltTrimmedPixelVertices_*_*',
        'keep *_hltVerticesL3_*_*',
        'keep *_hltVerticesPFFilter_*_*',
        'keep *_hltVerticesPFSelector_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep L2MuonTrajectorySeeds_hltL2MuonSeeds_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajSeedOIHit_*_*',
        'keep L3MuonTrajectorySeeds_hltHIL3TrajectorySeed_*_*',
        'keep L3MuonTrajectorySeeds_hltL3TrajSeedOIState_*_*',
        'keep LumiScalerss_hltScalersRawToDigi_*_*',
        'keep SiPixelClusteredmNewDetSetVector_hltSiPixelClusters_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIHit_*_*',
        'keep TrackCandidates_hltHIL3TrackCandidateFromL2OIState_*_*',
        'keep TrackingRecHitsOwned_hltL3Muons_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep recoCaloJets_*_*_*',
        'keep recoCaloMETs_*_*_*',
        'keep recoCaloMETs_hltMet_*_*',
        'keep recoCompositeCandidates_*_*_*',
        'keep recoElectrons_*_*_*',
        'keep recoIsolatedPixelTrackCandidates_*_*_*',
        'keep recoMETs_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoPFTaus_*_*_*',
        'keep recoRecoChargedCandidates_*_*_*',
        'keep recoRecoChargedCandidates_hltHIL3MuonCandidates_*_*',
        'keep recoRecoChargedCandidates_hltL2MuonCandidates_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1IsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsoHLTClusterShape_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonEcalIsol_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalForHE_*_*',
        'keep recoRecoEcalCandidatesToValuefloatAssociation_hltL1NonIsolatedPhotonHcalIsol_*_*',
        'keep recoRecoEcalCandidates_*_*_*',
        'keep recoRecoEcalCandidates_hltL1IsoRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hltL1NonIsoRecoEcalCandidate_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIHit_*_*',
        'keep recoTrackExtras_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3MuonsOIHit_*_*',
        'keep recoTracks_hltHIL3MuonsOIState_*_*',
        'keep recoTracks_hltHIL3Muons_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIHit_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2OIState_*_*',
        'keep recoTracks_hltHIL3TkTracksFromL2_*_*',
        'keep triggerTriggerEventWithRefs_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep triggerTriggerFilterObjectWithRefs_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_hybridRawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECODEBUGEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*',
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_akPu3CaloJets_*_*',
        'keep *_akPu4CaloJets_*_*',
        'keep *_akPu5CaloJets_*_*',
        'keep *_iterativeConePu5CaloJets_*_*',
        'keep *_akPu3PFJets_*_*',
        'keep *_akPu4PFJets_*_*',
        'keep *_akPu5PFJets_*_*',
        'keep *_akCs3PFJets_*_*',
        'keep *_akCs4PFJets_*_*',
        'keep *_kt4PFJetsForRho_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_PFTowers_*_*',
        'keep *_hiFJRhoProducer_*_*',
        'keep recoSuperCluster_cleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedEndcapSuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_correctedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandEndcapSuperClusters_*_*',
        'keep recoSuperCluster_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_hybridSuperClusters_*_*',
        'keep recoSuperCluster_islandSuperClusters_*_*',
        'keep recoSuperCluster_mergedSuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersCleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersUncleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_particleFlowEGamma_*_*',
        'keep recoSuperCluster_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperCluster_uncleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_uncleanedOnlyMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_cleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoCaloClusters_uncleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_islandBasicClusters_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersCleaned_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersUncleaned_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep EcalRecHitsSorted_ecalRecHit_*_*',
        'keep EcalRecHitsSorted_ecalPreshowerRecHit_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep floatedmValueMap_hiDetachedTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiDetachedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiGeneralTracks_MVAVals_*',
        'keep floatedmValueMap_hiInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiPixelPairStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuMixedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelLessStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelPairStepSelector_MVAVals_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoGsfElectrons_ecalDrivenGsfElectrons_*_*',
        'keep recoGsfElectrons_electronsWithPresel_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoGsfElectrons_mvaElectrons_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECOEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_akPu3CaloJets_*_*',
        'keep *_akPu4CaloJets_*_*',
        'keep *_akPu5CaloJets_*_*',
        'keep *_iterativeConePu5CaloJets_*_*',
        'keep *_akPu3PFJets_*_*',
        'keep *_akPu4PFJets_*_*',
        'keep *_akPu5PFJets_*_*',
        'keep *_akCs3PFJets_*_*',
        'keep *_akCs4PFJets_*_*',
        'keep *_kt4PFJetsForRho_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_PFTowers_*_*',
        'keep *_hiFJRhoProducer_*_*',
        'keep recoSuperCluster_cleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedEndcapSuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_correctedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandEndcapSuperClusters_*_*',
        'keep recoSuperCluster_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_hybridSuperClusters_*_*',
        'keep recoSuperCluster_islandSuperClusters_*_*',
        'keep recoSuperCluster_mergedSuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersCleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersUncleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_particleFlowEGamma_*_*',
        'keep recoSuperCluster_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperCluster_uncleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_uncleanedOnlyMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_cleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoCaloClusters_uncleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_islandBasicClusters_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersCleaned_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersUncleaned_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep EcalRecHitsSorted_ecalRecHit_*_*',
        'keep EcalRecHitsSorted_ecalPreshowerRecHit_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep floatedmValueMap_hiDetachedTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiDetachedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiGeneralTracks_MVAVals_*',
        'keep floatedmValueMap_hiInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiPixelPairStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuMixedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelLessStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelPairStepSelector_MVAVals_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoGsfElectrons_ecalDrivenGsfElectrons_*_*',
        'keep recoGsfElectrons_electronsWithPresel_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoGsfElectrons_mvaElectrons_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.RECOSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenMETs_*_*_*',
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_akPu3CaloJets_*_*',
        'keep *_akPu4CaloJets_*_*',
        'keep *_akPu5CaloJets_*_*',
        'keep *_iterativeConePu5CaloJets_*_*',
        'keep *_akPu3PFJets_*_*',
        'keep *_akPu4PFJets_*_*',
        'keep *_akPu5PFJets_*_*',
        'keep *_akCs3PFJets_*_*',
        'keep *_akCs4PFJets_*_*',
        'keep *_kt4PFJetsForRho_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_PFTowers_*_*',
        'keep *_hiFJRhoProducer_*_*',
        'keep recoSuperCluster_cleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedEndcapSuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_correctedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandEndcapSuperClusters_*_*',
        'keep recoSuperCluster_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_hybridSuperClusters_*_*',
        'keep recoSuperCluster_islandSuperClusters_*_*',
        'keep recoSuperCluster_mergedSuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersCleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersUncleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_particleFlowEGamma_*_*',
        'keep recoSuperCluster_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperCluster_uncleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_uncleanedOnlyMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_cleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoCaloClusters_uncleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_islandBasicClusters_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersCleaned_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersUncleaned_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep EcalRecHitsSorted_ecalRecHit_*_*',
        'keep EcalRecHitsSorted_ecalPreshowerRecHit_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep floatedmValueMap_hiDetachedTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiDetachedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiGeneralTracks_MVAVals_*',
        'keep floatedmValueMap_hiInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiPixelPairStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuMixedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelLessStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelPairStepSelector_MVAVals_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoGsfElectrons_ecalDrivenGsfElectrons_*_*',
        'keep recoGsfElectrons_electronsWithPresel_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoGsfElectrons_mvaElectrons_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*',
        'keep CrossingFramePlaybackInfoNew_mix_*_*',
        'keep *_heavyIon_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)

process.REDIGIEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'drop *_randomEngineStateProducer_*_*'
    )
)

process.REGENEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring(
        'keep *',
        'drop *_genParticles_*_*',
        'drop *_genParticlesForJets_*_*',
        'drop *_kt4GenJets_*_*',
        'drop *_kt6GenJets_*_*',
        'drop *_iterativeCone5GenJets_*_*',
        'drop *_ak4GenJets_*_*',
        'drop *_ak7GenJets_*_*',
        'drop *_ak8GenJets_*_*',
        'drop *_ak4GenJetsNoNu_*_*',
        'drop *_ak8GenJetsNoNu_*_*',
        'drop *_genCandidatesForMET_*_*',
        'drop *_genParticlesForMETAllVisible_*_*',
        'drop *_genMetCalo_*_*',
        'drop *_genMetCaloAndNonPrompt_*_*',
        'drop *_genMetTrue_*_*',
        'drop *_genMetIC5GenJs_*_*'
    )
)

process.REPACKRAWEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop FEDRawDataCollection_*_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'drop FEDRawDataCollection_source_*_*',
        'drop FEDRawDataCollection_rawDataCollector_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.REPACKRAWSIMEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *',
        'drop FEDRawDataCollection_*_*_*',
        'keep FEDRawDataCollection_rawDataRepacker_*_*',
        'keep FEDRawDataCollection_virginRawDataRepacker_*_*',
        'keep  FEDRawDataCollection_rawDataCollector_*_*',
        'keep  FEDRawDataCollection_source_*_*',
        'drop *_hlt*_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*',
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*',
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*',
        'keep recoGenMETs_*_*_*',
        'keep FEDRawDataCollection_source_*_*',
        'keep FEDRawDataCollection_rawDataCollector_*_*',
        'keep *_MEtoEDMConverter_*_*',
        'keep *_randomEngineStateProducer_*_*',
        'keep *_logErrorHarvester_*_*',
        'drop FEDRawDataCollection_source_*_*',
        'drop FEDRawDataCollection_rawDataCollector_*_*'
    ),
    splitLevel = cms.untracked.int32(0)
)

process.RESIMEventContent = cms.PSet(
    inputCommands = cms.untracked.vstring(
        'drop *',
        'keep *_randomEngineStateProducer_*_*',
        'keep LHERunInfoProduct_*_*_*',
        'keep LHEEventProduct_*_*_*',
        'keep GenRunInfoProduct_generator_*_*',
        'keep GenLumiInfoHeader_generator_*_*',
        'keep GenLumiInfoProduct_generator_*_*',
        'keep GenEventInfoProduct_generator_*_*',
        'keep edmHepMCProduct_generatorSmeared_*_*',
        'keep GenFilterInfo_*_*_*',
        'keep *_genParticles_*_*'
    )
)

process.RU_ME0 = cms.PSet(
    allowWideSegments = cms.bool(True),
    doCollisions = cms.bool(True),
    maxChi2Additional = cms.double(100.0),
    maxChi2GoodSeg = cms.double(50),
    maxChi2Prune = cms.double(50),
    maxETASeeds = cms.double(0.1),
    maxPhiAdditional = cms.double(0.001096605744),
    maxPhiSeeds = cms.double(0.001096605744),
    maxTOFDiff = cms.double(25),
    minNumberOfHits = cms.uint32(4),
    requireCentralBX = cms.bool(True)
)

process.RU_ME12 = cms.PSet(
    chi2Max = cms.double(100.0),
    chi2Norm_2D_ = cms.double(35),
    chi2_str = cms.double(50.0),
    dPhiIntMax = cms.double(0.003),
    dPhiMax = cms.double(0.004),
    dRIntMax = cms.double(2.0),
    dRMax = cms.double(1.5),
    doCollisions = cms.bool(True),
    minLayersApart = cms.int32(1),
    wideSeg = cms.double(3.0)
)

process.RU_ME13 = cms.PSet(
    chi2Max = cms.double(60.0),
    chi2Norm_2D_ = cms.double(20),
    chi2_str = cms.double(30.0),
    dPhiIntMax = cms.double(0.002),
    dPhiMax = cms.double(0.003),
    dRIntMax = cms.double(2.0),
    dRMax = cms.double(1.5),
    doCollisions = cms.bool(True),
    minLayersApart = cms.int32(1),
    wideSeg = cms.double(3.0)
)

process.RU_ME1A = cms.PSet(
    chi2Max = cms.double(100.0),
    chi2Norm_2D_ = cms.double(35),
    chi2_str = cms.double(50.0),
    dPhiIntMax = cms.double(0.005),
    dPhiMax = cms.double(0.006),
    dRIntMax = cms.double(2.0),
    dRMax = cms.double(1.5),
    doCollisions = cms.bool(True),
    minLayersApart = cms.int32(1),
    wideSeg = cms.double(3.0)
)

process.RU_ME1B = cms.PSet(
    chi2Max = cms.double(100.0),
    chi2Norm_2D_ = cms.double(35),
    chi2_str = cms.double(50.0),
    dPhiIntMax = cms.double(0.004),
    dPhiMax = cms.double(0.005),
    dRIntMax = cms.double(2.0),
    dRMax = cms.double(1.5),
    doCollisions = cms.bool(True),
    minLayersApart = cms.int32(1),
    wideSeg = cms.double(3.0)
)

process.RU_MEX1 = cms.PSet(
    chi2Max = cms.double(180.0),
    chi2Norm_2D_ = cms.double(60),
    chi2_str = cms.double(80.0),
    dPhiIntMax = cms.double(0.005),
    dPhiMax = cms.double(0.007),
    dRIntMax = cms.double(2.0),
    dRMax = cms.double(1.5),
    doCollisions = cms.bool(True),
    minLayersApart = cms.int32(1),
    wideSeg = cms.double(3.0)
)

process.RU_MEX2 = cms.PSet(
    chi2Max = cms.double(100.0),
    chi2Norm_2D_ = cms.double(35),
    chi2_str = cms.double(50.0),
    dPhiIntMax = cms.double(0.004),
    dPhiMax = cms.double(0.006),
    dRIntMax = cms.double(2.0),
    dRMax = cms.double(1.5),
    doCollisions = cms.bool(True),
    minLayersApart = cms.int32(1),
    wideSeg = cms.double(3.0)
)

process.RecoBTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*'
    )
)

process.RecoBTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*'
    )
)

process.RecoBTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*'
    )
)

process.RecoBTauAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoBTauRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoCTPPSAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*'
    )
)

process.RecoCTPPSFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*'
    )
)

process.RecoCTPPSRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep TotemTriggerCounters_totemTriggerRawToDigi_*_*',
        'keep TotemFEDInfos_totemRPRawToDigi_*_*',
        'keep TotemRPDigiedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_totemRPRawToDigi_*_*',
        'keep TotemRPClusteredmDetSetVector_totemRPClusterProducer_*_*',
        'keep TotemRPRecHitedmDetSetVector_totemRPRecHitProducer_*_*',
        'keep TotemRPUVPatternedmDetSetVector_totemRPUVPatternFinder_*_*',
        'keep TotemRPLocalTrackedmDetSetVector_totemRPLocalTrackFitter_*_*',
        'keep TotemFEDInfos_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondDigiedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep TotemVFATStatusedmDetSetVector_ctppsDiamondRawToDigi_*_*',
        'keep CTPPSDiamondRecHitedmDetSetVector_ctppsDiamondRecHits_*_*',
        'keep CTPPSDiamondLocalTrackedmDetSetVector_ctppsDiamondLocalTracks_*_*',
        'keep TotemTimingDigiedmDetSetVector_totemTimingRawToDigi_*_*',
        'keep TotemTimingRecHitedmDetSetVector_totemTimingRecHits_*_*',
        'keep CTPPSPixelDigiedmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelDataErroredmDetSetVector_ctppsPixelDigis_*_*',
        'keep CTPPSPixelClusteredmDetSetVector_ctppsPixelClusters_*_*',
        'keep CTPPSPixelRecHitedmDetSetVector_ctppsPixelRecHits_*_*',
        'keep CTPPSPixelLocalTrackedmDetSetVector_ctppsPixelLocalTracks_*_*',
        'keep CTPPSLocalTrackLites_ctppsLocalTrackLiteProducer_*_*'
    )
)

process.RecoEcalAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoSuperClusters_hybridSuperClusters_uncleanOnlyHybridSuperClusters_*',
        'keep recoCaloClusters_multi5x5SuperClusters_multi5x5EndcapBasicClusters_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterOOTECAL_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterOOTECAL_*_*'
    )
)

process.RecoEcalFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_selectDigi_*_*',
        'keep *_reducedEcalRecHitsEB_*_*',
        'keep *_reducedEcalRecHitsEE_*_*',
        'keep *_reducedEcalRecHitsES_*_*',
        'keep *_interestingEcalDetId*_*_*',
        'keep *_ecalWeightUncalibRecHit_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep *_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5*_*_*',
        'keep *_correctedMulti5x5*_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*'
    )
)

process.RecoEcalRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*'
    )
)

process.RecoEgammaAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep recoPhotonCores_gedPhotonCore_*_*',
        'keep recoPhotons_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'drop *_gedPhotons_valMapPFEgammaCandToPhoton_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*'
    )
)

process.RecoEgammaFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_gsfElectronCores_*_*',
        'keep *_gsfElectrons_*_*',
        'keep *_uncleanedOnlyGsfElectronCores_*_*',
        'keep *_uncleanedOnlyGsfElectrons_*_*',
        'keep *_eidRobustLoose_*_*',
        'keep *_eidRobustTight_*_*',
        'keep *_eidRobustHighEnergy_*_*',
        'keep *_eidLoose_*_*',
        'keep *_eidTight_*_*',
        'keep *_egmGedGsfElectronPF*Isolation_*_*',
        'keep *_egmGsfElectronIDs_*_*',
        'keep *_egmPhotonIDs_*_*',
        'keep *_conversions_*_*',
        'keep *_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotonsTmp_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep *_photonCore_*_*',
        'keep *_photons_*_*',
        'keep *_mustachePhotonCore_*_*',
        'keep *_mustachePhotons_*_*',
        'keep *_ootPhotonCore_*_*',
        'keep *_ootPhotons_*_*',
        'keep *_allConversions_*_*',
        'keep *_allConversionsOldEG_*_*',
        'keep *_ckfOutInTracksFrom*Conversions_*_*',
        'keep *_ckfInOutTracksFrom*Conversions_*_*',
        'keep *_uncleanedOnlyAllConversions_*_*',
        'keep *_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep *_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep *_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*'
    )
)

process.RecoEgammaRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*'
    )
)

process.RecoGenJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*'
    )
)

process.RecoGenJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoGenJets_*_*_*',
        'keep *_genParticle_*_*'
    )
)

process.RecoGenJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4GenJets_*_*',
        'keep *_ak8GenJets_*_*',
        'keep *_ak4GenJetsNoNu_*_*',
        'keep *_ak8GenJetsNoNu_*_*',
        'keep *_genParticle_*_*'
    )
)

process.RecoGenMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoGenMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoGenMETs_*_*_*')
)

process.RecoHIAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_hiGeneralTracks_*_*',
        'keep recoTracks_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep CaloTowersSorted_towerMaker_*_*',
        'drop recoCandidatesOwned_caloTowers_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep HFRecHitsSorted_hfreco_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
    )
)

process.RecoHIFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep *_hiPixel3PrimTracks_*_*',
        'keep *_hiPixel3ProtoTracks_*_*',
        'keep *_hiSelectedProtoTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_siStripZeroSuppression_BADAPVBASELINE_*',
        'keep SiStripRawDigiedmDetSetVector_siStripZeroSuppression_VirginRaw_*',
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep recoSuperClusters_*_*_*',
        'keep recoCaloClusters_*_*_*',
        'keep EcalRecHitsSorted_*_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoPFCandidates_*_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_*_*_*',
        'keep recoGsfElectrons_*_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
    )
)

process.RecoHIRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_akPu3CaloJets_*_*',
        'keep *_akPu4CaloJets_*_*',
        'keep *_akPu5CaloJets_*_*',
        'keep *_iterativeConePu5CaloJets_*_*',
        'keep *_akPu3PFJets_*_*',
        'keep *_akPu4PFJets_*_*',
        'keep *_akPu5PFJets_*_*',
        'keep *_akCs3PFJets_*_*',
        'keep *_akCs4PFJets_*_*',
        'keep *_kt4PFJetsForRho_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_PFTowers_*_*',
        'keep *_hiFJRhoProducer_*_*',
        'keep recoSuperCluster_cleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedEndcapSuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_correctedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandEndcapSuperClusters_*_*',
        'keep recoSuperCluster_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_hybridSuperClusters_*_*',
        'keep recoSuperCluster_islandSuperClusters_*_*',
        'keep recoSuperCluster_mergedSuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersCleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersUncleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_particleFlowEGamma_*_*',
        'keep recoSuperCluster_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperCluster_uncleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_uncleanedOnlyMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_cleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoCaloClusters_uncleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_islandBasicClusters_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersCleaned_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersUncleaned_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep EcalRecHitsSorted_ecalRecHit_*_*',
        'keep EcalRecHitsSorted_ecalPreshowerRecHit_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep floatedmValueMap_hiDetachedTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiDetachedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiGeneralTracks_MVAVals_*',
        'keep floatedmValueMap_hiInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiPixelPairStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuMixedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelLessStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelPairStepSelector_MVAVals_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoGsfElectrons_ecalDrivenGsfElectrons_*_*',
        'keep recoGsfElectrons_electronsWithPresel_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoGsfElectrons_mvaElectrons_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
    )
)

process.RecoHcalNoiseAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*'
    )
)

process.RecoHcalNoiseFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*'
    )
)

process.RecoHcalNoiseRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*'
    )
)

process.RecoHiCentralityAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*'
    )
)

process.RecoHiCentralityFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*'
    )
)

process.RecoHiCentralityRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*'
    )
)

process.RecoHiEgammaAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep floatedmValueMap_*_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoSuperClusters_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperClusters_correctedIslandEndcapSuperClusters_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*'
    )
)

process.RecoHiEgammaFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoSuperClusters_*_*_*',
        'keep recoCaloClusters_*_*_*',
        'keep EcalRecHitsSorted_*_*_*',
        'keep floatedmValueMap_*_*_*',
        'keep recoPFCandidates_*_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_*_*_*',
        'keep recoGsfElectrons_*_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.RecoHiEgammaRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoSuperCluster_cleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedEndcapSuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_correctedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandEndcapSuperClusters_*_*',
        'keep recoSuperCluster_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_hybridSuperClusters_*_*',
        'keep recoSuperCluster_islandSuperClusters_*_*',
        'keep recoSuperCluster_mergedSuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersCleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersUncleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_particleFlowEGamma_*_*',
        'keep recoSuperCluster_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperCluster_uncleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_uncleanedOnlyMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_cleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoCaloClusters_uncleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_islandBasicClusters_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersCleaned_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersUncleaned_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep EcalRecHitsSorted_ecalRecHit_*_*',
        'keep EcalRecHitsSorted_ecalPreshowerRecHit_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep floatedmValueMap_hiDetachedTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiDetachedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiGeneralTracks_MVAVals_*',
        'keep floatedmValueMap_hiInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiPixelPairStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuMixedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelLessStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelPairStepSelector_MVAVals_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoGsfElectrons_ecalDrivenGsfElectrons_*_*',
        'keep recoGsfElectrons_electronsWithPresel_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoGsfElectrons_mvaElectrons_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*'
    )
)

process.RecoHiEvtPlaneAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep HFRecHitsSorted_hfreco_*_*'
    )
)

process.RecoHiEvtPlaneFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoEvtPlanes_hiEvtPlane_*_*')
)

process.RecoHiEvtPlaneRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep recoEvtPlanes_hiEvtPlane_*_*')
)

process.RecoHiJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*',
        'keep CaloTowersSorted_towerMaker_*_*',
        'drop recoCandidatesOwned_caloTowers_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*'
    )
)

process.RecoHiJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_*CaloJets_*_*',
        'keep *_*PFJets_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_*PFTowers_*_*',
        'keep *_*hiFJRhoProducer_*_*'
    )
)

process.RecoHiJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_akPu3CaloJets_*_*',
        'keep *_akPu4CaloJets_*_*',
        'keep *_akPu5CaloJets_*_*',
        'keep *_iterativeConePu5CaloJets_*_*',
        'keep *_akPu3PFJets_*_*',
        'keep *_akPu4PFJets_*_*',
        'keep *_akPu5PFJets_*_*',
        'keep *_akCs3PFJets_*_*',
        'keep *_akCs4PFJets_*_*',
        'keep *_kt4PFJetsForRho_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_PFTowers_*_*',
        'keep *_hiFJRhoProducer_*_*'
    )
)

process.RecoHiMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
    )
)

process.RecoHiMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
    )
)

process.RecoHiMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
    )
)

process.RecoHiTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_hiGeneralTracks_*_*',
        'keep recoTracks_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*'
    )
)

process.RecoHiTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep *_hiPixel3PrimTracks_*_*',
        'keep *_hiPixel3ProtoTracks_*_*',
        'keep *_hiSelectedProtoTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*'
    )
)

process.RecoHiTrackerLocalFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_*_APVCM_*',
        'keep *_siStripZeroSuppression_BADAPVBASELINE_*',
        'keep SiStripRawDigiedmDetSetVector_siStripZeroSuppression_VirginRaw_*'
    )
)

process.RecoHiTrackerLocalRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_*_APVCM_*')
)

process.RecoHiTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*'
    )
)

process.RecoJetsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'drop doubles_*Jets_rhos_*',
        'drop doubles_*Jets_sigmas_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*'
    )
)

process.RecoJetsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloJets_*_*_*',
        'keep recoPFJets_*_*_*',
        'keep recoTrackJets_*_*_*',
        'keep recoJPTJets_*_*_*',
        'keep recoBasicJets_*_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_kt4JetTracksAssociatorAtVertex_*_*',
        'keep *_kt4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_kt4JetExtender_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex*_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace*_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak7JetTracksAssociatorAtVertex*_*_*',
        'keep *_ak7JetTracksAssociatorAtCaloFace*_*_*',
        'keep *_ak7JetExtender_*_*',
        'keep *_*JetID_*_*',
        'keep *_kt4CaloJets_*_*',
        'keep *_kt6CaloJets_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak5CaloJets_*_*',
        'keep *_ak7CaloJets_*_*',
        'keep *_kt4PFJets_*_*',
        'keep *_kt6PFJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak5PFJets_*_*',
        'keep *_ak7PFJets_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep *_kt4TrackJets_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRho*_*_*',
        'keep *_ca*Mass_*_*',
        'keep *_ak*Mass_*_*'
    )
)

process.RecoJetsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*'
    )
)

process.RecoLocalCaloAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_castorreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*'
    )
)

process.RecoLocalCaloFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HBHERecHitsSorted_hbheprerecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_*Digis_*_*',
        'keep ZDCRecHitsSorted_*_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_*_*_*',
        'keep *_ecalMultiFitUncalibRecHit_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.RecoLocalCaloRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.RecoLocalFastTimeAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoLocalFastTimeFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ftlUncalibratedRecHits_*_*',
        'keep *_ftlRecHits_*_*'
    )
)

process.RecoLocalFastTimeRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_ftlRecHits_*_*')
)

process.RecoLocalMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_dt4DSegments_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*'
    )
)

process.RecoLocalMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*'
    )
)

process.RecoLocalMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*'
    )
)

process.RecoLocalTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep ClusterSummary_clusterSummaryProducer_*_*')
)

process.RecoLocalTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep *_clusterSummaryProducer_*_*'
    )
)

process.RecoLocalTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*'
    )
)

process.RecoMETAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'drop recoHcalNoiseRBXs_*_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*'
    )
)

process.RecoMETFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep *HaloData_*_*_*',
        'keep *BeamHaloSummary_BeamHaloSummary_*_*'
    )
)

process.RecoMETRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*'
    )
)

process.RecoMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*'
    )
)

process.RecoMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonIsolationAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.RecoMuonIsolationFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonIsolationParamGlobal = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muParamGlobalIsoDepositGsTk_*_*',
        'keep *_muParamGlobalIsoDepositCalEcal_*_*',
        'keep *_muParamGlobalIsoDepositCalHcal_*_*',
        'keep *_muParamGlobalIsoDepositCtfTk_*_*',
        'keep *_muParamGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muParamGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muParamGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonIsolationRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*'
    )
)

process.RecoParticleFlowAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'drop *_pfElectronTranslator_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep recoCaloClusters_pfElectronTranslator_*_*',
        'keep recoPreshowerClusters_pfElectronTranslator_*_*',
        'keep recoSuperClusters_pfElectronTranslator_*_*',
        'keep recoCaloClusters_pfPhotonTranslator_*_*',
        'keep recoPreshowerClusters_pfPhotonTranslator_*_*',
        'keep recoSuperClusters_pfPhotonTranslator_*_*',
        'keep recoPhotons_pfPhotonTranslator_*_*',
        'keep recoPhotonCores_pfPhotonTranslator_*_*',
        'keep recoConversions_pfPhotonTranslator_*_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*'
    )
)

process.RecoParticleFlowFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*'
    )
)

process.RecoParticleFlowRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*'
    )
)

process.RecoPixelVertexingFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*'
    )
)

process.RecoPixelVertexingRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*'
    )
)

process.RecoTauTagAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*'
    )
)

process.RecoTauTagFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ak4PFJetsRecoTauPiZeros_*_*',
        'keep *_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscrimination*_*_*',
        'keep *_hpsPFTau*PtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*'
    )
)

process.RecoTauTagRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*'
    )
)

process.RecoTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTracks_ctfPixelLess_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*'
    )
)

process.RecoTrackerFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*'
    )
)

process.RecoTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*'
    )
)

process.RecoVertexAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*'
    )
)

process.RecoVertexFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*'
    )
)

process.RecoVertexRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*'
    )
)

process.SK_ME1234 = cms.PSet(
    chi2Max = cms.double(99999.0),
    dPhiFineMax = cms.double(0.025),
    dPhiMax = cms.double(0.003),
    dRPhiFineMax = cms.double(8.0),
    dRPhiMax = cms.double(8.0),
    minLayersApart = cms.int32(2),
    verboseInfo = cms.untracked.bool(True),
    wideSeg = cms.double(3.0)
)

process.SK_ME1A = cms.PSet(
    chi2Max = cms.double(99999.0),
    dPhiFineMax = cms.double(0.025),
    dPhiMax = cms.double(0.025),
    dRPhiFineMax = cms.double(3.0),
    dRPhiMax = cms.double(8.0),
    minLayersApart = cms.int32(2),
    verboseInfo = cms.untracked.bool(True),
    wideSeg = cms.double(3.0)
)

process.ST_ME1234 = cms.PSet(
    BPMinImprovement = cms.double(10000.0),
    BrutePruning = cms.bool(True),
    CSCDebug = cms.untracked.bool(False),
    CorrectTheErrors = cms.bool(True),
    Covariance = cms.double(0.0),
    ForceCovariance = cms.bool(False),
    ForceCovarianceAll = cms.bool(False),
    NormChi2Cut2D = cms.double(20.0),
    NormChi2Cut3D = cms.double(10.0),
    Pruning = cms.bool(True),
    SeedBig = cms.double(0.0015),
    SeedSmall = cms.double(0.0002),
    curvePenalty = cms.double(2.0),
    curvePenaltyThreshold = cms.double(0.85),
    dPhiFineMax = cms.double(0.025),
    dRPhiFineMax = cms.double(8.0),
    dXclusBoxMax = cms.double(4.0),
    dYclusBoxMax = cms.double(8.0),
    hitDropLimit4Hits = cms.double(0.6),
    hitDropLimit5Hits = cms.double(0.8),
    hitDropLimit6Hits = cms.double(0.3333),
    maxDPhi = cms.double(999.0),
    maxDTheta = cms.double(999.0),
    maxRatioResidualPrune = cms.double(3),
    maxRecHitsInCluster = cms.int32(20),
    minHitsPerSegment = cms.int32(3),
    onlyBestSegment = cms.bool(False),
    preClustering = cms.bool(True),
    preClusteringUseChaining = cms.bool(True),
    prePrun = cms.bool(True),
    prePrunLimit = cms.double(3.17),
    tanPhiMax = cms.double(0.5),
    tanThetaMax = cms.double(1.2),
    useShowering = cms.bool(False),
    yweightPenalty = cms.double(1.5),
    yweightPenaltyThreshold = cms.double(1.0)
)

process.ST_ME1A = cms.PSet(
    BPMinImprovement = cms.double(10000.0),
    BrutePruning = cms.bool(True),
    CSCDebug = cms.untracked.bool(False),
    CorrectTheErrors = cms.bool(True),
    Covariance = cms.double(0.0),
    ForceCovariance = cms.bool(False),
    ForceCovarianceAll = cms.bool(False),
    NormChi2Cut2D = cms.double(20.0),
    NormChi2Cut3D = cms.double(10.0),
    Pruning = cms.bool(True),
    SeedBig = cms.double(0.0015),
    SeedSmall = cms.double(0.0002),
    curvePenalty = cms.double(2.0),
    curvePenaltyThreshold = cms.double(0.85),
    dPhiFineMax = cms.double(0.025),
    dRPhiFineMax = cms.double(8.0),
    dXclusBoxMax = cms.double(4.0),
    dYclusBoxMax = cms.double(8.0),
    hitDropLimit4Hits = cms.double(0.6),
    hitDropLimit5Hits = cms.double(0.8),
    hitDropLimit6Hits = cms.double(0.3333),
    maxDPhi = cms.double(999.0),
    maxDTheta = cms.double(999.0),
    maxRatioResidualPrune = cms.double(3),
    maxRecHitsInCluster = cms.int32(24),
    minHitsPerSegment = cms.int32(3),
    onlyBestSegment = cms.bool(False),
    preClustering = cms.bool(True),
    preClusteringUseChaining = cms.bool(True),
    prePrun = cms.bool(True),
    prePrunLimit = cms.double(3.17),
    tanPhiMax = cms.double(0.5),
    tanThetaMax = cms.double(1.2),
    useShowering = cms.bool(False),
    yweightPenalty = cms.double(1.5),
    yweightPenaltyThreshold = cms.double(1.0)
)

process.SiPixelGainCalibrationServiceParameters = cms.PSet(

)

process.SiStripClusterChargeCutLoose = cms.PSet(
    value = cms.double(1620.0)
)

process.SiStripClusterChargeCutNone = cms.PSet(
    value = cms.double(-1.0)
)

process.SiStripClusterChargeCutTight = cms.PSet(
    value = cms.double(1945.0)
)

process.SiStripClusterChargeCutTiny = cms.PSet(
    value = cms.double(800.0)
)

process.SimCalorimetryAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimCalorimetryFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simEcalDigis_*_*',
        'keep *_simEcalPreshowerDigis_*_*',
        'keep *_simEcalTriggerPrimitiveDigis_*_*',
        'keep *_simEcalEBTriggerPrimitiveDigis_*_*',
        'keep *_simHcalDigis_*_*',
        'keep ZDCDataFramesSorted_simHcalUnsuppressedDigis_*_*',
        'drop ZDCDataFramesSorted_mix_simHcalUnsuppressedDigis*_*',
        'keep *_simHcalTriggerPrimitiveDigis_*_*',
        'keep *_mix_HcalSamples_*',
        'keep *_mixData_HcalSamples_*',
        'keep *_mix_HcalHits_*',
        'keep *_mixData_HcalHits_*',
        'keep *_DMHcalTriggerPrimitiveDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*'
    )
)

process.SimCalorimetryRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep EBSrFlagsSorted_simEcalDigis_*_*',
        'keep EESrFlagsSorted_simEcalDigis_*_*',
        'keep *_simHcalUnsuppressedDigis_*_*'
    )
)

process.SimCalorimetryRECO = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.SimG4CoreHLTAODSIM = cms.PSet(
    outputCommands = cms.untracked.vstring('keep SimVertexs_g4SimHits_*_*')
)

process.SimG4CoreRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_g4SimHits_*_*',
        'keep edmHepMCProduct_source_*_*'
    )
)

process.SimG4CoreRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep edmHepMCProduct_source_*_*',
        'keep SimTracks_g4SimHits_*_*',
        'keep SimVertexs_g4SimHits_*_*'
    )
)

process.SimGeneralAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
    )
)

process.SimGeneralFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'drop *_trackingtruthprod_*_*',
        'drop *_electrontruth_*_*',
        'keep *_mix_MergedTrackTruth_*',
        'keep CrossingFramePlaybackInfoNew_*_*_*'
    )
)

process.SimGeneralRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep CrossingFramePlaybackInfoNew_*_*_*',
        'keep PileupSummaryInfos_*_*_*',
        'keep int6stdbitsetstdpairs_*_AffectedAPVList_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*',
        'keep *_mix_MergedTrackTruth_*'
    )
)

process.SimGeneralRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep PileupSummaryInfos_*_*_*',
        'keep int_*_bunchSpacing_*',
        'keep *_genPUProtons_*_*'
    )
)

process.SimMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_muonSimClassifier_*_*')
)

process.SimMuonFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonDTDigis_*_*',
        'keep *_simMuonRPCDigis_*_*'
    )
)

process.SimMuonRAW = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep CSCDetIdCSCComparatorDigiMuonDigiCollection_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_simMuonCSCDigis_*_*',
        'keep *_simMuonRPCDigis_*_*'
    )
)

process.SimMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep StripDigiSimLinkedmDetSetVector_simMuonCSCDigis_*_*',
        'keep DTLayerIdDTDigiSimLinkMuonDigiCollection_simMuonDTDigis_*_*',
        'keep RPCDigiSimLinkedmDetSetVector_simMuonRPCDigis_*_*',
        'keep *_muonSimClassifier_*_*'
    )
)

process.SimTrackerAOD = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SimTrackerDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep PixelDigiSimLinkedmDetSetVector_simSiPixelDigis_*_*',
        'keep StripDigiSimLinkedmDetSetVector_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*'
    )
)

process.SimTrackerFEVTDEBUG = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_simSiPixelDigis_*_*',
        'keep *_simSiStripDigis_*_*',
        'drop *_mix_simSiPixelDigis*_*',
        'drop *_mix_simSiStripDigis*_*',
        'keep *_allTrackMCMatch_*_*',
        'keep *_trackingParticleRecoTrackAsssociation_*_*',
        'keep *_assoc2secStepTk_*_*',
        'keep *_assoc2thStepTk_*_*',
        'keep *_assoc2GsfTracks_*_*',
        'keep *_assocOutInConversionTracks_*_*',
        'keep *_assocInOutConversionTracks_*_*',
        'keep *_TTClusterAssociatorFromPixelDigis_*_*',
        'keep *_TTStubAssociatorFromPixelDigis_*_*'
    )
)

process.SimTrackerRAW = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.SimTrackerRECO = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_allTrackMCMatch_*_*')
)

process.TC_ME1234 = cms.PSet(
    SegmentSorting = cms.int32(1),
    chi2Max = cms.double(6000.0),
    chi2ndfProbMin = cms.double(0.0001),
    dPhiFineMax = cms.double(0.02),
    dPhiMax = cms.double(0.003),
    dRPhiFineMax = cms.double(6.0),
    dRPhiMax = cms.double(1.2),
    minLayersApart = cms.int32(2),
    verboseInfo = cms.untracked.bool(True)
)

process.TC_ME1A = cms.PSet(
    SegmentSorting = cms.int32(1),
    chi2Max = cms.double(6000.0),
    chi2ndfProbMin = cms.double(0.0001),
    dPhiFineMax = cms.double(0.013),
    dPhiMax = cms.double(0.00198),
    dRPhiFineMax = cms.double(3.0),
    dRPhiMax = cms.double(0.6),
    minLayersApart = cms.int32(2),
    verboseInfo = cms.untracked.bool(True)
)

process.TcdsEventContent = cms.PSet(
    outputCommands = cms.untracked.vstring('keep *_tcdsDigis_*_*')
)

process.ThresholdPtTrajectoryFilter_block = cms.PSet(
    ComponentType = cms.string('ThresholdPtTrajectoryFilter'),
    minHitsThresholdPt = cms.int32(3),
    nSigmaThresholdPt = cms.double(5.0),
    thresholdPt = cms.double(10.0)
)

process.TimingFillerBlock = cms.PSet(
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            PruneCut = cms.double(9.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(0.0),
            DoWireCorr = cms.bool(True),
            DropTheta = cms.bool(True),
            HitError = cms.double(2.8),
            HitsMin = cms.int32(3),
            PruneCut = cms.double(5.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTradius = cms.double(0.01),
            DTsegments = cms.InputTag("dt4DSegments"),
            RPChits = cms.InputTag("rpcRecHits"),
            TightMatchCSC = cms.bool(True),
            TightMatchDT = cms.bool(False)
        ),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(False)
    )
)

process.TrackAssociatorParameterBlock = cms.PSet(
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    )
)

process.TrackAssociatorParameters = cms.PSet(
    CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
    CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
    DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
    EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
    HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
    HORecHitCollectionLabel = cms.InputTag("horeco"),
    ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
    accountForTrajectoryChangeCalo = cms.bool(False),
    dREcal = cms.double(9999.0),
    dREcalPreselection = cms.double(0.05),
    dRHcal = cms.double(9999.0),
    dRHcalPreselection = cms.double(0.2),
    dRMuon = cms.double(9999.0),
    dRMuonPreselection = cms.double(0.2),
    muonMaxDistanceSigmaX = cms.double(0.0),
    muonMaxDistanceSigmaY = cms.double(0.0),
    muonMaxDistanceX = cms.double(5.0),
    muonMaxDistanceY = cms.double(5.0),
    propagateAllDirections = cms.bool(True),
    trajectoryUncertaintyTolerance = cms.double(-1.0),
    truthMatch = cms.bool(False),
    useCalo = cms.bool(False),
    useEcal = cms.bool(True),
    useGEM = cms.bool(False),
    useHO = cms.bool(True),
    useHcal = cms.bool(True),
    useME0 = cms.bool(False),
    useMuon = cms.bool(True),
    usePreshower = cms.bool(False)
)

process.TrackerKinkFinderParametersBlock = cms.PSet(
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(True)
    )
)

process.TrackingToolsAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep recoTracks_GsfGlobalElectronTest_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*'
    )
)

process.TrackingToolsFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep *_electronGsfTracks_*_*'
    )
)

process.TrackingToolsRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*'
    )
)

process.TrajectoryBuilderForElectrons = cms.PSet(
    ComponentType = cms.string('CkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    estimator = cms.string('ElectronChi2'),
    intermediateCleaning = cms.bool(False),
    lostHitPenalty = cms.double(90.0),
    maxCand = cms.int32(5),
    propagatorAlong = cms.string('fwdGsfElectronPropagator'),
    propagatorOpposite = cms.string('bwdGsfElectronPropagator'),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('TrajectoryFilterForElectrons')
    ),
    updator = cms.string('KFUpdator')
)

process.TrajectoryFilterForElectrons = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(-1),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(-1),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(2.0),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.ckfBaseInOutTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.ckfBaseTrajectoryFilterP5 = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(3),
    maxLostHits = cms.int32(4),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.5),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.cleaningAlgoConfig = cms.PSet(
    cThreshold_barrel = cms.double(4),
    cThreshold_double = cms.double(10),
    cThreshold_endcap = cms.double(15),
    e4e1Threshold_barrel = cms.double(0.08),
    e4e1Threshold_endcap = cms.double(0.3),
    e4e1_a_barrel = cms.double(0.02),
    e4e1_a_endcap = cms.double(0.02),
    e4e1_b_barrel = cms.double(0.02),
    e4e1_b_endcap = cms.double(-0.0125),
    e6e2thresh = cms.double(0.04),
    ignoreOutOfTimeThresh = cms.double(1000000000.0),
    tightenCrack_e1_double = cms.double(2),
    tightenCrack_e1_single = cms.double(1),
    tightenCrack_e4e1_single = cms.double(2.5),
    tightenCrack_e6e2_double = cms.double(3)
)

process.configurationMetadata = cms.untracked.PSet(
    annotation = cms.untracked.string('step4 nevts:-1'),
    name = cms.untracked.string('Applications'),
    version = cms.untracked.string('$Revision: 1.19 $')
)

process.cscRecHitDParameters = cms.PSet(
    ConstSyst_ME12 = cms.double(0.02),
    ConstSyst_ME13 = cms.double(0.03),
    ConstSyst_ME1a = cms.double(0.01),
    ConstSyst_ME1b = cms.double(0.02),
    ConstSyst_ME21 = cms.double(0.03),
    ConstSyst_ME22 = cms.double(0.03),
    ConstSyst_ME31 = cms.double(0.03),
    ConstSyst_ME32 = cms.double(0.03),
    ConstSyst_ME41 = cms.double(0.03),
    NoiseLevel_ME12 = cms.double(7.0),
    NoiseLevel_ME13 = cms.double(4.0),
    NoiseLevel_ME1a = cms.double(9.0),
    NoiseLevel_ME1b = cms.double(6.0),
    NoiseLevel_ME21 = cms.double(5.0),
    NoiseLevel_ME22 = cms.double(7.0),
    NoiseLevel_ME31 = cms.double(5.0),
    NoiseLevel_ME32 = cms.double(7.0),
    NoiseLevel_ME41 = cms.double(5.0),
    XTasymmetry_ME12 = cms.double(0.015),
    XTasymmetry_ME13 = cms.double(0.02),
    XTasymmetry_ME1a = cms.double(0.023),
    XTasymmetry_ME1b = cms.double(0.01),
    XTasymmetry_ME21 = cms.double(0.023),
    XTasymmetry_ME22 = cms.double(0.023),
    XTasymmetry_ME31 = cms.double(0.023),
    XTasymmetry_ME32 = cms.double(0.023),
    XTasymmetry_ME41 = cms.double(0.023)
)

process.detachedQuadStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('detachedQuadStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('detachedQuadStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.detachedQuadStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(cms.PSet(
        refToPSet_ = cms.string('detachedQuadStepTrajectoryFilterBase')
    ))
)

process.detachedQuadStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.detachedTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('detachedTripletStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('detachedTripletStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.detachedTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(cms.PSet(
        refToPSet_ = cms.string('detachedTripletStepTrajectoryFilterBase')
    ))
)

process.detachedTripletStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.detachedTripletStepTrajectoryFilterShape = cms.PSet(
    ComponentType = cms.string('StripSubClusterShapeTrajectoryFilter'),
    layerMask = cms.PSet(
        TEC = cms.bool(False),
        TIB = cms.vuint32(1, 2),
        TID = cms.vuint32(1, 2),
        TOB = cms.bool(False)
    ),
    maxNSat = cms.uint32(3),
    maxTrimmedSizeDiffNeg = cms.double(1.0),
    maxTrimmedSizeDiffPos = cms.double(0.7),
    seedCutMIPs = cms.double(0.35),
    seedCutSN = cms.double(7.0),
    subclusterCutMIPs = cms.double(0.45),
    subclusterCutSN = cms.double(12.0),
    subclusterWindow = cms.double(0.7),
    trimMaxADC = cms.double(30.0),
    trimMaxFracNeigh = cms.double(0.25),
    trimMaxFracTotal = cms.double(0.15)
)

process.dphiScale = cms.PSet(
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0)
)

process.ecalDrivenElectronSeedsParameters = cms.PSet(
    DeltaPhi1High = cms.double(0.08),
    DeltaPhi1Low = cms.double(0.23),
    DeltaPhi2B = cms.double(0.008),
    DeltaPhi2F = cms.double(0.012),
    HGCalConfig = cms.PSet(
        HGCBHInput = cms.InputTag("HGCalRecHit","HGCHEBRecHits"),
        HGCEEInput = cms.InputTag("HGCalRecHit","HGCEERecHits"),
        HGCFHInput = cms.InputTag("HGCalRecHit","HGCHEFRecHits")
    ),
    HighPtThreshold = cms.double(35.0),
    LowPtThreshold = cms.double(5.0),
    PhiMax2B = cms.double(0.002),
    PhiMax2F = cms.double(0.003),
    PhiMin2B = cms.double(-0.002),
    PhiMin2F = cms.double(-0.003),
    SCEtCut = cms.double(0.0),
    SizeWindowENeg = cms.double(0.675),
    allowHGCal = cms.bool(False),
    applyHOverECut = cms.bool(True),
    applySigmaIEtaIEtaCut = cms.bool(False),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    deltaZ1WithVertex = cms.double(25.0),
    dynamicPhiRoad = cms.bool(True),
    ePhiMax1 = cms.double(0.075),
    ePhiMin1 = cms.double(-0.125),
    fromTrackerSeeds = cms.bool(True),
    hOverEConeSize = cms.double(0.15),
    hOverEHBMinE = cms.double(0.7),
    hOverEHFMinE = cms.double(0.8),
    hOverEPtMin = cms.double(0.0),
    hcalRecHits = cms.InputTag("hbhereco"),
    hcalTowers = cms.InputTag("towerMaker"),
    initialSeeds = cms.InputTag("newCombinedSeeds"),
    maxHBarrel = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    maxHOverEBarrel = cms.double(0.15),
    maxHOverEEndcaps = cms.double(0.15),
    maxSigmaIEtaIEtaBarrel = cms.double(0.5),
    maxSigmaIEtaIEtaEndcaps = cms.double(0.5),
    measurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    measurementTrackerName = cms.string(''),
    nSigmasDeltaZ1 = cms.double(5.0),
    pPhiMax1 = cms.double(0.125),
    pPhiMin1 = cms.double(-0.075),
    preFilteredSeeds = cms.bool(False),
    r2MaxF = cms.double(0.15),
    r2MinF = cms.double(-0.15),
    rMaxI = cms.double(0.2),
    rMinI = cms.double(-0.2),
    searchInTIDTEC = cms.bool(True),
    useRecoVertex = cms.bool(False),
    vertices = cms.InputTag("offlinePrimaryVerticesWithBS"),
    z2MaxB = cms.double(0.09),
    z2MinB = cms.double(-0.09)
)

process.ecalLocalRecoAOD = cms.PSet(
    outputCommands = cms.untracked.vstring()
)

process.ecalLocalRecoFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ecalMultiFitUncalibRecHit_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.ecalLocalRecoRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*'
    )
)

process.ecal_digi_parameters = cms.PSet(
    EBCorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.73354, 0.64442, 0.58851, 0.55425,
        0.53082, 0.51916, 0.51097, 0.50732, 0.50409
    ),
    EBCorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.70946, 0.58021, 0.49846, 0.45006,
        0.41366, 0.39699, 0.38478, 0.37847, 0.37055
    ),
    EBCorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71073, 0.55721, 0.46089, 0.40449,
        0.35931, 0.33924, 0.32439, 0.31581, 0.30481
    ),
    EBdigiCollection = cms.string(''),
    EECorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.72698, 0.62048, 0.55691, 0.51848,
        0.49147, 0.47813, 0.47007, 0.46621, 0.46265
    ),
    EECorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.71217, 0.47464, 0.34056, 0.26282,
        0.20287, 0.17734, 0.16256, 0.15618, 0.14443
    ),
    EECorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71373, 0.44825, 0.30152, 0.21609,
        0.14786, 0.11772, 0.10165, 0.09465, 0.08098
    ),
    EEdigiCollection = cms.string(''),
    ESdigiCollection = cms.string(''),
    EcalPreMixStage1 = cms.bool(False),
    EcalPreMixStage2 = cms.bool(False),
    UseLCcorrection = cms.untracked.bool(True)
)

process.ecal_pulse_shape_covariances = cms.PSet(
    EBPulseShapeCovariance = cms.vdouble(
        3.001e-06, 1.233e-05, 0.0, -4.416e-06, -4.571e-06,
        -3.614e-06, -2.636e-06, -1.286e-06, -8.41e-07, -5.296e-07,
        0.0, 0.0, 1.233e-05, 6.154e-05, 0.0,
        -2.2e-05, -2.309e-05, -1.838e-05, -1.373e-05, -7.334e-06,
        -5.088e-06, -3.745e-06, -2.428e-06, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0, 0.0,
        0.0, -4.416e-06, -2.2e-05, 0.0, 8.319e-06,
        8.545e-06, 6.792e-06, 5.059e-06, 2.678e-06, 1.816e-06,
        1.223e-06, 8.245e-07, 5.589e-07, -4.571e-06, -2.309e-05,
        0.0, 8.545e-06, 9.182e-06, 7.219e-06, 5.388e-06,
        2.853e-06, 1.944e-06, 1.324e-06, 9.083e-07, 6.335e-07,
        -3.614e-06, -1.838e-05, 0.0, 6.792e-06, 7.219e-06,
        6.016e-06, 4.437e-06, 2.385e-06, 1.636e-06, 1.118e-06,
        7.754e-07, 5.556e-07, -2.636e-06, -1.373e-05, 0.0,
        5.059e-06, 5.388e-06, 4.437e-06, 3.602e-06, 1.917e-06,
        1.322e-06, 9.079e-07, 6.529e-07, 4.752e-07, -1.286e-06,
        -7.334e-06, 0.0, 2.678e-06, 2.853e-06, 2.385e-06,
        1.917e-06, 1.375e-06, 9.1e-07, 6.455e-07, 4.693e-07,
        3.657e-07, -8.41e-07, -5.088e-06, 0.0, 1.816e-06,
        1.944e-06, 1.636e-06, 1.322e-06, 9.1e-07, 9.115e-07,
        6.062e-07, 4.436e-07, 3.422e-07, -5.296e-07, -3.745e-06,
        0.0, 1.223e-06, 1.324e-06, 1.118e-06, 9.079e-07,
        6.455e-07, 6.062e-07, 7.217e-07, 4.862e-07, 3.768e-07,
        0.0, -2.428e-06, 0.0, 8.245e-07, 9.083e-07,
        7.754e-07, 6.529e-07, 4.693e-07, 4.436e-07, 4.862e-07,
        6.509e-07, 4.418e-07, 0.0, 0.0, 0.0,
        5.589e-07, 6.335e-07, 5.556e-07, 4.752e-07, 3.657e-07,
        3.422e-07, 3.768e-07, 4.418e-07, 6.142e-07
    ),
    EEPulseShapeCovariance = cms.vdouble(
        3.941e-05, 3.333e-05, 0.0, -1.449e-05, -1.661e-05,
        -1.424e-05, -1.183e-05, -6.842e-06, -4.915e-06, -3.411e-06,
        0.0, 0.0, 3.333e-05, 2.862e-05, 0.0,
        -1.244e-05, -1.431e-05, -1.233e-05, -1.032e-05, -5.883e-06,
        -4.154e-06, -2.902e-06, -2.128e-06, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0, 0.0,
        0.0, -1.449e-05, -1.244e-05, 0.0, 5.84e-06,
        6.649e-06, 5.72e-06, 4.812e-06, 2.708e-06, 1.869e-06,
        1.33e-06, 9.186e-07, 6.446e-07, -1.661e-05, -1.431e-05,
        0.0, 6.649e-06, 7.966e-06, 6.898e-06, 5.794e-06,
        3.157e-06, 2.184e-06, 1.567e-06, 1.084e-06, 7.575e-07,
        -1.424e-05, -1.233e-05, 0.0, 5.72e-06, 6.898e-06,
        6.341e-06, 5.347e-06, 2.859e-06, 1.991e-06, 1.431e-06,
        9.839e-07, 6.886e-07, -1.183e-05, -1.032e-05, 0.0,
        4.812e-06, 5.794e-06, 5.347e-06, 4.854e-06, 2.628e-06,
        1.809e-06, 1.289e-06, 9.02e-07, 6.146e-07, -6.842e-06,
        -5.883e-06, 0.0, 2.708e-06, 3.157e-06, 2.859e-06,
        2.628e-06, 1.863e-06, 1.296e-06, 8.882e-07, 6.108e-07,
        4.283e-07, -4.915e-06, -4.154e-06, 0.0, 1.869e-06,
        2.184e-06, 1.991e-06, 1.809e-06, 1.296e-06, 1.217e-06,
        8.669e-07, 5.751e-07, 3.882e-07, -3.411e-06, -2.902e-06,
        0.0, 1.33e-06, 1.567e-06, 1.431e-06, 1.289e-06,
        8.882e-07, 8.669e-07, 9.522e-07, 6.717e-07, 4.293e-07,
        0.0, -2.128e-06, 0.0, 9.186e-07, 1.084e-06,
        9.839e-07, 9.02e-07, 6.108e-07, 5.751e-07, 6.717e-07,
        7.911e-07, 5.493e-07, 0.0, 0.0, 0.0,
        6.446e-07, 7.575e-07, 6.886e-07, 6.146e-07, 4.283e-07,
        3.882e-07, 4.293e-07, 5.493e-07, 7.027e-07
    )
)

process.ecal_pulse_shape_parameters = cms.PSet(
    EBCorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.73354, 0.64442, 0.58851, 0.55425,
        0.53082, 0.51916, 0.51097, 0.50732, 0.50409
    ),
    EBCorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.70946, 0.58021, 0.49846, 0.45006,
        0.41366, 0.39699, 0.38478, 0.37847, 0.37055
    ),
    EBCorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71073, 0.55721, 0.46089, 0.40449,
        0.35931, 0.33924, 0.32439, 0.31581, 0.30481
    ),
    EBPulseShapeCovariance = cms.vdouble(
        3.001e-06, 1.233e-05, 0.0, -4.416e-06, -4.571e-06,
        -3.614e-06, -2.636e-06, -1.286e-06, -8.41e-07, -5.296e-07,
        0.0, 0.0, 1.233e-05, 6.154e-05, 0.0,
        -2.2e-05, -2.309e-05, -1.838e-05, -1.373e-05, -7.334e-06,
        -5.088e-06, -3.745e-06, -2.428e-06, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0, 0.0,
        0.0, -4.416e-06, -2.2e-05, 0.0, 8.319e-06,
        8.545e-06, 6.792e-06, 5.059e-06, 2.678e-06, 1.816e-06,
        1.223e-06, 8.245e-07, 5.589e-07, -4.571e-06, -2.309e-05,
        0.0, 8.545e-06, 9.182e-06, 7.219e-06, 5.388e-06,
        2.853e-06, 1.944e-06, 1.324e-06, 9.083e-07, 6.335e-07,
        -3.614e-06, -1.838e-05, 0.0, 6.792e-06, 7.219e-06,
        6.016e-06, 4.437e-06, 2.385e-06, 1.636e-06, 1.118e-06,
        7.754e-07, 5.556e-07, -2.636e-06, -1.373e-05, 0.0,
        5.059e-06, 5.388e-06, 4.437e-06, 3.602e-06, 1.917e-06,
        1.322e-06, 9.079e-07, 6.529e-07, 4.752e-07, -1.286e-06,
        -7.334e-06, 0.0, 2.678e-06, 2.853e-06, 2.385e-06,
        1.917e-06, 1.375e-06, 9.1e-07, 6.455e-07, 4.693e-07,
        3.657e-07, -8.41e-07, -5.088e-06, 0.0, 1.816e-06,
        1.944e-06, 1.636e-06, 1.322e-06, 9.1e-07, 9.115e-07,
        6.062e-07, 4.436e-07, 3.422e-07, -5.296e-07, -3.745e-06,
        0.0, 1.223e-06, 1.324e-06, 1.118e-06, 9.079e-07,
        6.455e-07, 6.062e-07, 7.217e-07, 4.862e-07, 3.768e-07,
        0.0, -2.428e-06, 0.0, 8.245e-07, 9.083e-07,
        7.754e-07, 6.529e-07, 4.693e-07, 4.436e-07, 4.862e-07,
        6.509e-07, 4.418e-07, 0.0, 0.0, 0.0,
        5.589e-07, 6.335e-07, 5.556e-07, 4.752e-07, 3.657e-07,
        3.422e-07, 3.768e-07, 4.418e-07, 6.142e-07
    ),
    EBPulseShapeTemplate = cms.vdouble(
        0.0113979, 0.758151, 1.0, 0.887744, 0.673548,
        0.474332, 0.319561, 0.215144, 0.147464, 0.101087,
        0.0693181, 0.0475044
    ),
    EBdigiCollection = cms.string(''),
    EECorrNoiseMatrixG01 = cms.vdouble(
        1.0, 0.72698, 0.62048, 0.55691, 0.51848,
        0.49147, 0.47813, 0.47007, 0.46621, 0.46265
    ),
    EECorrNoiseMatrixG06 = cms.vdouble(
        1.0, 0.71217, 0.47464, 0.34056, 0.26282,
        0.20287, 0.17734, 0.16256, 0.15618, 0.14443
    ),
    EECorrNoiseMatrixG12 = cms.vdouble(
        1.0, 0.71373, 0.44825, 0.30152, 0.21609,
        0.14786, 0.11772, 0.10165, 0.09465, 0.08098
    ),
    EEPulseShapeCovariance = cms.vdouble(
        3.941e-05, 3.333e-05, 0.0, -1.449e-05, -1.661e-05,
        -1.424e-05, -1.183e-05, -6.842e-06, -4.915e-06, -3.411e-06,
        0.0, 0.0, 3.333e-05, 2.862e-05, 0.0,
        -1.244e-05, -1.431e-05, -1.233e-05, -1.032e-05, -5.883e-06,
        -4.154e-06, -2.902e-06, -2.128e-06, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0, 0.0,
        0.0, 0.0, 0.0, 0.0, 0.0,
        0.0, -1.449e-05, -1.244e-05, 0.0, 5.84e-06,
        6.649e-06, 5.72e-06, 4.812e-06, 2.708e-06, 1.869e-06,
        1.33e-06, 9.186e-07, 6.446e-07, -1.661e-05, -1.431e-05,
        0.0, 6.649e-06, 7.966e-06, 6.898e-06, 5.794e-06,
        3.157e-06, 2.184e-06, 1.567e-06, 1.084e-06, 7.575e-07,
        -1.424e-05, -1.233e-05, 0.0, 5.72e-06, 6.898e-06,
        6.341e-06, 5.347e-06, 2.859e-06, 1.991e-06, 1.431e-06,
        9.839e-07, 6.886e-07, -1.183e-05, -1.032e-05, 0.0,
        4.812e-06, 5.794e-06, 5.347e-06, 4.854e-06, 2.628e-06,
        1.809e-06, 1.289e-06, 9.02e-07, 6.146e-07, -6.842e-06,
        -5.883e-06, 0.0, 2.708e-06, 3.157e-06, 2.859e-06,
        2.628e-06, 1.863e-06, 1.296e-06, 8.882e-07, 6.108e-07,
        4.283e-07, -4.915e-06, -4.154e-06, 0.0, 1.869e-06,
        2.184e-06, 1.991e-06, 1.809e-06, 1.296e-06, 1.217e-06,
        8.669e-07, 5.751e-07, 3.882e-07, -3.411e-06, -2.902e-06,
        0.0, 1.33e-06, 1.567e-06, 1.431e-06, 1.289e-06,
        8.882e-07, 8.669e-07, 9.522e-07, 6.717e-07, 4.293e-07,
        0.0, -2.128e-06, 0.0, 9.186e-07, 1.084e-06,
        9.839e-07, 9.02e-07, 6.108e-07, 5.751e-07, 6.717e-07,
        7.911e-07, 5.493e-07, 0.0, 0.0, 0.0,
        6.446e-07, 7.575e-07, 6.886e-07, 6.146e-07, 4.283e-07,
        3.882e-07, 4.293e-07, 5.493e-07, 7.027e-07
    ),
    EEPulseShapeTemplate = cms.vdouble(
        0.116442, 0.756246, 1.0, 0.897182, 0.686831,
        0.491506, 0.344111, 0.245731, 0.174115, 0.123361,
        0.0874288, 0.061957
    ),
    EEdigiCollection = cms.string(''),
    ESdigiCollection = cms.string(''),
    EcalPreMixStage1 = cms.bool(False),
    EcalPreMixStage2 = cms.bool(False),
    UseLCcorrection = cms.untracked.bool(True)
)

process.ecal_pulse_shape_templates = cms.PSet(
    EBPulseShapeTemplate = cms.vdouble(
        0.0113979, 0.758151, 1.0, 0.887744, 0.673548,
        0.474332, 0.319561, 0.215144, 0.147464, 0.101087,
        0.0693181, 0.0475044
    ),
    EEPulseShapeTemplate = cms.vdouble(
        0.116442, 0.756246, 1.0, 0.897182, 0.686831,
        0.491506, 0.344111, 0.245731, 0.174115, 0.123361,
        0.0874288, 0.061957
    )
)

process.ecal_time_digi_parameters = cms.PSet(
    EBtimeDigiCollection = cms.string('EBTimeDigi'),
    EEtimeDigiCollection = cms.string('EETimeDigi'),
    hitsProducerEB = cms.InputTag("g4SimHits","EcalHitsEB"),
    hitsProducerEE = cms.InputTag("g4SimHits","EcalHitsEE"),
    timeLayerBarrel = cms.int32(7),
    timeLayerEndcap = cms.int32(3)
)

process.hiDetachedQuadStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hiDetachedQuadStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(4),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiDetachedQuadStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiDetachedQuadStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiDetachedTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hiDetachedTripletStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(0),
    maxPtForLooperReconstruction = cms.double(0),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiDetachedTripletStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiDetachedTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(0.701),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.3),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiHighPtStepTruncMTS = cms.PSet(
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    chi2n_no1Dmod_par = cms.double(9999.0),
    chi2n_par = cms.double(0.3),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(True),
    d0_par1 = cms.vdouble(9999.0, 0.0),
    d0_par2 = cms.vdouble(9999.0, 0.0),
    dz_par1 = cms.vdouble(9999.0, 0.0),
    dz_par2 = cms.vdouble(9999.0, 0.0),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(100),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(9999.0),
    max_z0 = cms.double(100),
    minHitsToBypassChecks = cms.uint32(9999),
    minMVA = cms.double(-1),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(0),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(12),
    nSigmaZ = cms.double(9999.0),
    name = cms.string('hiHighPtTrkTrunc'),
    pixel_pTMaxCut = cms.vdouble(9998, 9999, 9999, 1.0),
    pixel_pTMinCut = cms.vdouble(1.0, 1.8, 0.15, 2.5),
    preFilterName = cms.string(''),
    qualityBit = cms.string(''),
    res_par = cms.vdouble(99999.0, 99999.0),
    useMVA = cms.bool(False),
    vertexCut = cms.string(''),
    vtxNumber = cms.int32(-1)
)

process.hiHighPtTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hiHighPtTripletStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiHighPtTripletStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiHighPtTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiHighpurityMTS = cms.PSet(
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    chi2n_no1Dmod_par = cms.double(0.15),
    chi2n_par = cms.double(0.3),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(True),
    d0_par1 = cms.vdouble(9999.0, 0.0),
    d0_par2 = cms.vdouble(3.0, 0.0),
    dz_par1 = cms.vdouble(9999.0, 0.0),
    dz_par2 = cms.vdouble(3.0, 0.0),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(100),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(0.05),
    max_z0 = cms.double(100),
    minHitsToBypassChecks = cms.uint32(999),
    minMVA = cms.double(-1),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(0),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(8),
    nSigmaZ = cms.double(9999.0),
    name = cms.string('hiTrkHighPurity'),
    preFilterName = cms.string('hiTrkTight'),
    qualityBit = cms.string('highPurity'),
    res_par = cms.vdouble(99999.0, 99999.0),
    useMVA = cms.bool(False),
    vertexCut = cms.string(''),
    vtxNumber = cms.int32(-1)
)

process.hiJetCoreRegionalStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hiJetCoreRegionalStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(50),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiJetCoreRegionalStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiJetCoreRegionalStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(10.0),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiLooseMTS = cms.PSet(
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    chi2n_no1Dmod_par = cms.double(9999.0),
    chi2n_par = cms.double(0.3),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(True),
    d0_par1 = cms.vdouble(9999.0, 0.0),
    d0_par2 = cms.vdouble(0.4, 4.0),
    dz_par1 = cms.vdouble(9999.0, 0.0),
    dz_par2 = cms.vdouble(0.4, 4.0),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(100),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(0.2),
    max_z0 = cms.double(100),
    minHitsToBypassChecks = cms.uint32(999),
    minMVA = cms.double(-1),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(0),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(8),
    nSigmaZ = cms.double(9999.0),
    name = cms.string('hiTrkLoose'),
    preFilterName = cms.string(''),
    qualityBit = cms.string('loose'),
    res_par = cms.vdouble(99999.0, 99999.0),
    useMVA = cms.bool(False),
    vertexCut = cms.string(''),
    vtxNumber = cms.int32(-1)
)

process.hiLowPtQuadStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hiLowPtQuadStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(4),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiLowPtQuadStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiLowPtQuadStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiLowPtTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hiLowPtTripletStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiLowPtTripletStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiLowPtTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(1),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.4),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiPixelOnlyStepHighpurityMTS = cms.PSet(
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    chi2n_no1Dmod_par = cms.double(12.0),
    chi2n_par = cms.double(0.3),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(True),
    d0_par1 = cms.vdouble(9999.0, 0.0),
    d0_par2 = cms.vdouble(9999.0, 0.0),
    dz_par1 = cms.vdouble(9999.0, 0.0),
    dz_par2 = cms.vdouble(10.0, 0.0),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(100),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(9999.0),
    max_z0 = cms.double(100),
    minHitsToBypassChecks = cms.uint32(999),
    minMVA = cms.double(-1),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(0),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(0),
    nSigmaZ = cms.double(9999.0),
    name = cms.string('hiPixelOnlyTrkHighPurity'),
    pixel_pTMaxCut = cms.vdouble(2.4, 1.6, 12, 2.5),
    pixel_pTMinCut = cms.vdouble(0.0001, 0.0, 9999, 1.0),
    preFilterName = cms.string('hiPixelOnlyTrkTight'),
    qualityBit = cms.string('highPurity'),
    res_par = cms.vdouble(99999.0, 99999.0),
    useMVA = cms.bool(False),
    vertexCut = cms.string(''),
    vtxNumber = cms.int32(-1)
)

process.hiPixelOnlyStepLooseMTS = cms.PSet(
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    chi2n_no1Dmod_par = cms.double(25.0),
    chi2n_par = cms.double(0.3),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(True),
    d0_par1 = cms.vdouble(9999.0, 0.0),
    d0_par2 = cms.vdouble(9999.0, 0.0),
    dz_par1 = cms.vdouble(9999.0, 0.0),
    dz_par2 = cms.vdouble(14.0, 0.0),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(100),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(9999.0),
    max_z0 = cms.double(100),
    minHitsToBypassChecks = cms.uint32(999),
    minMVA = cms.double(-1),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(0),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(0),
    nSigmaZ = cms.double(9999.0),
    name = cms.string('hiPixelOnlyTrkLoose'),
    pixel_pTMaxCut = cms.vdouble(10, 5, 25, 2.5),
    pixel_pTMinCut = cms.vdouble(0.0001, 0.0, 9999, 1.0),
    preFilterName = cms.string(''),
    qualityBit = cms.string('loose'),
    res_par = cms.vdouble(99999.0, 99999.0),
    useMVA = cms.bool(False),
    vertexCut = cms.string(''),
    vtxNumber = cms.int32(-1)
)

process.hiPixelOnlyStepTightMTS = cms.PSet(
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    chi2n_no1Dmod_par = cms.double(18.0),
    chi2n_par = cms.double(0.3),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(True),
    d0_par1 = cms.vdouble(9999.0, 0.0),
    d0_par2 = cms.vdouble(9999.0, 0.0),
    dz_par1 = cms.vdouble(9999.0, 0.0),
    dz_par2 = cms.vdouble(12.0, 0.0),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(100),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(9999.0),
    max_z0 = cms.double(100),
    minHitsToBypassChecks = cms.uint32(999),
    minMVA = cms.double(-1),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(0),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(0),
    nSigmaZ = cms.double(9999.0),
    name = cms.string('hiPixelOnlyTrkTight'),
    pixel_pTMaxCut = cms.vdouble(4, 2, 18, 2.5),
    pixel_pTMinCut = cms.vdouble(0.0001, 0.0, 9999, 1.0),
    preFilterName = cms.string('hiPixelOnlyTrkLoose'),
    qualityBit = cms.string('tight'),
    res_par = cms.vdouble(99999.0, 99999.0),
    useMVA = cms.bool(False),
    vertexCut = cms.string(''),
    vtxNumber = cms.int32(-1)
)

process.hiPixelPairTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('hiPixelPairChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiPixelPairTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiPixelPairTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(1.0),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiRegitMuDetachedTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    clustersToSkip = cms.InputTag("hiRegitMuDetachedTripletStepClusters"),
    estimator = cms.string('detachedTripletStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('detachedTripletStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiRegitMuDetachedTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(
        cms.PSet(
            refToPSet_ = cms.string('hiRegitMuDetachedTripletStepTrajectoryFilterBase')
        ),
        cms.PSet(
            refToPSet_ = cms.string('detachedTripletStepTrajectoryFilterShape')
        )
    )
)

process.hiRegitMuDetachedTripletStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.8),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiRegitMuInitialStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('initialStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiRegitMuInitialStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiRegitMuInitialStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(
        cms.PSet(
            refToPSet_ = cms.string('hiRegitMuInitialStepTrajectoryFilterBase')
        ),
        cms.PSet(
            refToPSet_ = cms.string('initialStepTrajectoryFilterShape')
        )
    )
)

process.hiRegitMuInitialStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(2.5),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiRegitMuMixedTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('mixedTripletStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(6),
    propagatorAlong = cms.string('mixedTripletStepPropagator'),
    propagatorOpposite = cms.string('mixedTripletStepPropagatorOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiRegitMuMixedTripletStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiRegitMuMixedTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.4),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(4),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(1.0),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiRegitMuPixelLessStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('pixelLessStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(6),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiRegitMuPixelLessStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiRegitMuPixelLessStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(4),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(1.7),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(1),
    strictSeedExtension = cms.bool(False)
)

process.hiRegitMuPixelPairStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('pixelPairStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(6),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('hiRegitMuPixelPairStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.hiRegitMuPixelPairStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(
        cms.PSet(
            refToPSet_ = cms.string('hiRegitMuPixelPairStepTrajectoryFilterBase')
        ),
        cms.PSet(
            refToPSet_ = cms.string('pixelPairStepTrajectoryFilterShape')
        )
    )
)

process.hiRegitMuPixelPairStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(4),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.8),
    minimumNumberOfHits = cms.int32(6),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.hiTightMTS = cms.PSet(
    applyAbsCutsIfNoPV = cms.bool(False),
    applyAdaptedPVCuts = cms.bool(True),
    chi2n_no1Dmod_par = cms.double(0.25),
    chi2n_par = cms.double(0.3),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(True),
    d0_par1 = cms.vdouble(9999.0, 0.0),
    d0_par2 = cms.vdouble(5.0, 0.0),
    dz_par1 = cms.vdouble(9999.0, 0.0),
    dz_par2 = cms.vdouble(5.0, 0.0),
    keepAllTracks = cms.bool(True),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(100),
    max_eta = cms.double(9999.0),
    max_lostHitFraction = cms.double(1.0),
    max_minMissHitOutOrIn = cms.int32(99),
    max_relpterr = cms.double(0.075),
    max_z0 = cms.double(100),
    minHitsToBypassChecks = cms.uint32(999),
    minMVA = cms.double(-1),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(0),
    min_eta = cms.double(-9999.0),
    min_nhits = cms.uint32(8),
    nSigmaZ = cms.double(9999.0),
    name = cms.string('hiTrkTight'),
    preFilterName = cms.string('hiTrkLoose'),
    qualityBit = cms.string('tight'),
    res_par = cms.vdouble(99999.0, 99999.0),
    useMVA = cms.bool(False),
    vertexCut = cms.string(''),
    vtxNumber = cms.int32(-1)
)

process.highPtTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('highPtTripletStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('highPtTripletStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.highPtTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(cms.PSet(
        refToPSet_ = cms.string('highPtTripletStepTrajectoryFilterBase')
    ))
)

process.highPtTripletStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.highPtTripletStepTrajectoryFilterInOut = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.4),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(1),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.iPSet = cms.PSet(
    coneSize = cms.double(0.3),
    isolateAgainst = cms.string('h+'),
    isolationAlgo = cms.string('ElectronPFIsolationWithMapBasedVeto'),
    miniAODVertexCodes = cms.vuint32(2, 3),
    particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedGsfElectronsTmp"),
    vertexIndex = cms.int32(0)
)

process.initialStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('initialStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('initialStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.initialStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(cms.PSet(
        refToPSet_ = cms.string('initialStepTrajectoryFilterBase')
    ))
)

process.initialStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.2),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.initialStepTrajectoryFilterInOut = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.2),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(True),
    seedExtension = cms.int32(1),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(True)
)

process.initialStepTrajectoryFilterShape = cms.PSet(
    ComponentType = cms.string('StripSubClusterShapeTrajectoryFilter'),
    layerMask = cms.PSet(
        TEC = cms.bool(False),
        TIB = cms.vuint32(1, 2),
        TID = cms.vuint32(1, 2),
        TOB = cms.bool(False)
    ),
    maxNSat = cms.uint32(3),
    maxTrimmedSizeDiffNeg = cms.double(1.0),
    maxTrimmedSizeDiffPos = cms.double(0.7),
    seedCutMIPs = cms.double(0.35),
    seedCutSN = cms.double(7.0),
    subclusterCutMIPs = cms.double(0.45),
    subclusterCutSN = cms.double(12.0),
    subclusterWindow = cms.double(0.7),
    trimMaxADC = cms.double(30.0),
    trimMaxFracNeigh = cms.double(0.25),
    trimMaxFracTotal = cms.double(0.15)
)

process.interestingEgammaIsoHCALSel = cms.PSet(
    maxDIEta = cms.int32(5),
    maxDIPhi = cms.int32(5),
    minEnergyHB = cms.double(0.8),
    minEnergyHEDefault = cms.double(0.2),
    minEnergyHEDepth1 = cms.double(0.1)
)

process.isolationInputParameters = cms.PSet(
    barrelBasicCluster = cms.InputTag("islandBasicClusters","islandBarrelBasicClusters"),
    endcapBasicCluster = cms.InputTag("islandBasicClusters","islandEndcapBasicClusters"),
    hbhereco = cms.InputTag("hbhereco"),
    hfreco = cms.InputTag("hfreco"),
    horeco = cms.InputTag("horeco"),
    photons = cms.InputTag("cleanPhotons"),
    track = cms.InputTag("hiGeneralTracks")
)

process.isolationSumsCalculator = cms.PSet(
    ComponentName = cms.string('isolationSumsCalculator'),
    EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
    EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
    EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
    EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
    EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
    EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
    EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
    EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
    EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
    EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
    EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
    EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
    EcalRecHitThreshEA_Barrel = cms.double(0.095),
    EcalRecHitThreshEA_Endcap = cms.double(0.0),
    EcalRecHitThreshEB_Barrel = cms.double(0.095),
    EcalRecHitThreshEB_Endcap = cms.double(0.0),
    EcalRecHitThreshEtA_Barrel = cms.double(0.0),
    EcalRecHitThreshEtA_Endcap = cms.double(0.11),
    EcalRecHitThreshEtB_Barrel = cms.double(0.0),
    EcalRecHitThreshEtB_Endcap = cms.double(0.11),
    HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
    HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
    HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
    HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
    HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
    HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
    HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
    HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
    HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
    HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
    HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
    HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
    HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
    HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
    HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
    HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
    HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
    HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
    HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
    HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
    HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
    HcalDepth2TowerThreshEB_Barrel = cms.double(0.0),
    HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
    HcalRecHitCollection = cms.InputTag("towerMaker"),
    HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
    HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
    HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
    HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
    HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
    HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
    HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
    HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
    HcalTowerThreshEA_Barrel = cms.double(0.0),
    HcalTowerThreshEA_Endcap = cms.double(0.0),
    HcalTowerThreshEB_Barrel = cms.double(0.0),
    HcalTowerThreshEB_Endcap = cms.double(0.0),
    TrackConeInnerRadiusA_Barrel = cms.double(0.04),
    TrackConeInnerRadiusA_Endcap = cms.double(0.04),
    TrackConeInnerRadiusB_Barrel = cms.double(0.04),
    TrackConeInnerRadiusB_Endcap = cms.double(0.04),
    TrackConeOuterRadiusA_Barrel = cms.double(0.4),
    TrackConeOuterRadiusA_Endcap = cms.double(0.4),
    TrackConeOuterRadiusB_Barrel = cms.double(0.3),
    TrackConeOuterRadiusB_Endcap = cms.double(0.3),
    barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    beamSpotProducer = cms.InputTag("offlineBeamSpot"),
    endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    isolationtrackEtaSliceA_Barrel = cms.double(0.015),
    isolationtrackEtaSliceA_Endcap = cms.double(0.015),
    isolationtrackEtaSliceB_Barrel = cms.double(0.015),
    isolationtrackEtaSliceB_Endcap = cms.double(0.015),
    isolationtrackThresholdA_Barrel = cms.double(0.0),
    isolationtrackThresholdA_Endcap = cms.double(0.0),
    isolationtrackThresholdB_Barrel = cms.double(0.0),
    isolationtrackThresholdB_Endcap = cms.double(0.0),
    longImpactParameterA_Barrel = cms.double(0.2),
    longImpactParameterA_Endcap = cms.double(0.2),
    longImpactParameterB_Barrel = cms.double(0.2),
    longImpactParameterB_Endcap = cms.double(0.2),
    moduleEtaBoundary = cms.vdouble(
        0.0, 0.02, 0.43, 0.46, 0.78,
        0.81, 1.13, 1.15, 1.45, 1.58
    ),
    modulePhiBoundary = cms.double(0.0087),
    trackProducer = cms.InputTag("generalTracks"),
    transImpactParameterA_Barrel = cms.double(0.1),
    transImpactParameterA_Endcap = cms.double(0.1),
    transImpactParameterB_Barrel = cms.double(0.1),
    transImpactParameterB_Endcap = cms.double(0.1),
    useNumCrystals = cms.bool(True),
    vetoClustered = cms.bool(False)
)

process.lowPtQuadStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('lowPtQuadStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(4),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('lowPtQuadStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.lowPtQuadStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(cms.PSet(
        refToPSet_ = cms.string('lowPtQuadStepTrajectoryFilterBase')
    ))
)

process.lowPtQuadStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.075),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.maxEvents = cms.untracked.PSet(
    input = cms.untracked.int32(-1)
)

process.mipVariable = cms.PSet(
    ComponentName = cms.string('mipVariable'),
    HaloDiscThreshold = cms.double(70.0),
    ResidualWidth = cms.double(0.23),
    XRangeFit = cms.double(180.0),
    YRangeFit = cms.double(7.0),
    barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
)

process.mixedTripletStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('mixedTripletStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('mixedTripletStepPropagator'),
    propagatorOpposite = cms.string('mixedTripletStepPropagatorOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('mixedTripletStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.mixedTripletStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(1.4),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.4),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.muonSeededTrajectoryBuilderForInOut = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('muonSeededMeasurementEstimatorForInOut'),
    foundHitBonus = cms.double(1000.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryFilterForInOut')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(True),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(1.0),
    maxCand = cms.int32(5),
    minNrOfHitsForRebuild = cms.int32(2),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryFilterForInOut')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.muonSeededTrajectoryBuilderForOutIn = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('muonSeededMeasurementEstimatorForOutIn'),
    foundHitBonus = cms.double(1000.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryFilterForOutIn')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(1.0),
    maxCand = cms.int32(3),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryFilterForOutIn')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.muonSeededTrajectoryBuilderForOutInDisplaced = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('muonSeededMeasurementEstimatorForOutInDisplaced'),
    foundHitBonus = cms.double(1000.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryFilterForOutInDisplaced')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(1.0),
    maxCand = cms.int32(3),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryFilterForOutInDisplaced')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.muonSeededTrajectoryFilterForInOut = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(10),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.muonSeededTrajectoryFilterForOutIn = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(10),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.muonSeededTrajectoryFilterForOutInDisplaced = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(10),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.9),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.options = cms.untracked.PSet(
    canDeleteEarly = cms.untracked.vstring(
        'RegionsSeedingHitSets_initialStepHitQuadruplets__reRECO',
        'IntermediateHitDoublets_hiRegitMuMixedTripletStepHitDoubletsB__reRECO',
        'recoIsoDepositedmValueMap_elPFIsoDepositChargedAll__reRECO',
        'IntermediateHitDoublets_detachedTripletStepHitDoublets__reRECO',
        'RegionsSeedingHitSets_hiRegitMuMixedTripletStepHitTripletsA__reRECO',
        'BaseTrackerRecHitsOwned_tobTecStepHitTripletsTripl__reRECO',
        'RegionsSeedingHitSets_hiDetachedTripletStepTracksHitTripletsCA__reRECO',
        'RegionsSeedingHitSets_hiRegitMuPixelLessStepHitTriplets__reRECO',
        'recoIsoDepositedmValueMap_phPFIsoDepositPU__reRECO',
        'IntermediateHitDoublets_hiDetachedTripletStepTracksHitDoublets__reRECO',
        'RegionsSeedingHitSets_mixedTripletStepHitTripletsA__reRECO',
        'IntermediateHitDoublets_hiPixel3ProtoTracksHitDoublets__reRECO',
        'RegionsSeedingHitSets_hiLowPtQuadStepTracksHitQuadrupletsCA__reRECO',
        'RegionsSeedingHitSets_mixedTripletStepHitTripletsB__reRECO',
        'recoIsoDepositedmValueMap_elEDIsoDepositGamma__reRECO',
        'recoIsoDepositedmValueMap_elPFIsoDepositPU__reRECO',
        'recoIsoDepositedmValueMap_gedElPFIsoDepositChargedAll__reRECO',
        'IntermediateHitDoublets_hiHighPtTripletStepTracksHitDoubletsCA__reRECO',
        'recoIsoDepositedmValueMap_elPFIsoDepositGamma__reRECO',
        'recoIsoDepositedmValueMap_phPFIsoDepositCharged__reRECO',
        'IntermediateHitTriplets_hiPixel3PrimTracksHitTriplets__reRECO',
        'RegionsSeedingHitSets_detachedQuadStepHitQuadruplets__reRECO',
        'IntermediateHitDoublets_hiLowPtTripletStepTracksHitDoublets__reRECO',
        'RegionsSeedingHitSets_initialStepHitTriplets__reRECO',
        'recoIsoDepositedmValueMap_elEDIsoDepositCharged__reRECO',
        'recoIsoDepositedmValueMap_phPFIsoDepositNeutral__reRECO',
        'recoIsoDepositedmValueMap_gedElPFIsoDepositGamma__reRECO',
        'RegionsSeedingHitSets_hiPixel3ProtoTracksHitTripletsPreSplitting__reRECO',
        'RegionsSeedingHitSets_hiPixel3PrimTracksHitQuadrupletsCA__reRECO',
        'RegionsSeedingHitSets_hiPixel3PrimTracksHitTriplets__reRECO',
        'IntermediateHitDoublets_tobTecStepHitDoubletsTripl__reRECO',
        'RegionsSeedingHitSets_hiLowPtTripletStepTracksHitTriplets__reRECO',
        'RegionsSeedingHitSets_lowPtQuadStepHitQuadruplets__reRECO',
        'IntermediateHitDoublets_hiPixel3PRotoTracksHitDoubletsPreSplitting__reRECO',
        'RegionsSeedingHitSets_hiRegitMuInitialStepHitTriplets__reRECO',
        'recoIsoDepositedmValueMap_elEDIsoDepositNeutral__reRECO',
        'recoIsoDepositedmValueMap_elPFIsoDepositNeutral__reRECO',
        'IntermediateHitDoublets_initialStepHitDoublets__reRECO',
        'RegionsSeedingHitSets_hiRegitMuMixedTripletStepHitTripletsB__reRECO',
        'BaseTrackerRecHitsOwned_hiRegitMuPixelLessStepHitTriplets__reRECO',
        'IntermediateHitDoublets_pixelLessStepHitDoublets__reRECO',
        'RegionsSeedingHitSets_hiPixel3ProtoTracksHitTriplets__reRECO',
        'recoIsoDepositedmValueMap_gedElPFIsoDepositCharged__reRECO',
        'recoIsoDepositedmValueMap_phPFIsoDepositGamma__reRECO',
        'IntermediateHitDoublets_hiLowPtTripletStepTracksHitDoubletsCA__reRECO',
        'IntermediateHitDoublets_hiDetachedTripletStepTracksHitDoubletsCA__reRECO',
        'IntermediateHitDoublets_highPtTripletStepHitDoublets__reRECO',
        'recoIsoDepositedmValueMap_gedElPFIsoDepositPU__reRECO',
        'IntermediateHitDoublets_hiRegitMuPixelLessStepHitDoublets__reRECO',
        'IntermediateHitDoublets_hiPixel3PrimTracksHitDoublets__reRECO',
        'RegionsSeedingHitSets_hiConformalPixelTracksHitTriplets__reRECO',
        'RegionsSeedingHitSets_detachedTripletStepHitTriplets__reRECO',
        'RegionsSeedingHitSets_tobTecStepHitDoubletsPair__reRECO',
        'RegionsSeedingHitSets_highPtTripletStepHitTriplets__reRECO',
        'recoIsoDepositedmValueMap_elEDIsoDepositChargedAll__reRECO',
        'IntermediateHitDoublets_hiConformalPixelTracksPhase1HitDoubletsCA__reRECO',
        'RegionsSeedingHitSets_hiDetachedTripletStepTracksHitTriplets__reRECO',
        'IntermediateHitDoublets_mixedTripletStepHitDoubletsB__reRECO',
        'RegionsSeedingHitSets_hiDetachedQuadStepTracksHitQuadrupletsCA__reRECO',
        'recoIsoDepositedmValueMap_gedElPFIsoDepositNeutral__reRECO',
        'IntermediateHitDoublets_hiDetachedQuadStepTracksHitDoubletsCA__reRECO',
        'RegionsSeedingHitSets_pixelPairStepHitDoubletsB__reRECO',
        'recoIsoDepositedmValueMap_elPFIsoDepositCharged__reRECO',
        'IntermediateHitDoublets_hiConformalPixelTracksHitDoublets__reRECO',
        'RegionsSeedingHitSets_hiLowPtTripletStepTracksHitTripletsCA__reRECO',
        'RegionsSeedingHitSets_hiPixelPairStepHitDoubletsPhase1__reRECO',
        'RegionsSeedingHitSets_hiHighPtTripletStepTracksHitTripletsCA__reRECO',
        'IntermediateHitDoublets_hiRegitMuInitialStepHitDoublets__reRECO',
        'IntermediateHitDoublets_mixedTripletStepHitDoubletsA__reRECO',
        'recoIsoDepositedmValueMap_elEDIsoDepositPU__reRECO',
        'IntermediateHitDoublets_hiRegitMuMixedTripletStepHitDoubletsA__reRECO',
        'IntermediateHitDoublets_hiLowPtQuadStepTracksHitDoubletsCA__reRECO',
        'RegionsSeedingHitSets_tobTecStepHitTripletsTripl__reRECO',
        'RegionsSeedingHitSets_hiRegitMuDetachedTripletStepHitTriplets__reRECO',
        'IntermediateHitDoublets_hiPixel3PrimTracksHitDoubletsCA__reRECO',
        'BaseTrackerRecHitsOwned_pixelLessStepHitTriplets__reRECO',
        'IntermediateHitDoublets_hiRegitMuDetachedTripletStepHitDoublets__reRECO',
        'RegionsSeedingHitSets_pixelPairStepHitDoublets__reRECO',
        'recoIsoDepositedmValueMap_phPFIsoDepositChargedAll__reRECO',
        'RegionsSeedingHitSets_hiConformalPixelTracksPhase1HitQuadrupletsCA__reRECO',
        'IntermediateHitDoublets_lowPtQuadStepHitDoublets__reRECO',
        'RegionsSeedingHitSets_hiRegitMuPixelPairStepHitDoublets__reRECO',
        'IntermediateHitDoublets_detachedQuadStepHitDoublets__reRECO',
        'RegionsSeedingHitSets_pixelLessStepHitTriplets__reRECO'
    )
)

process.pfBlockBasedIsolation = cms.PSet(
    ComponentName = cms.string('pfBlockBasedIsolation'),
    coneSize = cms.double(9999999999)
)

process.pfElecMva = cms.PSet(
    MVACut = cms.double(-1.0)
)

process.pfIsolationCalculator = cms.PSet(
    ComponentName = cms.string('pfIsolationCalculator'),
    applyDzDxyVeto = cms.bool(True),
    applyMissHitPhVeto = cms.bool(False),
    applyPFPUVeto = cms.bool(True),
    applyVeto = cms.bool(True),
    checkClosestZVertex = cms.bool(True),
    coneDR = cms.double(0.3),
    deltaRVetoBarrel = cms.bool(True),
    deltaRVetoBarrelCharged = cms.double(0.02),
    deltaRVetoBarrelNeutrals = cms.double(-1.0),
    deltaRVetoBarrelPhotons = cms.double(-1.0),
    deltaRVetoEndcap = cms.bool(True),
    deltaRVetoEndcapCharged = cms.double(0.02),
    deltaRVetoEndcapNeutrals = cms.double(-1.0),
    deltaRVetoEndcapPhotons = cms.double(0.07),
    numberOfCrystalEndcapPhotons = cms.double(4.0),
    numberOfRings = cms.int32(1),
    particleType = cms.int32(1),
    rectangleDeltaEtaVetoBarrelCharged = cms.double(-1),
    rectangleDeltaEtaVetoBarrelNeutrals = cms.double(-1),
    rectangleDeltaEtaVetoBarrelPhotons = cms.double(0.015),
    rectangleDeltaEtaVetoEndcapCharged = cms.double(-1),
    rectangleDeltaEtaVetoEndcapNeutrals = cms.double(-1),
    rectangleDeltaEtaVetoEndcapPhotons = cms.double(-1),
    rectangleDeltaPhiVetoBarrelCharged = cms.double(-1),
    rectangleDeltaPhiVetoBarrelNeutrals = cms.double(-1),
    rectangleDeltaPhiVetoBarrelPhotons = cms.double(1.0),
    rectangleDeltaPhiVetoEndcapCharged = cms.double(-1),
    rectangleDeltaPhiVetoEndcapNeutrals = cms.double(-1),
    rectangleDeltaPhiVetoEndcapPhotons = cms.double(-1),
    rectangleVetoBarrel = cms.bool(True),
    rectangleVetoEndcap = cms.bool(False),
    ringSize = cms.double(0.3),
    useCrystalSize = cms.bool(True)
)

process.pixelLessStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('pixelLessStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(4),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('pixelLessStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.pixelLessStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.7),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(1),
    strictSeedExtension = cms.bool(False)
)

process.pixelPairStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(True),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('pixelPairStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('CkfBaseTrajectoryFilter_block')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(3),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(5),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('pixelPairStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(True)
)

process.pixelPairStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CompositeTrajectoryFilter'),
    filters = cms.VPSet(cms.PSet(
        refToPSet_ = cms.string('pixelPairStepTrajectoryFilterBase')
    ))
)

process.pixelPairStepTrajectoryFilterBase = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(3),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.pixelPairStepTrajectoryFilterInOut = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(0),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(999),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(1),
    seedPairPenalty = cms.int32(0),
    strictSeedExtension = cms.bool(False)
)

process.pixelPairStepTrajectoryFilterShape = cms.PSet(
    ComponentType = cms.string('StripSubClusterShapeTrajectoryFilter'),
    layerMask = cms.PSet(
        TEC = cms.bool(False),
        TIB = cms.vuint32(1, 2),
        TID = cms.vuint32(1, 2),
        TOB = cms.bool(False)
    ),
    maxNSat = cms.uint32(3),
    maxTrimmedSizeDiffNeg = cms.double(1.0),
    maxTrimmedSizeDiffPos = cms.double(0.7),
    seedCutMIPs = cms.double(0.35),
    seedCutSN = cms.double(7.0),
    subclusterCutMIPs = cms.double(0.45),
    subclusterCutSN = cms.double(12.0),
    subclusterWindow = cms.double(0.7),
    trimMaxADC = cms.double(30.0),
    trimMaxFracNeigh = cms.double(0.25),
    trimMaxFracTotal = cms.double(0.15)
)

process.ptSeedParameterization = cms.PSet(
    CSC_01 = cms.vdouble(
        0.155906, -0.000406, 0.0, 0.194022, -0.010181,
        0.0
    ),
    CSC_02 = cms.vdouble(
        0.600235, -0.205683, 0.001113, 0.655625, -0.682129,
        0.253916
    ),
    CSC_03 = cms.vdouble(
        0.498992, -0.086235, -0.025772, 2.761006, -2.667607,
        0.72802
    ),
    CSC_12 = cms.vdouble(
        -0.363549, 0.569552, -0.173186, 7.777069, -10.203618,
        3.478874
    ),
    CSC_13 = cms.vdouble(
        1.22495, -1.792358, 0.711378, 5.271848, -6.280625,
        2.0142
    ),
    CSC_14 = cms.vdouble(
        0.952517, -0.532733, 0.084601, 1.615881, -1.630744,
        0.514139
    ),
    CSC_23 = cms.vdouble(
        -0.095236, 0.122061, -0.029852, -11.396689, 15.933598,
        -4.267065
    ),
    CSC_24 = cms.vdouble(
        -0.049769, 0.063087, -0.011029, -13.765978, 16.296143,
        -4.241835
    ),
    CSC_34 = cms.vdouble(
        0.144321, -0.142283, 0.035636, 190.260708, -180.888643,
        43.430395
    ),
    DT_12 = cms.vdouble(
        0.176182, 0.058535, -0.090549, 0.202363, -0.203126,
        0.222219
    ),
    DT_13 = cms.vdouble(
        0.298842, 0.076531, -0.14293, 0.219923, -0.145026,
        0.155638
    ),
    DT_14 = cms.vdouble(
        0.388423, 0.068698, -0.145925, 0.159515, 0.124299,
        -0.133269
    ),
    DT_23 = cms.vdouble(
        0.120647, 0.034743, -0.070855, 0.302427, -0.21417,
        0.261012
    ),
    DT_24 = cms.vdouble(
        0.189527, 0.037328, -0.088523, 0.251936, 0.032411,
        0.010984
    ),
    DT_34 = cms.vdouble(
        0.049146, -0.003494, -0.010099, 0.672095, 0.36459,
        -0.304346
    ),
    OL_1213 = cms.vdouble(
        0.960544, -0.75644, 0.0, 0.1636, 0.114178,
        0.0
    ),
    OL_1222 = cms.vdouble(
        0.215915, 0.002556, 0.0, 0.313596, -0.021465,
        0.0
    ),
    OL_1232 = cms.vdouble(
        0.162626, 0.000843, 0.0, 0.396271, 0.002791,
        0.0
    ),
    OL_2213 = cms.vdouble(
        0.563218, -0.493991, 0.0, 0.943776, -0.591751,
        0.0
    ),
    OL_2222 = cms.vdouble(
        0.087587, 0.005729, 0.0, 0.535169, -0.087675,
        0.0
    ),
    SMB_10 = cms.vdouble(
        1.160532, 0.148991, 0.0, 0.182785, -0.093776,
        0.0
    ),
    SMB_11 = cms.vdouble(
        1.289468, -0.139653, 0.0, 0.137191, 0.01217,
        0.0
    ),
    SMB_12 = cms.vdouble(
        1.923091, -0.913204, 0.0, 0.161556, 0.020215,
        0.0
    ),
    SMB_20 = cms.vdouble(
        0.861314, -0.16233, 0.0, 0.248879, -0.113879,
        0.0
    ),
    SMB_21 = cms.vdouble(
        0.918425, -0.141199, 0.0, 0.254515, -0.111848,
        0.0
    ),
    SMB_22 = cms.vdouble(
        1.308565, -0.701634, 0.0, -0.302861, 0.675785,
        0.0
    ),
    SMB_30 = cms.vdouble(
        0.399628, 0.014922, 0.0, 0.665622, 0.358439,
        0.0
    ),
    SMB_31 = cms.vdouble(
        0.398661, -0.024853, 0.0, 0.863324, -0.413048,
        0.0
    ),
    SMB_32 = cms.vdouble(
        0.421649, -0.111654, 0.0, -0.044613, 1.134858,
        0.0
    ),
    SME_11 = cms.vdouble(
        2.39479, -0.888663, 0.0, -4.604546, 3.623464,
        0.0
    ),
    SME_12 = cms.vdouble(
        -0.277294, 0.7616, 0.0, -0.243326, 1.446792,
        0.0
    ),
    SME_13 = cms.vdouble(
        0.398851, 0.028176, 0.0, 0.567015, 2.623232,
        0.0
    ),
    SME_21 = cms.vdouble(
        0.64895, -0.148762, 0.0, -5.07676, 6.284227,
        0.0
    ),
    SME_22 = cms.vdouble(
        -0.624708, 0.641043, 0.0, 32.581295, -19.604264,
        0.0
    ),
    SME_31 = cms.vdouble(
        -0.588188, 0.316961, 0.0, -95.261732, 45.444051,
        0.0
    ),
    SME_32 = cms.vdouble(
        -0.021912, -0.008995, 0.0, -49.779764, 30.780972,
        0.0
    ),
    SME_41 = cms.vdouble(
        -0.187116, 0.076415, 0.0, -58.552583, 27.933864,
        0.0
    ),
    SME_42 = cms.vdouble(
        -0.021912, -0.008995, 0.0, -49.779764, 30.780972,
        0.0
    )
)

process.reRecoMuonAOD = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
    )
)

process.reRecoMuonFEVT = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
    )
)

process.reRecoMuonRECO = cms.PSet(
    outputCommands = cms.untracked.vstring(
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
    )
)

process.regressionModifier = cms.PSet(
    eOverP_ECALTRKThr = cms.double(0.025),
    electron_config = cms.PSet(
        regressionKey_ecalonly = cms.vstring(
            'electron_eb_ECALonly_lowpt',
            'electron_eb_ECALonly',
            'electron_ee_ECALonly_lowpt',
            'electron_ee_ECALonly'
        ),
        regressionKey_ecaltrk = cms.vstring(
            'electron_eb_ECALTRK_lowpt',
            'electron_eb_ECALTRK',
            'electron_ee_ECALTRK_lowpt',
            'electron_ee_ECALTRK'
        ),
        uncertaintyKey_ecalonly = cms.vstring(
            'electron_eb_ECALonly_lowpt_var',
            'electron_eb_ECALonly_var',
            'electron_ee_ECALonly_lowpt_var',
            'electron_ee_ECALonly_var'
        ),
        uncertaintyKey_ecaltrk = cms.vstring(
            'electron_eb_ECALTRK_lowpt_var',
            'electron_eb_ECALTRK_var',
            'electron_ee_ECALTRK_lowpt_var',
            'electron_ee_ECALTRK_var'
        )
    ),
    epDiffSig_ECALTRKThr = cms.double(15.0),
    epSig_ECALTRKThr = cms.double(10.0),
    forceHighEnergyEcalTrainingIfSaturated = cms.bool(True),
    highEnergy_ECALTRKThr = cms.double(200.0),
    lowEnergy_ECALTRKThr = cms.double(50.0),
    lowEnergy_ECALonlyThr = cms.double(99999.0),
    modifierName = cms.string('EGRegressionModifierV2'),
    photon_config = cms.PSet(
        regressionKey_ecalonly = cms.vstring(
            'photon_eb_ECALonly_lowpt',
            'photon_eb_ECALonly',
            'photon_ee_ECALonly_lowpt',
            'photon_ee_ECALonly'
        ),
        uncertaintyKey_ecalonly = cms.vstring(
            'photon_eb_ECALonly_lowpt_var',
            'photon_eb_ECALonly_var',
            'photon_ee_ECALonly_lowpt_var',
            'photon_ee_ECALonly_var'
        )
    ),
    rhoCollection = cms.InputTag("fixedGridRhoFastjetAll")
)

process.regressionModifier80X = cms.PSet(
    applyExtraHighEnergyProtection = cms.bool(True),
    autoDetectBunchSpacing = cms.bool(True),
    bunchSpacingTag = cms.InputTag("bunchSpacingProducer"),
    electron_config = cms.PSet(
        combinationKey_25ns = cms.string('gedelectron_p4combination_25ns'),
        combinationKey_50ns = cms.string('gedelectron_p4combination_50ns'),
        regressionKey_25ns = cms.vstring(
            'gedelectron_EBCorrection_25ns',
            'gedelectron_EECorrection_25ns'
        ),
        regressionKey_50ns = cms.vstring(
            'gedelectron_EBCorrection_50ns',
            'gedelectron_EECorrection_50ns'
        ),
        uncertaintyKey_25ns = cms.vstring(
            'gedelectron_EBUncertainty_25ns',
            'gedelectron_EEUncertainty_25ns'
        ),
        uncertaintyKey_50ns = cms.vstring(
            'gedelectron_EBUncertainty_50ns',
            'gedelectron_EEUncertainty_50ns'
        )
    ),
    manualBunchSpacing = cms.int32(50),
    modifierName = cms.string('EGRegressionModifierV1'),
    photon_config = cms.PSet(
        regressionKey_25ns = cms.vstring(
            'gedphoton_EBCorrection_25ns',
            'gedphoton_EECorrection_25ns'
        ),
        regressionKey_50ns = cms.vstring(
            'gedphoton_EBCorrection_50ns',
            'gedphoton_EECorrection_50ns'
        ),
        uncertaintyKey_25ns = cms.vstring(
            'gedphoton_EBUncertainty_25ns',
            'gedphoton_EEUncertainty_25ns'
        ),
        uncertaintyKey_50ns = cms.vstring(
            'gedphoton_EBUncertainty_50ns',
            'gedphoton_EEUncertainty_50ns'
        )
    ),
    rhoCollection = cms.InputTag("fixedGridRhoFastjetAll"),
    vertexCollection = cms.InputTag("offlinePrimaryVertices")
)

process.tobTecStepInOutTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.1),
    minimumNumberOfHits = cms.int32(4),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(1),
    strictSeedExtension = cms.bool(False)
)

process.tobTecStepTrajectoryBuilder = cms.PSet(
    ComponentType = cms.string('GroupedCkfTrajectoryBuilder'),
    MeasurementTrackerName = cms.string(''),
    TTRHBuilder = cms.string('WithTrackAngle'),
    alwaysUseInvalidHits = cms.bool(False),
    bestHitOnly = cms.bool(True),
    estimator = cms.string('tobTecStepChi2Est'),
    foundHitBonus = cms.double(10.0),
    inOutTrajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('tobTecStepInOutTrajectoryFilter')
    ),
    intermediateCleaning = cms.bool(True),
    keepOriginalIfRebuildFails = cms.bool(False),
    lockHits = cms.bool(True),
    lostHitPenalty = cms.double(30.0),
    maxCand = cms.int32(2),
    maxDPhiForLooperReconstruction = cms.double(2.0),
    maxPtForLooperReconstruction = cms.double(0.7),
    minNrOfHitsForRebuild = cms.int32(4),
    propagatorAlong = cms.string('PropagatorWithMaterial'),
    propagatorOpposite = cms.string('PropagatorWithMaterialOpposite'),
    requireSeedHitsInRebuild = cms.bool(True),
    trajectoryFilter = cms.PSet(
        refToPSet_ = cms.string('tobTecStepTrajectoryFilter')
    ),
    updator = cms.string('KFUpdator'),
    useSameTrajFilter = cms.bool(False)
)

process.tobTecStepTrajectoryFilter = cms.PSet(
    ComponentType = cms.string('CkfBaseTrajectoryFilter'),
    chargeSignificance = cms.double(-1.0),
    constantValueForLostHitsFractionFilter = cms.double(2.0),
    extraNumberOfHitsBeforeTheFirstLoop = cms.int32(4),
    maxCCCLostHits = cms.int32(9999),
    maxConsecLostHits = cms.int32(1),
    maxLostHits = cms.int32(0),
    maxLostHitsFraction = cms.double(0.1),
    maxNumberOfHits = cms.int32(100),
    minGoodStripCharge = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    ),
    minHitsMinPt = cms.int32(3),
    minNumberOfHitsForLoopers = cms.int32(13),
    minNumberOfHitsPerLoop = cms.int32(4),
    minPt = cms.double(0.85),
    minimumNumberOfHits = cms.int32(5),
    nSigmaMinPt = cms.double(5.0),
    pixelSeedExtension = cms.bool(False),
    seedExtension = cms.int32(0),
    seedPairPenalty = cms.int32(1),
    strictSeedExtension = cms.bool(False)
)

process.trkIsol03CfgV1 = cms.PSet(
    barrelCuts = cms.PSet(
        algosToReject = cms.vstring('jetCoreRegionalStep'),
        allowedQualities = cms.vstring(),
        maxDPtPt = cms.double(-1),
        maxDR = cms.double(0.3),
        maxDZ = cms.double(0.2),
        minDEta = cms.double(0.015),
        minDR = cms.double(0.0),
        minHits = cms.int32(-1),
        minPixelHits = cms.int32(-1),
        minPt = cms.double(0.7)
    ),
    endcapCuts = cms.PSet(
        algosToReject = cms.vstring('jetCoreRegionalStep'),
        allowedQualities = cms.vstring(),
        maxDPtPt = cms.double(-1),
        maxDR = cms.double(0.3),
        maxDZ = cms.double(0.2),
        minDEta = cms.double(0.015),
        minDR = cms.double(0.0),
        minHits = cms.int32(-1),
        minPixelHits = cms.int32(-1),
        minPt = cms.double(0.7)
    )
)

process.trkIsol04CfgV1 = cms.PSet(
    barrelCuts = cms.PSet(
        algosToReject = cms.vstring('jetCoreRegionalStep'),
        allowedQualities = cms.vstring(),
        maxDPtPt = cms.double(-1),
        maxDR = cms.double(0.4),
        maxDZ = cms.double(0.2),
        minDEta = cms.double(0.015),
        minDR = cms.double(0.0),
        minHits = cms.int32(-1),
        minPixelHits = cms.int32(-1),
        minPt = cms.double(0.7)
    ),
    endcapCuts = cms.PSet(
        algosToReject = cms.vstring('jetCoreRegionalStep'),
        allowedQualities = cms.vstring(),
        maxDPtPt = cms.double(-1),
        maxDR = cms.double(0.4),
        maxDZ = cms.double(0.2),
        minDEta = cms.double(0.015),
        minDR = cms.double(0.0),
        minHits = cms.int32(-1),
        minPixelHits = cms.int32(-1),
        minPt = cms.double(0.7)
    )
)

process.IsoConeDefinitions = cms.VPSet(
    cms.PSet(
        coneSize = cms.double(0.3),
        isolateAgainst = cms.string('h+'),
        isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
        miniAODVertexCodes = cms.vuint32(2, 3),
        particleBasedIsolation = cms.InputTag("particleBasedIsolation","gedPhotons"),
        vertexIndex = cms.int32(0)
    ),
    cms.PSet(
        coneSize = cms.double(0.3),
        isolateAgainst = cms.string('h0'),
        isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
        miniAODVertexCodes = cms.vuint32(2, 3),
        particleBasedIsolation = cms.InputTag("particleBasedIsolation","gedPhotons"),
        vertexIndex = cms.int32(0)
    ),
    cms.PSet(
        coneSize = cms.double(0.3),
        isolateAgainst = cms.string('gamma'),
        isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
        miniAODVertexCodes = cms.vuint32(2, 3),
        particleBasedIsolation = cms.InputTag("particleBasedIsolation","gedPhotons"),
        vertexIndex = cms.int32(0)
    )
)

process.IsoConeDefinitionsPhotonsTmp = cms.VPSet(
    cms.PSet(
        coneSize = cms.double(0.3),
        isolateAgainst = cms.string('h+'),
        isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
        miniAODVertexCodes = cms.vuint32(2, 3),
        particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedPhotonsTmp"),
        vertexIndex = cms.int32(0)
    ),
    cms.PSet(
        coneSize = cms.double(0.3),
        isolateAgainst = cms.string('h0'),
        isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
        miniAODVertexCodes = cms.vuint32(2, 3),
        particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedPhotonsTmp"),
        vertexIndex = cms.int32(0)
    ),
    cms.PSet(
        coneSize = cms.double(0.3),
        isolateAgainst = cms.string('gamma'),
        isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
        miniAODVertexCodes = cms.vuint32(2, 3),
        particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedPhotonsTmp"),
        vertexIndex = cms.int32(0)
    )
)

process.CastorTowerReco = cms.EDProducer("CastorTowerProducer",
    inputprocess = cms.string('castorreco'),
    maxtime = cms.double(99999.0),
    mintime = cms.double(-99999.0),
    towercut = cms.double(0.65)
)


process.ClassifierMerger = cms.EDProducer("ClassifierMerger",
    inputClassifiers = cms.vstring()
)


process.CosmicMuonSeed = cms.EDProducer("CosmicMuonSeedGenerator",
    CSCRecSegmentLabel = cms.InputTag("cscSegments"),
    DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
    EnableCSCMeasurement = cms.bool(True),
    EnableDTMeasurement = cms.bool(True),
    ForcePointDown = cms.bool(True),
    MaxCSCChi2 = cms.double(300.0),
    MaxDTChi2 = cms.double(300.0),
    MaxSeeds = cms.int32(1000)
)


process.DuplicateListMerger = cms.EDProducer("DuplicateListMerger",
    candidateComponents = cms.InputTag(""),
    candidateSource = cms.InputTag(""),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    diffHitsCut = cms.int32(5),
    mergedMVAVals = cms.InputTag(""),
    mergedSource = cms.InputTag(""),
    originalMVAVals = cms.InputTag(""),
    originalSource = cms.InputTag(""),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder')
)


process.DuplicateTrackMerger = cms.EDProducer("DuplicateTrackMerger",
    GBRForestFileName = cms.string(''),
    chi2EstimatorName = cms.string('DuplicateTrackMergerChi2Est'),
    forestLabel = cms.string('MVADuplicate'),
    maxDCA = cms.double(30),
    maxDLambda = cms.double(0.3),
    maxDPhi = cms.double(0.3),
    maxDQoP = cms.double(0.25),
    maxDdsz = cms.double(10),
    maxDdxy = cms.double(10),
    minBDTG = cms.double(-0.1),
    minDeltaR3d = cms.double(-4),
    minP = cms.double(0.4),
    minpT = cms.double(0.2),
    overlapCheckMaxHits = cms.uint32(4),
    overlapCheckMaxMissingLayers = cms.uint32(1),
    overlapCheckMinCosT = cms.double(0.99),
    propagatorName = cms.string('PropagatorWithMaterial'),
    source = cms.InputTag(""),
    ttrhBuilderName = cms.string('WithAngleAndTemplate'),
    useInnermostState = cms.bool(True)
)


process.GsfGlobalElectronTest = cms.EDProducer("GsfTrackProducer",
    AlgorithmName = cms.string('gsf'),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('fwdElectronPropagator'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string(''),
    src = cms.InputTag("CkfElectronCandidates"),
    useHitsSplitting = cms.bool(False)
)


process.HiTrackingRegionFactoryFromSTAMuonsEDProducer = cms.EDProducer("HIMuonTrackingRegionEDProducer",
    MuonSrc = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    MuonTrackingRegionBuilder = cms.PSet(
        DeltaEta = cms.double(0.2),
        DeltaPhi = cms.double(0.2),
        DeltaR = cms.double(0.2),
        DeltaZ = cms.double(15.9),
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        Eta_fixed = cms.bool(False),
        Eta_min = cms.double(0.1),
        MeasurementTrackerName = cms.InputTag(""),
        OnDemand = cms.int32(-1),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        Phi_fixed = cms.bool(False),
        Phi_min = cms.double(0.1),
        Pt_fixed = cms.bool(False),
        Pt_min = cms.double(1.5),
        Rescale_Dz = cms.double(5.0),
        Rescale_eta = cms.double(3.0),
        Rescale_phi = cms.double(3.0),
        UseVertex = cms.bool(True),
        Z_fixed = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        input = cms.InputTag(""),
        maxRegions = cms.int32(1),
        precise = cms.bool(True),
        vertexCollection = cms.InputTag("hiSelectedPixelVertex")
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)


process.MEtoEDMConverter = cms.EDProducer("MEtoEDMConverter",
    Frequency = cms.untracked.int32(50),
    MEPathToSave = cms.untracked.string(''),
    Name = cms.untracked.string('MEtoEDMConverter'),
    Verbosity = cms.untracked.int32(0),
    deleteAfterCopy = cms.untracked.bool(True)
)


process.MeasurementTrackerEvent = cms.EDProducer("MeasurementTrackerEventProducer",
    Phase2TrackerCluster1DProducer = cms.string(''),
    badPixelFEDChannelCollectionLabels = cms.VInputTag("siPixelDigis"),
    inactivePixelDetectorLabels = cms.VInputTag("siPixelDigis"),
    inactiveStripDetectorLabels = cms.VInputTag("siStripDigis"),
    measurementTracker = cms.string(''),
    pixelCablingMapLabel = cms.string(''),
    pixelClusterProducer = cms.string('siPixelClusters'),
    skipClusters = cms.InputTag(""),
    stripClusterProducer = cms.string('siStripClusters'),
    switchOffPixelsIfEmpty = cms.bool(True)
)


process.MeasurementTrackerEventPreSplitting = cms.EDProducer("MeasurementTrackerEventProducer",
    Phase2TrackerCluster1DProducer = cms.string(''),
    badPixelFEDChannelCollectionLabels = cms.VInputTag("siPixelDigis"),
    inactivePixelDetectorLabels = cms.VInputTag("siPixelDigis"),
    inactiveStripDetectorLabels = cms.VInputTag("siStripDigis"),
    measurementTracker = cms.string(''),
    pixelCablingMapLabel = cms.string(''),
    pixelClusterProducer = cms.string('siPixelClustersPreSplitting'),
    skipClusters = cms.InputTag(""),
    stripClusterProducer = cms.string('siStripClusters'),
    switchOffPixelsIfEmpty = cms.bool(True)
)


process.MuonSeed = cms.EDProducer("MuonSeedProducer",
    CSCSegmentLabel = cms.InputTag("cscSegments"),
    CSC_01 = cms.vdouble(
        0.166, 0.0, 0.0, 0.031, 0.0,
        0.0
    ),
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    CSC_02 = cms.vdouble(
        0.612, -0.207, -0.0, 0.067, -0.001,
        0.0
    ),
    CSC_03 = cms.vdouble(
        0.787, -0.338, 0.029, 0.101, -0.008,
        0.0
    ),
    CSC_12 = cms.vdouble(
        -0.161, 0.254, -0.047, 0.042, -0.007,
        0.0
    ),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    CSC_13 = cms.vdouble(
        0.901, -1.302, 0.533, 0.045, 0.005,
        0.0
    ),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    CSC_14 = cms.vdouble(
        0.606, -0.181, -0.002, 0.111, -0.003,
        0.0
    ),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    CSC_23 = cms.vdouble(
        -0.081, 0.113, -0.029, 0.015, 0.008,
        0.0
    ),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    CSC_24 = cms.vdouble(
        0.004, 0.021, -0.002, 0.053, 0.0,
        0.0
    ),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_34 = cms.vdouble(
        0.062, -0.067, 0.019, 0.021, 0.003,
        0.0
    ),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    DTSegmentLabel = cms.InputTag("dt4DSegments"),
    DT_12 = cms.vdouble(
        0.183, 0.054, -0.087, 0.028, 0.002,
        0.0
    ),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13 = cms.vdouble(
        0.315, 0.068, -0.127, 0.051, -0.002,
        0.0
    ),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    DT_14 = cms.vdouble(
        0.359, 0.052, -0.107, 0.072, -0.004,
        0.0
    ),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    DT_23 = cms.vdouble(
        0.13, 0.023, -0.057, 0.028, 0.004,
        0.0
    ),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    DT_24 = cms.vdouble(
        0.176, 0.014, -0.051, 0.051, 0.003,
        0.0
    ),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    DT_34 = cms.vdouble(
        0.044, 0.004, -0.013, 0.029, 0.003,
        0.0
    ),
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    DebugMuonSeed = cms.bool(False),
    EnableCSCMeasurement = cms.bool(True),
    EnableDTMeasurement = cms.bool(True),
    OL_1213 = cms.vdouble(
        0.96, -0.737, 0.0, 0.052, 0.0,
        0.0
    ),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    OL_1222 = cms.vdouble(
        0.848, -0.591, 0.0, 0.062, 0.0,
        0.0
    ),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    OL_1232 = cms.vdouble(
        0.184, 0.0, 0.0, 0.066, 0.0,
        0.0
    ),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    OL_2213 = cms.vdouble(
        0.117, 0.0, 0.0, 0.044, 0.0,
        0.0
    ),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_2222 = cms.vdouble(
        0.107, 0.0, 0.0, 0.04, 0.0,
        0.0
    ),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
    SMB_10 = cms.vdouble(
        1.387, -0.038, 0.0, 0.19, 0.0,
        0.0
    ),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    SMB_11 = cms.vdouble(
        1.247, 0.72, -0.802, 0.229, -0.075,
        0.0
    ),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    SMB_12 = cms.vdouble(
        2.128, -0.956, 0.0, 0.199, 0.0,
        0.0
    ),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SMB_20 = cms.vdouble(
        1.011, -0.052, 0.0, 0.188, 0.0,
        0.0
    ),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    SMB_21 = cms.vdouble(
        1.043, -0.124, 0.0, 0.183, 0.0,
        0.0
    ),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    SMB_22 = cms.vdouble(
        1.474, -0.758, 0.0, 0.185, 0.0,
        0.0
    ),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    SMB_30 = cms.vdouble(
        0.505, -0.022, 0.0, 0.215, 0.0,
        0.0
    ),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    SMB_31 = cms.vdouble(
        0.549, -0.145, 0.0, 0.207, 0.0,
        0.0
    ),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    SMB_32 = cms.vdouble(
        0.67, -0.327, 0.0, 0.22, 0.0,
        0.0
    ),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    SME_11 = cms.vdouble(
        3.295, -1.527, 0.112, 0.378, 0.02,
        0.0
    ),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    SME_12 = cms.vdouble(
        0.102, 0.599, 0.0, 0.38, 0.0,
        0.0
    ),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    SME_13 = cms.vdouble(
        -1.286, 1.711, 0.0, 0.356, 0.0,
        0.0
    ),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SME_21 = cms.vdouble(
        -0.529, 1.194, -0.358, 0.472, 0.086,
        0.0
    ),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SME_22 = cms.vdouble(
        -1.207, 1.491, -0.251, 0.189, 0.243,
        0.0
    ),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
    SME_31 = cms.vdouble(
        -1.594, 1.482, -0.317, 0.487, 0.097,
        0.0
    ),
    SME_32 = cms.vdouble(
        -0.901, 1.333, -0.47, 0.41, 0.073,
        0.0
    ),
    SME_41 = cms.vdouble(
        -0.003, 0.005, 0.005, 0.608, 0.076,
        0.0
    ),
    SME_42 = cms.vdouble(
        -0.003, 0.005, 0.005, 0.608, 0.076,
        0.0
    ),
    SeedPtSystematics = cms.double(0.1),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    defaultSeedPt = cms.double(25.0),
    maxDeltaEtaCSC = cms.double(0.2),
    maxDeltaEtaDT = cms.double(0.3),
    maxDeltaEtaOverlap = cms.double(0.08),
    maxDeltaPhiCSC = cms.double(0.5),
    maxDeltaPhiDT = cms.double(0.3),
    maxDeltaPhiOverlap = cms.double(0.25),
    maxEtaResolutionCSC = cms.double(0.06),
    maxEtaResolutionDT = cms.double(0.02),
    maxPhiResolutionCSC = cms.double(0.03),
    maxPhiResolutionDT = cms.double(0.03),
    maximumSeedPt = cms.double(3000.0),
    minCSCHitsPerSegment = cms.int32(4),
    minDTHitsPerSegment = cms.int32(2),
    minimumSeedPt = cms.double(5.0)
)


process.PFTowers = cms.EDProducer("ParticleTowerProducer",
    src = cms.InputTag("particleFlow"),
    useHF = cms.bool(False)
)


process.PhotonIDProd = cms.EDProducer("PhotonIDProducer",
    DoEcalIsoRelativeCut = cms.bool(True),
    DoEcalRecHitIsolationCut = cms.bool(True),
    DoEtaWidthCut = cms.bool(True),
    DoHadOverEMCut = cms.bool(True),
    DoHcalTowerIsolationCut = cms.bool(True),
    DoHollowConeNTrkCut = cms.bool(False),
    DoHollowConeTrackIsolationCut = cms.bool(True),
    DoR9Cut = cms.bool(False),
    DoSolidConeNTrkCut = cms.bool(False),
    DoSolidConeTrackIsolationCut = cms.bool(False),
    LooseEMEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    LooseEMEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LooseEMEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LooseEMEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    LooseEMEtaWidthEB = cms.double(999999999),
    LooseEMEtaWidthEE = cms.double(999999999),
    LooseEMHadOverEMEB = cms.double(0.05),
    LooseEMHadOverEMEE = cms.double(0.05),
    LooseEMHcalTowerIsoOffsetEB = cms.double(2.2),
    LooseEMHcalTowerIsoOffsetEE = cms.double(2.2),
    LooseEMHcalTowerIsoSlopeEB = cms.double(0.0025),
    LooseEMHcalTowerIsoSlopeEE = cms.double(0.0025),
    LooseEMHollowNTrkEB = cms.int32(999999999),
    LooseEMHollowNTrkEE = cms.int32(999999999),
    LooseEMHollowTrkOffsetEB = cms.double(999999999),
    LooseEMHollowTrkOffsetEE = cms.double(999999999),
    LooseEMHollowTrkSlopeEB = cms.double(0.0),
    LooseEMHollowTrkSlopeEE = cms.double(0.0),
    LooseEMR9CutEB = cms.double(0.0),
    LooseEMR9CutEE = cms.double(0.0),
    LooseEMSolidNTrkEB = cms.int32(999999999),
    LooseEMSolidNTrkEE = cms.int32(999999999),
    LooseEMSolidTrkEB = cms.double(999999999),
    LooseEMSolidTrkEE = cms.double(999999999),
    LooseEMSolidTrkOffsetEB = cms.double(999999999),
    LooseEMSolidTrkOffsetEE = cms.double(999999999),
    LooseEMSolidTrkSlopeEB = cms.double(0.0),
    LooseEMSolidTrkSlopeEE = cms.double(0.0),
    LoosePhotonEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    LoosePhotonEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LoosePhotonEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LoosePhotonEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    LoosePhotonEtaWidthEB = cms.double(999999999),
    LoosePhotonEtaWidthEE = cms.double(999999999),
    LoosePhotonHadOverEMEB = cms.double(0.05),
    LoosePhotonHadOverEMEE = cms.double(0.05),
    LoosePhotonHcalTowerIsoOffsetEB = cms.double(2.2),
    LoosePhotonHcalTowerIsoOffsetEE = cms.double(2.2),
    LoosePhotonHcalTowerIsoSlopeEB = cms.double(0.0025),
    LoosePhotonHcalTowerIsoSlopeEE = cms.double(0.0025),
    LoosePhotonHollowNTrkEB = cms.int32(999999999),
    LoosePhotonHollowNTrkEE = cms.int32(999999999),
    LoosePhotonHollowTrkOffsetEB = cms.double(3.5),
    LoosePhotonHollowTrkOffsetEE = cms.double(3.5),
    LoosePhotonHollowTrkSlopeEB = cms.double(0.001),
    LoosePhotonHollowTrkSlopeEE = cms.double(0.001),
    LoosePhotonR9CutEB = cms.double(0.0),
    LoosePhotonR9CutEE = cms.double(0.0),
    LoosePhotonSolidNTrkEB = cms.int32(999999999),
    LoosePhotonSolidNTrkEE = cms.int32(999999999),
    LoosePhotonSolidTrkEB = cms.double(999999999),
    LoosePhotonSolidTrkEE = cms.double(999999999),
    LoosePhotonSolidTrkOffsetEB = cms.double(999999999),
    LoosePhotonSolidTrkOffsetEE = cms.double(999999999),
    LoosePhotonSolidTrkSlopeEB = cms.double(0.0),
    LoosePhotonSolidTrkSlopeEE = cms.double(0.0),
    RequireFiducial = cms.bool(False),
    TightPhotonEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    TightPhotonEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    TightPhotonEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    TightPhotonEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    TightPhotonEtaWidthEB = cms.double(0.013),
    TightPhotonEtaWidthEE = cms.double(0.03),
    TightPhotonHadOverEMEB = cms.double(0.05),
    TightPhotonHadOverEMEE = cms.double(0.05),
    TightPhotonHcalTowerIsoOffsetEB = cms.double(2.2),
    TightPhotonHcalTowerIsoOffsetEE = cms.double(2.2),
    TightPhotonHcalTowerIsoSlopeEB = cms.double(0.0025),
    TightPhotonHcalTowerIsoSlopeEE = cms.double(0.0025),
    TightPhotonHollowNTrkEB = cms.int32(999999999),
    TightPhotonHollowNTrkEE = cms.int32(999999999),
    TightPhotonHollowTrkOffsetEB = cms.double(2.0),
    TightPhotonHollowTrkOffsetEE = cms.double(2.0),
    TightPhotonHollowTrkSlopeEB = cms.double(0.001),
    TightPhotonHollowTrkSlopeEE = cms.double(0.001),
    TightPhotonR9CutEB = cms.double(0.0),
    TightPhotonR9CutEE = cms.double(0.0),
    TightPhotonSolidNTrkEB = cms.int32(999999999),
    TightPhotonSolidNTrkEE = cms.int32(999999999),
    TightPhotonSolidTrkEB = cms.double(999999999),
    TightPhotonSolidTrkEE = cms.double(999999999),
    TightPhotonSolidTrkOffsetEB = cms.double(999999999),
    TightPhotonSolidTrkOffsetEE = cms.double(999999999),
    TightPhotonSolidTrkSlopeEB = cms.double(0.0),
    TightPhotonSolidTrkSlopeEE = cms.double(0.0),
    doCutBased = cms.bool(True),
    photonCutBasedIDLooseEMLabel = cms.string('PhotonCutBasedIDLooseEM'),
    photonCutBasedIDLooseLabel = cms.string('PhotonCutBasedIDLoose'),
    photonCutBasedIDTightLabel = cms.string('PhotonCutBasedIDTight'),
    photonLabel = cms.string(''),
    photonProducer = cms.string('photons')
)


process.PhotonIDProdGED = cms.EDProducer("PhotonIDProducer",
    DoEcalIsoRelativeCut = cms.bool(True),
    DoEcalRecHitIsolationCut = cms.bool(True),
    DoEtaWidthCut = cms.bool(True),
    DoHadOverEMCut = cms.bool(True),
    DoHcalTowerIsolationCut = cms.bool(True),
    DoHollowConeNTrkCut = cms.bool(False),
    DoHollowConeTrackIsolationCut = cms.bool(True),
    DoR9Cut = cms.bool(False),
    DoSolidConeNTrkCut = cms.bool(False),
    DoSolidConeTrackIsolationCut = cms.bool(False),
    LooseEMEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    LooseEMEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LooseEMEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LooseEMEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    LooseEMEtaWidthEB = cms.double(999999999),
    LooseEMEtaWidthEE = cms.double(999999999),
    LooseEMHadOverEMEB = cms.double(0.05),
    LooseEMHadOverEMEE = cms.double(0.05),
    LooseEMHcalTowerIsoOffsetEB = cms.double(2.2),
    LooseEMHcalTowerIsoOffsetEE = cms.double(2.2),
    LooseEMHcalTowerIsoSlopeEB = cms.double(0.0025),
    LooseEMHcalTowerIsoSlopeEE = cms.double(0.0025),
    LooseEMHollowNTrkEB = cms.int32(999999999),
    LooseEMHollowNTrkEE = cms.int32(999999999),
    LooseEMHollowTrkOffsetEB = cms.double(999999999),
    LooseEMHollowTrkOffsetEE = cms.double(999999999),
    LooseEMHollowTrkSlopeEB = cms.double(0.0),
    LooseEMHollowTrkSlopeEE = cms.double(0.0),
    LooseEMR9CutEB = cms.double(0.0),
    LooseEMR9CutEE = cms.double(0.0),
    LooseEMSolidNTrkEB = cms.int32(999999999),
    LooseEMSolidNTrkEE = cms.int32(999999999),
    LooseEMSolidTrkEB = cms.double(999999999),
    LooseEMSolidTrkEE = cms.double(999999999),
    LooseEMSolidTrkOffsetEB = cms.double(999999999),
    LooseEMSolidTrkOffsetEE = cms.double(999999999),
    LooseEMSolidTrkSlopeEB = cms.double(0.0),
    LooseEMSolidTrkSlopeEE = cms.double(0.0),
    LoosePhotonEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    LoosePhotonEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    LoosePhotonEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    LoosePhotonEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    LoosePhotonEtaWidthEB = cms.double(999999999),
    LoosePhotonEtaWidthEE = cms.double(999999999),
    LoosePhotonHadOverEMEB = cms.double(0.05),
    LoosePhotonHadOverEMEE = cms.double(0.05),
    LoosePhotonHcalTowerIsoOffsetEB = cms.double(2.2),
    LoosePhotonHcalTowerIsoOffsetEE = cms.double(2.2),
    LoosePhotonHcalTowerIsoSlopeEB = cms.double(0.0025),
    LoosePhotonHcalTowerIsoSlopeEE = cms.double(0.0025),
    LoosePhotonHollowNTrkEB = cms.int32(999999999),
    LoosePhotonHollowNTrkEE = cms.int32(999999999),
    LoosePhotonHollowTrkOffsetEB = cms.double(3.5),
    LoosePhotonHollowTrkOffsetEE = cms.double(3.5),
    LoosePhotonHollowTrkSlopeEB = cms.double(0.001),
    LoosePhotonHollowTrkSlopeEE = cms.double(0.001),
    LoosePhotonR9CutEB = cms.double(0.0),
    LoosePhotonR9CutEE = cms.double(0.0),
    LoosePhotonSolidNTrkEB = cms.int32(999999999),
    LoosePhotonSolidNTrkEE = cms.int32(999999999),
    LoosePhotonSolidTrkEB = cms.double(999999999),
    LoosePhotonSolidTrkEE = cms.double(999999999),
    LoosePhotonSolidTrkOffsetEB = cms.double(999999999),
    LoosePhotonSolidTrkOffsetEE = cms.double(999999999),
    LoosePhotonSolidTrkSlopeEB = cms.double(0.0),
    LoosePhotonSolidTrkSlopeEE = cms.double(0.0),
    RequireFiducial = cms.bool(False),
    TightPhotonEcalIsoRelativeCutOffsetEB = cms.double(4.2),
    TightPhotonEcalIsoRelativeCutOffsetEE = cms.double(4.2),
    TightPhotonEcalIsoRelativeCutSlopeEB = cms.double(0.006),
    TightPhotonEcalIsoRelativeCutSlopeEE = cms.double(0.006),
    TightPhotonEtaWidthEB = cms.double(0.013),
    TightPhotonEtaWidthEE = cms.double(0.03),
    TightPhotonHadOverEMEB = cms.double(0.05),
    TightPhotonHadOverEMEE = cms.double(0.05),
    TightPhotonHcalTowerIsoOffsetEB = cms.double(2.2),
    TightPhotonHcalTowerIsoOffsetEE = cms.double(2.2),
    TightPhotonHcalTowerIsoSlopeEB = cms.double(0.0025),
    TightPhotonHcalTowerIsoSlopeEE = cms.double(0.0025),
    TightPhotonHollowNTrkEB = cms.int32(999999999),
    TightPhotonHollowNTrkEE = cms.int32(999999999),
    TightPhotonHollowTrkOffsetEB = cms.double(2.0),
    TightPhotonHollowTrkOffsetEE = cms.double(2.0),
    TightPhotonHollowTrkSlopeEB = cms.double(0.001),
    TightPhotonHollowTrkSlopeEE = cms.double(0.001),
    TightPhotonR9CutEB = cms.double(0.0),
    TightPhotonR9CutEE = cms.double(0.0),
    TightPhotonSolidNTrkEB = cms.int32(999999999),
    TightPhotonSolidNTrkEE = cms.int32(999999999),
    TightPhotonSolidTrkEB = cms.double(999999999),
    TightPhotonSolidTrkEE = cms.double(999999999),
    TightPhotonSolidTrkOffsetEB = cms.double(999999999),
    TightPhotonSolidTrkOffsetEE = cms.double(999999999),
    TightPhotonSolidTrkSlopeEB = cms.double(0.0),
    TightPhotonSolidTrkSlopeEE = cms.double(0.0),
    doCutBased = cms.bool(True),
    photonCutBasedIDLooseEMLabel = cms.string('PhotonCutBasedIDLooseEM'),
    photonCutBasedIDLooseLabel = cms.string('PhotonCutBasedIDLoose'),
    photonCutBasedIDTightLabel = cms.string('PhotonCutBasedIDTight'),
    photonLabel = cms.string(''),
    photonProducer = cms.string('gedPhotons')
)


process.PixelLayerTriplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg'
    )
)


process.PixelLayerTripletsPreSplitting = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHitsPreSplitting'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHitsPreSplitting'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg'
    )
)


process.SETMuonSeed = cms.EDProducer("SETMuonSeedProducer",
    SETTrajBuilderParameters = cms.PSet(
        Apply_prePruning = cms.bool(True),
        CSC_01 = cms.vdouble(
            0.155906, -0.000406, 0.0, 0.194022, -0.010181,
            0.0
        ),
        CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
        CSC_02 = cms.vdouble(
            0.600235, -0.205683, 0.001113, 0.655625, -0.682129,
            0.253916
        ),
        CSC_03 = cms.vdouble(
            0.498992, -0.086235, -0.025772, 2.761006, -2.667607,
            0.72802
        ),
        CSC_12 = cms.vdouble(
            -0.363549, 0.569552, -0.173186, 7.777069, -10.203618,
            3.478874
        ),
        CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
        CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
        CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
        CSC_13 = cms.vdouble(
            1.22495, -1.792358, 0.711378, 5.271848, -6.280625,
            2.0142
        ),
        CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
        CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
        CSC_14 = cms.vdouble(
            0.952517, -0.532733, 0.084601, 1.615881, -1.630744,
            0.514139
        ),
        CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
        CSC_23 = cms.vdouble(
            -0.095236, 0.122061, -0.029852, -11.396689, 15.933598,
            -4.267065
        ),
        CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
        CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
        CSC_24 = cms.vdouble(
            -0.049769, 0.063087, -0.011029, -13.765978, 16.296143,
            -4.241835
        ),
        CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
        CSC_34 = cms.vdouble(
            0.144321, -0.142283, 0.035636, 190.260708, -180.888643,
            43.430395
        ),
        CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
        DT_12 = cms.vdouble(
            0.176182, 0.058535, -0.090549, 0.202363, -0.203126,
            0.222219
        ),
        DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
        DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
        DT_13 = cms.vdouble(
            0.298842, 0.076531, -0.14293, 0.219923, -0.145026,
            0.155638
        ),
        DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
        DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
        DT_14 = cms.vdouble(
            0.388423, 0.068698, -0.145925, 0.159515, 0.124299,
            -0.133269
        ),
        DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
        DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
        DT_23 = cms.vdouble(
            0.120647, 0.034743, -0.070855, 0.302427, -0.21417,
            0.261012
        ),
        DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
        DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
        DT_24 = cms.vdouble(
            0.189527, 0.037328, -0.088523, 0.251936, 0.032411,
            0.010984
        ),
        DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
        DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
        DT_34 = cms.vdouble(
            0.049146, -0.003494, -0.010099, 0.672095, 0.36459,
            -0.304346
        ),
        DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
        DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
        FilterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            EnableCSCMeasurement = cms.bool(True),
            EnableDTMeasurement = cms.bool(True),
            EnableRPCMeasurement = cms.bool(True),
            MinLocalSegmentAngle = cms.double(0.09),
            OutsideChamberErrorScale = cms.double(1.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
            maxActiveChambers = cms.int32(100)
        ),
        OL_1213 = cms.vdouble(
            0.960544, -0.75644, 0.0, 0.1636, 0.114178,
            0.0
        ),
        OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
        OL_1222 = cms.vdouble(
            0.215915, 0.002556, 0.0, 0.313596, -0.021465,
            0.0
        ),
        OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
        OL_1232 = cms.vdouble(
            0.162626, 0.000843, 0.0, 0.396271, 0.002791,
            0.0
        ),
        OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
        OL_2213 = cms.vdouble(
            0.563218, -0.493991, 0.0, 0.943776, -0.591751,
            0.0
        ),
        OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
        OL_2222 = cms.vdouble(
            0.087587, 0.005729, 0.0, 0.535169, -0.087675,
            0.0
        ),
        OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
        SMB_10 = cms.vdouble(
            1.160532, 0.148991, 0.0, 0.182785, -0.093776,
            0.0
        ),
        SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
        SMB_11 = cms.vdouble(
            1.289468, -0.139653, 0.0, 0.137191, 0.01217,
            0.0
        ),
        SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
        SMB_12 = cms.vdouble(
            1.923091, -0.913204, 0.0, 0.161556, 0.020215,
            0.0
        ),
        SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
        SMB_20 = cms.vdouble(
            0.861314, -0.16233, 0.0, 0.248879, -0.113879,
            0.0
        ),
        SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
        SMB_21 = cms.vdouble(
            0.918425, -0.141199, 0.0, 0.254515, -0.111848,
            0.0
        ),
        SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
        SMB_22 = cms.vdouble(
            1.308565, -0.701634, 0.0, -0.302861, 0.675785,
            0.0
        ),
        SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
        SMB_30 = cms.vdouble(
            0.399628, 0.014922, 0.0, 0.665622, 0.358439,
            0.0
        ),
        SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
        SMB_31 = cms.vdouble(
            0.398661, -0.024853, 0.0, 0.863324, -0.413048,
            0.0
        ),
        SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
        SMB_32 = cms.vdouble(
            0.421649, -0.111654, 0.0, -0.044613, 1.134858,
            0.0
        ),
        SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
        SME_11 = cms.vdouble(
            2.39479, -0.888663, 0.0, -4.604546, 3.623464,
            0.0
        ),
        SME_11_0_scale = cms.vdouble(1.325085, 0.0),
        SME_12 = cms.vdouble(
            -0.277294, 0.7616, 0.0, -0.243326, 1.446792,
            0.0
        ),
        SME_12_0_scale = cms.vdouble(2.279181, 0.0),
        SME_13 = cms.vdouble(
            0.398851, 0.028176, 0.0, 0.567015, 2.623232,
            0.0
        ),
        SME_13_0_scale = cms.vdouble(0.104905, 0.0),
        SME_21 = cms.vdouble(
            0.64895, -0.148762, 0.0, -5.07676, 6.284227,
            0.0
        ),
        SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
        SME_22 = cms.vdouble(
            -0.624708, 0.641043, 0.0, 32.581295, -19.604264,
            0.0
        ),
        SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
        SME_31 = cms.vdouble(
            -0.588188, 0.316961, 0.0, -95.261732, 45.444051,
            0.0
        ),
        SME_32 = cms.vdouble(
            -0.021912, -0.008995, 0.0, -49.779764, 30.780972,
            0.0
        ),
        SME_41 = cms.vdouble(
            -0.187116, 0.076415, 0.0, -58.552583, 27.933864,
            0.0
        ),
        SME_42 = cms.vdouble(
            -0.021912, -0.008995, 0.0, -49.779764, 30.780972,
            0.0
        ),
        UseSegmentsInTrajectory = cms.bool(False),
        scaleDT = cms.bool(True)
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    beamSpotTag = cms.InputTag("offlineBeamSpot")
)


process.TrackCollectionMerger = cms.EDProducer("TrackCollectionMerger",
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    enableMerging = cms.bool(True),
    foundHitBonus = cms.double(10),
    inputClassifiers = cms.vstring(),
    lostHitPenalty = cms.double(5),
    minQuality = cms.string('loose'),
    minShareHits = cms.uint32(2),
    shareFrac = cms.double(0.19),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    trackProducers = cms.VInputTag()
)


process.TrackCutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            drWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dr_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dzWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dz_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        isHLT = cms.bool(False),
        maxChi2 = cms.vdouble(9999, 25, 16),
        maxChi2n = cms.vdouble(9999, 1, 0.4),
        maxDr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24, 15),
        maxLostLayers = cms.vint32(99, 3, 3),
        maxRelPtErr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        min3DLayers = cms.vint32(1, 2, 3),
        minHits = cms.vint32(0, 0, 1),
        minHits4pass = cms.vint32(2147483647, 2147483647, 2147483647),
        minLayers = cms.vint32(3, 4, 5),
        minNVtxTrk = cms.int32(2),
        minNdof = cms.vdouble(-1, -1, -1),
        minPixelHits = cms.vint32(0, 0, 1)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag(""),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.TrackMVAClassifierDetached = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('')
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag(""),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.TrackMVAClassifierPrompt = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('')
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag(""),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.TrackProducer = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('undefAlgorithm'),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("ckfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.ak10PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak10PFL1FastL2L3'),
    src = cms.InputTag("ak10PFJets")
)


process.ak10PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak10PFL1FastL2L3Residual'),
    src = cms.InputTag("ak10PFJets")
)


process.ak10PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak10PFL1L2L3'),
    src = cms.InputTag("ak10PFJets")
)


process.ak10PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak10PFL1L2L3Residual'),
    src = cms.InputTag("ak10PFJets")
)


process.ak10PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak10PFL2L3'),
    src = cms.InputTag("ak10PFJets")
)


process.ak10PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak10PFL2L3Residual'),
    src = cms.InputTag("ak10PFJets")
)


process.ak1CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.1),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak1PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak1PFL1FastL2L3'),
    src = cms.InputTag("ak1PFJets")
)


process.ak1PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak1PFL1FastL2L3Residual'),
    src = cms.InputTag("ak1PFJets")
)


process.ak1PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak1PFL1L2L3'),
    src = cms.InputTag("ak1PFJets")
)


process.ak1PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak1PFL1L2L3Residual'),
    src = cms.InputTag("ak1PFJets")
)


process.ak1PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak1PFL2L3'),
    src = cms.InputTag("ak1PFJets")
)


process.ak1PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak1PFL2L3Residual'),
    src = cms.InputTag("ak1PFJets")
)


process.ak2CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.2),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak2PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak2PFL1FastL2L3'),
    src = cms.InputTag("ak2PFJets")
)


process.ak2PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak2PFL1FastL2L3Residual'),
    src = cms.InputTag("ak2PFJets")
)


process.ak2PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak2PFL1L2L3'),
    src = cms.InputTag("ak2PFJets")
)


process.ak2PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak2PFL1L2L3Residual'),
    src = cms.InputTag("ak2PFJets")
)


process.ak2PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak2PFL2L3'),
    src = cms.InputTag("ak2PFJets")
)


process.ak2PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak2PFL2L3Residual'),
    src = cms.InputTag("ak2PFJets")
)


process.ak3CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.3),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak3PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak3PFL1FastL2L3'),
    src = cms.InputTag("ak3PFJets")
)


process.ak3PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak3PFL1FastL2L3Residual'),
    src = cms.InputTag("ak3PFJets")
)


process.ak3PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak3PFL1L2L3'),
    src = cms.InputTag("ak3PFJets")
)


process.ak3PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak3PFL1L2L3Residual'),
    src = cms.InputTag("ak3PFJets")
)


process.ak3PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak3PFL2L3'),
    src = cms.InputTag("ak3PFJets")
)


process.ak3PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak3PFL2L3Residual'),
    src = cms.InputTag("ak3PFJets")
)


process.ak4CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak4CaloJetsForTrk = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(True),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nSigmaPU = cms.double(1.0),
    puPtMin = cms.double(10),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("caloTowerForTrk"),
    srcPVs = cms.InputTag("firstStepPrimaryVerticesUnsorted"),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak4CaloJetsL1FastL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak4CaloL1FastL2L3'),
    src = cms.InputTag("ak4CaloJets")
)


process.ak4CaloJetsL1FastL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak4CaloL1FastL2L3Residual'),
    src = cms.InputTag("ak4CaloJets")
)


process.ak4CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak4CaloL1L2L3'),
    src = cms.InputTag("ak4CaloJets")
)


process.ak4CaloJetsL1L2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak4CaloL1L2L3Residual'),
    src = cms.InputTag("ak4CaloJets")
)


process.ak4CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak4CaloL2L3'),
    src = cms.InputTag("ak4CaloJets")
)


process.ak4CaloJetsL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak4CaloL2L3Residual'),
    src = cms.InputTag("ak4CaloJets")
)


process.ak4JPTJetsL1FastL2L3 = cms.EDProducer("JPTJetCorrectionProducer",
    correctors = cms.vstring('ak4JPTL1FastL2L3'),
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt4")
)


process.ak4JPTJetsL1FastL2L3Residual = cms.EDProducer("JPTJetCorrectionProducer",
    correctors = cms.vstring('ak4JPTL1FastL2L3Residual'),
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt4")
)


process.ak4JPTJetsL1L2L3 = cms.EDProducer("JPTJetCorrectionProducer",
    correctors = cms.vstring('ak4JPTL1L2L3'),
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt4")
)


process.ak4JPTJetsL1L2L3Residual = cms.EDProducer("JPTJetCorrectionProducer",
    correctors = cms.vstring('ak4JPTL1L2L3Residual'),
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt4")
)


process.ak4JPTJetsL2L3 = cms.EDProducer("JPTJetCorrectionProducer",
    correctors = cms.vstring('ak4JPTL2L3'),
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt4")
)


process.ak4JPTJetsL2L3Residual = cms.EDProducer("JPTJetCorrectionProducer",
    correctors = cms.vstring('ak4JPTL2L3Residual'),
    src = cms.InputTag("JetPlusTrackZSPCorJetAntiKt4")
)


process.ak4PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak4PFL1FastL2L3'),
    src = cms.InputTag("ak4PFJets")
)


process.ak4PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak4PFL1FastL2L3Residual'),
    src = cms.InputTag("ak4PFJets")
)


process.ak4PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak4PFL1L2L3'),
    src = cms.InputTag("ak4PFJets")
)


process.ak4PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak4PFL1L2L3Residual'),
    src = cms.InputTag("ak4PFJets")
)


process.ak4PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak4PFL2L3'),
    src = cms.InputTag("ak4PFJets")
)


process.ak4PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak4PFL2L3Residual'),
    src = cms.InputTag("ak4PFJets")
)


process.ak4TrackJetsL2L3 = cms.EDProducer("TrackJetCorrectionProducer",
    correctors = cms.vstring('ak4TrackL2L3'),
    src = cms.InputTag("ak4TrackJets")
)


process.ak5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.5),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak5CastorJetID = cms.EDProducer("CastorJetIDProducer",
    src = cms.InputTag("ak5CastorJets")
)


process.ak5CastorJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(True),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(0.0),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.5),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("CastorTowerReco"),
    srcPVs = cms.InputTag("offlinePrimaryVertices")
)


process.ak5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.5),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak5PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak5PFL1FastL2L3'),
    src = cms.InputTag("ak5PFJets")
)


process.ak5PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak5PFL1FastL2L3Residual'),
    src = cms.InputTag("ak5PFJets")
)


process.ak5PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak5PFL1L2L3'),
    src = cms.InputTag("ak5PFJets")
)


process.ak5PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak5PFL1L2L3Residual'),
    src = cms.InputTag("ak5PFJets")
)


process.ak5PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak5PFL2L3'),
    src = cms.InputTag("ak5PFJets")
)


process.ak5PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak5PFL2L3Residual'),
    src = cms.InputTag("ak5PFJets")
)


process.ak6CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.6),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak6PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak6PFL1FastL2L3'),
    src = cms.InputTag("ak6PFJets")
)


process.ak6PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak6PFL1FastL2L3Residual'),
    src = cms.InputTag("ak6PFJets")
)


process.ak6PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak6PFL1L2L3'),
    src = cms.InputTag("ak6PFJets")
)


process.ak6PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak6PFL1L2L3Residual'),
    src = cms.InputTag("ak6PFJets")
)


process.ak6PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak6PFL2L3'),
    src = cms.InputTag("ak6PFJets")
)


process.ak6PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak6PFL2L3Residual'),
    src = cms.InputTag("ak6PFJets")
)


process.ak7CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.7),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ak7CaloJetsL1FastL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak7CaloL1FastL2L3'),
    src = cms.InputTag("ak7CaloJets")
)


process.ak7CaloJetsL1FastL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak7CaloL1FastL2L3Residual'),
    src = cms.InputTag("ak7CaloJets")
)


process.ak7CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak7CaloL1L2L3'),
    src = cms.InputTag("ak7CaloJets")
)


process.ak7CaloJetsL1L2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak7CaloL1L2L3Residual'),
    src = cms.InputTag("ak7CaloJets")
)


process.ak7CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak7CaloL2L3'),
    src = cms.InputTag("ak7CaloJets")
)


process.ak7CaloJetsL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak7CaloL2L3Residual'),
    src = cms.InputTag("ak7CaloJets")
)


process.ak7CastorJetID = cms.EDProducer("CastorJetIDProducer",
    src = cms.InputTag("ak7CastorJets")
)


process.ak7CastorJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(5.0),
    doAreaFastjet = cms.bool(False),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(True),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(0.0),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    nSigmaPU = cms.double(1.0),
    rParam = cms.double(0.7),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("CastorTowerReco"),
    srcPVs = cms.InputTag("offlinePrimaryVertices")
)


process.ak7PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak7PFL1FastL2L3'),
    src = cms.InputTag("ak7PFJets")
)


process.ak7PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak7PFL1FastL2L3Residual'),
    src = cms.InputTag("ak7PFJets")
)


process.ak7PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak7PFL1L2L3'),
    src = cms.InputTag("ak7PFJets")
)


process.ak7PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak7PFL1L2L3Residual'),
    src = cms.InputTag("ak7PFJets")
)


process.ak7PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak7PFL2L3'),
    src = cms.InputTag("ak7PFJets")
)


process.ak7PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak7PFL2L3Residual'),
    src = cms.InputTag("ak7PFJets")
)


process.ak8PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak8PFL1FastL2L3'),
    src = cms.InputTag("ak8PFJets")
)


process.ak8PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak8PFL1FastL2L3Residual'),
    src = cms.InputTag("ak8PFJets")
)


process.ak8PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak8PFL1L2L3'),
    src = cms.InputTag("ak8PFJets")
)


process.ak8PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak8PFL1L2L3Residual'),
    src = cms.InputTag("ak8PFJets")
)


process.ak8PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak8PFL2L3'),
    src = cms.InputTag("ak8PFJets")
)


process.ak8PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak8PFL2L3Residual'),
    src = cms.InputTag("ak8PFJets")
)


process.ak9PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak9PFL1FastL2L3'),
    src = cms.InputTag("ak9PFJets")
)


process.ak9PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak9PFL1FastL2L3Residual'),
    src = cms.InputTag("ak9PFJets")
)


process.ak9PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak9PFL1L2L3'),
    src = cms.InputTag("ak9PFJets")
)


process.ak9PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak9PFL1L2L3Residual'),
    src = cms.InputTag("ak9PFJets")
)


process.ak9PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak9PFL2L3'),
    src = cms.InputTag("ak9PFJets")
)


process.ak9PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ak9PFL2L3Residual'),
    src = cms.InputTag("ak9PFJets")
)


process.akCs3PFJets = cms.EDProducer("CSJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.005),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    csAlpha = cms.double(2.0),
    csRParam = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    etaMap = cms.InputTag("hiFJRhoProducer","mapEtaEdges"),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string('pfParticlesCs'),
    jetPtMin = cms.double(0.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.3),
    rho = cms.InputTag("hiFJRhoProducer","mapToRho"),
    rhom = cms.InputTag("hiFJRhoProducer","mapToRhoM"),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    useExplicitGhosts = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    writeJetsWithConst = cms.bool(True)
)


process.akCs4PFJets = cms.EDProducer("CSJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.005),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    csAlpha = cms.double(2.0),
    csRParam = cms.double(-1.0),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    etaMap = cms.InputTag("hiFJRhoProducer","mapEtaEdges"),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetCollInstanceName = cms.string('pfParticlesCs'),
    jetPtMin = cms.double(0.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    rho = cms.InputTag("hiFJRhoProducer","mapToRho"),
    rhom = cms.InputTag("hiFJRhoProducer","mapToRhoM"),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    useExplicitGhosts = cms.bool(True),
    voronoiRfact = cms.double(-0.9),
    writeJetsWithConst = cms.bool(True)
)


process.akPu1CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(4),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.1),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu1PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.1),
    src = cms.InputTag("PFTowers"),
    srcPVs = cms.InputTag(""),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu2CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(4),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.2),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu2PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.2),
    src = cms.InputTag("PFTowers"),
    srcPVs = cms.InputTag(""),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu3CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(6),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.3),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu3PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(15),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.3),
    src = cms.InputTag("PFTowers"),
    srcPVs = cms.InputTag(""),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu4CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(8),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu4CaloJetsCorrected = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak4CaloL2L3'),
    src = cms.InputTag("akPu4CaloJetsForTrk")
)


process.akPu4CaloJetsForTrk = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(8),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("hiCaloTowerForTrk"),
    srcPVs = cms.InputTag("hiSelectedPixelVertex"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu4PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(20),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    src = cms.InputTag("PFTowers"),
    srcPVs = cms.InputTag(""),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.5),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu5PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(25),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.5),
    src = cms.InputTag("PFTowers"),
    srcPVs = cms.InputTag(""),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu6CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(12),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.6),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu6PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(30),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.6),
    src = cms.InputTag("PFTowers"),
    srcPVs = cms.InputTag(""),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu7CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(14),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.7),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.akPu7PFJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(False),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10),
    jetType = cms.string('BasicJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(35),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.7),
    src = cms.InputTag("PFTowers"),
    srcPVs = cms.InputTag(""),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ancientMuonSeed = cms.EDProducer("MuonSeedGenerator",
    CSCRecSegmentLabel = cms.InputTag("cscSegments"),
    CSC_01 = cms.vdouble(
        0.166, 0.0, 0.0, 0.031, 0.0,
        0.0
    ),
    CSC_01_1_scale = cms.vdouble(-1.915329, 0.0),
    CSC_02 = cms.vdouble(
        0.612, -0.207, -0.0, 0.067, -0.001,
        0.0
    ),
    CSC_03 = cms.vdouble(
        0.787, -0.338, 0.029, 0.101, -0.008,
        0.0
    ),
    CSC_12 = cms.vdouble(
        -0.161, 0.254, -0.047, 0.042, -0.007,
        0.0
    ),
    CSC_12_1_scale = cms.vdouble(-6.434242, 0.0),
    CSC_12_2_scale = cms.vdouble(-1.63622, 0.0),
    CSC_12_3_scale = cms.vdouble(-1.63622, 0.0),
    CSC_13 = cms.vdouble(
        0.901, -1.302, 0.533, 0.045, 0.005,
        0.0
    ),
    CSC_13_2_scale = cms.vdouble(-6.077936, 0.0),
    CSC_13_3_scale = cms.vdouble(-1.701268, 0.0),
    CSC_14 = cms.vdouble(
        0.606, -0.181, -0.002, 0.111, -0.003,
        0.0
    ),
    CSC_14_3_scale = cms.vdouble(-1.969563, 0.0),
    CSC_23 = cms.vdouble(
        -0.081, 0.113, -0.029, 0.015, 0.008,
        0.0
    ),
    CSC_23_1_scale = cms.vdouble(-19.084285, 0.0),
    CSC_23_2_scale = cms.vdouble(-6.079917, 0.0),
    CSC_24 = cms.vdouble(
        0.004, 0.021, -0.002, 0.053, 0.0,
        0.0
    ),
    CSC_24_1_scale = cms.vdouble(-6.055701, 0.0),
    CSC_34 = cms.vdouble(
        0.062, -0.067, 0.019, 0.021, 0.003,
        0.0
    ),
    CSC_34_1_scale = cms.vdouble(-11.520507, 0.0),
    DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
    DT_12 = cms.vdouble(
        0.183, 0.054, -0.087, 0.028, 0.002,
        0.0
    ),
    DT_12_1_scale = cms.vdouble(-3.692398, 0.0),
    DT_12_2_scale = cms.vdouble(-3.518165, 0.0),
    DT_13 = cms.vdouble(
        0.315, 0.068, -0.127, 0.051, -0.002,
        0.0
    ),
    DT_13_1_scale = cms.vdouble(-4.520923, 0.0),
    DT_13_2_scale = cms.vdouble(-4.257687, 0.0),
    DT_14 = cms.vdouble(
        0.359, 0.052, -0.107, 0.072, -0.004,
        0.0
    ),
    DT_14_1_scale = cms.vdouble(-5.644816, 0.0),
    DT_14_2_scale = cms.vdouble(-4.808546, 0.0),
    DT_23 = cms.vdouble(
        0.13, 0.023, -0.057, 0.028, 0.004,
        0.0
    ),
    DT_23_1_scale = cms.vdouble(-5.320346, 0.0),
    DT_23_2_scale = cms.vdouble(-5.117625, 0.0),
    DT_24 = cms.vdouble(
        0.176, 0.014, -0.051, 0.051, 0.003,
        0.0
    ),
    DT_24_1_scale = cms.vdouble(-7.490909, 0.0),
    DT_24_2_scale = cms.vdouble(-6.63094, 0.0),
    DT_34 = cms.vdouble(
        0.044, 0.004, -0.013, 0.029, 0.003,
        0.0
    ),
    DT_34_1_scale = cms.vdouble(-13.783765, 0.0),
    DT_34_2_scale = cms.vdouble(-11.901897, 0.0),
    EnableCSCMeasurement = cms.bool(True),
    EnableDTMeasurement = cms.bool(True),
    EnableME0Measurement = cms.bool(False),
    ME0RecSegmentLabel = cms.InputTag("me0Segments"),
    OL_1213 = cms.vdouble(
        0.96, -0.737, 0.0, 0.052, 0.0,
        0.0
    ),
    OL_1213_0_scale = cms.vdouble(-4.488158, 0.0),
    OL_1222 = cms.vdouble(
        0.848, -0.591, 0.0, 0.062, 0.0,
        0.0
    ),
    OL_1222_0_scale = cms.vdouble(-5.810449, 0.0),
    OL_1232 = cms.vdouble(
        0.184, 0.0, 0.0, 0.066, 0.0,
        0.0
    ),
    OL_1232_0_scale = cms.vdouble(-5.964634, 0.0),
    OL_2213 = cms.vdouble(
        0.117, 0.0, 0.0, 0.044, 0.0,
        0.0
    ),
    OL_2213_0_scale = cms.vdouble(-7.239789, 0.0),
    OL_2222 = cms.vdouble(
        0.107, 0.0, 0.0, 0.04, 0.0,
        0.0
    ),
    OL_2222_0_scale = cms.vdouble(-7.667231, 0.0),
    SMB_10 = cms.vdouble(
        1.387, -0.038, 0.0, 0.19, 0.0,
        0.0
    ),
    SMB_10_0_scale = cms.vdouble(2.448566, 0.0),
    SMB_11 = cms.vdouble(
        1.247, 0.72, -0.802, 0.229, -0.075,
        0.0
    ),
    SMB_11_0_scale = cms.vdouble(2.56363, 0.0),
    SMB_12 = cms.vdouble(
        2.128, -0.956, 0.0, 0.199, 0.0,
        0.0
    ),
    SMB_12_0_scale = cms.vdouble(2.283221, 0.0),
    SMB_20 = cms.vdouble(
        1.011, -0.052, 0.0, 0.188, 0.0,
        0.0
    ),
    SMB_20_0_scale = cms.vdouble(1.486168, 0.0),
    SMB_21 = cms.vdouble(
        1.043, -0.124, 0.0, 0.183, 0.0,
        0.0
    ),
    SMB_21_0_scale = cms.vdouble(1.58384, 0.0),
    SMB_22 = cms.vdouble(
        1.474, -0.758, 0.0, 0.185, 0.0,
        0.0
    ),
    SMB_22_0_scale = cms.vdouble(1.346681, 0.0),
    SMB_30 = cms.vdouble(
        0.505, -0.022, 0.0, 0.215, 0.0,
        0.0
    ),
    SMB_30_0_scale = cms.vdouble(-3.629838, 0.0),
    SMB_31 = cms.vdouble(
        0.549, -0.145, 0.0, 0.207, 0.0,
        0.0
    ),
    SMB_31_0_scale = cms.vdouble(-3.323768, 0.0),
    SMB_32 = cms.vdouble(
        0.67, -0.327, 0.0, 0.22, 0.0,
        0.0
    ),
    SMB_32_0_scale = cms.vdouble(-3.054156, 0.0),
    SME_11 = cms.vdouble(
        3.295, -1.527, 0.112, 0.378, 0.02,
        0.0
    ),
    SME_11_0_scale = cms.vdouble(1.325085, 0.0),
    SME_12 = cms.vdouble(
        0.102, 0.599, 0.0, 0.38, 0.0,
        0.0
    ),
    SME_12_0_scale = cms.vdouble(2.279181, 0.0),
    SME_13 = cms.vdouble(
        -1.286, 1.711, 0.0, 0.356, 0.0,
        0.0
    ),
    SME_13_0_scale = cms.vdouble(0.104905, 0.0),
    SME_21 = cms.vdouble(
        -0.529, 1.194, -0.358, 0.472, 0.086,
        0.0
    ),
    SME_21_0_scale = cms.vdouble(-0.040862, 0.0),
    SME_22 = cms.vdouble(
        -1.207, 1.491, -0.251, 0.189, 0.243,
        0.0
    ),
    SME_22_0_scale = cms.vdouble(-3.457901, 0.0),
    SME_31 = cms.vdouble(
        -1.594, 1.482, -0.317, 0.487, 0.097,
        0.0
    ),
    SME_32 = cms.vdouble(
        -0.901, 1.333, -0.47, 0.41, 0.073,
        0.0
    ),
    SME_41 = cms.vdouble(
        -0.003, 0.005, 0.005, 0.608, 0.076,
        0.0
    ),
    SME_42 = cms.vdouble(
        -0.003, 0.005, 0.005, 0.608, 0.076,
        0.0
    ),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    crackEtas = cms.vdouble(0.2, 1.6, 1.7),
    crackWindow = cms.double(0.04),
    deltaEtaCrackSearchWindow = cms.double(0.25),
    deltaEtaSearchWindow = cms.double(0.2),
    deltaPhiSearchWindow = cms.double(0.25),
    scaleDT = cms.bool(True)
)


process.bunchSpacingProducer = cms.EDProducer("BunchSpacingProducer")


process.caloStage1Digis = cms.EDProducer("L1TRawToDigi",
    FedIds = cms.vint32(1352),
    Setup = cms.string('stage1::CaloSetup'),
    InputLabel = cms.InputTag('rawDataRepacker')
)


process.caloStage1FinalDigis = cms.EDProducer("L1TPhysicalEtAdder",
    InputCollection = cms.InputTag("caloStage1Digis"),
    InputHFCountsCollection = cms.InputTag("caloStage1Digis","HFBitCounts"),
    InputHFSumsCollection = cms.InputTag("caloStage1Digis","HFRingSums"),
    InputIsoTauCollection = cms.InputTag("caloStage1Digis","isoTaus"),
    InputPreGtJetCollection = cms.InputTag("caloStage1Digis"),
    InputRlxTauCollection = cms.InputTag("caloStage1Digis","rlxTaus")
)


process.caloStage1LegacyFormatDigis = cms.EDProducer("L1TCaloUpgradeToGCTConverter",
    InputCollection = cms.InputTag("caloStage1Digis"),
    InputHFCountsCollection = cms.InputTag("caloStage1Digis","HFBitCounts"),
    InputHFSumsCollection = cms.InputTag("caloStage1Digis","HFRingSums"),
    InputIsoTauCollection = cms.InputTag("caloStage1Digis","isoTaus"),
    InputRlxTauCollection = cms.InputTag("caloStage1Digis","rlxTaus")
)


process.caloTowerForTrk = cms.EDProducer("CaloTowersCreator",
    AllowMissingInputs = cms.bool(False),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBSumThreshold = cms.double(0.2),
    EBThreshold = cms.double(0.07),
    EBWeight = cms.double(1.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EESumThreshold = cms.double(0.45),
    EEThreshold = cms.double(0.3),
    EEWeight = cms.double(1.0),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring(
        'kTime',
        'kWeird',
        'kBad'
    ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    EcutTower = cms.double(-1000.0),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HBThreshold = cms.double(0.7),
    HBThreshold1 = cms.double(0.7),
    HBThreshold2 = cms.double(0.7),
    HBWeight = cms.double(1.0),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDThreshold = cms.double(0.8),
    HEDThreshold1 = cms.double(0.8),
    HEDWeight = cms.double(1.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HESThreshold = cms.double(0.8),
    HESThreshold1 = cms.double(0.8),
    HESWeight = cms.double(1.0),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Threshold = cms.double(0.5),
    HF1Weight = cms.double(1.0),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF2Threshold = cms.double(0.85),
    HF2Weight = cms.double(1.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HOThreshold0 = cms.double(1.1),
    HOThresholdMinus1 = cms.double(3.5),
    HOThresholdMinus2 = cms.double(3.5),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HOWeight = cms.double(1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HcalPhase = cms.int32(0),
    HcalThreshold = cms.double(-1000.0),
    MomConstrMethod = cms.int32(1),
    MomEBDepth = cms.double(0.3),
    MomEEDepth = cms.double(0.0),
    MomHBDepth = cms.double(0.2),
    MomHEDepth = cms.double(0.4),
    UseEcalRecoveredHits = cms.bool(False),
    UseEtEBTreshold = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    UseHO = cms.bool(True),
    UseHcalRecoveredHits = cms.bool(True),
    UseRejectedHitsOnly = cms.bool(False),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    UseSymEBTreshold = cms.bool(True),
    UseSymEETreshold = cms.bool(True),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    hbheInput = cms.InputTag("hbheprereco"),
    hfInput = cms.InputTag("hfreco"),
    hoInput = cms.InputTag("horeco"),
    missingHcalRescaleFactorForEcal = cms.double(0)
)


process.caloTowers = cms.EDProducer("CaloTowerCandidateCreator",
    e = cms.double(0.0),
    et = cms.double(0.0),
    minimumE = cms.double(0.0),
    minimumEt = cms.double(0.0),
    pt = cms.double(0.0),
    src = cms.InputTag("towerMaker"),
    verbose = cms.untracked.int32(0)
)


process.calotowermaker = cms.EDProducer("CaloTowersCreator",
    AllowMissingInputs = cms.bool(False),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBSumThreshold = cms.double(0.2),
    EBThreshold = cms.double(0.07),
    EBWeight = cms.double(1.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EESumThreshold = cms.double(0.45),
    EEThreshold = cms.double(0.3),
    EEWeight = cms.double(1.0),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring(
        'kTime',
        'kWeird',
        'kBad'
    ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    EcutTower = cms.double(-1000.0),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HBThreshold = cms.double(0.7),
    HBThreshold1 = cms.double(0.7),
    HBThreshold2 = cms.double(0.7),
    HBWeight = cms.double(1.0),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDThreshold = cms.double(0.8),
    HEDThreshold1 = cms.double(0.8),
    HEDWeight = cms.double(1.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HESThreshold = cms.double(0.8),
    HESThreshold1 = cms.double(0.8),
    HESWeight = cms.double(1.0),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Threshold = cms.double(0.5),
    HF1Weight = cms.double(1.0),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF2Threshold = cms.double(0.85),
    HF2Weight = cms.double(1.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HOThreshold0 = cms.double(1.1),
    HOThresholdMinus1 = cms.double(3.5),
    HOThresholdMinus2 = cms.double(3.5),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HOWeight = cms.double(1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HcalPhase = cms.int32(0),
    HcalThreshold = cms.double(-1000.0),
    MomConstrMethod = cms.int32(1),
    MomEBDepth = cms.double(0.3),
    MomEEDepth = cms.double(0.0),
    MomHBDepth = cms.double(0.2),
    MomHEDepth = cms.double(0.4),
    UseEcalRecoveredHits = cms.bool(False),
    UseEtEBTreshold = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    UseHO = cms.bool(True),
    UseHcalRecoveredHits = cms.bool(True),
    UseRejectedHitsOnly = cms.bool(False),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    UseSymEBTreshold = cms.bool(True),
    UseSymEETreshold = cms.bool(True),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    hbheInput = cms.InputTag("hbhereco"),
    hfInput = cms.InputTag("hfreco"),
    hoInput = cms.InputTag("horeco"),
    missingHcalRescaleFactorForEcal = cms.double(0)
)


process.castorDigis = cms.EDProducer("CastorRawToDigi",
    CastorCtdc = cms.bool(False),
    CastorFirstFED = cms.int32(690),
    ComplainEmptyData = cms.untracked.bool(False),
    ExceptionEmptyData = cms.untracked.bool(False),
    ExpectedOrbitMessageTime = cms.int32(-1),
    FEDs = cms.untracked.vint32(690, 691, 692, 693, 722),
    FilterDataQuality = cms.bool(True),
    InputLabel = cms.InputTag("rawDataRepacker"),
    UnpackTTP = cms.bool(True),
    UnpackZDC = cms.bool(True),
    UseNominalOrbitMessageTime = cms.bool(True),
    ZDCFirstFED = cms.int32(693),
    firstSample = cms.int32(0),
    lastSample = cms.int32(9),
    silent = cms.untracked.bool(False)
)


process.castorreco = cms.EDProducer("CastorSimpleReconstructor",
    Subdetector = cms.string('CASTOR'),
    correctForPhaseContainment = cms.bool(False),
    correctForTimeslew = cms.bool(False),
    correctionPhaseNS = cms.double(0.0),
    digiLabel = cms.InputTag("castorDigis"),
    doSaturationCorr = cms.bool(True),
    firstSample = cms.int32(4),
    maxADCvalue = cms.int32(127),
    samplesToAdd = cms.int32(2),
    setSaturationFlag = cms.bool(True),
    tsFromDB = cms.bool(True)
)


process.centralityBin = cms.EDProducer("CentralityBinProducer",
    Centrality = cms.InputTag("hiCentrality"),
    centralityVariable = cms.string('HFtowers'),
    nonDefaultGlauberModel = cms.string(''),
    pPbRunFlip = cms.uint32(99999999)
)


process.chargeCut2069Clusters = cms.EDProducer("ClusterChargeMasker",
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    ),
    oldClusterRemovalInfo = cms.InputTag("pixelPairStepClusters"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters")
)


process.chargedHadronPFTrackIsolation = cms.EDProducer("ChargedHadronPFTrackIsolationProducer",
    minRawCaloEnergy = cms.double(0.5),
    minTrackPt = cms.double(1),
    src = cms.InputTag("particleFlow")
)


process.ckfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('GroupedCkfTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("globalMixedSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.ckfTrackCandidatesP5 = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('CosmicNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('GroupedCkfTrajectoryBuilderP5')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("combinatorialcosmicseedfinderP5"),
    useHitsSplitting = cms.bool(True)
)


process.cleanPhotonCore = cms.EDProducer("PhotonCoreProducer",
    conversionProducer = cms.InputTag(""),
    minSCEt = cms.double(8.0),
    photonCoreCollection = cms.string(''),
    pixelSeedProducer = cms.InputTag("electronMergedSeeds"),
    risolveConversionAmbiguity = cms.bool(True),
    scHybridBarrelProducer = cms.InputTag("hiSpikeCleanedSC"),
    scIslandEndcapProducer = cms.InputTag("correctedIslandEndcapSuperClusters")
)


process.cleanPhotons = cms.EDProducer("GEDPhotonProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromEcalEnergy'),
    checkHcalStatus = cms.bool(True),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        trackProducer = cms.InputTag("hiGeneralTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHoverEBarrel = cms.double(0.99),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(10.0),
    minR9Endcap = cms.double(10.0),
    minSCEtBarrel = cms.double(5.0),
    minSCEtEndcap = cms.double(15.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    outputPhotonCollection = cms.string(''),
    pfEgammaCandidates = cms.InputTag(""),
    photonCoreProducer = cms.InputTag("cleanPhotonCore"),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    photonProducer = cms.InputTag("photonCore"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    preshowerHits = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    primaryVertexProducer = cms.InputTag("hiSelectedVertex"),
    reconstructionStep = cms.string('tmp'),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True),
    valueMapPhotons = cms.string('')
)


process.cleanedHybridSuperClusters = cms.EDProducer("HybridClusterProducer",
    HybridBarrelSeedThr = cms.double(1.0),
    RecHitFlagToBeExcluded = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitSeverityToBeExcluded = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    basicclusterCollection = cms.string('hybridBarrelBasicClusters'),
    clustershapecollection = cms.string(''),
    dynamicEThresh = cms.bool(False),
    dynamicPhiRoad = cms.bool(False),
    eThreshA = cms.double(0.003),
    eThreshB = cms.double(0.1),
    eseed = cms.double(0.35),
    ethresh = cms.double(0.1),
    ewing = cms.double(0.0),
    excludeFlagged = cms.bool(True),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    recHitsCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    shapeAssociation = cms.string('hybridShapeAssoc'),
    step = cms.int32(17),
    superclusterCollection = cms.string(''),
    useEtForXi = cms.bool(True),
    xi = cms.double(0.0)
)


process.clusterFilter = cms.EDProducer("ClusterShapeTrackFilterProducer",
    clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
    ptMax = cms.double(999999),
    ptMin = cms.double(1.5)
)


process.clusterSummaryProducer = cms.EDProducer("ClusterSummaryProducer",
    doPixels = cms.bool(True),
    doStrips = cms.bool(True),
    pixelClusters = cms.InputTag("siPixelClustersPreSplitting"),
    stripClusters = cms.InputTag("siStripClusters"),
    verbose = cms.bool(False),
    wantedSubDets = cms.vstring(
        'TOB',
        'TIB',
        'TID',
        'TEC',
        'STRIP',
        'BPIX',
        'FPIX',
        'PIXEL'
    ),
    wantedUserSubDets = cms.VPSet()
)


process.clusterSummaryProducerNoSplitting = cms.EDProducer("ClusterSummaryProducer",
    doPixels = cms.bool(True),
    doStrips = cms.bool(True),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    verbose = cms.bool(False),
    wantedSubDets = cms.vstring(
        'TOB',
        'TIB',
        'TID',
        'TEC',
        'STRIP',
        'BPIX',
        'FPIX',
        'PIXEL'
    ),
    wantedUserSubDets = cms.VPSet()
)


process.conditionsInEdm = cms.EDProducer("ConditionDumperInEdm",
    gtEvmDigisLabel = cms.InputTag("gtEvmDigis")
)


process.conversionStepTracks = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("convStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("convStepSelector","convStep")),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(True),
        tLists = cms.vint32(1)
    )),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.correctedEndcapSuperClustersWithPreshower = cms.EDProducer("PreshowerClusterProducer",
    assocSClusterCollection = cms.string(''),
    debugLevel = cms.string(''),
    endcapSClusterProducer = cms.InputTag("correctedIslandEndcapSuperClusters"),
    etThresh = cms.double(0.0),
    preshClusterCollectionX = cms.string('preshowerXClusters'),
    preshClusterCollectionY = cms.string('preshowerYClusters'),
    preshClusterEnergyCut = cms.double(0.0),
    preshNclust = cms.int32(4),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    preshSeededNstrip = cms.int32(15),
    preshStripEnergyCut = cms.double(0.0)
)


process.correctedHybridSuperClusters = cms.EDProducer("EgammaSCCorrectionMaker",
    applyCrackCorrection = cms.bool(True),
    applyEnergyCorrection = cms.bool(True),
    applyLocalContCorrection = cms.bool(True),
    corectedSuperClusterCollection = cms.string(''),
    crackCorrectorName = cms.string('EcalClusterCrackCorrection'),
    energyCorrectorName = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    etThresh = cms.double(0.0),
    hyb_fCorrPset = cms.PSet(
        brLinearHighThr = cms.double(8.0),
        brLinearLowThr = cms.double(1.1),
        fBremVec = cms.vdouble(-0.04382, 0.1169, 0.9267, -0.0009413, 1.419),
        fEtEtaVec = cms.vdouble(
            0, 1.00121, -0.63672, 0, 0,
            0, 0.5655, 6.457, 0.5081, 8.0,
            1.023, -0.00181
        )
    ),
    localContCorrectorName = cms.string('EcalBasicClusterLocalContCorrection'),
    modeEB = cms.int32(0),
    modeEE = cms.int32(0),
    rawSuperClusterProducer = cms.InputTag("hybridSuperClusters"),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    sigmaElectronicNoise = cms.double(0.03),
    superClusterAlgo = cms.string('Hybrid')
)


process.correctedIslandBarrelSuperClusters = cms.EDProducer("HiEgammaSCCorrectionMaker",
    VerbosityLevel = cms.string('ERROR'),
    applyEnergyCorrection = cms.bool(True),
    corectedSuperClusterCollection = cms.string(''),
    etThresh = cms.double(0.0),
    isl_fCorrPset = cms.PSet(
        brLinearHighThr = cms.double(0.0),
        brLinearLowThr = cms.double(0.0),
        fBremThVect = cms.vdouble(1.2, 1.2),
        fBremVect = cms.vdouble(
            -0.773799, 2.73438, -1.07235, 0.986821, -0.0101822,
            0.000306744, 1.00595, -0.0495958, 0.00451986, 1.00595,
            -0.0495958, 0.00451986
        ),
        fEtEtaVect = cms.vdouble(
            0.9497, 0.006985, 1.03754, -0.0142667, -0.0233993,
            0, 0, 0.908915, 0.0137322, 16.9602,
            -29.3093, 19.8976, -5.92666, 0.654571
        ),
        fEtaVect = cms.vdouble(
            0.993, 0, 0.00546, 1.165, -0.180844,
            0.040312
        ),
        maxR9 = cms.double(1.5),
        minR9Barrel = cms.double(0.94),
        minR9Endcap = cms.double(0.95)
    ),
    rawSuperClusterProducer = cms.InputTag("islandSuperClusters","islandBarrelSuperClusters"),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    sigmaElectronicNoise = cms.double(0.03),
    superClusterAlgo = cms.string('Island')
)


process.correctedIslandEndcapSuperClusters = cms.EDProducer("HiEgammaSCCorrectionMaker",
    VerbosityLevel = cms.string('ERROR'),
    applyEnergyCorrection = cms.bool(True),
    corectedSuperClusterCollection = cms.string(''),
    etThresh = cms.double(0.0),
    isl_fCorrPset = cms.PSet(
        brLinearHighThr = cms.double(0.0),
        brLinearLowThr = cms.double(0.0),
        fBremThVect = cms.vdouble(1.2, 1.2),
        fBremVect = cms.vdouble(
            -0.773799, 2.73438, -1.07235, 0.986821, -0.0101822,
            0.000306744, 1.00595, -0.0495958, 0.00451986, 1.00595,
            -0.0495958, 0.00451986
        ),
        fEtEtaVect = cms.vdouble(
            0.9497, 0.006985, 1.03754, -0.0142667, -0.0233993,
            0, 0, 0.908915, 0.0137322, 16.9602,
            -29.3093, 19.8976, -5.92666, 0.654571
        ),
        fEtaVect = cms.vdouble(
            0.993, 0, 0.00546, 1.165, -0.180844,
            0.040312
        ),
        maxR9 = cms.double(1.5),
        minR9Barrel = cms.double(0.94),
        minR9Endcap = cms.double(0.95)
    ),
    rawSuperClusterProducer = cms.InputTag("islandSuperClusters","islandEndcapSuperClusters"),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    sigmaElectronicNoise = cms.double(0.15),
    superClusterAlgo = cms.string('Island')
)


process.correctedMulti5x5SuperClustersWithPreshower = cms.EDProducer("EgammaSCCorrectionMaker",
    VerbosityLevel = cms.string('ERROR'),
    applyCrackCorrection = cms.bool(True),
    applyEnergyCorrection = cms.bool(True),
    applyLocalContCorrection = cms.bool(False),
    corectedSuperClusterCollection = cms.string(''),
    crackCorrectorName = cms.string('EcalClusterCrackCorrection'),
    energyCorrectorName = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    etThresh = cms.double(0.0),
    fix_fCorrPset = cms.PSet(
        brLinearHighThr = cms.double(6.0),
        brLinearLowThr = cms.double(0.9),
        fBremVec = cms.vdouble(-0.05228, 0.08738, 0.9508, 0.002677, 1.221),
        fEtEtaVec = cms.vdouble(
            1, -0.4386, -32.38, 0.6372, 15.67,
            -0.0928, -2.462, 1.138, 20.93
        )
    ),
    localContCorrectorName = cms.string('EcalBasicClusterLocalContCorrection'),
    modeEB = cms.int32(0),
    modeEE = cms.int32(0),
    rawSuperClusterProducer = cms.InputTag("multi5x5SuperClustersWithPreshower"),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    sigmaElectronicNoise = cms.double(0.15),
    superClusterAlgo = cms.string('Multi5x5')
)


process.cosmicsVeto = cms.EDProducer("CosmicsMuonIdProducer",
    CosmicCompFillerParameters = cms.PSet(
        InputCosmicMuonCollection = cms.InputTag("muonsFromCosmics1Leg"),
        InputMuonCollections = cms.VInputTag(cms.InputTag("globalMuons"), cms.InputTag("muons1stStep")),
        InputTrackCollections = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cosmicsVetoTracks")),
        InputVertexCollection = cms.InputTag("offlinePrimaryVertices"),
        ServiceParameters = cms.PSet(
            CSCLayers = cms.untracked.bool(True),
            GEMLayers = cms.untracked.bool(False),
            ME0Layers = cms.bool(False),
            Propagators = cms.untracked.vstring(
                'SteppingHelixPropagatorAny',
                'SteppingHelixPropagatorAlong',
                'SteppingHelixPropagatorOpposite',
                'SteppingHelixPropagatorL2Any',
                'SteppingHelixPropagatorL2Along',
                'SteppingHelixPropagatorL2Opposite',
                'SteppingHelixPropagatorAnyNoError',
                'SteppingHelixPropagatorAlongNoError',
                'SteppingHelixPropagatorOppositeNoError',
                'SteppingHelixPropagatorL2AnyNoError',
                'SteppingHelixPropagatorL2AlongNoError',
                'SteppingHelixPropagatorL2OppositeNoError',
                'PropagatorWithMaterial',
                'PropagatorWithMaterialOpposite',
                'SmartPropagator',
                'SmartPropagatorOpposite',
                'SmartPropagatorAnyOpposite',
                'SmartPropagatorAny',
                'SmartPropagatorRK',
                'SmartPropagatorAnyRK',
                'StraightLinePropagator'
            ),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        angleCut = cms.double(0.1),
        corrTimeNeg = cms.double(-10),
        corrTimePos = cms.double(5),
        deltaPt = cms.double(0.1),
        hIpTrdxy = cms.double(0.02),
        hIpTrvProb = cms.double(0.5),
        ipCut = cms.double(0.02),
        largedxy = cms.double(2.0),
        largedxyMult = cms.double(3.0),
        maxdxyLoose = cms.double(0.01),
        maxdxyLooseMult = cms.double(0.01),
        maxdxyTight = cms.double(1.0),
        maxdxyTightMult = cms.double(1.0),
        maxdzLoose = cms.double(0.1),
        maxdzLooseMult = cms.double(0.1),
        maxdzTight = cms.double(10.0),
        maxdzTightMult = cms.double(10.0),
        maxvertRho = cms.double(5),
        maxvertZ = cms.double(20),
        minvProb = cms.double(0.001),
        nChamberMatches = cms.int32(1),
        nTrackThreshold = cms.int32(3),
        offTimeNegLoose = cms.double(-15.0),
        offTimeNegLooseMult = cms.double(-15.0),
        offTimeNegTight = cms.double(-20.0),
        offTimeNegTightMult = cms.double(-20.0),
        offTimePosLoose = cms.double(15.0),
        offTimePosLooseMult = cms.double(15.0),
        offTimePosTight = cms.double(25.0),
        offTimePosTightMult = cms.double(25.0),
        segmentComp = cms.double(0.4),
        sharedFrac = cms.double(0.75),
        sharedHits = cms.int32(5)
    ),
    muonCollection = cms.InputTag("muons1stStep"),
    trackCollections = cms.VInputTag(cms.InputTag("generalTracks"), cms.InputTag("cosmicsVetoTracks"))
)


process.cosmicsVetoSeeds = cms.EDProducer("TrajectorySeedFromMuonProducer",
    muonCollectionTag = cms.InputTag("muons1stStep"),
    skipMatchedMuons = cms.bool(False),
    trackCollectionTag = cms.InputTag("generalTracks")
)


process.cosmicsVetoTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('CosmicNavigationSchool'),
    RedundantSeedCleaner = cms.string('none'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('GroupedCkfTrajectoryBuilderP5')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("cosmicsVetoSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.cosmicsVetoTracks = cms.EDProducer("CosmicTrackSelector",
    beamspot = cms.InputTag("offlineBeamSpot"),
    chi2n_par = cms.double(10.0),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(110.0),
    max_eta = cms.double(2.0),
    max_z0 = cms.double(300.0),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(0),
    min_nHit = cms.uint32(5),
    min_nPixelHit = cms.uint32(0),
    min_pt = cms.double(1.0),
    qualityBit = cms.string(''),
    src = cms.InputTag("cosmicsVetoTracksRaw")
)


process.cosmicsVetoTracksRaw = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('ctf'),
    Fitter = cms.string('FittingSmootherRKP5'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("cosmicsVetoTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.cosmictrackSelector = cms.EDProducer("CosmicTrackSelector",
    beamspot = cms.InputTag("offlineBeamSpot"),
    chi2n_par = cms.double(10.0),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    keepAllTracks = cms.bool(False),
    maxNumberLostLayers = cms.uint32(999),
    max_d0 = cms.double(110.0),
    max_eta = cms.double(2.0),
    max_z0 = cms.double(300.0),
    minNumber3DLayers = cms.uint32(0),
    minNumberLayers = cms.uint32(0),
    min_nHit = cms.uint32(5),
    min_nPixelHit = cms.uint32(0),
    min_pt = cms.double(1.0),
    qualityBit = cms.string(''),
    src = cms.InputTag("ctfWithMaterialTracksCosmics")
)


process.csc2DRecHits = cms.EDProducer("CSCRecHitDProducer",
    CSCDebug = cms.untracked.bool(False),
    CSCNoOfTimeBinsForDynamicPedestal = cms.int32(2),
    CSCStripClusterChargeCut = cms.double(25.0),
    CSCStripClusterSize = cms.untracked.int32(3),
    CSCStripPeakThreshold = cms.double(10.0),
    CSCStripxtalksOffset = cms.double(0.03),
    CSCUseCalibrations = cms.bool(True),
    CSCUseGasGainCorrections = cms.bool(False),
    CSCUseReducedWireTimeWindow = cms.bool(False),
    CSCUseStaticPedestals = cms.bool(False),
    CSCUseTimingCorrections = cms.bool(True),
    CSCWireClusterDeltaT = cms.int32(1),
    CSCWireTimeWindowHigh = cms.int32(15),
    CSCWireTimeWindowLow = cms.int32(0),
    CSCstripWireDeltaTime = cms.int32(8),
    ConstSyst_ME12 = cms.double(0.02),
    ConstSyst_ME13 = cms.double(0.03),
    ConstSyst_ME1a = cms.double(0.01),
    ConstSyst_ME1b = cms.double(0.02),
    ConstSyst_ME21 = cms.double(0.03),
    ConstSyst_ME22 = cms.double(0.03),
    ConstSyst_ME31 = cms.double(0.03),
    ConstSyst_ME32 = cms.double(0.03),
    ConstSyst_ME41 = cms.double(0.03),
    NoiseLevel_ME12 = cms.double(7.0),
    NoiseLevel_ME13 = cms.double(4.0),
    NoiseLevel_ME1a = cms.double(9.0),
    NoiseLevel_ME1b = cms.double(6.0),
    NoiseLevel_ME21 = cms.double(5.0),
    NoiseLevel_ME22 = cms.double(7.0),
    NoiseLevel_ME31 = cms.double(5.0),
    NoiseLevel_ME32 = cms.double(7.0),
    NoiseLevel_ME41 = cms.double(5.0),
    UseAverageTime = cms.bool(False),
    UseFivePoleFit = cms.bool(True),
    UseParabolaFit = cms.bool(False),
    XTasymmetry_ME12 = cms.double(0.015),
    XTasymmetry_ME13 = cms.double(0.02),
    XTasymmetry_ME1a = cms.double(0.023),
    XTasymmetry_ME1b = cms.double(0.01),
    XTasymmetry_ME21 = cms.double(0.023),
    XTasymmetry_ME22 = cms.double(0.023),
    XTasymmetry_ME31 = cms.double(0.023),
    XTasymmetry_ME32 = cms.double(0.023),
    XTasymmetry_ME41 = cms.double(0.023),
    readBadChambers = cms.bool(True),
    readBadChannels = cms.bool(False),
    stripDigiTag = cms.InputTag("muonCSCDigis","MuonCSCStripDigi"),
    wireDigiTag = cms.InputTag("muonCSCDigis","MuonCSCWireDigi")
)


process.cscSegments = cms.EDProducer("CSCSegmentProducer",
    algo_psets = cms.VPSet(
        cms.PSet(
            algo_name = cms.string('CSCSegAlgoSK'),
            algo_psets = cms.VPSet(
                cms.PSet(
                    chi2Max = cms.double(99999.0),
                    dPhiFineMax = cms.double(0.025),
                    dPhiMax = cms.double(0.003),
                    dRPhiFineMax = cms.double(8.0),
                    dRPhiMax = cms.double(8.0),
                    minLayersApart = cms.int32(2),
                    verboseInfo = cms.untracked.bool(True),
                    wideSeg = cms.double(3.0)
                ),
                cms.PSet(
                    chi2Max = cms.double(99999.0),
                    dPhiFineMax = cms.double(0.025),
                    dPhiMax = cms.double(0.025),
                    dRPhiFineMax = cms.double(3.0),
                    dRPhiMax = cms.double(8.0),
                    minLayersApart = cms.int32(2),
                    verboseInfo = cms.untracked.bool(True),
                    wideSeg = cms.double(3.0)
                )
            ),
            chamber_types = cms.vstring(
                'ME1/a',
                'ME1/b',
                'ME1/2',
                'ME1/3',
                'ME2/1',
                'ME2/2',
                'ME3/1',
                'ME3/2',
                'ME4/1',
                'ME4/2'
            ),
            parameters_per_chamber_type = cms.vint32(
                2, 1, 1, 1, 1,
                1, 1, 1, 1, 1
            )
        ),
        cms.PSet(
            algo_name = cms.string('CSCSegAlgoTC'),
            algo_psets = cms.VPSet(
                cms.PSet(
                    SegmentSorting = cms.int32(1),
                    chi2Max = cms.double(6000.0),
                    chi2ndfProbMin = cms.double(0.0001),
                    dPhiFineMax = cms.double(0.02),
                    dPhiMax = cms.double(0.003),
                    dRPhiFineMax = cms.double(6.0),
                    dRPhiMax = cms.double(1.2),
                    minLayersApart = cms.int32(2),
                    verboseInfo = cms.untracked.bool(True)
                ),
                cms.PSet(
                    SegmentSorting = cms.int32(1),
                    chi2Max = cms.double(6000.0),
                    chi2ndfProbMin = cms.double(0.0001),
                    dPhiFineMax = cms.double(0.013),
                    dPhiMax = cms.double(0.00198),
                    dRPhiFineMax = cms.double(3.0),
                    dRPhiMax = cms.double(0.6),
                    minLayersApart = cms.int32(2),
                    verboseInfo = cms.untracked.bool(True)
                )
            ),
            chamber_types = cms.vstring(
                'ME1/a',
                'ME1/b',
                'ME1/2',
                'ME1/3',
                'ME2/1',
                'ME2/2',
                'ME3/1',
                'ME3/2',
                'ME4/1',
                'ME4/2'
            ),
            parameters_per_chamber_type = cms.vint32(
                2, 1, 1, 1, 1,
                1, 1, 1, 1, 1
            )
        ),
        cms.PSet(
            algo_name = cms.string('CSCSegAlgoDF'),
            algo_psets = cms.VPSet(
                cms.PSet(
                    CSCSegmentDebug = cms.untracked.bool(False),
                    Pruning = cms.untracked.bool(False),
                    chi2Max = cms.double(5000.0),
                    dPhiFineMax = cms.double(0.025),
                    dRPhiFineMax = cms.double(8.0),
                    dXclusBoxMax = cms.double(8.0),
                    dYclusBoxMax = cms.double(8.0),
                    maxDPhi = cms.double(999.0),
                    maxDTheta = cms.double(999.0),
                    maxRatioResidualPrune = cms.double(3.0),
                    minHitsForPreClustering = cms.int32(10),
                    minHitsPerSegment = cms.int32(3),
                    minLayersApart = cms.int32(2),
                    nHitsPerClusterIsShower = cms.int32(20),
                    preClustering = cms.untracked.bool(False),
                    tanPhiMax = cms.double(0.5),
                    tanThetaMax = cms.double(1.2)
                ),
                cms.PSet(
                    CSCSegmentDebug = cms.untracked.bool(False),
                    Pruning = cms.untracked.bool(False),
                    chi2Max = cms.double(5000.0),
                    dPhiFineMax = cms.double(0.025),
                    dRPhiFineMax = cms.double(12.0),
                    dXclusBoxMax = cms.double(8.0),
                    dYclusBoxMax = cms.double(12.0),
                    maxDPhi = cms.double(999.0),
                    maxDTheta = cms.double(999.0),
                    maxRatioResidualPrune = cms.double(3.0),
                    minHitsForPreClustering = cms.int32(10),
                    minHitsPerSegment = cms.int32(3),
                    minLayersApart = cms.int32(2),
                    nHitsPerClusterIsShower = cms.int32(20),
                    preClustering = cms.untracked.bool(False),
                    tanPhiMax = cms.double(0.8),
                    tanThetaMax = cms.double(2.0)
                ),
                cms.PSet(
                    CSCSegmentDebug = cms.untracked.bool(False),
                    Pruning = cms.untracked.bool(False),
                    chi2Max = cms.double(5000.0),
                    dPhiFineMax = cms.double(0.025),
                    dRPhiFineMax = cms.double(8.0),
                    dXclusBoxMax = cms.double(8.0),
                    dYclusBoxMax = cms.double(8.0),
                    maxDPhi = cms.double(999.0),
                    maxDTheta = cms.double(999.0),
                    maxRatioResidualPrune = cms.double(3.0),
                    minHitsForPreClustering = cms.int32(30),
                    minHitsPerSegment = cms.int32(3),
                    minLayersApart = cms.int32(2),
                    nHitsPerClusterIsShower = cms.int32(20),
                    preClustering = cms.untracked.bool(False),
                    tanPhiMax = cms.double(0.5),
                    tanThetaMax = cms.double(1.2)
                )
            ),
            chamber_types = cms.vstring(
                'ME1/a',
                'ME1/b',
                'ME1/2',
                'ME1/3',
                'ME2/1',
                'ME2/2',
                'ME3/1',
                'ME3/2',
                'ME4/1',
                'ME4/2'
            ),
            parameters_per_chamber_type = cms.vint32(
                3, 1, 2, 2, 1,
                2, 1, 2, 1, 2
            )
        ),
        cms.PSet(
            algo_name = cms.string('CSCSegAlgoST'),
            algo_psets = cms.VPSet(
                cms.PSet(
                    BPMinImprovement = cms.double(10000.0),
                    BrutePruning = cms.bool(True),
                    CSCDebug = cms.untracked.bool(False),
                    CorrectTheErrors = cms.bool(True),
                    Covariance = cms.double(0.0),
                    ForceCovariance = cms.bool(False),
                    ForceCovarianceAll = cms.bool(False),
                    NormChi2Cut2D = cms.double(20.0),
                    NormChi2Cut3D = cms.double(10.0),
                    Pruning = cms.bool(True),
                    SeedBig = cms.double(0.0015),
                    SeedSmall = cms.double(0.0002),
                    curvePenalty = cms.double(2.0),
                    curvePenaltyThreshold = cms.double(0.85),
                    dPhiFineMax = cms.double(0.025),
                    dRPhiFineMax = cms.double(8.0),
                    dXclusBoxMax = cms.double(4.0),
                    dYclusBoxMax = cms.double(8.0),
                    hitDropLimit4Hits = cms.double(0.6),
                    hitDropLimit5Hits = cms.double(0.8),
                    hitDropLimit6Hits = cms.double(0.3333),
                    maxDPhi = cms.double(999.0),
                    maxDTheta = cms.double(999.0),
                    maxRatioResidualPrune = cms.double(3),
                    maxRecHitsInCluster = cms.int32(20),
                    minHitsPerSegment = cms.int32(3),
                    onlyBestSegment = cms.bool(False),
                    preClustering = cms.bool(True),
                    preClusteringUseChaining = cms.bool(True),
                    prePrun = cms.bool(True),
                    prePrunLimit = cms.double(3.17),
                    tanPhiMax = cms.double(0.5),
                    tanThetaMax = cms.double(1.2),
                    useShowering = cms.bool(False),
                    yweightPenalty = cms.double(1.5),
                    yweightPenaltyThreshold = cms.double(1.0)
                ),
                cms.PSet(
                    BPMinImprovement = cms.double(10000.0),
                    BrutePruning = cms.bool(True),
                    CSCDebug = cms.untracked.bool(False),
                    CorrectTheErrors = cms.bool(True),
                    Covariance = cms.double(0.0),
                    ForceCovariance = cms.bool(False),
                    ForceCovarianceAll = cms.bool(False),
                    NormChi2Cut2D = cms.double(20.0),
                    NormChi2Cut3D = cms.double(10.0),
                    Pruning = cms.bool(True),
                    SeedBig = cms.double(0.0015),
                    SeedSmall = cms.double(0.0002),
                    curvePenalty = cms.double(2.0),
                    curvePenaltyThreshold = cms.double(0.85),
                    dPhiFineMax = cms.double(0.025),
                    dRPhiFineMax = cms.double(8.0),
                    dXclusBoxMax = cms.double(4.0),
                    dYclusBoxMax = cms.double(8.0),
                    hitDropLimit4Hits = cms.double(0.6),
                    hitDropLimit5Hits = cms.double(0.8),
                    hitDropLimit6Hits = cms.double(0.3333),
                    maxDPhi = cms.double(999.0),
                    maxDTheta = cms.double(999.0),
                    maxRatioResidualPrune = cms.double(3),
                    maxRecHitsInCluster = cms.int32(24),
                    minHitsPerSegment = cms.int32(3),
                    onlyBestSegment = cms.bool(False),
                    preClustering = cms.bool(True),
                    preClusteringUseChaining = cms.bool(True),
                    prePrun = cms.bool(True),
                    prePrunLimit = cms.double(3.17),
                    tanPhiMax = cms.double(0.5),
                    tanThetaMax = cms.double(1.2),
                    useShowering = cms.bool(False),
                    yweightPenalty = cms.double(1.5),
                    yweightPenaltyThreshold = cms.double(1.0)
                )
            ),
            chamber_types = cms.vstring(
                'ME1/a',
                'ME1/b',
                'ME1/2',
                'ME1/3',
                'ME2/1',
                'ME2/2',
                'ME3/1',
                'ME3/2',
                'ME4/1',
                'ME4/2'
            ),
            parameters_per_chamber_type = cms.vint32(
                2, 1, 1, 1, 1,
                1, 1, 1, 1, 1
            )
        ),
        cms.PSet(
            algo_name = cms.string('CSCSegAlgoRU'),
            algo_psets = cms.VPSet(
                cms.PSet(
                    chi2Max = cms.double(100.0),
                    chi2Norm_2D_ = cms.double(35),
                    chi2_str = cms.double(50.0),
                    dPhiIntMax = cms.double(0.005),
                    dPhiMax = cms.double(0.006),
                    dRIntMax = cms.double(2.0),
                    dRMax = cms.double(1.5),
                    doCollisions = cms.bool(True),
                    minLayersApart = cms.int32(1),
                    wideSeg = cms.double(3.0)
                ),
                cms.PSet(
                    chi2Max = cms.double(100.0),
                    chi2Norm_2D_ = cms.double(35),
                    chi2_str = cms.double(50.0),
                    dPhiIntMax = cms.double(0.004),
                    dPhiMax = cms.double(0.005),
                    dRIntMax = cms.double(2.0),
                    dRMax = cms.double(1.5),
                    doCollisions = cms.bool(True),
                    minLayersApart = cms.int32(1),
                    wideSeg = cms.double(3.0)
                ),
                cms.PSet(
                    chi2Max = cms.double(100.0),
                    chi2Norm_2D_ = cms.double(35),
                    chi2_str = cms.double(50.0),
                    dPhiIntMax = cms.double(0.003),
                    dPhiMax = cms.double(0.004),
                    dRIntMax = cms.double(2.0),
                    dRMax = cms.double(1.5),
                    doCollisions = cms.bool(True),
                    minLayersApart = cms.int32(1),
                    wideSeg = cms.double(3.0)
                ),
                cms.PSet(
                    chi2Max = cms.double(60.0),
                    chi2Norm_2D_ = cms.double(20),
                    chi2_str = cms.double(30.0),
                    dPhiIntMax = cms.double(0.002),
                    dPhiMax = cms.double(0.003),
                    dRIntMax = cms.double(2.0),
                    dRMax = cms.double(1.5),
                    doCollisions = cms.bool(True),
                    minLayersApart = cms.int32(1),
                    wideSeg = cms.double(3.0)
                ),
                cms.PSet(
                    chi2Max = cms.double(180.0),
                    chi2Norm_2D_ = cms.double(60),
                    chi2_str = cms.double(80.0),
                    dPhiIntMax = cms.double(0.005),
                    dPhiMax = cms.double(0.007),
                    dRIntMax = cms.double(2.0),
                    dRMax = cms.double(1.5),
                    doCollisions = cms.bool(True),
                    minLayersApart = cms.int32(1),
                    wideSeg = cms.double(3.0)
                ),
                cms.PSet(
                    chi2Max = cms.double(100.0),
                    chi2Norm_2D_ = cms.double(35),
                    chi2_str = cms.double(50.0),
                    dPhiIntMax = cms.double(0.004),
                    dPhiMax = cms.double(0.006),
                    dRIntMax = cms.double(2.0),
                    dRMax = cms.double(1.5),
                    doCollisions = cms.bool(True),
                    minLayersApart = cms.int32(1),
                    wideSeg = cms.double(3.0)
                )
            ),
            chamber_types = cms.vstring(
                'ME1/a',
                'ME1/b',
                'ME1/2',
                'ME1/3',
                'ME2/1',
                'ME2/2',
                'ME3/1',
                'ME3/2',
                'ME4/1',
                'ME4/2'
            ),
            parameters_per_chamber_type = cms.vint32(
                1, 2, 3, 4, 5,
                6, 5, 6, 5, 6
            )
        )
    ),
    algo_type = cms.int32(5),
    inputObjects = cms.InputTag("csc2DRecHits")
)


process.csctfDigis = cms.EDProducer("CSCTFUnpacker",
    MaxBX = cms.int32(11),
    MinBX = cms.int32(5),
    mappingFile = cms.string(''),
    producer = cms.InputTag("rawDataRepacker"),
    slot2sector = cms.vint32(
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0
    ),
    swapME1strips = cms.bool(False)
)


process.ctfWithMaterialTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('undefAlgorithm'),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("ckfTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.ctfWithMaterialTracksCosmics = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('ctf'),
    Fitter = cms.string('FittingSmootherRKP5'),
    GeometricInnerState = cms.bool(True),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("ckfTrackCandidatesP5"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.ctppsDiamondRawToDigi = cms.EDProducer("TotemVFATRawToDigi",
    RawToDigi = cms.PSet(
        BC_fraction = cms.untracked.double(0.6),
        BC_min = cms.untracked.uint32(10),
        EC_fraction = cms.untracked.double(0.6),
        EC_min = cms.untracked.uint32(10),
        printErrorSummary = cms.untracked.uint32(0),
        printUnknownFrameSummary = cms.untracked.uint32(0),
        testBCMostFrequent = cms.uint32(2),
        testCRC = cms.uint32(0),
        testECMostFrequent = cms.uint32(0),
        testFootprint = cms.uint32(2),
        testID = cms.uint32(2),
        verbosity = cms.untracked.uint32(0)
    ),
    RawUnpacking = cms.PSet(
        verbosity = cms.untracked.uint32(0)
    ),
    fedIds = cms.vuint32(),
    rawDataTag = cms.InputTag("rawDataCollector"),
    subSystem = cms.string('TimingDiamond')
)


process.ctppsPixelDigis = cms.EDProducer("CTPPSPixelRawToDigi",
    includeErrors = cms.bool(True),
    inputLabel = cms.InputTag("rawDataCollector"),
    mappingLabel = cms.string('RPix')
)


process.detachedQuadStep = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorDetachedQuadStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.5, 0.0, 0.5),
    src = cms.InputTag("detachedQuadStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.detachedQuadStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("")
)


process.detachedQuadStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("trackerClusterCheck"),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("detachedQuadStepSeedLayers"),
    trackingRegions = cms.InputTag("detachedQuadStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.detachedQuadStepHitQuadruplets = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0),
    CAPhiCut = cms.double(0),
    CAThetaCut = cms.double(0.0011),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("detachedQuadStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(2),
        value1 = cms.double(500),
        value2 = cms.double(100)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_detachedQuadStepHitDoublets__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.detachedQuadStepMasks = cms.EDProducer("FastTrackerRecHitMaskProducer",
    TrackQuality = cms.string('highPurity'),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    minNumberOfLayersWithMeasBeforeFiltering_ = cms.int32(0),
    oldHitRemovalInfo = cms.InputTag(""),
    recHits = cms.InputTag("fastTrackerRecHits"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trackQuality = cms.string('hightPurity'),
    trajectories = cms.InputTag("")
)


process.detachedQuadStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("detachedQuadStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("detachedQuadStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3+BPix4',
        'BPix1+BPix2+BPix3+FPix1_pos',
        'BPix1+BPix2+BPix3+FPix1_neg',
        'BPix1+BPix2+FPix1_pos+FPix2_pos',
        'BPix1+BPix2+FPix1_neg+FPix2_neg',
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg'
    )
)


process.detachedQuadStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_detachedQuadStepHitQuadruplets__reRECO'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("detachedQuadStepHitQuadruplets")
)


process.detachedQuadStepSelector = cms.EDProducer("MultiTrackSelector",
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("detachedQuadStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.0),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.9, 3.0),
            d0_par2 = cms.vdouble(1.0, 3.0),
            dz_par1 = cms.vdouble(0.9, 3.0),
            dz_par2 = cms.vdouble(1.0, 3.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedQuadStepVtxLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.3, 4.0),
            d0_par2 = cms.vdouble(1.3, 4.0),
            dz_par1 = cms.vdouble(1.3, 4.0),
            dz_par2 = cms.vdouble(1.3, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedQuadStepTrkLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.9),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.9, 3.0),
            d0_par2 = cms.vdouble(0.9, 3.0),
            dz_par1 = cms.vdouble(0.9, 3.0),
            dz_par2 = cms.vdouble(0.9, 3.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedQuadStepVtxTight'),
            preFilterName = cms.string('detachedQuadStepVtxLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.5),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.1, 4.0),
            d0_par2 = cms.vdouble(1.1, 4.0),
            dz_par1 = cms.vdouble(1.1, 4.0),
            dz_par2 = cms.vdouble(1.1, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(4),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedQuadStepTrkTight'),
            preFilterName = cms.string('detachedQuadStepTrkLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.9),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.8, 3.0),
            d0_par2 = cms.vdouble(0.8, 3.0),
            dz_par1 = cms.vdouble(0.8, 3.0),
            dz_par2 = cms.vdouble(0.8, 3.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedQuadStepVtx'),
            preFilterName = cms.string('detachedQuadStepVtxTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.5),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.9, 4.0),
            d0_par2 = cms.vdouble(0.9, 4.0),
            dz_par1 = cms.vdouble(0.9, 4.0),
            dz_par2 = cms.vdouble(0.9, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(4),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedQuadStepTrk'),
            preFilterName = cms.string('detachedQuadStepTrkTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.detachedQuadStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('detachedQuadStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('detachedQuadStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("detachedQuadStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("detachedQuadStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.detachedQuadStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(0),
        originHalfLength = cms.double(15.0),
        originRadius = cms.double(1.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.3),
        useMultipleScattering = cms.bool(False)
    )
)


process.detachedQuadStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('detachedQuadStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("detachedQuadStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.detachedTripletStep = cms.EDProducer("ClassifierMerger",
    inputClassifiers = cms.vstring(
        'detachedTripletStepClassifier1',
        'detachedTripletStepClassifier2'
    )
)


process.detachedTripletStepClassifier1 = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter3_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.5, 0.0, 0.5),
    src = cms.InputTag("detachedTripletStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.detachedTripletStepClassifier2 = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter0_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.2, 0.0, 0.4),
    src = cms.InputTag("detachedTripletStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.detachedTripletStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag("initialStep","QualityMasks"),
    trajectories = cms.InputTag("initialStepTracks")
)


process.detachedTripletStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("trackerClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("detachedTripletStepSeedLayers"),
    trackingRegions = cms.InputTag("detachedTripletStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.detachedTripletStepHitTriplets = cms.EDProducer("PixelTripletLargeTipEDProducer",
    doublets = cms.InputTag("detachedTripletStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0),
    extraHitRZtolerance = cms.double(0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_detachedTripletStepHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.detachedTripletStepMasks = cms.EDProducer("FastTrackerRecHitMaskProducer",
    TrackQuality = cms.string('highPurity'),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    minNumberOfLayersWithMeasBeforeFiltering_ = cms.int32(0),
    oldHitRemovalInfo = cms.InputTag(""),
    recHits = cms.InputTag("fastTrackerRecHits"),
    trackClassifier = cms.InputTag("initialStep","QualityMasks"),
    trackQuality = cms.string('hightPurity'),
    trajectories = cms.InputTag("initialStepTracks")
)


process.detachedTripletStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("detachedTripletStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("detachedTripletStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg'
    )
)


process.detachedTripletStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_detachedTripletStepHitTriplets__reRECO',
        'IntermediateHitDoublets_detachedTripletStepHitDoublets__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("detachedTripletStepHitTriplets")
)


process.detachedTripletStepSelector = cms.EDProducer("MultiTrackSelector",
    GBRForestLabel = cms.string('MVASelectorIter3'),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("detachedTripletStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.2, 3.0),
            d0_par2 = cms.vdouble(1.3, 3.0),
            dz_par1 = cms.vdouble(1.2, 3.0),
            dz_par2 = cms.vdouble(1.3, 3.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedTripletStepVtxLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.7),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.6, 4.0),
            d0_par2 = cms.vdouble(1.6, 4.0),
            dz_par1 = cms.vdouble(1.6, 4.0),
            dz_par2 = cms.vdouble(1.6, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedTripletStepTrkLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.7),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.95, 3.0),
            d0_par2 = cms.vdouble(1.0, 3.0),
            dz_par1 = cms.vdouble(0.9, 3.0),
            dz_par2 = cms.vdouble(1.0, 3.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedTripletStepVtxTight'),
            preFilterName = cms.string('detachedTripletStepVtxLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.5),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.1, 4.0),
            d0_par2 = cms.vdouble(1.1, 4.0),
            dz_par1 = cms.vdouble(1.1, 4.0),
            dz_par2 = cms.vdouble(1.1, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(5),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedTripletStepTrkTight'),
            preFilterName = cms.string('detachedTripletStepTrkLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.7),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.85, 3.0),
            d0_par2 = cms.vdouble(0.9, 3.0),
            dz_par1 = cms.vdouble(0.8, 3.0),
            dz_par2 = cms.vdouble(0.9, 3.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedTripletStepVtx'),
            preFilterName = cms.string('detachedTripletStepVtxTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.4),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.0, 4.0),
            d0_par2 = cms.vdouble(1.0, 4.0),
            dz_par1 = cms.vdouble(1.0, 4.0),
            dz_par2 = cms.vdouble(1.0, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(4),
            minNumberLayers = cms.uint32(5),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('detachedTripletStepTrk'),
            preFilterName = cms.string('detachedTripletStepTrkTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.detachedTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('detachedTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('detachedTripletStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("detachedTripletStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("detachedTripletStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.detachedTripletStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(0),
        originHalfLength = cms.double(15.0),
        originRadius = cms.double(1.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.3),
        useMultipleScattering = cms.bool(False)
    )
)


process.detachedTripletStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('detachedTripletStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("detachedTripletStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.displacedGlobalMuons = cms.EDProducer("GlobalMuonProducer",
    GLBTrajBuilderParameters = cms.PSet(
        GlbRefitterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            Chi2CutGEM = cms.double(1.0),
            Chi2CutME0 = cms.double(1.0),
            Chi2CutRPC = cms.double(1.0),
            Chi2ProbabilityCut = cms.double(30.0),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            DYTselector = cms.int32(1),
            DYTthrs = cms.vint32(20, 30),
            DYTupdator = cms.bool(False),
            DYTuseAPE = cms.bool(False),
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('GlbMuKFFitter'),
            GEMRecHitLabel = cms.InputTag("gemRecHits"),
            HitThreshold = cms.int32(1),
            ME0RecHitLabel = cms.InputTag("me0Segments"),
            MuonHitsOption = cms.int32(1),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            PropDirForCosmics = cms.bool(False),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            PtCut = cms.double(1.0),
            RefitDirection = cms.string('insideOut'),
            RefitFlag = cms.bool(True),
            RefitRPCHits = cms.bool(True),
            SkipStation = cms.int32(-1),
            TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
            TrackerSkipSection = cms.int32(-1),
            TrackerSkipSystem = cms.int32(-1)
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Chi2Cut_1 = cms.double(50.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaDCut_2 = cms.double(10.0),
            DeltaDCut_3 = cms.double(15.0),
            DeltaRCut_1 = cms.double(0.1),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            Eta_threshold = cms.double(1.2),
            LocChi2Cut = cms.double(20.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Propagator = cms.string('SmartPropagatorRK'),
            Pt_threshold1 = cms.double(0.0),
            Pt_threshold2 = cms.double(999999999.0),
            Quality_1 = cms.double(20.0),
            Quality_2 = cms.double(15.0),
            Quality_3 = cms.double(7.0)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        MuonTrackingRegionBuilder = cms.PSet(
            DeltaEta = cms.double(0.2),
            DeltaPhi = cms.double(0.2),
            DeltaR = cms.double(0.2),
            DeltaZ = cms.double(15.9),
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            Eta_fixed = cms.bool(False),
            Eta_min = cms.double(0.1),
            MeasurementTrackerName = cms.InputTag(""),
            OnDemand = cms.int32(-1),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            Phi_fixed = cms.bool(False),
            Phi_min = cms.double(0.1),
            Pt_fixed = cms.bool(False),
            Pt_min = cms.double(1.5),
            Rescale_Dz = cms.double(3.0),
            Rescale_eta = cms.double(3.0),
            Rescale_phi = cms.double(3.0),
            UseVertex = cms.bool(False),
            Z_fixed = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            input = cms.InputTag(""),
            maxRegions = cms.int32(1),
            precise = cms.bool(True),
            vertexCollection = cms.InputTag("")
        ),
        PCut = cms.double(2.5),
        PtCut = cms.double(1.0),
        RefitRPCHits = cms.bool(True),
        ScaleTECxFactor = cms.double(-1.0),
        ScaleTECyFactor = cms.double(-1.0),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('KFFitterForRefitInsideOut'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            RefitDirection = cms.string('alongMomentum'),
            RefitRPCHits = cms.bool(True),
            Smoother = cms.string('KFSmootherForRefitInsideOut'),
            TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
        ),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
    ),
    MuonCollectionLabel = cms.InputTag("displacedStandAloneMuons"),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(True),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    TrackerCollectionLabel = cms.InputTag("displacedTracks")
)


process.displacedMuonSeeds = cms.EDProducer("CosmicMuonSeedGenerator",
    CSCRecSegmentLabel = cms.InputTag("cscSegments"),
    DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
    EnableCSCMeasurement = cms.bool(True),
    EnableDTMeasurement = cms.bool(True),
    ForcePointDown = cms.bool(False),
    MaxCSCChi2 = cms.double(300.0),
    MaxDTChi2 = cms.double(300.0),
    MaxSeeds = cms.int32(1000)
)


process.displacedStandAloneMuons = cms.EDProducer("StandAloneMuonProducer",
    InputObjects = cms.InputTag("displacedMuonSeeds"),
    MuonTrajectoryBuilder = cms.string('StandAloneMuonTrajectoryBuilder'),
    STATrajBuilderParameters = cms.PSet(
        BWFilterParameters = cms.PSet(
            BWSeedType = cms.string('fromGenerator'),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            EnableCSCMeasurement = cms.bool(True),
            EnableDTMeasurement = cms.bool(True),
            EnableGEMMeasurement = cms.bool(False),
            EnableME0Measurement = cms.bool(False),
            EnableRPCMeasurement = cms.bool(True),
            FitDirection = cms.string('outsideIn'),
            GEMRecSegmentLabel = cms.InputTag("gemRecHits"),
            ME0RecSegmentLabel = cms.InputTag("me0Segments"),
            MaxChi2 = cms.double(100.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                ExcludeRPCFromFit = cms.bool(False),
                Granularity = cms.int32(0),
                MaxChi2 = cms.double(25.0),
                RescaleError = cms.bool(False),
                RescaleErrorFactor = cms.double(100.0),
                UseInvalidHits = cms.bool(True)
            ),
            NumberOfSigma = cms.double(3.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
        ),
        DoBackwardFilter = cms.bool(True),
        DoRefit = cms.bool(False),
        DoSeedRefit = cms.bool(False),
        FilterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            EnableCSCMeasurement = cms.bool(True),
            EnableDTMeasurement = cms.bool(True),
            EnableGEMMeasurement = cms.bool(False),
            EnableME0Measurement = cms.bool(False),
            EnableRPCMeasurement = cms.bool(True),
            FitDirection = cms.string('insideOut'),
            GEMRecSegmentLabel = cms.InputTag("gemRecHits"),
            ME0RecSegmentLabel = cms.InputTag("me0Segments"),
            MaxChi2 = cms.double(1000.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                ExcludeRPCFromFit = cms.bool(False),
                Granularity = cms.int32(0),
                MaxChi2 = cms.double(25.0),
                RescaleError = cms.bool(False),
                RescaleErrorFactor = cms.double(100.0),
                UseInvalidHits = cms.bool(True)
            ),
            NumberOfSigma = cms.double(3.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
        ),
        NavigationType = cms.string('Standard'),
        RefitterParameters = cms.PSet(
            FitterName = cms.string('KFFitterSmootherSTA'),
            ForceAllIterations = cms.bool(False),
            MaxFractionOfLostHits = cms.double(0.05),
            NumberOfIterations = cms.uint32(3),
            RescaleError = cms.double(100.0)
        ),
        SeedPosition = cms.string('in'),
        SeedPropagator = cms.string('SteppingHelixPropagatorAny'),
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('KFFitterSmootherSTA'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            NMinRecHits = cms.uint32(2),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RescaleError = cms.double(100.0),
            UseSubRecHits = cms.bool(False)
        )
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(False),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)


process.displacedTracks = cms.EDProducer("DuplicateListMerger",
    candidateComponents = cms.InputTag("duplicateDisplacedTrackCandidates","candidateMap"),
    candidateSource = cms.InputTag("duplicateDisplacedTrackCandidates","candidates"),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    diffHitsCut = cms.int32(5),
    mergedMVAVals = cms.InputTag("duplicateDisplacedTrackClassifier","MVAValues"),
    mergedSource = cms.InputTag("mergedDuplicateDisplacedTracks"),
    originalMVAVals = cms.InputTag("preDuplicateMergingDisplacedTracks","MVAValues"),
    originalSource = cms.InputTag("preDuplicateMergingDisplacedTracks"),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder')
)


process.dt1DCosmicRecHits = cms.EDProducer("DTRecHitProducer",
    debug = cms.untracked.bool(False),
    dtDigiLabel = cms.InputTag("muonDTDigis"),
    recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
    recAlgoConfig = cms.PSet(
        debug = cms.untracked.bool(False),
        doVdriftCorr = cms.bool(False),
        maxTime = cms.double(420.0),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        tTrigModeConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doT0Correction = cms.bool(True),
            doTOFCorrection = cms.bool(False),
            doWirePropCorrection = cms.bool(False),
            tTrigLabel = cms.string('cosmics'),
            tofCorrType = cms.int32(0),
            vPropWire = cms.double(24.4),
            wirePropCorrType = cms.int32(0)
        ),
        useUncertDB = cms.bool(False)
    )
)


process.dt1DRecHits = cms.EDProducer("DTRecHitProducer",
    debug = cms.untracked.bool(False),
    dtDigiLabel = cms.InputTag("muonDTDigis"),
    recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
    recAlgoConfig = cms.PSet(
        debug = cms.untracked.bool(False),
        doVdriftCorr = cms.bool(True),
        maxTime = cms.double(420.0),
        minTime = cms.double(-3.0),
        stepTwoFromDigi = cms.bool(False),
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        tTrigModeConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doT0Correction = cms.bool(True),
            doTOFCorrection = cms.bool(True),
            doWirePropCorrection = cms.bool(True),
            tTrigLabel = cms.string(''),
            tofCorrType = cms.int32(0),
            vPropWire = cms.double(24.4),
            wirePropCorrType = cms.int32(0)
        ),
        useUncertDB = cms.bool(True)
    )
)


process.dt2DCosmicSegments = cms.EDProducer("DTRecSegment2DProducer",
    Reco2DAlgoConfig = cms.PSet(
        AlphaMaxPhi = cms.double(100.0),
        AlphaMaxTheta = cms.double(100.0),
        MaxAllowedHits = cms.uint32(50),
        MaxChi2 = cms.double(4.0),
        debug = cms.untracked.bool(False),
        hit_afterT0_resolution = cms.double(0.03),
        intime_cut = cms.double(-1.0),
        nSharedHitsMax = cms.int32(2),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False),
        performT0_vdriftSegCorrection = cms.bool(False),
        perform_delta_rejecting = cms.bool(False),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doVdriftCorr = cms.bool(False),
            maxTime = cms.double(420.0),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            tTrigModeConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doT0Correction = cms.bool(True),
                doTOFCorrection = cms.bool(False),
                doWirePropCorrection = cms.bool(False),
                tTrigLabel = cms.string('cosmics'),
                tofCorrType = cms.int32(0),
                vPropWire = cms.double(24.4),
                wirePropCorrType = cms.int32(0)
            ),
            useUncertDB = cms.bool(False)
        ),
        segmCleanerMode = cms.int32(2)
    ),
    Reco2DAlgoName = cms.string('DTMeantimerPatternReco'),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DCosmicRecHits")
)


process.dt2DSegments = cms.EDProducer("DTRecSegment2DProducer",
    Reco2DAlgoConfig = cms.PSet(
        AlphaMaxPhi = cms.double(1.0),
        AlphaMaxTheta = cms.double(0.9),
        MaxAllowedHits = cms.uint32(50),
        MaxChi2 = cms.double(4.0),
        debug = cms.untracked.bool(False),
        hit_afterT0_resolution = cms.double(0.03),
        nSharedHitsMax = cms.int32(2),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False),
        performT0_vdriftSegCorrection = cms.bool(False),
        perform_delta_rejecting = cms.bool(False),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doVdriftCorr = cms.bool(True),
            maxTime = cms.double(420.0),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            tTrigModeConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doT0Correction = cms.bool(True),
                doTOFCorrection = cms.bool(True),
                doWirePropCorrection = cms.bool(True),
                tTrigLabel = cms.string(''),
                tofCorrType = cms.int32(0),
                vPropWire = cms.double(24.4),
                wirePropCorrType = cms.int32(0)
            ),
            useUncertDB = cms.bool(True)
        ),
        segmCleanerMode = cms.int32(2)
    ),
    Reco2DAlgoName = cms.string('DTMeantimerPatternReco'),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DRecHits")
)


process.dt4DCosmicSegments = cms.EDProducer("DTRecSegment4DProducer",
    Reco4DAlgoConfig = cms.PSet(
        AllDTRecHits = cms.bool(True),
        Reco2DAlgoConfig = cms.PSet(
            AlphaMaxPhi = cms.double(100.0),
            AlphaMaxTheta = cms.double(100.0),
            MaxAllowedHits = cms.uint32(50),
            MaxChi2 = cms.double(4.0),
            debug = cms.untracked.bool(False),
            hit_afterT0_resolution = cms.double(0.03),
            intime_cut = cms.double(-1.0),
            nSharedHitsMax = cms.int32(2),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False),
            performT0_vdriftSegCorrection = cms.bool(False),
            perform_delta_rejecting = cms.bool(False),
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doVdriftCorr = cms.bool(False),
                maxTime = cms.double(420.0),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                tTrigModeConfig = cms.PSet(
                    debug = cms.untracked.bool(False),
                    doT0Correction = cms.bool(True),
                    doTOFCorrection = cms.bool(False),
                    doWirePropCorrection = cms.bool(False),
                    tTrigLabel = cms.string('cosmics'),
                    tofCorrType = cms.int32(0),
                    vPropWire = cms.double(24.4),
                    wirePropCorrType = cms.int32(0)
                ),
                useUncertDB = cms.bool(False)
            ),
            segmCleanerMode = cms.int32(2)
        ),
        Reco2DAlgoName = cms.string('DTMeantimerPatternReco'),
        debug = cms.untracked.bool(False),
        hit_afterT0_resolution = cms.double(0.03),
        intime_cut = cms.double(-1.0),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False),
        performT0_vdriftSegCorrection = cms.bool(False),
        perform_delta_rejecting = cms.bool(False),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doVdriftCorr = cms.bool(False),
            maxTime = cms.double(420.0),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            tTrigModeConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doT0Correction = cms.bool(True),
                doTOFCorrection = cms.bool(False),
                doWirePropCorrection = cms.bool(False),
                tTrigLabel = cms.string('cosmics'),
                tofCorrType = cms.int32(0),
                vPropWire = cms.double(24.4),
                wirePropCorrType = cms.int32(0)
            ),
            useUncertDB = cms.bool(False)
        )
    ),
    Reco4DAlgoName = cms.string('DTMeantimerPatternReco4D'),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DCosmicRecHits"),
    recHits2DLabel = cms.InputTag("dt2DCosmicSegments")
)


process.dt4DSegments = cms.EDProducer("DTRecSegment4DProducer",
    Reco4DAlgoConfig = cms.PSet(
        AllDTRecHits = cms.bool(True),
        Reco2DAlgoConfig = cms.PSet(
            AlphaMaxPhi = cms.double(1.0),
            AlphaMaxTheta = cms.double(0.9),
            MaxAllowedHits = cms.uint32(50),
            MaxChi2 = cms.double(4.0),
            debug = cms.untracked.bool(False),
            hit_afterT0_resolution = cms.double(0.03),
            nSharedHitsMax = cms.int32(2),
            nUnSharedHitsMin = cms.int32(2),
            performT0SegCorrection = cms.bool(False),
            performT0_vdriftSegCorrection = cms.bool(False),
            perform_delta_rejecting = cms.bool(False),
            recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
            recAlgoConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doVdriftCorr = cms.bool(True),
                maxTime = cms.double(420.0),
                minTime = cms.double(-3.0),
                stepTwoFromDigi = cms.bool(False),
                tTrigMode = cms.string('DTTTrigSyncFromDB'),
                tTrigModeConfig = cms.PSet(
                    debug = cms.untracked.bool(False),
                    doT0Correction = cms.bool(True),
                    doTOFCorrection = cms.bool(True),
                    doWirePropCorrection = cms.bool(True),
                    tTrigLabel = cms.string(''),
                    tofCorrType = cms.int32(0),
                    vPropWire = cms.double(24.4),
                    wirePropCorrType = cms.int32(0)
                ),
                useUncertDB = cms.bool(True)
            ),
            segmCleanerMode = cms.int32(2)
        ),
        Reco2DAlgoName = cms.string('DTMeantimerPatternReco'),
        debug = cms.untracked.bool(False),
        hit_afterT0_resolution = cms.double(0.03),
        nUnSharedHitsMin = cms.int32(2),
        performT0SegCorrection = cms.bool(False),
        performT0_vdriftSegCorrection = cms.bool(False),
        perform_delta_rejecting = cms.bool(False),
        recAlgo = cms.string('DTLinearDriftFromDBAlgo'),
        recAlgoConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doVdriftCorr = cms.bool(True),
            maxTime = cms.double(420.0),
            minTime = cms.double(-3.0),
            stepTwoFromDigi = cms.bool(False),
            tTrigMode = cms.string('DTTTrigSyncFromDB'),
            tTrigModeConfig = cms.PSet(
                debug = cms.untracked.bool(False),
                doT0Correction = cms.bool(True),
                doTOFCorrection = cms.bool(True),
                doWirePropCorrection = cms.bool(True),
                tTrigLabel = cms.string(''),
                tofCorrType = cms.int32(0),
                vPropWire = cms.double(24.4),
                wirePropCorrType = cms.int32(0)
            ),
            useUncertDB = cms.bool(True)
        )
    ),
    Reco4DAlgoName = cms.string('DTMeantimerPatternReco4D'),
    debug = cms.untracked.bool(False),
    recHits1DLabel = cms.InputTag("dt1DRecHits"),
    recHits2DLabel = cms.InputTag("dt2DSegments")
)


process.dt4DSegmentsT0Seg = cms.EDProducer("DTSegment4DT0Corrector",
    debug = cms.untracked.bool(False),
    hit_afterT0_resolution = cms.double(0.03),
    performT0_vdriftSegCorrection = cms.bool(True),
    perform_delta_rejecting = cms.bool(False),
    recAlgo = cms.string('DTLinearDriftAlgo'),
    recAlgoConfig = cms.PSet(
        debug = cms.untracked.bool(False),
        driftVelocity = cms.double(0.00543),
        hitResolution = cms.double(0.02),
        maxTime = cms.double(420.0),
        minTime = cms.double(-3.0),
        tTrigMode = cms.string('DTTTrigSyncFromDB'),
        tTrigModeConfig = cms.PSet(
            debug = cms.untracked.bool(False),
            doT0Correction = cms.bool(True),
            doTOFCorrection = cms.bool(False),
            doWirePropCorrection = cms.bool(False),
            tTrigLabel = cms.string('cosmics'),
            tofCorrType = cms.int32(0),
            vPropWire = cms.double(24.4),
            wirePropCorrType = cms.int32(0)
        )
    ),
    recHits4DLabel = cms.InputTag("dt4DSegments")
)


process.dttfDigis = cms.EDProducer("DTTFFEDReader",
    DTTF_FED_Source = cms.InputTag("rawDataRepacker"),
    verbose = cms.untracked.bool(False)
)


process.duplicateDisplacedTrackCandidates = cms.EDProducer("DuplicateTrackMerger",
    GBRForestFileName = cms.string(''),
    chi2EstimatorName = cms.string('duplicateDisplacedTrackCandidatesChi2Est'),
    forestLabel = cms.string('MVADuplicate'),
    maxDCA = cms.double(30),
    maxDLambda = cms.double(0.3),
    maxDPhi = cms.double(0.3),
    maxDQoP = cms.double(0.25),
    maxDdsz = cms.double(10),
    maxDdxy = cms.double(10),
    minBDTG = cms.double(-0.1),
    minDeltaR3d = cms.double(-4),
    minP = cms.double(0.4),
    minpT = cms.double(0.2),
    overlapCheckMaxHits = cms.uint32(4),
    overlapCheckMaxMissingLayers = cms.uint32(1),
    overlapCheckMinCosT = cms.double(0.99),
    propagatorName = cms.string('PropagatorWithMaterial'),
    source = cms.InputTag("preDuplicateMergingDisplacedTracks"),
    ttrhBuilderName = cms.string('WithAngleAndTemplate'),
    useInnermostState = cms.bool(True)
)


process.duplicateDisplacedTrackClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            drWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dr_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dzWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dz_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        isHLT = cms.bool(False),
        maxChi2 = cms.vdouble(9999.0, 9999.0, 9999.0),
        maxChi2n = cms.vdouble(9999.0, 9999.0, 9999.0),
        maxDr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24, 15),
        maxLostLayers = cms.vint32(99, 99, 99),
        maxRelPtErr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        min3DLayers = cms.vint32(0, 0, 0),
        minHits = cms.vint32(0, 0, 1),
        minHits4pass = cms.vint32(2147483647, 2147483647, 2147483647),
        minLayers = cms.vint32(0, 0, 0),
        minNVtxTrk = cms.int32(2),
        minNdof = cms.vdouble(-1, -1, -1),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("mergedDuplicateDisplacedTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.duplicateTrackCandidates = cms.EDProducer("DuplicateTrackMerger",
    GBRForestFileName = cms.string(''),
    chi2EstimatorName = cms.string('duplicateTrackCandidatesChi2Est'),
    forestLabel = cms.string('MVADuplicate'),
    maxDCA = cms.double(30),
    maxDLambda = cms.double(0.3),
    maxDPhi = cms.double(0.3),
    maxDQoP = cms.double(0.25),
    maxDdsz = cms.double(10),
    maxDdxy = cms.double(10),
    minBDTG = cms.double(-0.1),
    minDeltaR3d = cms.double(-4),
    minP = cms.double(0.4),
    minpT = cms.double(0.2),
    overlapCheckMaxHits = cms.uint32(4),
    overlapCheckMaxMissingLayers = cms.uint32(1),
    overlapCheckMinCosT = cms.double(0.99),
    propagatorName = cms.string('PropagatorWithMaterial'),
    source = cms.InputTag("preDuplicateMergingGeneralTracks"),
    ttrhBuilderName = cms.string('WithAngleAndTemplate'),
    useInnermostState = cms.bool(True)
)


process.duplicateTrackClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            drWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dr_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dzWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dz_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        isHLT = cms.bool(False),
        maxChi2 = cms.vdouble(9999.0, 9999.0, 9999.0),
        maxChi2n = cms.vdouble(10.0, 1.0, 0.4),
        maxDr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24, 15),
        maxLostLayers = cms.vint32(99, 99, 99),
        maxRelPtErr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        min3DLayers = cms.vint32(0, 0, 0),
        minHits = cms.vint32(0, 0, 1),
        minHits4pass = cms.vint32(2147483647, 2147483647, 2147483647),
        minLayers = cms.vint32(0, 0, 0),
        minNVtxTrk = cms.int32(2),
        minNdof = cms.vdouble(-1, -1, -1),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("mergedDuplicateTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.earlyDisplacedMuons = cms.EDProducer("MuonIdProducer",
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("ak4CaloJets"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            PruneCut = cms.double(9.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(0.0),
            DoWireCorr = cms.bool(True),
            DropTheta = cms.bool(True),
            HitError = cms.double(2.8),
            HitsMin = cms.int32(3),
            PruneCut = cms.double(5.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTradius = cms.double(0.01),
            DTsegments = cms.InputTag("dt4DSegments"),
            RPChits = cms.InputTag("rpcRecHits"),
            TightMatchCSC = cms.bool(True),
            TightMatchDT = cms.bool(False)
        ),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(False)
    ),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(False),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(False),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("generalTracks")
    ),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(True)
    ),
    addExtraSoftMuons = cms.bool(False),
    arbitrateTrackerMuons = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        ClusterDPhi = cms.double(0.6),
        ClusterDTheta = cms.double(0.02),
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        OverlapDTheta = cms.double(0.02)
    ),
    debugWithTruthMatching = cms.bool(False),
    ecalDepositName = cms.string('ecal'),
    fillCaloCompatibility = cms.bool(False),
    fillEnergy = cms.bool(False),
    fillGlobalTrackQuality = cms.bool(False),
    fillGlobalTrackRefits = cms.bool(False),
    fillIsolation = cms.bool(False),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(False),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    inputCollectionLabels = cms.VInputTag(cms.InputTag("earlyGeneralTracks"), cms.InputTag("displacedStandAloneMuons")),
    inputCollectionTypes = cms.vstring(
        'inner tracks',
        'outer tracks'
    ),
    jetDepositName = cms.string('jets'),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    maxAbsEta = cms.double(3.0),
    maxAbsPullX = cms.double(3.0),
    maxAbsPullY = cms.double(9999.0),
    minCaloCompatibility = cms.double(0.6),
    minNumberOfMatches = cms.int32(1),
    minP = cms.double(3.0),
    minPCaloMuon = cms.double(3.0),
    minPt = cms.double(2.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    runArbitrationCleaner = cms.bool(True),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    trackDepositName = cms.string('tracker'),
    writeIsoDeposits = cms.bool(True)
)


process.earlyMuons = cms.EDProducer("MuonIdProducer",
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("ak4CaloJets"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            PruneCut = cms.double(9.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(0.0),
            DoWireCorr = cms.bool(True),
            DropTheta = cms.bool(True),
            HitError = cms.double(2.8),
            HitsMin = cms.int32(3),
            PruneCut = cms.double(5.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTradius = cms.double(0.01),
            DTsegments = cms.InputTag("dt4DSegments"),
            RPChits = cms.InputTag("rpcRecHits"),
            TightMatchCSC = cms.bool(True),
            TightMatchDT = cms.bool(False)
        ),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(False)
    ),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(False),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(False),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("generalTracks")
    ),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(True)
    ),
    addExtraSoftMuons = cms.bool(False),
    arbitrateTrackerMuons = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        ClusterDPhi = cms.double(0.6),
        ClusterDTheta = cms.double(0.02),
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        OverlapDTheta = cms.double(0.02)
    ),
    debugWithTruthMatching = cms.bool(False),
    ecalDepositName = cms.string('ecal'),
    fillCaloCompatibility = cms.bool(False),
    fillEnergy = cms.bool(False),
    fillGlobalTrackQuality = cms.bool(False),
    fillGlobalTrackRefits = cms.bool(False),
    fillIsolation = cms.bool(False),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(False),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    inputCollectionLabels = cms.VInputTag(cms.InputTag("earlyGeneralTracks"), cms.InputTag("standAloneMuons","UpdatedAtVtx")),
    inputCollectionTypes = cms.vstring(
        'inner tracks',
        'outer tracks'
    ),
    jetDepositName = cms.string('jets'),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    maxAbsEta = cms.double(3.0),
    maxAbsPullX = cms.double(3.0),
    maxAbsPullY = cms.double(9999.0),
    minCaloCompatibility = cms.double(0.6),
    minNumberOfMatches = cms.int32(1),
    minP = cms.double(3.0),
    minPCaloMuon = cms.double(3.0),
    minPt = cms.double(2.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    runArbitrationCleaner = cms.bool(True),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    trackDepositName = cms.string('tracker'),
    writeIsoDeposits = cms.bool(True)
)


process.ecalBarrelClusterFastTimer = cms.EDProducer("EcalBarrelClusterFastTimer",
    ebClusters = cms.InputTag("particleFlowClusterECALUncorrected"),
    ebTimeHits = cms.InputTag("ecalDetailedTimeRecHit","EcalRecHitsEB"),
    ecalDepth = cms.double(7.0),
    minEnergyToConsider = cms.double(0.0),
    minFractionToConsider = cms.double(0.1),
    resolutionModels = cms.VPSet(cms.PSet(
        modelName = cms.string('PerfectResolutionModel')
    )),
    timedVertices = cms.InputTag("offlinePrimaryVertices4D")
)


process.ecalCompactTrigPrim = cms.EDProducer("EcalCompactTrigPrimProducer",
    inColl = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    outColl = cms.string('')
)


process.ecalDetIdToBeRecovered = cms.EDProducer("EcalDetIdToBeRecoveredProducer",
    ebDetIdToBeRecovered = cms.string('ebDetId'),
    ebFEToBeRecovered = cms.string('ebFE'),
    ebIntegrityChIdErrors = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    ebIntegrityGainErrors = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    ebIntegrityGainSwitchErrors = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    ebSrFlagCollection = cms.InputTag("ecalDigis"),
    eeDetIdToBeRecovered = cms.string('eeDetId'),
    eeFEToBeRecovered = cms.string('eeFE'),
    eeIntegrityChIdErrors = cms.InputTag("ecalDigis","EcalIntegrityChIdErrors"),
    eeIntegrityGainErrors = cms.InputTag("ecalDigis","EcalIntegrityGainErrors"),
    eeIntegrityGainSwitchErrors = cms.InputTag("ecalDigis","EcalIntegrityGainSwitchErrors"),
    eeSrFlagCollection = cms.InputTag("ecalDigis"),
    integrityBlockSizeErrors = cms.InputTag("ecalDigis","EcalIntegrityBlockSizeErrors"),
    integrityTTIdErrors = cms.InputTag("ecalDigis","EcalIntegrityTTIdErrors")
)


process.ecalDetailedTimeRecHit = cms.EDProducer("EcalDetailedTimeRecHitProducer",
    EBDetailedTimeRecHitCollection = cms.string('EcalRecHitsEB'),
    EBRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    EBTimeDigiCollection = cms.InputTag("mix","EBTimeDigi"),
    EBTimeLayer = cms.int32(7),
    EEDetailedTimeRecHitCollection = cms.string('EcalRecHitsEE'),
    EERecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    EETimeDigiCollection = cms.InputTag("mix","EETimeDigi"),
    EETimeLayer = cms.int32(3),
    correctForVertexZPosition = cms.bool(False),
    recoVertex = cms.InputTag("offlinePrimaryVerticesWithBS"),
    simVertex = cms.InputTag("g4SimHits"),
    useMCTruthVertex = cms.bool(False)
)


process.ecalDigis = cms.EDProducer("EcalRawToDigi",
    DoRegional = cms.bool(False),
    FEDs = cms.vint32(
        601, 602, 603, 604, 605,
        606, 607, 608, 609, 610,
        611, 612, 613, 614, 615,
        616, 617, 618, 619, 620,
        621, 622, 623, 624, 625,
        626, 627, 628, 629, 630,
        631, 632, 633, 634, 635,
        636, 637, 638, 639, 640,
        641, 642, 643, 644, 645,
        646, 647, 648, 649, 650,
        651, 652, 653, 654
    ),
    FedLabel = cms.InputTag("listfeds"),
    InputLabel = cms.InputTag("rawDataRepacker"),
    eventPut = cms.bool(True),
    feIdCheck = cms.bool(True),
    feUnpacking = cms.bool(True),
    forceToKeepFRData = cms.bool(False),
    headerUnpacking = cms.bool(True),
    memUnpacking = cms.bool(True),
    numbTriggerTSamples = cms.int32(1),
    numbXtalTSamples = cms.int32(10),
    orderedDCCIdList = cms.vint32(
        1, 2, 3, 4, 5,
        6, 7, 8, 9, 10,
        11, 12, 13, 14, 15,
        16, 17, 18, 19, 20,
        21, 22, 23, 24, 25,
        26, 27, 28, 29, 30,
        31, 32, 33, 34, 35,
        36, 37, 38, 39, 40,
        41, 42, 43, 44, 45,
        46, 47, 48, 49, 50,
        51, 52, 53, 54
    ),
    orderedFedList = cms.vint32(
        601, 602, 603, 604, 605,
        606, 607, 608, 609, 610,
        611, 612, 613, 614, 615,
        616, 617, 618, 619, 620,
        621, 622, 623, 624, 625,
        626, 627, 628, 629, 630,
        631, 632, 633, 634, 635,
        636, 637, 638, 639, 640,
        641, 642, 643, 644, 645,
        646, 647, 648, 649, 650,
        651, 652, 653, 654
    ),
    silentMode = cms.untracked.bool(True),
    srpUnpacking = cms.bool(True),
    syncCheck = cms.bool(True),
    tccUnpacking = cms.bool(True)
)


process.ecalDrivenElectronSeeds = cms.EDProducer("ElectronSeedProducer",
    SeedConfiguration = cms.PSet(
        DeltaPhi1High = cms.double(0.08),
        DeltaPhi1Low = cms.double(0.23),
        DeltaPhi2B = cms.double(0.008),
        DeltaPhi2F = cms.double(0.012),
        HGCalConfig = cms.PSet(
            HGCBHInput = cms.InputTag("HGCalRecHit","HGCHEBRecHits"),
            HGCEEInput = cms.InputTag("HGCalRecHit","HGCEERecHits"),
            HGCFHInput = cms.InputTag("HGCalRecHit","HGCHEFRecHits")
        ),
        HighPtThreshold = cms.double(35.0),
        LowPtThreshold = cms.double(5.0),
        PhiMax2B = cms.double(0.002),
        PhiMax2F = cms.double(0.003),
        PhiMin2B = cms.double(-0.002),
        PhiMin2F = cms.double(-0.003),
        SCEtCut = cms.double(15.0),
        SizeWindowENeg = cms.double(0.675),
        allowHGCal = cms.bool(False),
        applyHOverECut = cms.bool(True),
        applySigmaIEtaIEtaCut = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        deltaZ1WithVertex = cms.double(25.0),
        dynamicPhiRoad = cms.bool(True),
        ePhiMax1 = cms.double(0.075),
        ePhiMin1 = cms.double(-0.125),
        fromTrackerSeeds = cms.bool(True),
        hOverEConeSize = cms.double(0.15),
        hOverEHBMinE = cms.double(0.7),
        hOverEHFMinE = cms.double(0.8),
        hOverEPtMin = cms.double(0.0),
        hcalRecHits = cms.InputTag("hbhereco"),
        hcalTowers = cms.InputTag("towerMaker"),
        initialSeeds = cms.InputTag("hiPixelTrackSeeds"),
        maxHBarrel = cms.double(0.0),
        maxHEndcaps = cms.double(0.0),
        maxHOverEBarrel = cms.double(0.25),
        maxHOverEEndcaps = cms.double(0.25),
        maxSigmaIEtaIEtaBarrel = cms.double(0.5),
        maxSigmaIEtaIEtaEndcaps = cms.double(0.5),
        measurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
        measurementTrackerName = cms.string(''),
        nSigmasDeltaZ1 = cms.double(5.0),
        pPhiMax1 = cms.double(0.125),
        pPhiMin1 = cms.double(-0.075),
        preFilteredSeeds = cms.bool(False),
        r2MaxF = cms.double(0.15),
        r2MinF = cms.double(-0.15),
        rMaxI = cms.double(0.2),
        rMinI = cms.double(-0.2),
        searchInTIDTEC = cms.bool(True),
        useRecoVertex = cms.bool(False),
        vertices = cms.InputTag("offlinePrimaryVerticesWithBS"),
        z2MaxB = cms.double(0.09),
        z2MinB = cms.double(-0.09)
    ),
    barrelSuperClusters = cms.InputTag("particleFlowSuperClusterECAL","particleFlowSuperClusterECALBarrel"),
    endcapSuperClusters = cms.InputTag("particleFlowSuperClusterECAL","particleFlowSuperClusterECALEndcapWithPreshower")
)


process.ecalDrivenElectronSeedsFromMultiCl = cms.EDProducer("ElectronSeedProducer",
    SeedConfiguration = cms.PSet(
        DeltaPhi1High = cms.double(0.08),
        DeltaPhi1Low = cms.double(0.23),
        DeltaPhi2B = cms.double(0.008),
        DeltaPhi2F = cms.double(0.012),
        HGCalConfig = cms.PSet(
            HGCBHInput = cms.InputTag("HGCalRecHit","HGCHEBRecHits"),
            HGCEEInput = cms.InputTag("HGCalRecHit","HGCEERecHits"),
            HGCFHInput = cms.InputTag("HGCalRecHit","HGCHEFRecHits")
        ),
        HighPtThreshold = cms.double(35.0),
        LowPtThreshold = cms.double(5.0),
        PhiMax2B = cms.double(0.002),
        PhiMax2F = cms.double(0.003),
        PhiMin2B = cms.double(-0.002),
        PhiMin2F = cms.double(-0.003),
        SCEtCut = cms.double(0.0),
        SizeWindowENeg = cms.double(0.675),
        allowHGCal = cms.bool(False),
        applyHOverECut = cms.bool(True),
        applySigmaIEtaIEtaCut = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        deltaZ1WithVertex = cms.double(25.0),
        dynamicPhiRoad = cms.bool(True),
        ePhiMax1 = cms.double(0.075),
        ePhiMin1 = cms.double(-0.125),
        fromTrackerSeeds = cms.bool(True),
        hOverEConeSize = cms.double(0.15),
        hOverEHBMinE = cms.double(0.7),
        hOverEHFMinE = cms.double(0.8),
        hOverEPtMin = cms.double(0.0),
        hcalRecHits = cms.InputTag("hbhereco"),
        hcalTowers = cms.InputTag("towerMaker"),
        initialSeeds = cms.InputTag("newCombinedSeeds"),
        maxHBarrel = cms.double(0.0),
        maxHEndcaps = cms.double(0.0),
        maxHOverEBarrel = cms.double(0.15),
        maxHOverEEndcaps = cms.double(0.15),
        maxSigmaIEtaIEtaBarrel = cms.double(0.5),
        maxSigmaIEtaIEtaEndcaps = cms.double(0.5),
        measurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
        measurementTrackerName = cms.string(''),
        nSigmasDeltaZ1 = cms.double(5.0),
        pPhiMax1 = cms.double(0.125),
        pPhiMin1 = cms.double(-0.075),
        preFilteredSeeds = cms.bool(False),
        r2MaxF = cms.double(0.15),
        r2MinF = cms.double(-0.15),
        rMaxI = cms.double(0.2),
        rMinI = cms.double(-0.2),
        searchInTIDTEC = cms.bool(True),
        useRecoVertex = cms.bool(False),
        vertices = cms.InputTag("offlinePrimaryVerticesWithBS"),
        z2MaxB = cms.double(0.09),
        z2MinB = cms.double(-0.09)
    ),
    barrelSuperClusters = cms.InputTag("particleFlowSuperClusterECAL","particleFlowSuperClusterECALBarrel"),
    endcapSuperClusters = cms.InputTag("particleFlowSuperClusterHGCalFromMultiCl")
)


process.ecalDrivenGsfElectronCores = cms.EDProducer("GsfElectronCoreEcalDrivenProducer",
    ctfTracks = cms.InputTag("hiGeneralTracks"),
    gsfPfRecTracks = cms.InputTag("pfTrackElec"),
    gsfTracks = cms.InputTag("electronGsfTracks"),
    useGsfPfRecTracks = cms.bool(True)
)


process.ecalDrivenGsfElectronCoresFromMultiCl = cms.EDProducer("GsfElectronCoreEcalDrivenProducer",
    ctfTracks = cms.InputTag("generalTracks"),
    gsfPfRecTracks = cms.InputTag("pfTrackElec"),
    gsfTracks = cms.InputTag("electronGsfTracksFromMultiCl"),
    useGsfPfRecTracks = cms.bool(False)
)


process.ecalDrivenGsfElectrons = cms.EDProducer("GsfElectronEcalDrivenProducer",
    ElecMVAFilesString = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_10_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_12_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_20_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_22_17Feb2011.weights.xml'
    ),
    MaxElePtForOnlyMVA = cms.double(50.0),
    PreSelectMVA = cms.double(-0.1),
    SoftElecMVAFilesString = cms.vstring('RecoEgamma/ElectronIdentification/data/TMVA_BDTSoftElectrons_9Dec2013.weights.xml'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    addPflowElectrons = cms.bool(True),
    ambClustersOverlapStrategy = cms.uint32(1),
    ambSortingStrategy = cms.uint32(1),
    applyAmbResolution = cms.bool(False),
    applyPreselection = cms.bool(False),
    barrelRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    checkHcalStatus = cms.bool(True),
    combinationRegressionWeightFile = cms.vstring(),
    combinationRegressionWeightLabels = cms.vstring(),
    combinationWeightsFromDB = cms.bool(True),
    crackCorrectionFunction = cms.string('EcalClusterCrackCorrection'),
    ctfTracksCheck = cms.bool(True),
    ctfTracksTag = cms.InputTag("hiGeneralTracks"),
    eMinBarrel = cms.double(0.095),
    eMinEndcaps = cms.double(0.0),
    ecalDrivenEcalEnergyFromClassBasedParameterization = cms.bool(True),
    ecalDrivenEcalErrorFromClassBasedParameterization = cms.bool(True),
    ecalRefinedRegressionWeightFiles = cms.vstring(),
    ecalRefinedRegressionWeightLabels = cms.vstring(),
    ecalWeightsFromDB = cms.bool(True),
    endcapRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etMinBarrel = cms.double(0.0),
    etMinEndcaps = cms.double(0.11),
    etMinHcal = cms.double(0.0),
    gedElectronMode = cms.bool(False),
    gsfElectronCoresTag = cms.InputTag("ecalDrivenGsfElectronCores"),
    gsfPfRecTracksTag = cms.InputTag("pfTrackElec"),
    hOverEConeSize = cms.double(0.15),
    hOverEConeSizePflow = cms.double(0.15),
    hOverEPtMin = cms.double(0.0),
    hOverEPtMinPflow = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    intRadiusEcalBarrel = cms.double(3.0),
    intRadiusEcalEndcaps = cms.double(3.0),
    intRadiusHcal = cms.double(0.15),
    isBarrel = cms.bool(False),
    isBarrelPflow = cms.bool(False),
    isEndcaps = cms.bool(False),
    isEndcapsPflow = cms.bool(False),
    isFiducial = cms.bool(False),
    isFiducialPflow = cms.bool(False),
    jurassicWidth = cms.double(1.5),
    maxDeltaEtaBarrel = cms.double(0.02),
    maxDeltaEtaBarrelPflow = cms.double(999999999.0),
    maxDeltaEtaEndcaps = cms.double(0.02),
    maxDeltaEtaEndcapsPflow = cms.double(999999999.0),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiBarrelPflow = cms.double(999999999.0),
    maxDeltaPhiEndcaps = cms.double(0.15),
    maxDeltaPhiEndcapsPflow = cms.double(999999999.0),
    maxEOverPBarrel = cms.double(999999999.0),
    maxEOverPBarrelPflow = cms.double(999999999.0),
    maxEOverPEndcaps = cms.double(999999999.0),
    maxEOverPEndcapsPflow = cms.double(999999999.0),
    maxFbremBarrel = cms.double(999999999.0),
    maxFbremBarrelPflow = cms.double(999999999.0),
    maxFbremEndcaps = cms.double(999999999.0),
    maxFbremEndcapsPflow = cms.double(999999999.0),
    maxHBarrel = cms.double(0.0),
    maxHBarrelPflow = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    maxHEndcapsPflow = cms.double(0.0),
    maxHOverEBarrel = cms.double(0.25),
    maxHOverEBarrelPflow = cms.double(999999999.0),
    maxHOverEEndcaps = cms.double(0.25),
    maxHOverEEndcapsPflow = cms.double(999999999.0),
    maxSigmaIetaIetaBarrel = cms.double(999999999.0),
    maxSigmaIetaIetaBarrelPflow = cms.double(999999999.0),
    maxSigmaIetaIetaEndcaps = cms.double(999999999.0),
    maxSigmaIetaIetaEndcapsPflow = cms.double(999999999.0),
    maxTIP = cms.double(999999999.0),
    maxTIPPflow = cms.double(999999999.0),
    minEOverPBarrel = cms.double(0.0),
    minEOverPBarrelPflow = cms.double(0.0),
    minEOverPEndcaps = cms.double(0.0),
    minEOverPEndcapsPflow = cms.double(0.0),
    minMVA = cms.double(-0.4),
    minMVAPflow = cms.double(-0.4),
    minMvaByPassForIsolated = cms.double(-0.4),
    minMvaByPassForIsolatedPflow = cms.double(-0.4),
    minSCEtBarrel = cms.double(15.0),
    minSCEtBarrelPflow = cms.double(0.0),
    minSCEtEndcaps = cms.double(15.0),
    minSCEtEndcapsPflow = cms.double(0.0),
    pfMvaTag = cms.InputTag(""),
    pflowGsfElectronsTag = cms.InputTag(""),
    previousGsfElectronsTag = cms.InputTag(""),
    pureTrackerDrivenEcalErrorFromSimpleParameterization = cms.bool(True),
    recHitFlagsToBeExcludedBarrel = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    recHitFlagsToBeExcludedEndcaps = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    recHitSeverityToBeExcludedBarrel = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    recHitSeverityToBeExcludedEndcaps = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    seedFromTEC = cms.bool(True),
    seedsTag = cms.InputTag("ecalDrivenElectronSeeds"),
    superClusterErrorFunction = cms.string('EcalClusterEnergyUncertaintyObjectSpecific'),
    trkIsol03Cfg = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        )
    ),
    trkIsol04Cfg = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        )
    ),
    useCombinationRegression = cms.bool(False),
    useEcalRegression = cms.bool(False),
    useGsfPfRecTracks = cms.bool(True),
    useIsolationValues = cms.bool(False),
    useNumCrystals = cms.bool(True),
    vetoClustered = cms.bool(False),
    vtxTag = cms.InputTag("hiSelectedVertex")
)


process.ecalDrivenGsfElectronsFromMultiCl = cms.EDProducer("GsfElectronEcalDrivenProducer",
    ElecMVAFilesString = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_10_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_12_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_20_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_22_17Feb2011.weights.xml'
    ),
    MaxElePtForOnlyMVA = cms.double(50.0),
    PreSelectMVA = cms.double(-0.1),
    SoftElecMVAFilesString = cms.vstring('RecoEgamma/ElectronIdentification/data/TMVA_BDTSoftElectrons_9Dec2013.weights.xml'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    addPflowElectrons = cms.bool(True),
    ambClustersOverlapStrategy = cms.uint32(1),
    ambSortingStrategy = cms.uint32(1),
    applyAmbResolution = cms.bool(False),
    applyPreselection = cms.bool(False),
    barrelRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    checkHcalStatus = cms.bool(True),
    combinationRegressionWeightFile = cms.vstring(),
    combinationRegressionWeightLabels = cms.vstring(),
    combinationWeightsFromDB = cms.bool(True),
    crackCorrectionFunction = cms.string('EcalClusterCrackCorrection'),
    ctfTracksCheck = cms.bool(True),
    ctfTracksTag = cms.InputTag("generalTracks"),
    eMinBarrel = cms.double(0.095),
    eMinEndcaps = cms.double(0.0),
    ecalDrivenEcalEnergyFromClassBasedParameterization = cms.bool(True),
    ecalDrivenEcalErrorFromClassBasedParameterization = cms.bool(True),
    ecalRefinedRegressionWeightFiles = cms.vstring(),
    ecalRefinedRegressionWeightLabels = cms.vstring(),
    ecalWeightsFromDB = cms.bool(True),
    endcapRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etMinBarrel = cms.double(0.0),
    etMinEndcaps = cms.double(0.11),
    etMinHcal = cms.double(0.0),
    gedElectronMode = cms.bool(False),
    gsfElectronCoresTag = cms.InputTag("ecalDrivenGsfElectronCoresFromMultiCl"),
    gsfPfRecTracksTag = cms.InputTag("pfTrackElec"),
    hOverEConeSize = cms.double(0.15),
    hOverEConeSizePflow = cms.double(0.15),
    hOverEPtMin = cms.double(0.0),
    hOverEPtMinPflow = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    intRadiusEcalBarrel = cms.double(3.0),
    intRadiusEcalEndcaps = cms.double(3.0),
    intRadiusHcal = cms.double(0.15),
    isBarrel = cms.bool(False),
    isBarrelPflow = cms.bool(False),
    isEndcaps = cms.bool(False),
    isEndcapsPflow = cms.bool(False),
    isFiducial = cms.bool(False),
    isFiducialPflow = cms.bool(False),
    jurassicWidth = cms.double(1.5),
    maxDeltaEtaBarrel = cms.double(0.02),
    maxDeltaEtaBarrelPflow = cms.double(999999999.0),
    maxDeltaEtaEndcaps = cms.double(0.02),
    maxDeltaEtaEndcapsPflow = cms.double(999999999.0),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiBarrelPflow = cms.double(999999999.0),
    maxDeltaPhiEndcaps = cms.double(0.15),
    maxDeltaPhiEndcapsPflow = cms.double(999999999.0),
    maxEOverPBarrel = cms.double(999999999.0),
    maxEOverPBarrelPflow = cms.double(999999999.0),
    maxEOverPEndcaps = cms.double(999999999.0),
    maxEOverPEndcapsPflow = cms.double(999999999.0),
    maxFbremBarrel = cms.double(999999999.0),
    maxFbremBarrelPflow = cms.double(999999999.0),
    maxFbremEndcaps = cms.double(999999999.0),
    maxFbremEndcapsPflow = cms.double(999999999.0),
    maxHBarrel = cms.double(0.0),
    maxHBarrelPflow = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    maxHEndcapsPflow = cms.double(0.0),
    maxHOverEBarrel = cms.double(0.15),
    maxHOverEBarrelPflow = cms.double(999999999.0),
    maxHOverEEndcaps = cms.double(0.15),
    maxHOverEEndcapsPflow = cms.double(999999999.0),
    maxSigmaIetaIetaBarrel = cms.double(999999999.0),
    maxSigmaIetaIetaBarrelPflow = cms.double(999999999.0),
    maxSigmaIetaIetaEndcaps = cms.double(999999999.0),
    maxSigmaIetaIetaEndcapsPflow = cms.double(999999999.0),
    maxTIP = cms.double(999999999.0),
    maxTIPPflow = cms.double(999999999.0),
    minEOverPBarrel = cms.double(0.0),
    minEOverPBarrelPflow = cms.double(0.0),
    minEOverPEndcaps = cms.double(0.0),
    minEOverPEndcapsPflow = cms.double(0.0),
    minMVA = cms.double(-0.4),
    minMVAPflow = cms.double(-0.4),
    minMvaByPassForIsolated = cms.double(-0.4),
    minMvaByPassForIsolatedPflow = cms.double(-0.4),
    minSCEtBarrel = cms.double(4.0),
    minSCEtBarrelPflow = cms.double(0.0),
    minSCEtEndcaps = cms.double(4.0),
    minSCEtEndcapsPflow = cms.double(0.0),
    pfMvaTag = cms.InputTag(""),
    pflowGsfElectronsTag = cms.InputTag(""),
    previousGsfElectronsTag = cms.InputTag(""),
    pureTrackerDrivenEcalErrorFromSimpleParameterization = cms.bool(True),
    recHitFlagsToBeExcludedBarrel = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    recHitFlagsToBeExcludedEndcaps = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    recHitSeverityToBeExcludedBarrel = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    recHitSeverityToBeExcludedEndcaps = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    seedFromTEC = cms.bool(True),
    seedsTag = cms.InputTag("ecalDrivenElectronSeeds"),
    superClusterErrorFunction = cms.string('EcalClusterEnergyUncertaintyObjectSpecific'),
    trkIsol03Cfg = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        )
    ),
    trkIsol04Cfg = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        )
    ),
    useCombinationRegression = cms.bool(False),
    useEcalRegression = cms.bool(False),
    useGsfPfRecTracks = cms.bool(True),
    useIsolationValues = cms.bool(False),
    useNumCrystals = cms.bool(True),
    vetoClustered = cms.bool(False),
    vtxTag = cms.InputTag("offlinePrimaryVertices")
)


process.ecalMultiFitUncalibRecHit = cms.EDProducer("EcalUncalibRecHitProducer",
    EBdigiCollection = cms.InputTag("ecalDigis","ebDigis"),
    EBhitCollection = cms.string('EcalUncalibRecHitsEB'),
    EEdigiCollection = cms.InputTag("ecalDigis","eeDigis"),
    EEhitCollection = cms.string('EcalUncalibRecHitsEE'),
    algo = cms.string('EcalUncalibRecHitWorkerMultiFit'),
    algoPSet = cms.PSet(
        EBamplitudeFitParameters = cms.vdouble(1.138, 1.652),
        EBtimeConstantTerm = cms.double(0.6),
        EBtimeFitLimits_Lower = cms.double(0.2),
        EBtimeFitLimits_Upper = cms.double(1.4),
        EBtimeFitParameters = cms.vdouble(
            -2.015452, 3.130702, -12.3473, 41.88921, -82.83944,
            91.01147, -50.35761, 11.05621
        ),
        EBtimeNconst = cms.double(28.5),
        EEamplitudeFitParameters = cms.vdouble(1.89, 1.4),
        EEtimeConstantTerm = cms.double(1.0),
        EEtimeFitLimits_Lower = cms.double(0.2),
        EEtimeFitLimits_Upper = cms.double(1.4),
        EEtimeFitParameters = cms.vdouble(
            -2.390548, 3.553628, -17.62341, 67.67538, -133.213,
            140.7432, -75.41106, 16.20277
        ),
        EEtimeNconst = cms.double(31.8),
        EcalPulseShapeParameters = cms.PSet(
            EBCorrNoiseMatrixG01 = cms.vdouble(
                1.0, 0.73354, 0.64442, 0.58851, 0.55425,
                0.53082, 0.51916, 0.51097, 0.50732, 0.50409
            ),
            EBCorrNoiseMatrixG06 = cms.vdouble(
                1.0, 0.70946, 0.58021, 0.49846, 0.45006,
                0.41366, 0.39699, 0.38478, 0.37847, 0.37055
            ),
            EBCorrNoiseMatrixG12 = cms.vdouble(
                1.0, 0.71073, 0.55721, 0.46089, 0.40449,
                0.35931, 0.33924, 0.32439, 0.31581, 0.30481
            ),
            EBPulseShapeCovariance = cms.vdouble(
                3.001e-06, 1.233e-05, 0.0, -4.416e-06, -4.571e-06,
                -3.614e-06, -2.636e-06, -1.286e-06, -8.41e-07, -5.296e-07,
                0.0, 0.0, 1.233e-05, 6.154e-05, 0.0,
                -2.2e-05, -2.309e-05, -1.838e-05, -1.373e-05, -7.334e-06,
                -5.088e-06, -3.745e-06, -2.428e-06, 0.0, 0.0,
                0.0, 0.0, 0.0, 0.0, 0.0,
                0.0, 0.0, 0.0, 0.0, 0.0,
                0.0, -4.416e-06, -2.2e-05, 0.0, 8.319e-06,
                8.545e-06, 6.792e-06, 5.059e-06, 2.678e-06, 1.816e-06,
                1.223e-06, 8.245e-07, 5.589e-07, -4.571e-06, -2.309e-05,
                0.0, 8.545e-06, 9.182e-06, 7.219e-06, 5.388e-06,
                2.853e-06, 1.944e-06, 1.324e-06, 9.083e-07, 6.335e-07,
                -3.614e-06, -1.838e-05, 0.0, 6.792e-06, 7.219e-06,
                6.016e-06, 4.437e-06, 2.385e-06, 1.636e-06, 1.118e-06,
                7.754e-07, 5.556e-07, -2.636e-06, -1.373e-05, 0.0,
                5.059e-06, 5.388e-06, 4.437e-06, 3.602e-06, 1.917e-06,
                1.322e-06, 9.079e-07, 6.529e-07, 4.752e-07, -1.286e-06,
                -7.334e-06, 0.0, 2.678e-06, 2.853e-06, 2.385e-06,
                1.917e-06, 1.375e-06, 9.1e-07, 6.455e-07, 4.693e-07,
                3.657e-07, -8.41e-07, -5.088e-06, 0.0, 1.816e-06,
                1.944e-06, 1.636e-06, 1.322e-06, 9.1e-07, 9.115e-07,
                6.062e-07, 4.436e-07, 3.422e-07, -5.296e-07, -3.745e-06,
                0.0, 1.223e-06, 1.324e-06, 1.118e-06, 9.079e-07,
                6.455e-07, 6.062e-07, 7.217e-07, 4.862e-07, 3.768e-07,
                0.0, -2.428e-06, 0.0, 8.245e-07, 9.083e-07,
                7.754e-07, 6.529e-07, 4.693e-07, 4.436e-07, 4.862e-07,
                6.509e-07, 4.418e-07, 0.0, 0.0, 0.0,
                5.589e-07, 6.335e-07, 5.556e-07, 4.752e-07, 3.657e-07,
                3.422e-07, 3.768e-07, 4.418e-07, 6.142e-07
            ),
            EBPulseShapeTemplate = cms.vdouble(
                0.0113979, 0.758151, 1.0, 0.887744, 0.673548,
                0.474332, 0.319561, 0.215144, 0.147464, 0.101087,
                0.0693181, 0.0475044
            ),
            EBdigiCollection = cms.string(''),
            EECorrNoiseMatrixG01 = cms.vdouble(
                1.0, 0.72698, 0.62048, 0.55691, 0.51848,
                0.49147, 0.47813, 0.47007, 0.46621, 0.46265
            ),
            EECorrNoiseMatrixG06 = cms.vdouble(
                1.0, 0.71217, 0.47464, 0.34056, 0.26282,
                0.20287, 0.17734, 0.16256, 0.15618, 0.14443
            ),
            EECorrNoiseMatrixG12 = cms.vdouble(
                1.0, 0.71373, 0.44825, 0.30152, 0.21609,
                0.14786, 0.11772, 0.10165, 0.09465, 0.08098
            ),
            EEPulseShapeCovariance = cms.vdouble(
                3.941e-05, 3.333e-05, 0.0, -1.449e-05, -1.661e-05,
                -1.424e-05, -1.183e-05, -6.842e-06, -4.915e-06, -3.411e-06,
                0.0, 0.0, 3.333e-05, 2.862e-05, 0.0,
                -1.244e-05, -1.431e-05, -1.233e-05, -1.032e-05, -5.883e-06,
                -4.154e-06, -2.902e-06, -2.128e-06, 0.0, 0.0,
                0.0, 0.0, 0.0, 0.0, 0.0,
                0.0, 0.0, 0.0, 0.0, 0.0,
                0.0, -1.449e-05, -1.244e-05, 0.0, 5.84e-06,
                6.649e-06, 5.72e-06, 4.812e-06, 2.708e-06, 1.869e-06,
                1.33e-06, 9.186e-07, 6.446e-07, -1.661e-05, -1.431e-05,
                0.0, 6.649e-06, 7.966e-06, 6.898e-06, 5.794e-06,
                3.157e-06, 2.184e-06, 1.567e-06, 1.084e-06, 7.575e-07,
                -1.424e-05, -1.233e-05, 0.0, 5.72e-06, 6.898e-06,
                6.341e-06, 5.347e-06, 2.859e-06, 1.991e-06, 1.431e-06,
                9.839e-07, 6.886e-07, -1.183e-05, -1.032e-05, 0.0,
                4.812e-06, 5.794e-06, 5.347e-06, 4.854e-06, 2.628e-06,
                1.809e-06, 1.289e-06, 9.02e-07, 6.146e-07, -6.842e-06,
                -5.883e-06, 0.0, 2.708e-06, 3.157e-06, 2.859e-06,
                2.628e-06, 1.863e-06, 1.296e-06, 8.882e-07, 6.108e-07,
                4.283e-07, -4.915e-06, -4.154e-06, 0.0, 1.869e-06,
                2.184e-06, 1.991e-06, 1.809e-06, 1.296e-06, 1.217e-06,
                8.669e-07, 5.751e-07, 3.882e-07, -3.411e-06, -2.902e-06,
                0.0, 1.33e-06, 1.567e-06, 1.431e-06, 1.289e-06,
                8.882e-07, 8.669e-07, 9.522e-07, 6.717e-07, 4.293e-07,
                0.0, -2.128e-06, 0.0, 9.186e-07, 1.084e-06,
                9.839e-07, 9.02e-07, 6.108e-07, 5.751e-07, 6.717e-07,
                7.911e-07, 5.493e-07, 0.0, 0.0, 0.0,
                6.446e-07, 7.575e-07, 6.886e-07, 6.146e-07, 4.283e-07,
                3.882e-07, 4.293e-07, 5.493e-07, 7.027e-07
            ),
            EEPulseShapeTemplate = cms.vdouble(
                0.116442, 0.756246, 1.0, 0.897182, 0.686831,
                0.491506, 0.344111, 0.245731, 0.174115, 0.123361,
                0.0874288, 0.061957
            ),
            EEdigiCollection = cms.string(''),
            ESdigiCollection = cms.string(''),
            EcalPreMixStage1 = cms.bool(False),
            EcalPreMixStage2 = cms.bool(False),
            UseLCcorrection = cms.untracked.bool(True)
        ),
        activeBXs = cms.vint32(
            -5, -4, -3, -2, -1,
            0, 1, 2, 3, 4
        ),
        addPedestalUncertaintyEB = cms.double(0.0),
        addPedestalUncertaintyEE = cms.double(0.0),
        ampErrorCalculation = cms.bool(True),
        amplitudeThresholdEB = cms.double(10),
        amplitudeThresholdEE = cms.double(10),
        chi2ThreshEB_ = cms.double(65.0),
        chi2ThreshEE_ = cms.double(50.0),
        doPrefitEB = cms.bool(False),
        doPrefitEE = cms.bool(False),
        dynamicPedestalsEB = cms.bool(False),
        dynamicPedestalsEE = cms.bool(False),
        ebPulseShape = cms.vdouble(
            5.2e-05, -5.26e-05, 6.66e-05, 0.1168, 0.7575,
            1.0, 0.8876, 0.6732, 0.4741, 0.3194
        ),
        ebSpikeThreshold = cms.double(1.042),
        eePulseShape = cms.vdouble(
            5.2e-05, -5.26e-05, 6.66e-05, 0.1168, 0.7575,
            1.0, 0.8876, 0.6732, 0.4741, 0.3194
        ),
        gainSwitchUseMaxSampleEB = cms.bool(True),
        gainSwitchUseMaxSampleEE = cms.bool(False),
        kPoorRecoFlagEB = cms.bool(True),
        kPoorRecoFlagEE = cms.bool(False),
        mitigateBadSamplesEB = cms.bool(False),
        mitigateBadSamplesEE = cms.bool(False),
        outOfTimeThresholdGain12mEB = cms.double(5),
        outOfTimeThresholdGain12mEE = cms.double(1000),
        outOfTimeThresholdGain12pEB = cms.double(5),
        outOfTimeThresholdGain12pEE = cms.double(1000),
        outOfTimeThresholdGain61mEB = cms.double(5),
        outOfTimeThresholdGain61mEE = cms.double(1000),
        outOfTimeThresholdGain61pEB = cms.double(5),
        outOfTimeThresholdGain61pEE = cms.double(1000),
        prefitMaxChiSqEB = cms.double(25.0),
        prefitMaxChiSqEE = cms.double(10.0),
        selectiveBadSampleCriteriaEB = cms.bool(False),
        selectiveBadSampleCriteriaEE = cms.bool(False),
        simplifiedNoiseModelForGainSwitch = cms.bool(True),
        timealgo = cms.string('RatioMethod'),
        useLumiInfoRunHeader = cms.bool(True)
    )
)


process.ecalPreshowerDigis = cms.EDProducer("ESRawToDigi",
    ESdigiCollection = cms.string(''),
    InstanceES = cms.string(''),
    LookupTable = cms.FileInPath('EventFilter/ESDigiToRaw/data/ES_lookup_table.dat'),
    debugMode = cms.untracked.bool(False),
    sourceTag = cms.InputTag("rawDataRepacker")
)


process.ecalPreshowerRecHit = cms.EDProducer("ESRecHitProducer",
    ESRecoAlgo = cms.int32(0),
    ESdigiCollection = cms.InputTag("ecalPreshowerDigis"),
    ESrechitCollection = cms.string('EcalRecHitsES'),
    algo = cms.string('ESRecHitWorker')
)


process.ecalRecHit = cms.EDProducer("EcalRecHitProducer",
    ChannelStatusToBeExcluded = cms.vstring(
        'kDAC',
        'kNoisy',
        'kNNoisy',
        'kFixedG6',
        'kFixedG1',
        'kFixedG0',
        'kNonRespondingIsolated',
        'kDeadVFE',
        'kDeadFE',
        'kNoDataNoTP'
    ),
    EBLaserMAX = cms.double(3.0),
    EBLaserMIN = cms.double(0.5),
    EBrechitCollection = cms.string('EcalRecHitsEB'),
    EBuncalibRecHitCollection = cms.InputTag("ecalMultiFitUncalibRecHit","EcalUncalibRecHitsEB"),
    EELaserMAX = cms.double(8.0),
    EELaserMIN = cms.double(0.5),
    EErechitCollection = cms.string('EcalRecHitsEE'),
    EEuncalibRecHitCollection = cms.InputTag("ecalMultiFitUncalibRecHit","EcalUncalibRecHitsEE"),
    algo = cms.string('EcalRecHitWorkerSimple'),
    algoRecover = cms.string('EcalRecHitWorkerRecover'),
    cleaningConfig = cms.PSet(
        cThreshold_barrel = cms.double(4),
        cThreshold_double = cms.double(10),
        cThreshold_endcap = cms.double(15),
        e4e1Threshold_barrel = cms.double(0.08),
        e4e1Threshold_endcap = cms.double(0.3),
        e4e1_a_barrel = cms.double(0.02),
        e4e1_a_endcap = cms.double(0.02),
        e4e1_b_barrel = cms.double(0.02),
        e4e1_b_endcap = cms.double(-0.0125),
        e6e2thresh = cms.double(0.04),
        ignoreOutOfTimeThresh = cms.double(1000000000.0),
        tightenCrack_e1_double = cms.double(2),
        tightenCrack_e1_single = cms.double(1),
        tightenCrack_e4e1_single = cms.double(2.5),
        tightenCrack_e6e2_double = cms.double(3)
    ),
    dbStatusToBeExcludedEB = cms.vint32(14, 78, 142),
    dbStatusToBeExcludedEE = cms.vint32(14, 78, 142),
    ebDetIdToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","ebDetId"),
    ebFEToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","ebFE"),
    eeDetIdToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","eeDetId"),
    eeFEToBeRecovered = cms.InputTag("ecalDetIdToBeRecovered","eeFE"),
    flagsMapDBReco = cms.PSet(
        kDead = cms.vstring('kNoDataNoTP'),
        kGood = cms.vstring(
            'kOk',
            'kDAC',
            'kNoLaser',
            'kNoisy'
        ),
        kNeighboursRecovered = cms.vstring(
            'kFixedG0',
            'kNonRespondingIsolated',
            'kDeadVFE'
        ),
        kNoisy = cms.vstring(
            'kNNoisy',
            'kFixedG6',
            'kFixedG1'
        ),
        kTowerRecovered = cms.vstring('kDeadFE')
    ),
    killDeadChannels = cms.bool(True),
    laserCorrection = cms.bool(True),
    logWarningEtThreshold_EB_FE = cms.double(50),
    logWarningEtThreshold_EE_FE = cms.double(50),
    recoverEBFE = cms.bool(True),
    recoverEBIsolatedChannels = cms.bool(False),
    recoverEBVFE = cms.bool(False),
    recoverEEFE = cms.bool(True),
    recoverEEIsolatedChannels = cms.bool(False),
    recoverEEVFE = cms.bool(False),
    singleChannelRecoveryMethod = cms.string('NeuralNetworks'),
    singleChannelRecoveryThreshold = cms.double(8),
    skipTimeCalib = cms.bool(False),
    triggerPrimitiveDigiCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives")
)


process.ecalTPSkim = cms.EDProducer("EcalTPSkimmer",
    chStatusToSelectTP = cms.vuint32(13),
    doBarrel = cms.bool(True),
    doEndcap = cms.bool(True),
    skipModule = cms.bool(False),
    tpInputCollection = cms.InputTag("ecalDigis","EcalTriggerPrimitives"),
    tpOutputCollection = cms.string('')
)


process.egmElectronIsolationCITK = cms.EDProducer("CITKPFIsolationSumProducer",
    isolationConeDefinitions = cms.VPSet(
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h+'),
            isolationAlgo = cms.string('ElectronPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedGsfElectronsTmp"),
            vertexIndex = cms.int32(0)
        ),
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h0'),
            isolationAlgo = cms.string('ElectronPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedGsfElectronsTmp"),
            vertexIndex = cms.int32(0)
        ),
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('gamma'),
            isolationAlgo = cms.string('ElectronPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedGsfElectronsTmp"),
            vertexIndex = cms.int32(0)
        )
    ),
    srcForIsolationCone = cms.InputTag("pfNoPileUpCandidates"),
    srcToIsolate = cms.InputTag("gedGsfElectronsTmp")
)


process.egmElectronIsolationPileUpCITK = cms.EDProducer("CITKPFIsolationSumProducer",
    isolationConeDefinitions = cms.VPSet(cms.PSet(
        coneSize = cms.double(0.3),
        isolateAgainst = cms.string('h+'),
        isolationAlgo = cms.string('ElectronPFIsolationWithMapBasedVeto'),
        miniAODVertexCodes = cms.vuint32(2, 3),
        particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedGsfElectronsTmp"),
        vertexIndex = cms.int32(0)
    )),
    srcForIsolationCone = cms.InputTag("pfPileUpAllChargedParticles"),
    srcToIsolate = cms.InputTag("gedGsfElectronsTmp")
)


process.egmGedGsfElectronPFNoPileUpIsolation = cms.EDProducer("CITKPFIsolationSumProducer",
    isolationConeDefinitions = cms.VPSet(
        cms.PSet(
            VetoConeSizeBarrel = cms.double(0.0),
            VetoConeSizeEndcaps = cms.double(0.015),
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h+'),
            isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSizeBarrel = cms.double(0.0),
            VetoConeSizeEndcaps = cms.double(0.0),
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h0'),
            isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        ),
        cms.PSet(
            VetoConeSizeBarrel = cms.double(0.0),
            VetoConeSizeEndcaps = cms.double(0.08),
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('gamma'),
            isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3)
        )
    ),
    srcForIsolationCone = cms.InputTag("pfNoPileUpCandidates"),
    srcToIsolate = cms.InputTag("gedGsfElectrons")
)


process.egmGedGsfElectronPFNoPileUpIsolationMapBasedVeto = cms.EDProducer("CITKPFIsolationSumProducer",
    isolationConeDefinitions = cms.VPSet(
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h+'),
            isolationAlgo = cms.string('ElectronPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("particleBasedIsolation","gedGsfElectrons"),
            vertexIndex = cms.int32(0)
        ),
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h0'),
            isolationAlgo = cms.string('ElectronPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("particleBasedIsolation","gedGsfElectrons"),
            vertexIndex = cms.int32(0)
        ),
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('gamma'),
            isolationAlgo = cms.string('ElectronPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("particleBasedIsolation","gedGsfElectrons"),
            vertexIndex = cms.int32(0)
        )
    ),
    srcForIsolationCone = cms.InputTag("pfNoPileUpCandidates"),
    srcToIsolate = cms.InputTag("gedGsfElectrons")
)


process.egmGedGsfElectronPFPileUpIsolation = cms.EDProducer("CITKPFIsolationSumProducer",
    isolationConeDefinitions = cms.VPSet(cms.PSet(
        VetoConeSizeBarrel = cms.double(0.0),
        VetoConeSizeEndcaps = cms.double(0.015),
        coneSize = cms.double(0.3),
        isolateAgainst = cms.string('h+'),
        isolationAlgo = cms.string('ElectronPFIsolationWithConeVeto'),
        miniAODVertexCodes = cms.vuint32(0, 1)
    )),
    srcForIsolationCone = cms.InputTag("pfPileUpAllChargedParticles"),
    srcToIsolate = cms.InputTag("gedGsfElectrons")
)


process.egmGedGsfElectronPFPileUpIsolationMapBasedVeto = cms.EDProducer("CITKPFIsolationSumProducer",
    isolationConeDefinitions = cms.VPSet(cms.PSet(
        coneSize = cms.double(0.3),
        isolateAgainst = cms.string('h+'),
        isolationAlgo = cms.string('ElectronPFIsolationWithMapBasedVeto'),
        miniAODVertexCodes = cms.vuint32(2, 3),
        particleBasedIsolation = cms.InputTag("particleBasedIsolation","gedGsfElectrons"),
        vertexIndex = cms.int32(0)
    )),
    srcForIsolationCone = cms.InputTag("pfPileUpAllChargedParticles"),
    srcToIsolate = cms.InputTag("gedGsfElectrons")
)


process.egmPhotonIsolationCITK = cms.EDProducer("CITKPFIsolationSumProducer",
    isolationConeDefinitions = cms.VPSet(
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h+'),
            isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedPhotonsTmp"),
            vertexIndex = cms.int32(0)
        ),
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('h0'),
            isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedPhotonsTmp"),
            vertexIndex = cms.int32(0)
        ),
        cms.PSet(
            coneSize = cms.double(0.3),
            isolateAgainst = cms.string('gamma'),
            isolationAlgo = cms.string('PhotonPFIsolationWithMapBasedVeto'),
            miniAODVertexCodes = cms.vuint32(2, 3),
            particleBasedIsolation = cms.InputTag("particleBasedIsolationTmp","gedPhotonsTmp"),
            vertexIndex = cms.int32(0)
        )
    ),
    srcForIsolationCone = cms.InputTag("pfNoPileUpCandidates"),
    srcToIsolate = cms.InputTag("gedPhotonsTmp")
)


process.eidCutBasedExt = cms.EDProducer("EleIdCutBasedExtProducer",
    additionalCategories = cms.bool(True),
    algorithm = cms.string('eIDCB'),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.009, 0.0045, 0.0085, 0.0, 0.0105,
            0.0068, 0.01, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.05, 0.025, 0.053, 0.09, 0.07,
            0.03, 0.092, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.11, 0.91, 0.11, 0.0, 0.0,
            0.85, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.115, 0.1, 0.055, 0.0, 0.145,
            0.12, 0.15, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.014, 0.012, 0.0115, 0.0, 0.0275,
            0.0265, 0.0265, 0.0
        )
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0078, 0.00259, 0.0062, 0.0, 0.0078,
            0.0061, 0.0061, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.053, 0.0189, 0.059, 0.099, 0.0278,
            0.0157, 0.042, 0.08
        ),
        eSeedOverPin = cms.vdouble(
            0.3, 0.92, 0.211, 0.0, 0.42,
            0.88, 0.68, 0.0
        ),
        hOverE = cms.vdouble(
            0.076, 0.033, 0.07, 0.0, 0.083,
            0.0148, 0.033, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0101, 0.0095, 0.0097, 0.0, 0.0271,
            0.0267, 0.0259, 0.0
        )
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00958, 0.00406, 0.0122, 0.0137, 0.00837,
            0.0127, 0.011, 0.00336, 0.00977, 0.015,
            0.00675, 0.0109, 0.014, 0.00508, 0.0109,
            0.0146, 0.00506, 0.0127
        ),
        cutdphi = cms.vdouble(
            0.0372, 0.114, 0.118, 0.0488, 0.117,
            0.119, 0.0606, 0.0548, 0.117, 0.07,
            0.0355, 0.117, 0.088, 0.045, 0.118,
            0.0919, 0.0236, 0.0515
        ),
        cuteopin = cms.vdouble(
            0.878, 0.802, 0.814, 0.942, 0.735,
            0.774, 0.829, 0.909, 0.829, 0.813,
            0.86, 0.897, 0.817, 0.831, 0.818,
            0.861, 0.787, 0.789
        ),
        cuthoe = cms.vdouble(
            0.0887, 0.0934, 0.0949, 0.0986, 0.0431,
            0.0878, 0.097, 0.0509, 0.098, 0.0991,
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966,
            0.0758, 0.0149, 0.0131
        ),
        cutip = cms.vdouble(
            0.0246, 0.076, 0.0966, 0.0885, 0.441,
            0.205, 0.0292, 0.0293, 0.0619, 0.0251,
            0.159, 0.0815, 7.29, 0.0106, 5.76,
            6.89, 1.27, 5.89
        ),
        cutisoecal = cms.vdouble(
            33.4, 28.1, 7.32, 27.4, 7.33,
            21.7, 93.8, 102.0, 12.1, 26.0,
            8.91, 10.0, 16.1, 31.3, 16.9,
            15.4, 13.3, 37.7
        ),
        cutisohcal = cms.vdouble(
            13.5, 9.93, 7.56, 14.8, 8.1,
            10.8, 42.7, 20.1, 9.11, 10.4,
            6.89, 5.59, 8.53, 9.59, 24.2,
            2.78, 8.67, 0.288
        ),
        cutisotk = cms.vdouble(
            24.3, 8.45, 14.4, 27.8, 6.02,
            10.5, 14.1, 10.2, 14.5, 19.1,
            6.1, 14.1, 8.59, 8.33, 8.3,
            8.93, 8.6, 16.0
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 5.5, 2.5, 2.5,
            2.5, 3.5, 5.5, 0.5, 1.5,
            2.5, 0.5, 1.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0172, 0.0115, 0.0143, 0.0344, 0.0295,
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347,
            0.0307, 0.0316, 0.018, 0.011, 0.0132,
            0.0349, 0.031, 0.0327
        )
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0055, 0.003, 0.0065, 0.0, 0.006,
            0.0055, 0.0075, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.032, 0.016, 0.0525, 0.09, 0.025,
            0.035, 0.065, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.24, 0.94, 0.11, 0.0, 0.32,
            0.83, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.05, 0.042, 0.045, 0.0, 0.055,
            0.037, 0.05, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0125, 0.011, 0.01, 0.0, 0.0265,
            0.0252, 0.026, 0.0
        )
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0043, 0.00282, 0.0036, 0.0, 0.0066,
            0.0049, 0.0041, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.0225, 0.0114, 0.0234, 0.039, 0.0215,
            0.0095, 0.0148, 0.0167
        ),
        eSeedOverPin = cms.vdouble(
            0.32, 0.94, 0.221, 0.0, 0.74,
            0.89, 0.66, 0.0
        ),
        hOverE = cms.vdouble(
            0.056, 0.0221, 0.037, 0.0, 0.0268,
            0.0102, 0.0104, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0095, 0.0094, 0.0094, 0.0, 0.026,
            0.0257, 0.0246, 0.0
        )
    ),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00915, 0.00302, 0.0061, 0.0135, 0.00565,
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903,
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659,
            0.0148, 0.00555, 0.0128
        ),
        cutdphi = cms.vdouble(
            0.0369, 0.0307, 0.117, 0.0475, 0.0216,
            0.117, 0.0372, 0.0246, 0.0426, 0.0612,
            0.0142, 0.039, 0.0737, 0.0566, 0.0359,
            0.0187, 0.012, 0.0358
        ),
        cuteopin = cms.vdouble(
            0.878, 0.859, 0.874, 0.944, 0.737,
            0.773, 0.86, 0.967, 0.917, 0.812,
            0.915, 1.01, 0.847, 0.953, 0.979,
            0.841, 0.771, 1.09
        ),
        cuthoe = cms.vdouble(
            0.0871, 0.0289, 0.0783, 0.0946, 0.0245,
            0.0363, 0.0671, 0.048, 0.0614, 0.0924,
            0.0158, 0.049, 0.0382, 0.0915, 0.0451,
            0.0452, 0.00196, 0.0043
        ),
        cutip = cms.vdouble(
            0.0239, 0.027, 0.0768, 0.0231, 0.178,
            0.0957, 0.0102, 0.0168, 0.043, 0.0166,
            0.0594, 0.0308, 2.1, 0.00527, 3.17,
            4.91, 0.769, 5.9
        ),
        cutisoecal = cms.vdouble(
            20.0, 27.2, 4.48, 13.5, 4.56,
            3.19, 12.2, 13.1, 7.42, 7.67,
            4.12, 4.85, 10.1, 12.4, 11.1,
            11.0, 10.6, 13.4
        ),
        cutisohcal = cms.vdouble(
            10.9, 7.01, 8.75, 3.51, 7.75,
            1.62, 11.6, 9.9, 4.97, 5.33,
            3.18, 2.32, 0.164, 5.46, 12.0,
            0.00604, 4.1, 0.000628
        ),
        cutisotk = cms.vdouble(
            6.53, 4.6, 6.0, 8.63, 3.11,
            7.77, 5.42, 4.81, 4.06, 6.47,
            2.8, 3.45, 5.29, 5.18, 15.4,
            5.38, 4.47, 0.0347
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 0.5, 1.5, 2.5,
            0.5, 3.5, 5.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0131, 0.0106, 0.0115, 0.0306, 0.028,
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317,
            0.029, 0.0289, 0.0142, 0.0106, 0.0103,
            0.035, 0.0296, 0.0333
        )
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    electronIDType = cms.string('robust'),
    electronQuality = cms.string('loose'),
    electronVersion = cms.string(''),
    etBinning = cms.bool(True),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.011, 0.09, 0.005, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.1, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.115, 0.014, 0.09, 0.009, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.15, 0.0275, 0.092, 0.0105, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.075, 0.0132, 0.058, 0.0077, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.083, 0.027, 0.042, 0.01, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.015, 0.0092, 0.02, 0.0025, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.018, 0.025, 0.02, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.01, 0.0099, 0.025, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.01, 0.028, 0.02, 0.0066, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    src = cms.InputTag("gedGsfElectrons"),
    verticesCollection = cms.InputTag("offlinePrimaryVerticesWithBS")
)


process.eidLoose = cms.EDProducer("EleIdCutBasedExtProducer",
    additionalCategories = cms.bool(True),
    algorithm = cms.string('eIDCB'),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.009, 0.0045, 0.0085, 0.0, 0.0105,
            0.0068, 0.01, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.05, 0.025, 0.053, 0.09, 0.07,
            0.03, 0.092, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.11, 0.91, 0.11, 0.0, 0.0,
            0.85, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.115, 0.1, 0.055, 0.0, 0.145,
            0.12, 0.15, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.014, 0.012, 0.0115, 0.0, 0.0275,
            0.0265, 0.0265, 0.0
        )
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0078, 0.00259, 0.0062, 0.0, 0.0078,
            0.0061, 0.0061, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.053, 0.0189, 0.059, 0.099, 0.0278,
            0.0157, 0.042, 0.08
        ),
        eSeedOverPin = cms.vdouble(
            0.3, 0.92, 0.211, 0.0, 0.42,
            0.88, 0.68, 0.0
        ),
        hOverE = cms.vdouble(
            0.076, 0.033, 0.07, 0.0, 0.083,
            0.0148, 0.033, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0101, 0.0095, 0.0097, 0.0, 0.0271,
            0.0267, 0.0259, 0.0
        )
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00958, 0.00406, 0.0122, 0.0137, 0.00837,
            0.0127, 0.011, 0.00336, 0.00977, 0.015,
            0.00675, 0.0109, 0.014, 0.00508, 0.0109,
            0.0146, 0.00506, 0.0127
        ),
        cutdphi = cms.vdouble(
            0.0372, 0.114, 0.118, 0.0488, 0.117,
            0.119, 0.0606, 0.0548, 0.117, 0.07,
            0.0355, 0.117, 0.088, 0.045, 0.118,
            0.0919, 0.0236, 0.0515
        ),
        cuteopin = cms.vdouble(
            0.878, 0.802, 0.814, 0.942, 0.735,
            0.774, 0.829, 0.909, 0.829, 0.813,
            0.86, 0.897, 0.817, 0.831, 0.818,
            0.861, 0.787, 0.789
        ),
        cuthoe = cms.vdouble(
            0.0887, 0.0934, 0.0949, 0.0986, 0.0431,
            0.0878, 0.097, 0.0509, 0.098, 0.0991,
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966,
            0.0758, 0.0149, 0.0131
        ),
        cutip = cms.vdouble(
            0.0246, 0.076, 0.0966, 0.0885, 0.441,
            0.205, 0.0292, 0.0293, 0.0619, 0.0251,
            0.159, 0.0815, 7.29, 0.0106, 5.76,
            6.89, 1.27, 5.89
        ),
        cutisoecal = cms.vdouble(
            33.4, 28.1, 7.32, 27.4, 7.33,
            21.7, 93.8, 102.0, 12.1, 26.0,
            8.91, 10.0, 16.1, 31.3, 16.9,
            15.4, 13.3, 37.7
        ),
        cutisohcal = cms.vdouble(
            13.5, 9.93, 7.56, 14.8, 8.1,
            10.8, 42.7, 20.1, 9.11, 10.4,
            6.89, 5.59, 8.53, 9.59, 24.2,
            2.78, 8.67, 0.288
        ),
        cutisotk = cms.vdouble(
            24.3, 8.45, 14.4, 27.8, 6.02,
            10.5, 14.1, 10.2, 14.5, 19.1,
            6.1, 14.1, 8.59, 8.33, 8.3,
            8.93, 8.6, 16.0
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 5.5, 2.5, 2.5,
            2.5, 3.5, 5.5, 0.5, 1.5,
            2.5, 0.5, 1.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0172, 0.0115, 0.0143, 0.0344, 0.0295,
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347,
            0.0307, 0.0316, 0.018, 0.011, 0.0132,
            0.0349, 0.031, 0.0327
        )
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0055, 0.003, 0.0065, 0.0, 0.006,
            0.0055, 0.0075, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.032, 0.016, 0.0525, 0.09, 0.025,
            0.035, 0.065, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.24, 0.94, 0.11, 0.0, 0.32,
            0.83, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.05, 0.042, 0.045, 0.0, 0.055,
            0.037, 0.05, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0125, 0.011, 0.01, 0.0, 0.0265,
            0.0252, 0.026, 0.0
        )
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0043, 0.00282, 0.0036, 0.0, 0.0066,
            0.0049, 0.0041, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.0225, 0.0114, 0.0234, 0.039, 0.0215,
            0.0095, 0.0148, 0.0167
        ),
        eSeedOverPin = cms.vdouble(
            0.32, 0.94, 0.221, 0.0, 0.74,
            0.89, 0.66, 0.0
        ),
        hOverE = cms.vdouble(
            0.056, 0.0221, 0.037, 0.0, 0.0268,
            0.0102, 0.0104, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0095, 0.0094, 0.0094, 0.0, 0.026,
            0.0257, 0.0246, 0.0
        )
    ),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00915, 0.00302, 0.0061, 0.0135, 0.00565,
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903,
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659,
            0.0148, 0.00555, 0.0128
        ),
        cutdphi = cms.vdouble(
            0.0369, 0.0307, 0.117, 0.0475, 0.0216,
            0.117, 0.0372, 0.0246, 0.0426, 0.0612,
            0.0142, 0.039, 0.0737, 0.0566, 0.0359,
            0.0187, 0.012, 0.0358
        ),
        cuteopin = cms.vdouble(
            0.878, 0.859, 0.874, 0.944, 0.737,
            0.773, 0.86, 0.967, 0.917, 0.812,
            0.915, 1.01, 0.847, 0.953, 0.979,
            0.841, 0.771, 1.09
        ),
        cuthoe = cms.vdouble(
            0.0871, 0.0289, 0.0783, 0.0946, 0.0245,
            0.0363, 0.0671, 0.048, 0.0614, 0.0924,
            0.0158, 0.049, 0.0382, 0.0915, 0.0451,
            0.0452, 0.00196, 0.0043
        ),
        cutip = cms.vdouble(
            0.0239, 0.027, 0.0768, 0.0231, 0.178,
            0.0957, 0.0102, 0.0168, 0.043, 0.0166,
            0.0594, 0.0308, 2.1, 0.00527, 3.17,
            4.91, 0.769, 5.9
        ),
        cutisoecal = cms.vdouble(
            20.0, 27.2, 4.48, 13.5, 4.56,
            3.19, 12.2, 13.1, 7.42, 7.67,
            4.12, 4.85, 10.1, 12.4, 11.1,
            11.0, 10.6, 13.4
        ),
        cutisohcal = cms.vdouble(
            10.9, 7.01, 8.75, 3.51, 7.75,
            1.62, 11.6, 9.9, 4.97, 5.33,
            3.18, 2.32, 0.164, 5.46, 12.0,
            0.00604, 4.1, 0.000628
        ),
        cutisotk = cms.vdouble(
            6.53, 4.6, 6.0, 8.63, 3.11,
            7.77, 5.42, 4.81, 4.06, 6.47,
            2.8, 3.45, 5.29, 5.18, 15.4,
            5.38, 4.47, 0.0347
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 0.5, 1.5, 2.5,
            0.5, 3.5, 5.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0131, 0.0106, 0.0115, 0.0306, 0.028,
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317,
            0.029, 0.0289, 0.0142, 0.0106, 0.0103,
            0.035, 0.0296, 0.0333
        )
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    electronIDType = cms.string('classbased'),
    electronQuality = cms.string('loose'),
    electronVersion = cms.string(''),
    etBinning = cms.bool(True),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.011, 0.09, 0.005, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.1, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.115, 0.014, 0.09, 0.009, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.15, 0.0275, 0.092, 0.0105, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.075, 0.0132, 0.058, 0.0077, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.083, 0.027, 0.042, 0.01, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.015, 0.0092, 0.02, 0.0025, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.018, 0.025, 0.02, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.01, 0.0099, 0.025, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.01, 0.028, 0.02, 0.0066, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    src = cms.InputTag("gedGsfElectrons"),
    verticesCollection = cms.InputTag("hiSelectedVertex")
)


process.eidRobustHighEnergy = cms.EDProducer("EleIdCutBasedExtProducer",
    additionalCategories = cms.bool(True),
    algorithm = cms.string('eIDCB'),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.009, 0.0045, 0.0085, 0.0, 0.0105,
            0.0068, 0.01, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.05, 0.025, 0.053, 0.09, 0.07,
            0.03, 0.092, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.11, 0.91, 0.11, 0.0, 0.0,
            0.85, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.115, 0.1, 0.055, 0.0, 0.145,
            0.12, 0.15, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.014, 0.012, 0.0115, 0.0, 0.0275,
            0.0265, 0.0265, 0.0
        )
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0078, 0.00259, 0.0062, 0.0, 0.0078,
            0.0061, 0.0061, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.053, 0.0189, 0.059, 0.099, 0.0278,
            0.0157, 0.042, 0.08
        ),
        eSeedOverPin = cms.vdouble(
            0.3, 0.92, 0.211, 0.0, 0.42,
            0.88, 0.68, 0.0
        ),
        hOverE = cms.vdouble(
            0.076, 0.033, 0.07, 0.0, 0.083,
            0.0148, 0.033, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0101, 0.0095, 0.0097, 0.0, 0.0271,
            0.0267, 0.0259, 0.0
        )
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00958, 0.00406, 0.0122, 0.0137, 0.00837,
            0.0127, 0.011, 0.00336, 0.00977, 0.015,
            0.00675, 0.0109, 0.014, 0.00508, 0.0109,
            0.0146, 0.00506, 0.0127
        ),
        cutdphi = cms.vdouble(
            0.0372, 0.114, 0.118, 0.0488, 0.117,
            0.119, 0.0606, 0.0548, 0.117, 0.07,
            0.0355, 0.117, 0.088, 0.045, 0.118,
            0.0919, 0.0236, 0.0515
        ),
        cuteopin = cms.vdouble(
            0.878, 0.802, 0.814, 0.942, 0.735,
            0.774, 0.829, 0.909, 0.829, 0.813,
            0.86, 0.897, 0.817, 0.831, 0.818,
            0.861, 0.787, 0.789
        ),
        cuthoe = cms.vdouble(
            0.0887, 0.0934, 0.0949, 0.0986, 0.0431,
            0.0878, 0.097, 0.0509, 0.098, 0.0991,
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966,
            0.0758, 0.0149, 0.0131
        ),
        cutip = cms.vdouble(
            0.0246, 0.076, 0.0966, 0.0885, 0.441,
            0.205, 0.0292, 0.0293, 0.0619, 0.0251,
            0.159, 0.0815, 7.29, 0.0106, 5.76,
            6.89, 1.27, 5.89
        ),
        cutisoecal = cms.vdouble(
            33.4, 28.1, 7.32, 27.4, 7.33,
            21.7, 93.8, 102.0, 12.1, 26.0,
            8.91, 10.0, 16.1, 31.3, 16.9,
            15.4, 13.3, 37.7
        ),
        cutisohcal = cms.vdouble(
            13.5, 9.93, 7.56, 14.8, 8.1,
            10.8, 42.7, 20.1, 9.11, 10.4,
            6.89, 5.59, 8.53, 9.59, 24.2,
            2.78, 8.67, 0.288
        ),
        cutisotk = cms.vdouble(
            24.3, 8.45, 14.4, 27.8, 6.02,
            10.5, 14.1, 10.2, 14.5, 19.1,
            6.1, 14.1, 8.59, 8.33, 8.3,
            8.93, 8.6, 16.0
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 5.5, 2.5, 2.5,
            2.5, 3.5, 5.5, 0.5, 1.5,
            2.5, 0.5, 1.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0172, 0.0115, 0.0143, 0.0344, 0.0295,
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347,
            0.0307, 0.0316, 0.018, 0.011, 0.0132,
            0.0349, 0.031, 0.0327
        )
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0055, 0.003, 0.0065, 0.0, 0.006,
            0.0055, 0.0075, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.032, 0.016, 0.0525, 0.09, 0.025,
            0.035, 0.065, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.24, 0.94, 0.11, 0.0, 0.32,
            0.83, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.05, 0.042, 0.045, 0.0, 0.055,
            0.037, 0.05, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0125, 0.011, 0.01, 0.0, 0.0265,
            0.0252, 0.026, 0.0
        )
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0043, 0.00282, 0.0036, 0.0, 0.0066,
            0.0049, 0.0041, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.0225, 0.0114, 0.0234, 0.039, 0.0215,
            0.0095, 0.0148, 0.0167
        ),
        eSeedOverPin = cms.vdouble(
            0.32, 0.94, 0.221, 0.0, 0.74,
            0.89, 0.66, 0.0
        ),
        hOverE = cms.vdouble(
            0.056, 0.0221, 0.037, 0.0, 0.0268,
            0.0102, 0.0104, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0095, 0.0094, 0.0094, 0.0, 0.026,
            0.0257, 0.0246, 0.0
        )
    ),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00915, 0.00302, 0.0061, 0.0135, 0.00565,
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903,
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659,
            0.0148, 0.00555, 0.0128
        ),
        cutdphi = cms.vdouble(
            0.0369, 0.0307, 0.117, 0.0475, 0.0216,
            0.117, 0.0372, 0.0246, 0.0426, 0.0612,
            0.0142, 0.039, 0.0737, 0.0566, 0.0359,
            0.0187, 0.012, 0.0358
        ),
        cuteopin = cms.vdouble(
            0.878, 0.859, 0.874, 0.944, 0.737,
            0.773, 0.86, 0.967, 0.917, 0.812,
            0.915, 1.01, 0.847, 0.953, 0.979,
            0.841, 0.771, 1.09
        ),
        cuthoe = cms.vdouble(
            0.0871, 0.0289, 0.0783, 0.0946, 0.0245,
            0.0363, 0.0671, 0.048, 0.0614, 0.0924,
            0.0158, 0.049, 0.0382, 0.0915, 0.0451,
            0.0452, 0.00196, 0.0043
        ),
        cutip = cms.vdouble(
            0.0239, 0.027, 0.0768, 0.0231, 0.178,
            0.0957, 0.0102, 0.0168, 0.043, 0.0166,
            0.0594, 0.0308, 2.1, 0.00527, 3.17,
            4.91, 0.769, 5.9
        ),
        cutisoecal = cms.vdouble(
            20.0, 27.2, 4.48, 13.5, 4.56,
            3.19, 12.2, 13.1, 7.42, 7.67,
            4.12, 4.85, 10.1, 12.4, 11.1,
            11.0, 10.6, 13.4
        ),
        cutisohcal = cms.vdouble(
            10.9, 7.01, 8.75, 3.51, 7.75,
            1.62, 11.6, 9.9, 4.97, 5.33,
            3.18, 2.32, 0.164, 5.46, 12.0,
            0.00604, 4.1, 0.000628
        ),
        cutisotk = cms.vdouble(
            6.53, 4.6, 6.0, 8.63, 3.11,
            7.77, 5.42, 4.81, 4.06, 6.47,
            2.8, 3.45, 5.29, 5.18, 15.4,
            5.38, 4.47, 0.0347
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 0.5, 1.5, 2.5,
            0.5, 3.5, 5.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0131, 0.0106, 0.0115, 0.0306, 0.028,
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317,
            0.029, 0.0289, 0.0142, 0.0106, 0.0103,
            0.035, 0.0296, 0.0333
        )
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    electronIDType = cms.string('robust'),
    electronQuality = cms.string('highenergy'),
    electronVersion = cms.string(''),
    etBinning = cms.bool(True),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.011, 0.09, 0.005, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.1, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.115, 0.014, 0.09, 0.009, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.15, 0.0275, 0.092, 0.0105, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.075, 0.0132, 0.058, 0.0077, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.083, 0.027, 0.042, 0.01, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.015, 0.0092, 0.02, 0.0025, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.018, 0.025, 0.02, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.01, 0.0099, 0.025, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.01, 0.028, 0.02, 0.0066, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    src = cms.InputTag("gedGsfElectrons"),
    verticesCollection = cms.InputTag("hiSelectedVertex")
)


process.eidRobustLoose = cms.EDProducer("EleIdCutBasedExtProducer",
    additionalCategories = cms.bool(True),
    algorithm = cms.string('eIDCB'),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.009, 0.0045, 0.0085, 0.0, 0.0105,
            0.0068, 0.01, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.05, 0.025, 0.053, 0.09, 0.07,
            0.03, 0.092, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.11, 0.91, 0.11, 0.0, 0.0,
            0.85, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.115, 0.1, 0.055, 0.0, 0.145,
            0.12, 0.15, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.014, 0.012, 0.0115, 0.0, 0.0275,
            0.0265, 0.0265, 0.0
        )
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0078, 0.00259, 0.0062, 0.0, 0.0078,
            0.0061, 0.0061, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.053, 0.0189, 0.059, 0.099, 0.0278,
            0.0157, 0.042, 0.08
        ),
        eSeedOverPin = cms.vdouble(
            0.3, 0.92, 0.211, 0.0, 0.42,
            0.88, 0.68, 0.0
        ),
        hOverE = cms.vdouble(
            0.076, 0.033, 0.07, 0.0, 0.083,
            0.0148, 0.033, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0101, 0.0095, 0.0097, 0.0, 0.0271,
            0.0267, 0.0259, 0.0
        )
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00958, 0.00406, 0.0122, 0.0137, 0.00837,
            0.0127, 0.011, 0.00336, 0.00977, 0.015,
            0.00675, 0.0109, 0.014, 0.00508, 0.0109,
            0.0146, 0.00506, 0.0127
        ),
        cutdphi = cms.vdouble(
            0.0372, 0.114, 0.118, 0.0488, 0.117,
            0.119, 0.0606, 0.0548, 0.117, 0.07,
            0.0355, 0.117, 0.088, 0.045, 0.118,
            0.0919, 0.0236, 0.0515
        ),
        cuteopin = cms.vdouble(
            0.878, 0.802, 0.814, 0.942, 0.735,
            0.774, 0.829, 0.909, 0.829, 0.813,
            0.86, 0.897, 0.817, 0.831, 0.818,
            0.861, 0.787, 0.789
        ),
        cuthoe = cms.vdouble(
            0.0887, 0.0934, 0.0949, 0.0986, 0.0431,
            0.0878, 0.097, 0.0509, 0.098, 0.0991,
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966,
            0.0758, 0.0149, 0.0131
        ),
        cutip = cms.vdouble(
            0.0246, 0.076, 0.0966, 0.0885, 0.441,
            0.205, 0.0292, 0.0293, 0.0619, 0.0251,
            0.159, 0.0815, 7.29, 0.0106, 5.76,
            6.89, 1.27, 5.89
        ),
        cutisoecal = cms.vdouble(
            33.4, 28.1, 7.32, 27.4, 7.33,
            21.7, 93.8, 102.0, 12.1, 26.0,
            8.91, 10.0, 16.1, 31.3, 16.9,
            15.4, 13.3, 37.7
        ),
        cutisohcal = cms.vdouble(
            13.5, 9.93, 7.56, 14.8, 8.1,
            10.8, 42.7, 20.1, 9.11, 10.4,
            6.89, 5.59, 8.53, 9.59, 24.2,
            2.78, 8.67, 0.288
        ),
        cutisotk = cms.vdouble(
            24.3, 8.45, 14.4, 27.8, 6.02,
            10.5, 14.1, 10.2, 14.5, 19.1,
            6.1, 14.1, 8.59, 8.33, 8.3,
            8.93, 8.6, 16.0
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 5.5, 2.5, 2.5,
            2.5, 3.5, 5.5, 0.5, 1.5,
            2.5, 0.5, 1.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0172, 0.0115, 0.0143, 0.0344, 0.0295,
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347,
            0.0307, 0.0316, 0.018, 0.011, 0.0132,
            0.0349, 0.031, 0.0327
        )
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0055, 0.003, 0.0065, 0.0, 0.006,
            0.0055, 0.0075, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.032, 0.016, 0.0525, 0.09, 0.025,
            0.035, 0.065, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.24, 0.94, 0.11, 0.0, 0.32,
            0.83, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.05, 0.042, 0.045, 0.0, 0.055,
            0.037, 0.05, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0125, 0.011, 0.01, 0.0, 0.0265,
            0.0252, 0.026, 0.0
        )
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0043, 0.00282, 0.0036, 0.0, 0.0066,
            0.0049, 0.0041, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.0225, 0.0114, 0.0234, 0.039, 0.0215,
            0.0095, 0.0148, 0.0167
        ),
        eSeedOverPin = cms.vdouble(
            0.32, 0.94, 0.221, 0.0, 0.74,
            0.89, 0.66, 0.0
        ),
        hOverE = cms.vdouble(
            0.056, 0.0221, 0.037, 0.0, 0.0268,
            0.0102, 0.0104, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0095, 0.0094, 0.0094, 0.0, 0.026,
            0.0257, 0.0246, 0.0
        )
    ),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00915, 0.00302, 0.0061, 0.0135, 0.00565,
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903,
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659,
            0.0148, 0.00555, 0.0128
        ),
        cutdphi = cms.vdouble(
            0.0369, 0.0307, 0.117, 0.0475, 0.0216,
            0.117, 0.0372, 0.0246, 0.0426, 0.0612,
            0.0142, 0.039, 0.0737, 0.0566, 0.0359,
            0.0187, 0.012, 0.0358
        ),
        cuteopin = cms.vdouble(
            0.878, 0.859, 0.874, 0.944, 0.737,
            0.773, 0.86, 0.967, 0.917, 0.812,
            0.915, 1.01, 0.847, 0.953, 0.979,
            0.841, 0.771, 1.09
        ),
        cuthoe = cms.vdouble(
            0.0871, 0.0289, 0.0783, 0.0946, 0.0245,
            0.0363, 0.0671, 0.048, 0.0614, 0.0924,
            0.0158, 0.049, 0.0382, 0.0915, 0.0451,
            0.0452, 0.00196, 0.0043
        ),
        cutip = cms.vdouble(
            0.0239, 0.027, 0.0768, 0.0231, 0.178,
            0.0957, 0.0102, 0.0168, 0.043, 0.0166,
            0.0594, 0.0308, 2.1, 0.00527, 3.17,
            4.91, 0.769, 5.9
        ),
        cutisoecal = cms.vdouble(
            20.0, 27.2, 4.48, 13.5, 4.56,
            3.19, 12.2, 13.1, 7.42, 7.67,
            4.12, 4.85, 10.1, 12.4, 11.1,
            11.0, 10.6, 13.4
        ),
        cutisohcal = cms.vdouble(
            10.9, 7.01, 8.75, 3.51, 7.75,
            1.62, 11.6, 9.9, 4.97, 5.33,
            3.18, 2.32, 0.164, 5.46, 12.0,
            0.00604, 4.1, 0.000628
        ),
        cutisotk = cms.vdouble(
            6.53, 4.6, 6.0, 8.63, 3.11,
            7.77, 5.42, 4.81, 4.06, 6.47,
            2.8, 3.45, 5.29, 5.18, 15.4,
            5.38, 4.47, 0.0347
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 0.5, 1.5, 2.5,
            0.5, 3.5, 5.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0131, 0.0106, 0.0115, 0.0306, 0.028,
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317,
            0.029, 0.0289, 0.0142, 0.0106, 0.0103,
            0.035, 0.0296, 0.0333
        )
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    electronIDType = cms.string('robust'),
    electronQuality = cms.string('loose'),
    electronVersion = cms.string(''),
    etBinning = cms.bool(True),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.011, 0.09, 0.005, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.1, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.115, 0.014, 0.09, 0.009, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.15, 0.0275, 0.092, 0.0105, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.075, 0.0132, 0.058, 0.0077, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.083, 0.027, 0.042, 0.01, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.015, 0.0092, 0.02, 0.0025, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.018, 0.025, 0.02, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.01, 0.0099, 0.025, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.01, 0.028, 0.02, 0.0066, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    src = cms.InputTag("gedGsfElectrons"),
    verticesCollection = cms.InputTag("hiSelectedVertex")
)


process.eidRobustTight = cms.EDProducer("EleIdCutBasedExtProducer",
    additionalCategories = cms.bool(True),
    algorithm = cms.string('eIDCB'),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.009, 0.0045, 0.0085, 0.0, 0.0105,
            0.0068, 0.01, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.05, 0.025, 0.053, 0.09, 0.07,
            0.03, 0.092, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.11, 0.91, 0.11, 0.0, 0.0,
            0.85, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.115, 0.1, 0.055, 0.0, 0.145,
            0.12, 0.15, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.014, 0.012, 0.0115, 0.0, 0.0275,
            0.0265, 0.0265, 0.0
        )
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0078, 0.00259, 0.0062, 0.0, 0.0078,
            0.0061, 0.0061, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.053, 0.0189, 0.059, 0.099, 0.0278,
            0.0157, 0.042, 0.08
        ),
        eSeedOverPin = cms.vdouble(
            0.3, 0.92, 0.211, 0.0, 0.42,
            0.88, 0.68, 0.0
        ),
        hOverE = cms.vdouble(
            0.076, 0.033, 0.07, 0.0, 0.083,
            0.0148, 0.033, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0101, 0.0095, 0.0097, 0.0, 0.0271,
            0.0267, 0.0259, 0.0
        )
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00958, 0.00406, 0.0122, 0.0137, 0.00837,
            0.0127, 0.011, 0.00336, 0.00977, 0.015,
            0.00675, 0.0109, 0.014, 0.00508, 0.0109,
            0.0146, 0.00506, 0.0127
        ),
        cutdphi = cms.vdouble(
            0.0372, 0.114, 0.118, 0.0488, 0.117,
            0.119, 0.0606, 0.0548, 0.117, 0.07,
            0.0355, 0.117, 0.088, 0.045, 0.118,
            0.0919, 0.0236, 0.0515
        ),
        cuteopin = cms.vdouble(
            0.878, 0.802, 0.814, 0.942, 0.735,
            0.774, 0.829, 0.909, 0.829, 0.813,
            0.86, 0.897, 0.817, 0.831, 0.818,
            0.861, 0.787, 0.789
        ),
        cuthoe = cms.vdouble(
            0.0887, 0.0934, 0.0949, 0.0986, 0.0431,
            0.0878, 0.097, 0.0509, 0.098, 0.0991,
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966,
            0.0758, 0.0149, 0.0131
        ),
        cutip = cms.vdouble(
            0.0246, 0.076, 0.0966, 0.0885, 0.441,
            0.205, 0.0292, 0.0293, 0.0619, 0.0251,
            0.159, 0.0815, 7.29, 0.0106, 5.76,
            6.89, 1.27, 5.89
        ),
        cutisoecal = cms.vdouble(
            33.4, 28.1, 7.32, 27.4, 7.33,
            21.7, 93.8, 102.0, 12.1, 26.0,
            8.91, 10.0, 16.1, 31.3, 16.9,
            15.4, 13.3, 37.7
        ),
        cutisohcal = cms.vdouble(
            13.5, 9.93, 7.56, 14.8, 8.1,
            10.8, 42.7, 20.1, 9.11, 10.4,
            6.89, 5.59, 8.53, 9.59, 24.2,
            2.78, 8.67, 0.288
        ),
        cutisotk = cms.vdouble(
            24.3, 8.45, 14.4, 27.8, 6.02,
            10.5, 14.1, 10.2, 14.5, 19.1,
            6.1, 14.1, 8.59, 8.33, 8.3,
            8.93, 8.6, 16.0
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 5.5, 2.5, 2.5,
            2.5, 3.5, 5.5, 0.5, 1.5,
            2.5, 0.5, 1.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0172, 0.0115, 0.0143, 0.0344, 0.0295,
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347,
            0.0307, 0.0316, 0.018, 0.011, 0.0132,
            0.0349, 0.031, 0.0327
        )
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0055, 0.003, 0.0065, 0.0, 0.006,
            0.0055, 0.0075, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.032, 0.016, 0.0525, 0.09, 0.025,
            0.035, 0.065, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.24, 0.94, 0.11, 0.0, 0.32,
            0.83, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.05, 0.042, 0.045, 0.0, 0.055,
            0.037, 0.05, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0125, 0.011, 0.01, 0.0, 0.0265,
            0.0252, 0.026, 0.0
        )
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0043, 0.00282, 0.0036, 0.0, 0.0066,
            0.0049, 0.0041, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.0225, 0.0114, 0.0234, 0.039, 0.0215,
            0.0095, 0.0148, 0.0167
        ),
        eSeedOverPin = cms.vdouble(
            0.32, 0.94, 0.221, 0.0, 0.74,
            0.89, 0.66, 0.0
        ),
        hOverE = cms.vdouble(
            0.056, 0.0221, 0.037, 0.0, 0.0268,
            0.0102, 0.0104, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0095, 0.0094, 0.0094, 0.0, 0.026,
            0.0257, 0.0246, 0.0
        )
    ),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00915, 0.00302, 0.0061, 0.0135, 0.00565,
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903,
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659,
            0.0148, 0.00555, 0.0128
        ),
        cutdphi = cms.vdouble(
            0.0369, 0.0307, 0.117, 0.0475, 0.0216,
            0.117, 0.0372, 0.0246, 0.0426, 0.0612,
            0.0142, 0.039, 0.0737, 0.0566, 0.0359,
            0.0187, 0.012, 0.0358
        ),
        cuteopin = cms.vdouble(
            0.878, 0.859, 0.874, 0.944, 0.737,
            0.773, 0.86, 0.967, 0.917, 0.812,
            0.915, 1.01, 0.847, 0.953, 0.979,
            0.841, 0.771, 1.09
        ),
        cuthoe = cms.vdouble(
            0.0871, 0.0289, 0.0783, 0.0946, 0.0245,
            0.0363, 0.0671, 0.048, 0.0614, 0.0924,
            0.0158, 0.049, 0.0382, 0.0915, 0.0451,
            0.0452, 0.00196, 0.0043
        ),
        cutip = cms.vdouble(
            0.0239, 0.027, 0.0768, 0.0231, 0.178,
            0.0957, 0.0102, 0.0168, 0.043, 0.0166,
            0.0594, 0.0308, 2.1, 0.00527, 3.17,
            4.91, 0.769, 5.9
        ),
        cutisoecal = cms.vdouble(
            20.0, 27.2, 4.48, 13.5, 4.56,
            3.19, 12.2, 13.1, 7.42, 7.67,
            4.12, 4.85, 10.1, 12.4, 11.1,
            11.0, 10.6, 13.4
        ),
        cutisohcal = cms.vdouble(
            10.9, 7.01, 8.75, 3.51, 7.75,
            1.62, 11.6, 9.9, 4.97, 5.33,
            3.18, 2.32, 0.164, 5.46, 12.0,
            0.00604, 4.1, 0.000628
        ),
        cutisotk = cms.vdouble(
            6.53, 4.6, 6.0, 8.63, 3.11,
            7.77, 5.42, 4.81, 4.06, 6.47,
            2.8, 3.45, 5.29, 5.18, 15.4,
            5.38, 4.47, 0.0347
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 0.5, 1.5, 2.5,
            0.5, 3.5, 5.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0131, 0.0106, 0.0115, 0.0306, 0.028,
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317,
            0.029, 0.0289, 0.0142, 0.0106, 0.0103,
            0.035, 0.0296, 0.0333
        )
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    electronIDType = cms.string('robust'),
    electronQuality = cms.string('tight'),
    electronVersion = cms.string(''),
    etBinning = cms.bool(True),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.011, 0.09, 0.005, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.1, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.115, 0.014, 0.09, 0.009, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.15, 0.0275, 0.092, 0.0105, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.075, 0.0132, 0.058, 0.0077, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.083, 0.027, 0.042, 0.01, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.015, 0.0092, 0.02, 0.0025, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.018, 0.025, 0.02, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.01, 0.0099, 0.025, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.01, 0.028, 0.02, 0.0066, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    src = cms.InputTag("gedGsfElectrons"),
    verticesCollection = cms.InputTag("hiSelectedVertex")
)


process.eidTight = cms.EDProducer("EleIdCutBasedExtProducer",
    additionalCategories = cms.bool(True),
    algorithm = cms.string('eIDCB'),
    classbasedlooseEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedlooseEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.009, 0.0045, 0.0085, 0.0, 0.0105,
            0.0068, 0.01, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.05, 0.025, 0.053, 0.09, 0.07,
            0.03, 0.092, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.11, 0.91, 0.11, 0.0, 0.0,
            0.85, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.115, 0.1, 0.055, 0.0, 0.145,
            0.12, 0.15, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.014, 0.012, 0.0115, 0.0, 0.0275,
            0.0265, 0.0265, 0.0
        )
    ),
    classbasedlooseEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0078, 0.00259, 0.0062, 0.0, 0.0078,
            0.0061, 0.0061, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.053, 0.0189, 0.059, 0.099, 0.0278,
            0.0157, 0.042, 0.08
        ),
        eSeedOverPin = cms.vdouble(
            0.3, 0.92, 0.211, 0.0, 0.42,
            0.88, 0.68, 0.0
        ),
        hOverE = cms.vdouble(
            0.076, 0.033, 0.07, 0.0, 0.083,
            0.0148, 0.033, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0101, 0.0095, 0.0097, 0.0, 0.0271,
            0.0267, 0.0259, 0.0
        )
    ),
    classbasedlooseEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00958, 0.00406, 0.0122, 0.0137, 0.00837,
            0.0127, 0.011, 0.00336, 0.00977, 0.015,
            0.00675, 0.0109, 0.014, 0.00508, 0.0109,
            0.0146, 0.00506, 0.0127
        ),
        cutdphi = cms.vdouble(
            0.0372, 0.114, 0.118, 0.0488, 0.117,
            0.119, 0.0606, 0.0548, 0.117, 0.07,
            0.0355, 0.117, 0.088, 0.045, 0.118,
            0.0919, 0.0236, 0.0515
        ),
        cuteopin = cms.vdouble(
            0.878, 0.802, 0.814, 0.942, 0.735,
            0.774, 0.829, 0.909, 0.829, 0.813,
            0.86, 0.897, 0.817, 0.831, 0.818,
            0.861, 0.787, 0.789
        ),
        cuthoe = cms.vdouble(
            0.0887, 0.0934, 0.0949, 0.0986, 0.0431,
            0.0878, 0.097, 0.0509, 0.098, 0.0991,
            0.0321, 0.0928, 0.0663, 0.0717, 0.0966,
            0.0758, 0.0149, 0.0131
        ),
        cutip = cms.vdouble(
            0.0246, 0.076, 0.0966, 0.0885, 0.441,
            0.205, 0.0292, 0.0293, 0.0619, 0.0251,
            0.159, 0.0815, 7.29, 0.0106, 5.76,
            6.89, 1.27, 5.89
        ),
        cutisoecal = cms.vdouble(
            33.4, 28.1, 7.32, 27.4, 7.33,
            21.7, 93.8, 102.0, 12.1, 26.0,
            8.91, 10.0, 16.1, 31.3, 16.9,
            15.4, 13.3, 37.7
        ),
        cutisohcal = cms.vdouble(
            13.5, 9.93, 7.56, 14.8, 8.1,
            10.8, 42.7, 20.1, 9.11, 10.4,
            6.89, 5.59, 8.53, 9.59, 24.2,
            2.78, 8.67, 0.288
        ),
        cutisotk = cms.vdouble(
            24.3, 8.45, 14.4, 27.8, 6.02,
            10.5, 14.1, 10.2, 14.5, 19.1,
            6.1, 14.1, 8.59, 8.33, 8.3,
            8.93, 8.6, 16.0
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 5.5, 2.5, 2.5,
            2.5, 3.5, 5.5, 0.5, 1.5,
            2.5, 0.5, 1.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0172, 0.0115, 0.0143, 0.0344, 0.0295,
            0.0304, 0.0145, 0.0108, 0.0128, 0.0347,
            0.0307, 0.0316, 0.018, 0.011, 0.0132,
            0.0349, 0.031, 0.0327
        )
    ),
    classbasedlooseEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0392, 0.0397, 0.0394, 0.0393,
            0.039, 0.0378, 0.0388, 0.0382, 0.0385,
            0.0167, 0.00325, 0.0394, 0.0387, 0.0388,
            0.0227, 0.0258, 0.0127, 0.0298, 0.03,
            0.00946, 0.039, 0.0231, 0.0278, 0.00162,
            0.0367, 0.0199
        ),
        cutdetain = cms.vdouble(
            0.00989, 0.00484, 0.0146, 0.0146, 0.00902,
            0.0172, 0.0137, 0.0477, 0.0275, 0.00967,
            0.00377, 0.00924, 0.013, 0.00666, 0.0123,
            0.0125, 0.0228, 0.0112, 0.0106, 0.0038,
            0.00897, 0.0139, 0.00667, 0.0122, 0.0122,
            0.0193, 0.00239
        ),
        cutdphiin = cms.vdouble(
            0.041, 0.275, 0.365, 0.047, 0.273,
            0.296, 0.329, 0.465, 0.627, 0.0581,
            0.0954, 0.327, 0.0702, 0.0582, 0.279,
            0.117, 0.318, 0.246, 0.0821, 0.052,
            0.292, 0.116, 0.0435, 0.312, 0.118,
            0.296, 0.0459
        ),
        cuteseedopcor = cms.vdouble(
            0.78, 0.302, 0.483, 0.904, 0.168,
            0.645, 0.108, 0.284, 0.324, 0.591,
            0.286, 0.488, 0.813, 0.791, 0.672,
            0.398, 0.834, 0.878, 0.515, 0.937,
            0.806, 0.816, 0.85, 0.507, 0.367,
            0.83, 0.648
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 12.0, 12.0,
            12.0, 12.0, 12.0, 12.0, 12.0,
            12.0, 12.5
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 2.5, 2.5, 1.5, 2.5,
            1.5, 1.5, 1.5, 1.5, 0.5,
            2.5, 2.5, 0.5, 2.5, 1.5,
            0.5, 1.5, 1.5, 0.5, 2.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.166, 0.0771, 0.144, 0.37, 0.0497,
            0.139, 0.401, 2.68, 0.516, 0.234,
            0.0556, 0.144, 0.368, 0.031, 0.12,
            0.602, 2.01, 1.05, 0.104, 0.063,
            0.0565, 0.38, 0.0192, 0.0294, 0.537,
            4.65, 1.87
        ),
        cutip_gsf = cms.vdouble(
            0.0431, 0.0767, 0.139, 0.101, 0.149,
            0.154, 0.932, 0.15, 0.124, 0.0238,
            0.0467, 0.0759, 0.0369, 0.147, 0.0986,
            0.0626, 0.195, 0.116, 0.0122, 0.0125,
            0.0693, 0.0162, 0.089, 0.0673, 0.0467,
            0.0651, 0.0221
        ),
        cutiso_sum = cms.vdouble(
            31.5, 10.3, 8.8, 11.0, 6.13,
            6.94, 7.52, 9.0, 3.5, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            28.9, 15.3, 12.0, 18.3, 7.17,
            9.42, 11.0, 9.81, 3.94, 22.7,
            15.9, 12.3, 17.0, 7.58, 8.89,
            15.2, 12.7, 6.17, 20.8, 21.2,
            17.2, 15.5, 9.37, 10.6, 19.8,
            22.1, 15.6
        ),
        cutsee = cms.vdouble(
            0.0175, 0.0127, 0.0177, 0.0373, 0.0314,
            0.0329, 0.0157, 0.0409, 0.14, 0.0169,
            0.0106, 0.0142, 0.0363, 0.0322, 0.0354,
            0.0117, 0.0372, 28.2, 0.0171, 0.0113,
            0.014, 0.0403, 0.0323, 0.0411, 0.0104,
            0.0436, 0.0114
        )
    ),
    classbasedlooseEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0137, 0.00678, 0.0241, 0.0187, 0.0161,
            0.0224, 0.0252, 0.0308, 0.0273
        ),
        cutdetainl = cms.vdouble(
            0.0124, 0.00503, 0.0257, 0.0228, 0.0118,
            0.0178, 0.0188, 0.14, 0.024
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.262, 0.353, 0.116, 0.357,
            0.319, 0.342, 0.404, 0.336
        ),
        cutdphiinl = cms.vdouble(
            0.0747, 0.25, 0.356, 0.0956, 0.347,
            0.326, 0.333, 0.647, 0.289
        ),
        cuteseedopcor = cms.vdouble(
            0.63, 0.82, 0.401, 0.718, 0.4,
            0.458, 0.15, 0.664, 0.373
        ),
        cutfmishits = cms.vdouble(
            4.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 4.5, 3.5, 3.5
        ),
        cuthoe = cms.vdouble(
            0.247, 0.137, 0.147, 0.371, 0.0588,
            0.147, 0.52, 0.452, 0.404
        ),
        cuthoel = cms.vdouble(
            0.236, 0.126, 0.147, 0.375, 0.0392,
            0.145, 0.365, 0.383, 0.384
        ),
        cutip_gsf = cms.vdouble(
            0.0551, 0.0765, 0.143, 0.0874, 0.594,
            0.37, 0.0913, 1.15, 0.231
        ),
        cutip_gsfl = cms.vdouble(
            0.0186, 0.0759, 0.138, 0.0473, 0.62,
            0.304, 0.109, 0.775, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            33.0, 17.0, 17.9, 18.8, 8.55,
            12.5, 17.6, 18.5, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            34.5, 12.7, 12.1, 19.9, 6.35,
            8.85, 14.0, 10.5, 9.74
        ),
        cutiso_sumoetl = cms.vdouble(
            11.3, 9.05, 9.07, 9.94, 5.25,
            6.15, 10.7, 10.8, 4.4
        ),
        cutsee = cms.vdouble(
            0.0176, 0.0125, 0.0181, 0.0415, 0.0364,
            0.0418, 0.0146, 0.0678, 0.133
        ),
        cutseel = cms.vdouble(
            0.0164, 0.0118, 0.015, 0.0523, 0.0326,
            0.0456, 0.0185, 0.0589, 0.0544
        )
    ),
    classbasedtightEleIDCuts = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    classbasedtightEleIDCutsV00 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0055, 0.003, 0.0065, 0.0, 0.006,
            0.0055, 0.0075, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.032, 0.016, 0.0525, 0.09, 0.025,
            0.035, 0.065, 0.092
        ),
        eSeedOverPin = cms.vdouble(
            0.24, 0.94, 0.11, 0.0, 0.32,
            0.83, 0.0, 0.0
        ),
        hOverE = cms.vdouble(
            0.05, 0.042, 0.045, 0.0, 0.055,
            0.037, 0.05, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0125, 0.011, 0.01, 0.0, 0.0265,
            0.0252, 0.026, 0.0
        )
    ),
    classbasedtightEleIDCutsV01 = cms.PSet(
        deltaEtaIn = cms.vdouble(
            0.0043, 0.00282, 0.0036, 0.0, 0.0066,
            0.0049, 0.0041, 0.0
        ),
        deltaPhiIn = cms.vdouble(
            0.0225, 0.0114, 0.0234, 0.039, 0.0215,
            0.0095, 0.0148, 0.0167
        ),
        eSeedOverPin = cms.vdouble(
            0.32, 0.94, 0.221, 0.0, 0.74,
            0.89, 0.66, 0.0
        ),
        hOverE = cms.vdouble(
            0.056, 0.0221, 0.037, 0.0, 0.0268,
            0.0102, 0.0104, 0.0
        ),
        sigmaEtaEta = cms.vdouble(
            0.0095, 0.0094, 0.0094, 0.0, 0.026,
            0.0257, 0.0246, 0.0
        )
    ),
    classbasedtightEleIDCutsV02 = cms.PSet(
        cutdeta = cms.vdouble(
            0.00915, 0.00302, 0.0061, 0.0135, 0.00565,
            0.00793, 0.0102, 0.00266, 0.0106, 0.00903,
            0.00766, 0.00723, 0.0116, 0.00203, 0.00659,
            0.0148, 0.00555, 0.0128
        ),
        cutdphi = cms.vdouble(
            0.0369, 0.0307, 0.117, 0.0475, 0.0216,
            0.117, 0.0372, 0.0246, 0.0426, 0.0612,
            0.0142, 0.039, 0.0737, 0.0566, 0.0359,
            0.0187, 0.012, 0.0358
        ),
        cuteopin = cms.vdouble(
            0.878, 0.859, 0.874, 0.944, 0.737,
            0.773, 0.86, 0.967, 0.917, 0.812,
            0.915, 1.01, 0.847, 0.953, 0.979,
            0.841, 0.771, 1.09
        ),
        cuthoe = cms.vdouble(
            0.0871, 0.0289, 0.0783, 0.0946, 0.0245,
            0.0363, 0.0671, 0.048, 0.0614, 0.0924,
            0.0158, 0.049, 0.0382, 0.0915, 0.0451,
            0.0452, 0.00196, 0.0043
        ),
        cutip = cms.vdouble(
            0.0239, 0.027, 0.0768, 0.0231, 0.178,
            0.0957, 0.0102, 0.0168, 0.043, 0.0166,
            0.0594, 0.0308, 2.1, 0.00527, 3.17,
            4.91, 0.769, 5.9
        ),
        cutisoecal = cms.vdouble(
            20.0, 27.2, 4.48, 13.5, 4.56,
            3.19, 12.2, 13.1, 7.42, 7.67,
            4.12, 4.85, 10.1, 12.4, 11.1,
            11.0, 10.6, 13.4
        ),
        cutisohcal = cms.vdouble(
            10.9, 7.01, 8.75, 3.51, 7.75,
            1.62, 11.6, 9.9, 4.97, 5.33,
            3.18, 2.32, 0.164, 5.46, 12.0,
            0.00604, 4.1, 0.000628
        ),
        cutisotk = cms.vdouble(
            6.53, 4.6, 6.0, 8.63, 3.11,
            7.77, 5.42, 4.81, 4.06, 6.47,
            2.8, 3.45, 5.29, 5.18, 15.4,
            5.38, 4.47, 0.0347
        ),
        cutmishits = cms.vdouble(
            5.5, 1.5, 0.5, 1.5, 2.5,
            0.5, 3.5, 5.5, 0.5, 0.5,
            0.5, 0.5, 0.5, 1.5, 0.5,
            0.5, 0.5, 0.5
        ),
        cutsee = cms.vdouble(
            0.0131, 0.0106, 0.0115, 0.0306, 0.028,
            0.0293, 0.0131, 0.0106, 0.0115, 0.0317,
            0.029, 0.0289, 0.0142, 0.0106, 0.0103,
            0.035, 0.0296, 0.0333
        )
    ),
    classbasedtightEleIDCutsV03 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV04 = cms.PSet(
        cutdcotdist = cms.vdouble(
            0.0393, 0.0256, 0.00691, 0.0394, 0.0386,
            0.039, 0.0325, 0.0384, 0.0382, 0.0245,
            0.000281, 5.46e-05, 0.0342, 0.0232, 0.00107,
            0.0178, 0.0193, 0.000758, 0.000108, 0.0248,
            0.000458, 0.0129, 0.00119, 0.0182, 4.53e-05,
            0.0189, 0.000928
        ),
        cutdetain = cms.vdouble(
            0.00811, 0.00341, 0.00633, 0.0103, 0.00667,
            0.01, 0.0106, 0.0145, 0.0163, 0.0076,
            0.00259, 0.00511, 0.00941, 0.0043, 0.00857,
            0.012, 0.0169, 0.00172, 0.00861, 0.00362,
            0.00601, 0.00925, 0.00489, 0.00832, 0.0119,
            0.0169, 0.000996
        ),
        cutdphiin = cms.vdouble(
            0.0404, 0.0499, 0.263, 0.042, 0.0484,
            0.241, 0.242, 0.231, 0.286, 0.0552,
            0.0338, 0.154, 0.0623, 0.0183, 0.0392,
            0.0547, 0.0588, 0.00654, 0.042, 0.0217,
            0.0885, 0.0445, 0.0141, 0.0234, 0.065,
            0.0258, 0.0346
        ),
        cuteseedopcor = cms.vdouble(
            0.784, 0.366, 0.57, 0.911, 0.298,
            0.645, 0.51, 0.497, 0.932, 0.835,
            0.968, 0.969, 0.923, 0.898, 0.98,
            0.63, 0.971, 1.0, 0.515, 0.963,
            0.986, 0.823, 0.879, 1.01, 0.931,
            0.937, 1.05
        ),
        cutet = cms.vdouble(
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, -100000.0, -100000.0,
            -100000.0, -100000.0, -100000.0, 13.7, 13.2,
            13.6, 14.2, 14.1, 13.9, 12.9,
            14.9, 17.7
        ),
        cutfmishits = cms.vdouble(
            2.5, 1.5, 1.5, 1.5, 1.5,
            0.5, 2.5, 0.5, 0.5, 2.5,
            1.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5, -0.5, 2.5, 1.5,
            0.5, 0.5, 0.5, 0.5, 0.5,
            0.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.0783, 0.0387, 0.105, 0.118, 0.0227,
            0.062, 0.13, 2.47, 0.38, 0.0888,
            0.0503, 0.0955, 0.0741, 0.015, 0.03,
            0.589, 1.13, 0.612, 0.0494, 0.0461,
            0.0292, 0.0369, 0.0113, 0.0145, 0.124,
            2.05, 0.61
        ),
        cutip_gsf = cms.vdouble(
            0.0213, 0.0422, 0.0632, 0.0361, 0.073,
            0.126, 0.171, 0.119, 0.0372, 0.0131,
            0.0146, 0.0564, 0.0152, 0.0222, 0.0268,
            0.0314, 0.0884, 0.00374, 0.00852, 0.00761,
            0.0143, 0.0106, 0.0127, 0.0119, 0.0123,
            0.0235, 0.00363
        ),
        cutiso_sum = cms.vdouble(
            11.8, 8.31, 6.26, 6.18, 3.28,
            4.38, 4.17, 5.4, 1.57, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0, 100000.0, 100000.0, 100000.0,
            100000.0, 100000.0
        ),
        cutiso_sumoet = cms.vdouble(
            13.7, 11.6, 7.14, 9.98, 3.52,
            4.87, 6.24, 7.96, 2.53, 11.2,
            11.9, 7.88, 8.16, 5.58, 5.03,
            11.4, 8.15, 5.79, 10.4, 11.1,
            10.4, 7.47, 5.08, 5.9, 11.8,
            14.1, 11.7
        ),
        cutsee = cms.vdouble(
            0.0143, 0.0105, 0.0123, 0.0324, 0.0307,
            0.0301, 0.0109, 0.027, 0.0292, 0.0133,
            0.0104, 0.0116, 0.0332, 0.0296, 0.031,
            0.00981, 0.0307, 0.072, 0.0149, 0.0105,
            0.011, 0.0342, 0.0307, 0.0303, 0.00954,
            0.0265, 0.0101
        )
    ),
    classbasedtightEleIDCutsV06 = cms.PSet(
        cutdcotdist = cms.vdouble(
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0
        ),
        cutdetain = cms.vdouble(
            0.0116, 0.00449, 0.00938, 0.0184, 0.00678,
            0.0109, 0.0252, 0.0268, 0.0139
        ),
        cutdetainl = cms.vdouble(
            0.00816, 0.00401, 0.0081, 0.019, 0.00588,
            0.00893, 0.0171, 0.0434, 0.0143
        ),
        cutdphiin = cms.vdouble(
            0.0897, 0.0993, 0.295, 0.0979, 0.151,
            0.252, 0.341, 0.308, 0.328
        ),
        cutdphiinl = cms.vdouble(
            0.061, 0.14, 0.286, 0.0921, 0.197,
            0.24, 0.333, 0.303, 0.258
        ),
        cuteseedopcor = cms.vdouble(
            0.637, 0.943, 0.742, 0.748, 0.763,
            0.631, 0.214, 0.873, 0.473
        ),
        cutfmishits = cms.vdouble(
            1.5, 1.5, 1.5, 2.5, 2.5,
            1.5, 1.5, 2.5, 0.5
        ),
        cuthoe = cms.vdouble(
            0.215, 0.0608, 0.147, 0.369, 0.0349,
            0.102, 0.52, 0.422, 0.404
        ),
        cuthoel = cms.vdouble(
            0.228, 0.0836, 0.143, 0.37, 0.0392,
            0.0979, 0.3, 0.381, 0.339
        ),
        cutip_gsf = cms.vdouble(
            0.0131, 0.0586, 0.0839, 0.0366, 0.452,
            0.204, 0.0913, 0.0802, 0.0731
        ),
        cutip_gsfl = cms.vdouble(
            0.0119, 0.0527, 0.0471, 0.0212, 0.233,
            0.267, 0.109, 0.122, 0.0479
        ),
        cutiso_sum = cms.vdouble(
            15.5, 12.2, 12.2, 11.7, 7.16,
            9.71, 8.66, 11.9, 2.98
        ),
        cutiso_sumoet = cms.vdouble(
            11.9, 7.81, 6.28, 8.92, 4.65,
            5.49, 9.36, 8.84, 5.94
        ),
        cutiso_sumoetl = cms.vdouble(
            6.21, 6.81, 5.3, 5.39, 2.73,
            4.73, 4.84, 3.46, 3.73
        ),
        cutsee = cms.vdouble(
            0.0145, 0.0116, 0.012, 0.039, 0.0297,
            0.0311, 0.00987, 0.0347, 0.0917
        ),
        cutseel = cms.vdouble(
            0.0132, 0.0117, 0.0112, 0.0387, 0.0281,
            0.0287, 0.00987, 0.0296, 0.0544
        )
    ),
    electronIDType = cms.string('classbased'),
    electronQuality = cms.string('tight'),
    electronVersion = cms.string(''),
    etBinning = cms.bool(True),
    reducedBarrelRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    reducedEndcapRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    robusthighenergyEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.011, 0.09, 0.005, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.1, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.0275, 0.09, 0.007, -1,
            -1, 9999.0, 9999.0, 0, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusthighenergyEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 9999, 0.09, 0.005, 0.94,
            0.83, 7.5, 2, 0.03, 9999.0,
            0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.05, 0.03, 0.09, 0.007, -1,
            -1, 15, 2.5, 0.03, 2.5,
            0, 0.5, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.115, 0.014, 0.09, 0.009, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.15, 0.0275, 0.092, 0.0105, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.075, 0.0132, 0.058, 0.0077, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.083, 0.027, 0.042, 0.01, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robustlooseEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.05, 0.0103, 0.8, 0.00688, -1,
            -1, 7.33, 4.68, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.0389, 0.0307, 0.7, 0.00944, -1,
            -1, 7.76, 3.09, 2.23, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCuts = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV00 = cms.PSet(
        barrel = cms.vdouble(
            0.015, 0.0092, 0.02, 0.0025, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.018, 0.025, 0.02, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV01 = cms.PSet(
        barrel = cms.vdouble(
            0.01, 0.0099, 0.025, 0.004, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.01, 0.028, 0.02, 0.0066, -1,
            -1, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV02 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV03 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    robusttightEleIDCutsV04 = cms.PSet(
        barrel = cms.vdouble(
            0.0201, 0.0102, 0.0211, 0.00606, -1,
            -1, 2.34, 3.24, 4.51, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        ),
        endcap = cms.vdouble(
            0.00253, 0.0291, 0.022, 0.0032, -1,
            -1, 0.826, 2.7, 0.255, 9999.0,
            9999.0, 9999.0, 9999.0, 9999.0, 9999.0,
            9999.0, 9999.0, 9999.0, 0.0, -9999.0,
            9999.0, 9999.0, 9999, -1, 0,
            0
        )
    ),
    src = cms.InputTag("gedGsfElectrons"),
    verticesCollection = cms.InputTag("hiSelectedVertex")
)


process.elEDIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("ecalDrivenGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elEDIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("ecalDrivenGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elEDIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("ecalDrivenGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elEDIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("ecalDrivenGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elEDIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("ecalDrivenGsfElectrons"),
    trackType = cms.string('candidate')
)


process.elEDIsoValueCharged03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositCharged"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositCharged__reRECO')
)


process.elEDIsoValueCharged04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositCharged"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositCharged__reRECO')
)


process.elEDIsoValueChargedAll03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositChargedAll"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositChargedAll__reRECO')
)


process.elEDIsoValueChargedAll04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositChargedAll"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositChargedAll__reRECO')
)


process.elEDIsoValueGamma03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositGamma"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositGamma__reRECO')
)


process.elEDIsoValueGamma04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositGamma"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositGamma__reRECO')
)


process.elEDIsoValueNeutral03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositNeutral"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositNeutral__reRECO')
)


process.elEDIsoValueNeutral04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositNeutral"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositNeutral__reRECO')
)


process.elEDIsoValuePU03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositPU"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositPU__reRECO')
)


process.elEDIsoValuePU04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elEDIsoDepositPU"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elEDIsoDepositPU__reRECO')
)


process.elPFIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfElectronTranslator","pf"),
    trackType = cms.string('candidate')
)


process.elPFIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfElectronTranslator","pf"),
    trackType = cms.string('candidate')
)


process.elPFIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfElectronTranslator","pf"),
    trackType = cms.string('candidate')
)


process.elPFIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfElectronTranslator","pf"),
    trackType = cms.string('candidate')
)


process.elPFIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfElectronTranslator","pf"),
    trackType = cms.string('candidate')
)


process.elPFIsoValueCharged03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositCharged"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositCharged__reRECO')
)


process.elPFIsoValueCharged04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositCharged"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositCharged__reRECO')
)


process.elPFIsoValueChargedAll03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositChargedAll__reRECO')
)


process.elPFIsoValueChargedAll04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositChargedAll"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositChargedAll__reRECO')
)


process.elPFIsoValueGamma03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositGamma"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositGamma__reRECO')
)


process.elPFIsoValueGamma04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositGamma"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositGamma__reRECO')
)


process.elPFIsoValueNeutral03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositNeutral"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositNeutral__reRECO')
)


process.elPFIsoValueNeutral04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositNeutral"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositNeutral__reRECO')
)


process.elPFIsoValuePU03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositPU"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositPU__reRECO')
)


process.elPFIsoValuePU04 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("elPFIsoDepositPU"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_elPFIsoDepositPU__reRECO')
)


process.electronCkfTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('TrajectoryBuilderForElectrons')
    ),
    TrajectoryCleaner = cms.string('electronTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("ecalDrivenElectronSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.electronCkfTrackCandidatesFromMultiCl = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('TrajectoryBuilderForElectrons')
    ),
    TrajectoryCleaner = cms.string('electronTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("electronMergedSeedsFromMultiCl"),
    useHitsSplitting = cms.bool(True)
)


process.electronEcalPFClusterIsolationProducer = cms.EDProducer("ElectronEcalPFClusterIsolationProducer",
    candidateProducer = cms.InputTag("gedGsfElectronsTmp"),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0),
    drVetoEndcap = cms.double(0),
    energyBarrel = cms.double(0),
    energyEndcap = cms.double(0),
    etaStripBarrel = cms.double(0),
    etaStripEndcap = cms.double(0),
    pfClusterProducer = cms.InputTag("particleFlowClusterECAL")
)


process.electronGsfTracks = cms.EDProducer("GsfTrackProducer",
    AlgorithmName = cms.string('gsf'),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('fwdGsfElectronPropagator'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string(''),
    src = cms.InputTag("electronCkfTrackCandidates"),
    useHitsSplitting = cms.bool(False)
)


process.electronGsfTracksFromMultiCl = cms.EDProducer("GsfTrackProducer",
    AlgorithmName = cms.string('gsf'),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('fwdGsfElectronPropagator'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TrajectoryInEvent = cms.bool(False),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    producer = cms.string(''),
    src = cms.InputTag("electronCkfTrackCandidatesFromMultiCl"),
    useHitsSplitting = cms.bool(False)
)


process.electronHcalPFClusterIsolationProducer = cms.EDProducer("ElectronHcalPFClusterIsolationProducer",
    candidateProducer = cms.InputTag("gedGsfElectronsTmp"),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0),
    drVetoEndcap = cms.double(0),
    energyBarrel = cms.double(0),
    energyEndcap = cms.double(0),
    etaStripBarrel = cms.double(0),
    etaStripEndcap = cms.double(0),
    pfClusterProducerHCAL = cms.InputTag("particleFlowClusterHCAL"),
    useHF = cms.bool(False)
)


process.electronMergedSeeds = cms.EDProducer("ElectronSeedMerger",
    EcalBasedSeeds = cms.InputTag("ecalDrivenElectronSeeds"),
    TkBasedSeeds = cms.InputTag("trackerDrivenElectronSeeds","SeedsForGsf")
)


process.electronMergedSeedsFromMultiCl = cms.EDProducer("ElectronSeedMerger",
    EcalBasedSeeds = cms.InputTag("ecalDrivenElectronSeedsFromMultiCl"),
    TkBasedSeeds = cms.InputTag("trackerDrivenElectronSeeds","SeedsForGsf")
)


process.fastElectronCkfTrackCandidates = cms.EDProducer("TrackCandidateProducer",
    MinNumberOfCrossedLayers = cms.uint32(5),
    OverlapCleaning = cms.bool(True),
    SplitHits = cms.bool(True),
    propagator = cms.string('PropagatorWithMaterialOpposite'),
    recHitCombinations = cms.InputTag("fastMatchedTrackerRecHitCombinations"),
    simTracks = cms.InputTag("fastSimProducer"),
    src = cms.InputTag("electronMergedSeeds")
)


process.firstStepPrimaryVertices = cms.EDProducer("RecoChargedRefCandidatePrimaryVertexSorter",
    assignment = cms.PSet(
        maxDistanceToJetAxis = cms.double(0.07),
        maxDtSigForPrimaryAssignment = cms.double(4.0),
        maxDxyForJetAxisAssigment = cms.double(0.1),
        maxDxyForNotReconstructedPrimary = cms.double(0.01),
        maxDxySigForNotReconstructedPrimary = cms.double(2),
        maxDzErrorForPrimaryAssignment = cms.double(0.05),
        maxDzForJetAxisAssigment = cms.double(0.1),
        maxDzForPrimaryAssignment = cms.double(0.1),
        maxDzSigForPrimaryAssignment = cms.double(5.0),
        maxJetDeltaR = cms.double(0.5),
        minJetPt = cms.double(25),
        preferHighRanked = cms.bool(False),
        useTiming = cms.bool(False)
    ),
    jets = cms.InputTag("ak4CaloJetsForTrk"),
    particles = cms.InputTag("initialStepTrackRefsForJets"),
    produceAssociationToOriginalVertices = cms.bool(False),
    produceNoPileUpCollection = cms.bool(False),
    producePileUpCollection = cms.bool(False),
    produceSortedVertices = cms.bool(True),
    qualityForPrimary = cms.int32(3),
    sorting = cms.PSet(

    ),
    trackTimeResoTag = cms.InputTag(""),
    trackTimeTag = cms.InputTag(""),
    usePVMET = cms.bool(True),
    vertices = cms.InputTag("firstStepPrimaryVerticesUnsorted")
)


process.firstStepPrimaryVerticesBeforeMixing = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            Tmin = cms.double(2.0),
            Tpurge = cms.double(2.0),
            Tstop = cms.double(0.5),
            coolingFactor = cms.double(0.6),
            d0CutOff = cms.double(3.0),
            dzCutOff = cms.double(3.0),
            uniquetrkweight = cms.double(0.8),
            vertexSize = cms.double(0.006),
            zmerge = cms.double(0.01)
        ),
        algorithm = cms.string('DA_vect')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(4.0),
        maxEta = cms.double(2.4),
        maxNormalizedChi2 = cms.double(10.0),
        minPixelLayersWithHits = cms.int32(2),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(5),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("initialStepTracks"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(2.5),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(1.0),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ))
)


process.firstStepPrimaryVerticesUnsorted = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkDAClusParameters = cms.PSet(
            Tmin = cms.double(2.0),
            Tpurge = cms.double(2.0),
            Tstop = cms.double(0.5),
            coolingFactor = cms.double(0.6),
            d0CutOff = cms.double(3.0),
            dzCutOff = cms.double(3.0),
            uniquetrkweight = cms.double(0.8),
            vertexSize = cms.double(0.006),
            zmerge = cms.double(0.01)
        ),
        algorithm = cms.string('DA_vect')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filter'),
        maxD0Significance = cms.double(4.0),
        maxEta = cms.double(2.4),
        maxNormalizedChi2 = cms.double(10.0),
        minPixelLayersWithHits = cms.int32(2),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(5),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("initialStepTracks"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(2.5),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(1.0),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ))
)


process.fixedGridRhoFastjetAll = cms.EDProducer("FixedGridRhoProducerFastjet",
    gridSpacing = cms.double(0.55),
    maxRapidity = cms.double(5.0),
    pfCandidatesTag = cms.InputTag("particleFlow")
)


process.fixedGridRhoFastjetAllCalo = cms.EDProducer("FixedGridRhoProducerFastjet",
    gridSpacing = cms.double(0.55),
    maxRapidity = cms.double(5.0),
    pfCandidatesTag = cms.InputTag("towerMaker")
)


process.fixedGridRhoFastjetAllTmp = cms.EDProducer("FixedGridRhoProducerFastjet",
    gridSpacing = cms.double(0.55),
    maxRapidity = cms.double(5.0),
    pfCandidatesTag = cms.InputTag("particleFlowTmp")
)


process.gctDigis = cms.EDProducer("GctRawToDigi",
    checkHeaders = cms.untracked.bool(False),
    gctFedId = cms.untracked.int32(745),
    hltMode = cms.bool(False),
    inputLabel = cms.InputTag("rawDataRepacker"),
    numberOfGctSamplesToUnpack = cms.uint32(1),
    numberOfRctSamplesToUnpack = cms.uint32(1),
    unpackSharedRegions = cms.bool(False),
    unpackerVersion = cms.uint32(0),
    verbose = cms.untracked.bool(False)
)


process.gedElPFIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("gedGsfElectronsTmp"),
    trackType = cms.string('candidate')
)


process.gedElPFIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("gedGsfElectronsTmp"),
    trackType = cms.string('candidate')
)


process.gedElPFIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllPhotons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("gedGsfElectronsTmp"),
    trackType = cms.string('candidate')
)


process.gedElPFIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("gedGsfElectronsTmp"),
    trackType = cms.string('candidate')
)


process.gedElPFIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(1e-05),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("gedGsfElectronsTmp"),
    trackType = cms.string('candidate')
)


process.gedElPFIsoValueCharged03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("gedElPFIsoDepositCharged"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_gedElPFIsoDepositCharged__reRECO')
)


process.gedElPFIsoValueChargedAll03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("gedElPFIsoDepositChargedAll"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_gedElPFIsoDepositChargedAll__reRECO')
)


process.gedElPFIsoValueGamma03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("gedElPFIsoDepositGamma"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.08)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_gedElPFIsoDepositGamma__reRECO')
)


process.gedElPFIsoValueNeutral03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("gedElPFIsoDepositNeutral"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_gedElPFIsoDepositNeutral__reRECO')
)


process.gedElPFIsoValuePU03 = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("gedElPFIsoDepositPU"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.015)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_gedElPFIsoDepositPU__reRECO')
)


process.gedGsfElectronCores = cms.EDProducer("GEDGsfElectronCoreProducer",
    GEDEMUnbiased = cms.InputTag("particleFlowEGamma"),
    ctfTracks = cms.InputTag("hiGeneralTracks"),
    gsfTracks = cms.InputTag("electronGsfTracks")
)


process.gedGsfElectrons = cms.EDProducer("GEDGsfElectronFinalizer",
    outputCollectionLabel = cms.string(''),
    pfCandidatesTag = cms.InputTag("particleFlowTmp"),
    pfIsolationValues = cms.PSet(
        pfSumChargedHadronPt = cms.InputTag("egmElectronIsolationCITK","h+-DR030-"),
        pfSumEcalClusterEt = cms.InputTag("electronEcalPFClusterIsolationProducer"),
        pfSumHcalClusterEt = cms.InputTag("electronHcalPFClusterIsolationProducer"),
        pfSumNeutralHadronEt = cms.InputTag("egmElectronIsolationCITK","h0-DR030-"),
        pfSumPUPt = cms.InputTag("egmElectronIsolationPileUpCITK","h+-DR030-"),
        pfSumPhotonEt = cms.InputTag("egmElectronIsolationCITK","gamma-DR030-")
    ),
    previousGsfElectronsTag = cms.InputTag("gedGsfElectronsTmp"),
    regressionConfig = cms.PSet(
        eOverP_ECALTRKThr = cms.double(0.025),
        electron_config = cms.PSet(
            regressionKey_ecalonly = cms.vstring(
                'electron_eb_ECALonly_lowpt',
                'electron_eb_ECALonly',
                'electron_ee_ECALonly_lowpt',
                'electron_ee_ECALonly'
            ),
            regressionKey_ecaltrk = cms.vstring(
                'electron_eb_ECALTRK_lowpt',
                'electron_eb_ECALTRK',
                'electron_ee_ECALTRK_lowpt',
                'electron_ee_ECALTRK'
            ),
            uncertaintyKey_ecalonly = cms.vstring(
                'electron_eb_ECALonly_lowpt_var',
                'electron_eb_ECALonly_var',
                'electron_ee_ECALonly_lowpt_var',
                'electron_ee_ECALonly_var'
            ),
            uncertaintyKey_ecaltrk = cms.vstring(
                'electron_eb_ECALTRK_lowpt_var',
                'electron_eb_ECALTRK_var',
                'electron_ee_ECALTRK_lowpt_var',
                'electron_ee_ECALTRK_var'
            )
        ),
        epDiffSig_ECALTRKThr = cms.double(15.0),
        epSig_ECALTRKThr = cms.double(10.0),
        forceHighEnergyEcalTrainingIfSaturated = cms.bool(True),
        highEnergy_ECALTRKThr = cms.double(200.0),
        lowEnergy_ECALTRKThr = cms.double(50.0),
        lowEnergy_ECALonlyThr = cms.double(99999.0),
        modifierName = cms.string('EGRegressionModifierV2'),
        photon_config = cms.PSet(
            regressionKey_ecalonly = cms.vstring(
                'photon_eb_ECALonly_lowpt',
                'photon_eb_ECALonly',
                'photon_ee_ECALonly_lowpt',
                'photon_ee_ECALonly'
            ),
            uncertaintyKey_ecalonly = cms.vstring(
                'photon_eb_ECALonly_lowpt_var',
                'photon_eb_ECALonly_var',
                'photon_ee_ECALonly_lowpt_var',
                'photon_ee_ECALonly_var'
            )
        ),
        rhoCollection = cms.InputTag("fixedGridRhoFastjetAllTmp")
    )
)


process.gedGsfElectronsTmp = cms.EDProducer("GEDGsfElectronProducer",
    ElecMVAFilesString = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_10_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_12_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_20_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_22_17Feb2011.weights.xml'
    ),
    MaxElePtForOnlyMVA = cms.double(50.0),
    PreSelectMVA = cms.double(-0.1),
    SoftElecMVAFilesString = cms.vstring('RecoEgamma/ElectronIdentification/data/TMVA_BDTSoftElectrons_7Feb2014.weights.xml'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    addPflowElectrons = cms.bool(True),
    ambClustersOverlapStrategy = cms.uint32(1),
    ambSortingStrategy = cms.uint32(1),
    applyAmbResolution = cms.bool(False),
    applyPreselection = cms.bool(True),
    barrelRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    checkHcalStatus = cms.bool(True),
    combinationRegressionWeightFile = cms.vstring(),
    combinationRegressionWeightLabels = cms.vstring('gedelectron_p4combination_offline'),
    combinationWeightsFromDB = cms.bool(True),
    crackCorrectionFunction = cms.string('EcalClusterCrackCorrection'),
    ctfTracksCheck = cms.bool(True),
    ctfTracksTag = cms.InputTag("hiGeneralTracks"),
    eMinBarrel = cms.double(0.095),
    eMinEndcaps = cms.double(0.0),
    ecalDrivenEcalEnergyFromClassBasedParameterization = cms.bool(False),
    ecalDrivenEcalErrorFromClassBasedParameterization = cms.bool(False),
    ecalRefinedRegressionWeightFiles = cms.vstring(),
    ecalRefinedRegressionWeightLabels = cms.vstring(
        'gedelectron_EBCorrection_offline_v1',
        'gedelectron_EECorrection_offline_v1',
        'gedelectron_EBUncertainty_offline_v1',
        'gedelectron_EEUncertainty_offline_v1'
    ),
    ecalWeightsFromDB = cms.bool(True),
    egmPFCandidatesTag = cms.InputTag("particleFlowEGamma"),
    endcapRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etMinBarrel = cms.double(0.0),
    etMinEndcaps = cms.double(0.11),
    etMinHcal = cms.double(0.0),
    gedElectronMode = cms.bool(True),
    gsfElectronCoresTag = cms.InputTag("gedGsfElectronCores"),
    gsfPfRecTracksTag = cms.InputTag("pfTrackElec"),
    hOverEConeSize = cms.double(0.15),
    hOverEConeSizePflow = cms.double(0.15),
    hOverEPtMin = cms.double(0.0),
    hOverEPtMinPflow = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    intRadiusEcalBarrel = cms.double(3.0),
    intRadiusEcalEndcaps = cms.double(3.0),
    intRadiusHcal = cms.double(0.15),
    isBarrel = cms.bool(False),
    isBarrelPflow = cms.bool(False),
    isEndcaps = cms.bool(False),
    isEndcapsPflow = cms.bool(False),
    isFiducial = cms.bool(False),
    isFiducialPflow = cms.bool(False),
    jurassicWidth = cms.double(1.5),
    maxDeltaEtaBarrel = cms.double(0.02),
    maxDeltaEtaBarrelPflow = cms.double(999999999.0),
    maxDeltaEtaEndcaps = cms.double(0.02),
    maxDeltaEtaEndcapsPflow = cms.double(999999999.0),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiBarrelPflow = cms.double(999999999.0),
    maxDeltaPhiEndcaps = cms.double(0.15),
    maxDeltaPhiEndcapsPflow = cms.double(999999999.0),
    maxEOverPBarrel = cms.double(2.0),
    maxEOverPBarrelPflow = cms.double(999999999.0),
    maxEOverPEndcaps = cms.double(2.0),
    maxEOverPEndcapsPflow = cms.double(999999999.0),
    maxFbremBarrel = cms.double(999999999.0),
    maxFbremBarrelPflow = cms.double(999999999.0),
    maxFbremEndcaps = cms.double(999999999.0),
    maxFbremEndcapsPflow = cms.double(999999999.0),
    maxHBarrel = cms.double(0.0),
    maxHBarrelPflow = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    maxHEndcapsPflow = cms.double(0.0),
    maxHOverEBarrel = cms.double(0.25),
    maxHOverEBarrelPflow = cms.double(999999999.0),
    maxHOverEEndcaps = cms.double(0.25),
    maxHOverEEndcapsPflow = cms.double(999999999.0),
    maxSigmaIetaIetaBarrel = cms.double(999999999.0),
    maxSigmaIetaIetaBarrelPflow = cms.double(999999999.0),
    maxSigmaIetaIetaEndcaps = cms.double(999999999.0),
    maxSigmaIetaIetaEndcapsPflow = cms.double(999999999.0),
    maxTIP = cms.double(999999999.0),
    maxTIPPflow = cms.double(999999999.0),
    minEOverPBarrel = cms.double(0.0),
    minEOverPBarrelPflow = cms.double(0.0),
    minEOverPEndcaps = cms.double(0.0),
    minEOverPEndcapsPflow = cms.double(0.0),
    minMVA = cms.double(-0.4),
    minMVAPflow = cms.double(-0.4),
    minMvaByPassForIsolated = cms.double(-0.4),
    minMvaByPassForIsolatedPflow = cms.double(-0.4),
    minSCEtBarrel = cms.double(15.0),
    minSCEtBarrelPflow = cms.double(0.0),
    minSCEtEndcaps = cms.double(15.0),
    minSCEtEndcapsPflow = cms.double(0.0),
    outputEGMPFValueMap = cms.string(''),
    pfMvaTag = cms.InputTag(""),
    pflowGsfElectronsTag = cms.InputTag(""),
    previousGsfElectronsTag = cms.InputTag(""),
    pureTrackerDrivenEcalErrorFromSimpleParameterization = cms.bool(True),
    recHitFlagsToBeExcludedBarrel = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    recHitFlagsToBeExcludedEndcaps = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    recHitSeverityToBeExcludedBarrel = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    recHitSeverityToBeExcludedEndcaps = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    seedFromTEC = cms.bool(True),
    seedsTag = cms.InputTag("ecalDrivenElectronSeeds"),
    superClusterErrorFunction = cms.string('EcalClusterEnergyUncertaintyObjectSpecific'),
    trkIsol03Cfg = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.3),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        )
    ),
    trkIsol04Cfg = cms.PSet(
        barrelCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        ),
        endcapCuts = cms.PSet(
            algosToReject = cms.vstring('jetCoreRegionalStep'),
            allowedQualities = cms.vstring(),
            maxDPtPt = cms.double(-1),
            maxDR = cms.double(0.4),
            maxDZ = cms.double(0.2),
            minDEta = cms.double(0.015),
            minDR = cms.double(0.0),
            minHits = cms.int32(-1),
            minPixelHits = cms.int32(-1),
            minPt = cms.double(0.7)
        )
    ),
    useCombinationRegression = cms.bool(True),
    useEcalRegression = cms.bool(True),
    useGsfPfRecTracks = cms.bool(True),
    useIsolationValues = cms.bool(False),
    useNumCrystals = cms.bool(True),
    vetoClustered = cms.bool(False),
    vtxTag = cms.InputTag("hiSelectedVertex")
)


process.gedPhotonCore = cms.EDProducer("GEDPhotonCoreProducer",
    gedPhotonCoreCollection = cms.string(''),
    pfEgammaCandidates = cms.InputTag("particleFlowEGamma"),
    pixelSeedProducer = cms.InputTag("electronMergedSeeds")
)


process.gedPhotons = cms.EDProducer("GEDPhotonProducer",
    PFIsolationCalculatorSet = cms.PSet(
        ComponentName = cms.string('pfIsolationCalculator'),
        applyDzDxyVeto = cms.bool(True),
        applyMissHitPhVeto = cms.bool(False),
        applyPFPUVeto = cms.bool(True),
        applyVeto = cms.bool(True),
        checkClosestZVertex = cms.bool(True),
        coneDR = cms.double(0.3),
        deltaRVetoBarrel = cms.bool(True),
        deltaRVetoBarrelCharged = cms.double(0.02),
        deltaRVetoBarrelNeutrals = cms.double(-1.0),
        deltaRVetoBarrelPhotons = cms.double(-1.0),
        deltaRVetoEndcap = cms.bool(True),
        deltaRVetoEndcapCharged = cms.double(0.02),
        deltaRVetoEndcapNeutrals = cms.double(-1.0),
        deltaRVetoEndcapPhotons = cms.double(0.07),
        numberOfCrystalEndcapPhotons = cms.double(4.0),
        numberOfRings = cms.int32(1),
        particleType = cms.int32(1),
        rectangleDeltaEtaVetoBarrelCharged = cms.double(-1),
        rectangleDeltaEtaVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoBarrelPhotons = cms.double(0.015),
        rectangleDeltaEtaVetoEndcapCharged = cms.double(-1),
        rectangleDeltaEtaVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoEndcapPhotons = cms.double(-1),
        rectangleDeltaPhiVetoBarrelCharged = cms.double(-1),
        rectangleDeltaPhiVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoBarrelPhotons = cms.double(1.0),
        rectangleDeltaPhiVetoEndcapCharged = cms.double(-1),
        rectangleDeltaPhiVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoEndcapPhotons = cms.double(-1),
        rectangleVetoBarrel = cms.bool(True),
        rectangleVetoEndcap = cms.bool(False),
        ringSize = cms.double(0.3),
        useCrystalSize = cms.bool(True)
    ),
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromRefinedSCRegression'),
    chargedHadronIsolation = cms.InputTag("egmPhotonIsolationCITK","h+-DR030-"),
    checkHcalStatus = cms.bool(True),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        trackProducer = cms.InputTag("hiGeneralTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHoverEBarrel = cms.double(0.5),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(0.94),
    minR9Endcap = cms.double(0.95),
    minSCEtBarrel = cms.double(10.0),
    minSCEtEndcap = cms.double(10.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    neutralHadronIsolation = cms.InputTag("egmPhotonIsolationCITK","h0-DR030-"),
    outputPhotonCollection = cms.string(''),
    pfCandidates = cms.InputTag("particleFlowTmp"),
    pfECALClusIsolation = cms.InputTag("photonEcalPFClusterIsolationProducer"),
    pfEgammaCandidates = cms.InputTag("particleFlowEGamma"),
    pfHCALClusIsolation = cms.InputTag("photonHcalPFClusterIsolationProducer"),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    photonIsolation = cms.InputTag("egmPhotonIsolationCITK","gamma-DR030-"),
    photonProducer = cms.InputTag("gedPhotonsTmp"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    preshowerHits = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    primaryVertexProducer = cms.InputTag("hiSelectedVertex"),
    reconstructionStep = cms.string('final'),
    regressionConfig = cms.PSet(
        eOverP_ECALTRKThr = cms.double(0.025),
        electron_config = cms.PSet(
            regressionKey_ecalonly = cms.vstring(
                'electron_eb_ECALonly_lowpt',
                'electron_eb_ECALonly',
                'electron_ee_ECALonly_lowpt',
                'electron_ee_ECALonly'
            ),
            regressionKey_ecaltrk = cms.vstring(
                'electron_eb_ECALTRK_lowpt',
                'electron_eb_ECALTRK',
                'electron_ee_ECALTRK_lowpt',
                'electron_ee_ECALTRK'
            ),
            uncertaintyKey_ecalonly = cms.vstring(
                'electron_eb_ECALonly_lowpt_var',
                'electron_eb_ECALonly_var',
                'electron_ee_ECALonly_lowpt_var',
                'electron_ee_ECALonly_var'
            ),
            uncertaintyKey_ecaltrk = cms.vstring(
                'electron_eb_ECALTRK_lowpt_var',
                'electron_eb_ECALTRK_var',
                'electron_ee_ECALTRK_lowpt_var',
                'electron_ee_ECALTRK_var'
            )
        ),
        epDiffSig_ECALTRKThr = cms.double(15.0),
        epSig_ECALTRKThr = cms.double(10.0),
        forceHighEnergyEcalTrainingIfSaturated = cms.bool(True),
        highEnergy_ECALTRKThr = cms.double(200.0),
        lowEnergy_ECALTRKThr = cms.double(50.0),
        lowEnergy_ECALonlyThr = cms.double(99999.0),
        modifierName = cms.string('EGRegressionModifierV2'),
        photon_config = cms.PSet(
            regressionKey_ecalonly = cms.vstring(
                'photon_eb_ECALonly_lowpt',
                'photon_eb_ECALonly',
                'photon_ee_ECALonly_lowpt',
                'photon_ee_ECALonly'
            ),
            uncertaintyKey_ecalonly = cms.vstring(
                'photon_eb_ECALonly_lowpt_var',
                'photon_eb_ECALonly_var',
                'photon_ee_ECALonly_lowpt_var',
                'photon_ee_ECALonly_var'
            )
        ),
        rhoCollection = cms.InputTag("fixedGridRhoFastjetAllTmp")
    ),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True),
    useRegression = cms.bool(True),
    valueMapPhotons = cms.string('valMapPFEgammaCandToPhoton')
)


process.gedPhotonsTmp = cms.EDProducer("GEDPhotonProducer",
    PFIsolationCalculatorSet = cms.PSet(
        ComponentName = cms.string('pfIsolationCalculator'),
        applyDzDxyVeto = cms.bool(True),
        applyMissHitPhVeto = cms.bool(False),
        applyPFPUVeto = cms.bool(True),
        applyVeto = cms.bool(True),
        checkClosestZVertex = cms.bool(True),
        coneDR = cms.double(0.3),
        deltaRVetoBarrel = cms.bool(True),
        deltaRVetoBarrelCharged = cms.double(0.02),
        deltaRVetoBarrelNeutrals = cms.double(-1.0),
        deltaRVetoBarrelPhotons = cms.double(-1.0),
        deltaRVetoEndcap = cms.bool(True),
        deltaRVetoEndcapCharged = cms.double(0.02),
        deltaRVetoEndcapNeutrals = cms.double(-1.0),
        deltaRVetoEndcapPhotons = cms.double(0.07),
        numberOfCrystalEndcapPhotons = cms.double(4.0),
        numberOfRings = cms.int32(1),
        particleType = cms.int32(1),
        rectangleDeltaEtaVetoBarrelCharged = cms.double(-1),
        rectangleDeltaEtaVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoBarrelPhotons = cms.double(0.015),
        rectangleDeltaEtaVetoEndcapCharged = cms.double(-1),
        rectangleDeltaEtaVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoEndcapPhotons = cms.double(-1),
        rectangleDeltaPhiVetoBarrelCharged = cms.double(-1),
        rectangleDeltaPhiVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoBarrelPhotons = cms.double(1.0),
        rectangleDeltaPhiVetoEndcapCharged = cms.double(-1),
        rectangleDeltaPhiVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoEndcapPhotons = cms.double(-1),
        rectangleVetoBarrel = cms.bool(True),
        rectangleVetoEndcap = cms.bool(False),
        ringSize = cms.double(0.3),
        useCrystalSize = cms.bool(True)
    ),
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromEcalEnergy'),
    checkHcalStatus = cms.bool(True),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        trackProducer = cms.InputTag("hiGeneralTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHoverEBarrel = cms.double(0.5),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(0.94),
    minR9Endcap = cms.double(0.95),
    minSCEtBarrel = cms.double(10.0),
    minSCEtEndcap = cms.double(10.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    outputPhotonCollection = cms.string(''),
    pfCandidates = cms.InputTag("particleFlowTmp"),
    pfEgammaCandidates = cms.InputTag("particleFlowEGamma"),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    photonProducer = cms.InputTag("gedPhotonCore"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    preshowerHits = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    primaryVertexProducer = cms.InputTag("hiSelectedVertex"),
    reconstructionStep = cms.string('tmp'),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True),
    useRegression = cms.bool(True),
    valueMapPhotons = cms.string('valMapPFEgammaCandToPhoton')
)


process.gemRecHits = cms.EDProducer("GEMRecHitProducer",
    gemDigiLabel = cms.InputTag("muonGEMDigis"),
    recAlgo = cms.string('GEMRecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    )
)


process.gemSegments = cms.EDProducer("GEMSegmentProducer",
    algo_name = cms.string('GEMSegmentAlgorithm'),
    algo_pset = cms.PSet(
        GEMDebug = cms.untracked.bool(True),
        clusterOnlySameBXRecHits = cms.bool(True),
        dEtaChainBoxMax = cms.double(0.05),
        dPhiChainBoxMax = cms.double(0.02),
        dXclusBoxMax = cms.double(1.0),
        dYclusBoxMax = cms.double(5.0),
        maxRecHitsInCluster = cms.int32(4),
        minHitsPerSegment = cms.uint32(2),
        preClustering = cms.bool(True),
        preClusteringUseChaining = cms.bool(True)
    ),
    gemRecHitLabel = cms.InputTag("gemRecHits")
)


process.generalTracks = cms.EDProducer("DuplicateListMerger",
    candidateComponents = cms.InputTag("duplicateTrackCandidates","candidateMap"),
    candidateSource = cms.InputTag("duplicateTrackCandidates","candidates"),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    diffHitsCut = cms.int32(5),
    mergedMVAVals = cms.InputTag("duplicateTrackClassifier","MVAValues"),
    mergedSource = cms.InputTag("mergedDuplicateTracks"),
    originalMVAVals = cms.InputTag("preDuplicateMergingGeneralTracks","MVAValues"),
    originalSource = cms.InputTag("preDuplicateMergingGeneralTracks"),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder')
)


process.glbTrackQual = cms.EDProducer("GlobalTrackQualityProducer",
    BaseLabel = cms.string('GLB'),
    GlobalMuonTrackMatcher = cms.PSet(
        Chi2Cut_1 = cms.double(50.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaDCut_2 = cms.double(10.0),
        DeltaDCut_3 = cms.double(15.0),
        DeltaRCut_1 = cms.double(0.1),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        Eta_threshold = cms.double(1.2),
        LocChi2Cut = cms.double(20.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Pt_threshold1 = cms.double(0.0),
        Pt_threshold2 = cms.double(999999999.0),
        Quality_1 = cms.double(20.0),
        Quality_2 = cms.double(15.0),
        Quality_3 = cms.double(7.0)
    ),
    InputCollection = cms.InputTag("globalMuons"),
    InputLinksCollection = cms.InputTag("globalMuons"),
    MaxChi2 = cms.double(100000.0),
    RefitterParameters = cms.PSet(
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        Chi2CutCSC = cms.double(1.0),
        Chi2CutDT = cms.double(30.0),
        Chi2CutGEM = cms.double(1.0),
        Chi2CutME0 = cms.double(1.0),
        Chi2CutRPC = cms.double(1.0),
        Chi2ProbabilityCut = cms.double(30.0),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        DYTselector = cms.int32(1),
        DYTthrs = cms.vint32(10, 10),
        DYTupdator = cms.bool(True),
        DYTuseAPE = cms.bool(False),
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        GEMRecHitLabel = cms.InputTag("gemRecHits"),
        HitThreshold = cms.int32(1),
        ME0RecHitLabel = cms.InputTag("me0Segments"),
        MuonHitsOption = cms.int32(1),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        PropDirForCosmics = cms.bool(False),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        PtCut = cms.double(1.0),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        RefitDirection = cms.string('insideOut'),
        RefitFlag = cms.bool(True),
        RefitRPCHits = cms.bool(True),
        SkipStation = cms.int32(-1),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        TrackerSkipSection = cms.int32(-1),
        TrackerSkipSystem = cms.int32(-1)
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    nSigma = cms.double(3.0)
)


process.globalMuons = cms.EDProducer("GlobalMuonProducer",
    GLBTrajBuilderParameters = cms.PSet(
        GlbRefitterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            Chi2CutGEM = cms.double(1.0),
            Chi2CutME0 = cms.double(1.0),
            Chi2CutRPC = cms.double(1.0),
            Chi2ProbabilityCut = cms.double(30.0),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            DYTselector = cms.int32(1),
            DYTthrs = cms.vint32(20, 30),
            DYTupdator = cms.bool(False),
            DYTuseAPE = cms.bool(False),
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('GlbMuKFFitter'),
            GEMRecHitLabel = cms.InputTag("gemRecHits"),
            HitThreshold = cms.int32(1),
            ME0RecHitLabel = cms.InputTag("me0Segments"),
            MuonHitsOption = cms.int32(1),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            PropDirForCosmics = cms.bool(False),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            PtCut = cms.double(1.0),
            RefitDirection = cms.string('insideOut'),
            RefitFlag = cms.bool(True),
            RefitRPCHits = cms.bool(True),
            SkipStation = cms.int32(-1),
            TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
            TrackerSkipSection = cms.int32(-1),
            TrackerSkipSystem = cms.int32(-1)
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Chi2Cut_1 = cms.double(50.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaDCut_2 = cms.double(10.0),
            DeltaDCut_3 = cms.double(15.0),
            DeltaRCut_1 = cms.double(0.1),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            Eta_threshold = cms.double(1.2),
            LocChi2Cut = cms.double(20.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Propagator = cms.string('SmartPropagatorRK'),
            Pt_threshold1 = cms.double(0.0),
            Pt_threshold2 = cms.double(999999999.0),
            Quality_1 = cms.double(20.0),
            Quality_2 = cms.double(15.0),
            Quality_3 = cms.double(7.0)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        MuonTrackingRegionBuilder = cms.PSet(
            DeltaEta = cms.double(0.2),
            DeltaPhi = cms.double(0.2),
            DeltaR = cms.double(0.2),
            DeltaZ = cms.double(15.9),
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            Eta_fixed = cms.bool(False),
            Eta_min = cms.double(0.1),
            MeasurementTrackerName = cms.InputTag(""),
            OnDemand = cms.int32(-1),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            Phi_fixed = cms.bool(False),
            Phi_min = cms.double(0.1),
            Pt_fixed = cms.bool(False),
            Pt_min = cms.double(1.5),
            Rescale_Dz = cms.double(3.0),
            Rescale_eta = cms.double(3.0),
            Rescale_phi = cms.double(3.0),
            UseVertex = cms.bool(False),
            Z_fixed = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            input = cms.InputTag(""),
            maxRegions = cms.int32(1),
            precise = cms.bool(True),
            vertexCollection = cms.InputTag("")
        ),
        PCut = cms.double(2.5),
        PtCut = cms.double(1.0),
        RefitRPCHits = cms.bool(True),
        ScaleTECxFactor = cms.double(-1.0),
        ScaleTECyFactor = cms.double(-1.0),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('KFFitterForRefitInsideOut'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            RefitDirection = cms.string('alongMomentum'),
            RefitRPCHits = cms.bool(True),
            Smoother = cms.string('KFSmootherForRefitInsideOut'),
            TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
        ),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
    ),
    MuonCollectionLabel = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(True),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    TrackerCollectionLabel = cms.InputTag("hiGeneralTracks")
)


process.globalSETMuons = cms.EDProducer("GlobalMuonProducer",
    GLBTrajBuilderParameters = cms.PSet(
        GlbRefitterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            Chi2CutGEM = cms.double(1.0),
            Chi2CutME0 = cms.double(1.0),
            Chi2CutRPC = cms.double(1.0),
            Chi2ProbabilityCut = cms.double(30.0),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            DYTselector = cms.int32(1),
            DYTthrs = cms.vint32(20, 30),
            DYTupdator = cms.bool(False),
            DYTuseAPE = cms.bool(False),
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('GlbMuKFFitter'),
            GEMRecHitLabel = cms.InputTag("gemRecHits"),
            HitThreshold = cms.int32(1),
            ME0RecHitLabel = cms.InputTag("me0Segments"),
            MuonHitsOption = cms.int32(1),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            PropDirForCosmics = cms.bool(False),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            PtCut = cms.double(1.0),
            RefitDirection = cms.string('insideOut'),
            RefitFlag = cms.bool(True),
            RefitRPCHits = cms.bool(True),
            SkipStation = cms.int32(-1),
            TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
            TrackerSkipSection = cms.int32(-1),
            TrackerSkipSystem = cms.int32(-1)
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Chi2Cut_1 = cms.double(50.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaDCut_2 = cms.double(10.0),
            DeltaDCut_3 = cms.double(15.0),
            DeltaRCut_1 = cms.double(0.1),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            Eta_threshold = cms.double(1.2),
            LocChi2Cut = cms.double(20.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Propagator = cms.string('SmartPropagatorRK'),
            Pt_threshold1 = cms.double(0.0),
            Pt_threshold2 = cms.double(999999999.0),
            Quality_1 = cms.double(20.0),
            Quality_2 = cms.double(15.0),
            Quality_3 = cms.double(7.0)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        MuonTrackingRegionBuilder = cms.PSet(
            DeltaEta = cms.double(0.2),
            DeltaPhi = cms.double(0.2),
            DeltaR = cms.double(0.2),
            DeltaZ = cms.double(15.9),
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            Eta_fixed = cms.bool(False),
            Eta_min = cms.double(0.1),
            MeasurementTrackerName = cms.InputTag(""),
            OnDemand = cms.int32(-1),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            Phi_fixed = cms.bool(False),
            Phi_min = cms.double(0.1),
            Pt_fixed = cms.bool(False),
            Pt_min = cms.double(1.5),
            Rescale_Dz = cms.double(3.0),
            Rescale_eta = cms.double(3.0),
            Rescale_phi = cms.double(3.0),
            UseVertex = cms.bool(False),
            Z_fixed = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            input = cms.InputTag(""),
            maxRegions = cms.int32(1),
            precise = cms.bool(True),
            vertexCollection = cms.InputTag("")
        ),
        PCut = cms.double(2.5),
        PtCut = cms.double(1.0),
        RefitRPCHits = cms.bool(True),
        ScaleTECxFactor = cms.double(-1.0),
        ScaleTECyFactor = cms.double(-1.0),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('KFFitterForRefitInsideOut'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            RefitDirection = cms.string('alongMomentum'),
            RefitRPCHits = cms.bool(True),
            Smoother = cms.string('KFSmootherForRefitInsideOut'),
            TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
        ),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
    ),
    MuonCollectionLabel = cms.InputTag("standAloneSETMuons","UpdatedAtVtx"),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(True),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    TrackerCollectionLabel = cms.InputTag("generalTracks")
)


process.globalTrackingRegionWithVertices = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("firstStepPrimaryVertices"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(0.2),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1000),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(False),
        originRadius = cms.double(0.2),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        ptMinScaling4BigEvts = cms.bool(False),
        scalingEndNPix = cms.double(1),
        scalingStartNPix = cms.double(0),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.gsfElectronCores = cms.EDProducer("GsfElectronCoreProducer",
    ctfTracks = cms.InputTag("hiGeneralTracks"),
    ecalDrivenGsfElectronCoresTag = cms.InputTag("ecalDrivenGsfElectronCores"),
    gsfPfRecTracks = cms.InputTag("pfTrackElec"),
    gsfTracks = cms.InputTag("electronGsfTracks"),
    pfSuperClusterTrackMap = cms.InputTag("pfElectronTranslator","pf"),
    pfSuperClusters = cms.InputTag("pfElectronTranslator","pf"),
    pflowGsfElectronCoresTag = cms.InputTag("pfElectronTranslator","pf"),
    useGsfPfRecTracks = cms.bool(True)
)


process.gsfElectrons = cms.EDProducer("GsfElectronProducer",
    ElecMVAFilesString = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_10_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_12_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_20_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_22_17Feb2011.weights.xml'
    ),
    PreSelectMVA = cms.double(-0.1),
    SoftElecMVAFilesString = cms.vstring('RecoEgamma/ElectronIdentification/data/TMVA_BDTSoftElectrons_7Feb2014.weights.xml'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    addPflowElectrons = cms.bool(True),
    ambClustersOverlapStrategy = cms.uint32(1),
    ambSortingStrategy = cms.uint32(1),
    applyAmbResolution = cms.bool(True),
    applyPreselection = cms.bool(True),
    barrelRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    beamSpotTag = cms.InputTag("offlineBeamSpot"),
    checkHcalStatus = cms.bool(True),
    combinationRegressionWeightFile = cms.vstring(),
    combinationRegressionWeightLabels = cms.vstring(),
    combinationWeightsFromDB = cms.bool(True),
    crackCorrectionFunction = cms.string('EcalClusterCrackCorrection'),
    ctfTracks = cms.InputTag("hiGeneralTracks"),
    ctfTracksCheck = cms.bool(True),
    ctfTracksTag = cms.InputTag("generalTracks"),
    eMinBarrel = cms.double(0.095),
    eMinEndcaps = cms.double(0.0),
    ecalDrivenEcalEnergyFromClassBasedParameterization = cms.bool(True),
    ecalDrivenEcalErrorFromClassBasedParameterization = cms.bool(True),
    ecalRefinedRegressionWeightFiles = cms.vstring(),
    ecalRefinedRegressionWeightLabels = cms.vstring(),
    ecalWeightsFromDB = cms.bool(True),
    edIsolationValues = cms.PSet(
        edSumChargedHadronPt = cms.InputTag("elEDIsoValueCharged04"),
        edSumNeutralHadronEt = cms.InputTag("elEDIsoValueNeutral04"),
        edSumPhotonEt = cms.InputTag("elEDIsoValueGamma04")
    ),
    endcapRecHitCollectionTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etMinBarrel = cms.double(0.0),
    etMinEndcaps = cms.double(0.11),
    etMinHcal = cms.double(0.0),
    gedElectronMode = cms.bool(False),
    gsfElectronCoresTag = cms.InputTag("gsfElectronCores"),
    gsfPfRecTracksTag = cms.InputTag("pfTrackElec"),
    hOverEConeSize = cms.double(0.15),
    hOverEConeSizePflow = cms.double(0.15),
    hOverEPtMin = cms.double(0.0),
    hOverEPtMinPflow = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    intRadiusBarrelTk = cms.double(0.015),
    intRadiusEcalBarrel = cms.double(3.0),
    intRadiusEcalEndcaps = cms.double(3.0),
    intRadiusEndcapTk = cms.double(0.015),
    intRadiusHcal = cms.double(0.15),
    isBarrel = cms.bool(False),
    isBarrelPflow = cms.bool(False),
    isEndcaps = cms.bool(False),
    isEndcapsPflow = cms.bool(False),
    isFiducial = cms.bool(False),
    isFiducialPflow = cms.bool(False),
    jurassicWidth = cms.double(1.5),
    maxDeltaEtaBarrel = cms.double(0.02),
    maxDeltaEtaBarrelPflow = cms.double(999999999.0),
    maxDeltaEtaEndcaps = cms.double(0.02),
    maxDeltaEtaEndcapsPflow = cms.double(999999999.0),
    maxDeltaPhiBarrel = cms.double(0.15),
    maxDeltaPhiBarrelPflow = cms.double(999999999.0),
    maxDeltaPhiEndcaps = cms.double(0.15),
    maxDeltaPhiEndcapsPflow = cms.double(999999999.0),
    maxDrbTk = cms.double(999999999.0),
    maxEOverPBarrel = cms.double(999999999.0),
    maxEOverPBarrelPflow = cms.double(999999999.0),
    maxEOverPEndcaps = cms.double(999999999.0),
    maxEOverPEndcapsPflow = cms.double(999999999.0),
    maxFbremBarrel = cms.double(999999999.0),
    maxFbremBarrelPflow = cms.double(999999999.0),
    maxFbremEndcaps = cms.double(999999999.0),
    maxFbremEndcapsPflow = cms.double(999999999.0),
    maxHBarrel = cms.double(0.0),
    maxHBarrelPflow = cms.double(0.0),
    maxHEndcaps = cms.double(0.0),
    maxHEndcapsPflow = cms.double(0.0),
    maxHOverEBarrel = cms.double(0.15),
    maxHOverEBarrelPflow = cms.double(999999999.0),
    maxHOverEEndcaps = cms.double(0.15),
    maxHOverEEndcapsPflow = cms.double(999999999.0),
    maxSigmaIetaIetaBarrel = cms.double(999999999.0),
    maxSigmaIetaIetaBarrelPflow = cms.double(999999999.0),
    maxSigmaIetaIetaEndcaps = cms.double(999999999.0),
    maxSigmaIetaIetaEndcapsPflow = cms.double(999999999.0),
    maxTIP = cms.double(999999999.0),
    maxTIPPflow = cms.double(999999999.0),
    maxVtxDistTk = cms.double(0.2),
    minEOverPBarrel = cms.double(0.0),
    minEOverPBarrelPflow = cms.double(0.0),
    minEOverPEndcaps = cms.double(0.0),
    minEOverPEndcapsPflow = cms.double(0.0),
    minMVA = cms.double(-0.1),
    minMVAPflow = cms.double(-0.1),
    minMvaByPassForIsolated = cms.double(-0.1),
    minMvaByPassForIsolatedPflow = cms.double(-0.1),
    minSCEtBarrel = cms.double(4.0),
    minSCEtBarrelPflow = cms.double(0.0),
    minSCEtEndcaps = cms.double(4.0),
    minSCEtEndcapsPflow = cms.double(0.0),
    pfIsolationValues = cms.PSet(
        pfSumChargedHadronPt = cms.InputTag("elPFIsoValueCharged04"),
        pfSumNeutralHadronEt = cms.InputTag("elPFIsoValueNeutral04"),
        pfSumPhotonEt = cms.InputTag("elPFIsoValueGamma04")
    ),
    pfMvaTag = cms.InputTag("pfElectronTranslator","pf"),
    pflowGsfElectronsTag = cms.InputTag("pfElectronTranslator","pf"),
    previousGsfElectronsTag = cms.InputTag("ecalDrivenGsfElectrons"),
    ptMinTk = cms.double(0.7),
    pureTrackerDrivenEcalErrorFromSimpleParameterization = cms.bool(True),
    recHitFlagsToBeExcludedBarrel = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    recHitFlagsToBeExcludedEndcaps = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    recHitSeverityToBeExcludedBarrel = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    recHitSeverityToBeExcludedEndcaps = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    seedFromTEC = cms.bool(True),
    seedsTag = cms.InputTag("ecalDrivenElectronSeeds"),
    stripBarrelTk = cms.double(0.015),
    stripEndcapTk = cms.double(0.015),
    superClusterErrorFunction = cms.string('EcalClusterEnergyUncertaintyObjectSpecific'),
    useCombinationRegression = cms.bool(False),
    useEcalRegression = cms.bool(False),
    useGsfPfRecTracks = cms.bool(True),
    useIsolationValues = cms.bool(True),
    useNumCrystals = cms.bool(True),
    vetoClustered = cms.bool(False),
    vtxTag = cms.InputTag("offlinePrimaryVertices")
)


process.gsfTrackTimeValueMapProducer = cms.EDProducer("TrackTimeValueMapProducer",
    associators = cms.VInputTag(cms.InputTag("quickTrackAssociatorByHits")),
    etaMax = cms.double(3.0),
    etaMaxForPtThreshold = cms.double(1.5),
    etaMin = cms.double(-1.0),
    pMin = cms.double(0.7),
    pileupSummaryInfo = cms.InputTag("addPileupInfo"),
    ptMin = cms.double(0.7),
    resolutionModels = cms.VPSet(
        cms.PSet(
            modelName = cms.string('ConfigurableFlatResolutionModel'),
            resolutionInNs = cms.double(0.03)
        ),
        cms.PSet(
            modelName = cms.string('PerfectResolutionModel')
        )
    ),
    trackSrc = cms.InputTag("electronGsfTracks"),
    trackingParticleSrc = cms.InputTag("mix","MergedTrackTruth"),
    trackingVertexSrc = cms.InputTag("mix","MergedTrackTruth")
)


process.gtDigis = cms.EDProducer("L1GlobalTriggerRawToDigi",
    ActiveBoardsMask = cms.uint32(65535),
    DaqGtFedId = cms.untracked.int32(813),
    DaqGtInputTag = cms.InputTag("rawDataRepacker"),
    UnpackBxInEvent = cms.int32(-1),
    Verbosity = cms.untracked.int32(0)
)


process.hbhecollapse = cms.EDProducer("HBHEPlan1Combiner",
    algorithm = cms.PSet(
        Class = cms.string('SimplePlan1RechitCombiner')
    ),
    hbheInput = cms.InputTag("hbheprereco"),
    ignorePlan1Topology = cms.bool(False),
    usePlan1Mode = cms.bool(True)
)


process.hbhecollapseMB = cms.EDProducer("HBHEPlan1Combiner",
    algorithm = cms.PSet(
        Class = cms.string('SimplePlan1RechitCombiner')
    ),
    hbheInput = cms.InputTag("hbheprerecoMB"),
    ignorePlan1Topology = cms.bool(False),
    usePlan1Mode = cms.bool(True)
)


process.hbheplan1 = cms.EDProducer("HBHEPlan1Combiner",
    algorithm = cms.PSet(
        Class = cms.string('SimplePlan1RechitCombiner')
    ),
    hbheInput = cms.InputTag("hbheprereco"),
    ignorePlan1Topology = cms.bool(False),
    usePlan1Mode = cms.bool(True)
)


process.hbheplan1MB = cms.EDProducer("HBHEPlan1Combiner",
    algorithm = cms.PSet(
        Class = cms.string('SimplePlan1RechitCombiner')
    ),
    hbheInput = cms.InputTag("hbheprerecoMB"),
    ignorePlan1Topology = cms.bool(False),
    usePlan1Mode = cms.bool(True)
)


process.hbheprereco = cms.EDProducer("HBHEPhase1Reconstructor",
    algoConfigClass = cms.string(''),
    algorithm = cms.PSet(
        Class = cms.string('SimpleHBHEPhase1Algo'),
        activeBXs = cms.vint32(-1, 0, 1),
        applyPedConstraint = cms.bool(True),
        applyPulseJitter = cms.bool(False),
        applyTimeConstraint = cms.bool(True),
        applyTimeSlew = cms.bool(True),
        applyTimeSlewM3 = cms.bool(True),
        chiSqSwitch = cms.double(15.0),
        correctForPhaseContainment = cms.bool(True),
        correctionPhaseNS = cms.double(6.0),
        deltaChiSqThresh = cms.double(0.001),
        dynamicPed = cms.bool(True),
        firstSampleShift = cms.int32(0),
        fitTimes = cms.int32(1),
        meanPed = cms.double(0.0),
        meanTime = cms.double(0.0),
        nMaxItersMin = cms.int32(500),
        nMaxItersNNLS = cms.int32(500),
        nnlsThresh = cms.double(1e-11),
        pulseJitter = cms.double(1.0),
        respCorrM3 = cms.double(1.0),
        samplesToAdd = cms.int32(2),
        tdcTimeShift = cms.double(0.0),
        timeMax = cms.double(12.5),
        timeMin = cms.double(-12.5),
        timeSigmaHPD = cms.double(5.0),
        timeSigmaSiPM = cms.double(2.5),
        timeSlewParsType = cms.int32(3),
        ts4Max = cms.vdouble(100.0, 20000.0, 30000),
        ts4Min = cms.double(0.0),
        ts4Thresh = cms.double(0.0),
        ts4chi2 = cms.vdouble(15.0, 15.0),
        useM2 = cms.bool(False),
        useM3 = cms.bool(True),
        useMahi = cms.bool(True)
    ),
    digiLabelQIE11 = cms.InputTag("hcalDigis"),
    digiLabelQIE8 = cms.InputTag("hcalDigis"),
    dropZSmarkedPassed = cms.bool(True),
    flagParametersQIE11 = cms.PSet(

    ),
    flagParametersQIE8 = cms.PSet(
        hitEnergyMinimum = cms.double(1.0),
        hitMultiplicityThreshold = cms.int32(17),
        nominalPedestal = cms.double(3.0),
        pulseShapeParameterSets = cms.VPSet(
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    0.0, 100.0, -50.0, 0.0, -15.0,
                    0.15
                )
            ),
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    100.0, 2000.0, -50.0, 0.0, -5.0,
                    0.05
                )
            ),
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    2000.0, 1000000.0, -50.0, 0.0, 95.0,
                    0.0
                )
            ),
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    -1000000.0, 1000000.0, 45.0, 0.1, 1000000.0,
                    0.0
                )
            )
        )
    ),
    makeRecHits = cms.bool(True),
    processQIE11 = cms.bool(False),
    processQIE8 = cms.bool(True),
    pulseShapeParametersQIE11 = cms.PSet(

    ),
    pulseShapeParametersQIE8 = cms.PSet(
        LeftSlopeCut = cms.vdouble(5, 2.55, 2.55),
        LeftSlopeThreshold = cms.vdouble(250, 500, 100000),
        LinearCut = cms.vdouble(-3, -0.054, -0.054),
        LinearThreshold = cms.vdouble(20, 100, 100000),
        MinimumChargeThreshold = cms.double(20),
        MinimumTS4TS5Threshold = cms.double(100),
        R45MinusOneRange = cms.double(0.2),
        R45PlusOneRange = cms.double(0.2),
        RMS8MaxCut = cms.vdouble(-13.5, -11.5, -11.5),
        RMS8MaxThreshold = cms.vdouble(20, 100, 100000),
        RightSlopeCut = cms.vdouble(5, 4.15, 4.15),
        RightSlopeSmallCut = cms.vdouble(1.08, 1.16, 1.16),
        RightSlopeSmallThreshold = cms.vdouble(150, 200, 100000),
        RightSlopeThreshold = cms.vdouble(250, 400, 100000),
        TS3TS4ChargeThreshold = cms.double(70),
        TS3TS4UpperChargeThreshold = cms.double(20),
        TS4TS5ChargeThreshold = cms.double(70),
        TS4TS5LowerCut = cms.vdouble(
            -1, -0.7, -0.5, -0.4, -0.3,
            0.1
        ),
        TS4TS5LowerThreshold = cms.vdouble(
            100, 120, 160, 200, 300,
            500
        ),
        TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72),
        TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400),
        TS5TS6ChargeThreshold = cms.double(70),
        TS5TS6UpperChargeThreshold = cms.double(20),
        TriangleIgnoreSlow = cms.bool(False),
        TrianglePeakTS = cms.uint32(4),
        UseDualFit = cms.bool(True)
    ),
    recoParamsFromDB = cms.bool(True),
    saveDroppedInfos = cms.bool(False),
    saveEffectivePedestal = cms.bool(False),
    saveInfos = cms.bool(False),
    setLegacyFlagsQIE11 = cms.bool(False),
    setLegacyFlagsQIE8 = cms.bool(True),
    setNegativeFlagsQIE11 = cms.bool(False),
    setNegativeFlagsQIE8 = cms.bool(True),
    setNoiseFlagsQIE11 = cms.bool(False),
    setNoiseFlagsQIE8 = cms.bool(True),
    setPulseShapeFlagsQIE11 = cms.bool(False),
    setPulseShapeFlagsQIE8 = cms.bool(True),
    sipmQNTStoSum = cms.int32(3),
    sipmQTSShift = cms.int32(0),
    tsFromDB = cms.bool(True)
)


process.hbheprerecoMB = cms.EDProducer("HBHEPhase1Reconstructor",
    algoConfigClass = cms.string(''),
    algorithm = cms.PSet(
        Class = cms.string('SimpleHBHEPhase1Algo'),
        activeBXs = cms.vint32(-1, 0, 1),
        applyPedConstraint = cms.bool(True),
        applyPulseJitter = cms.bool(False),
        applyTimeConstraint = cms.bool(True),
        applyTimeSlew = cms.bool(True),
        applyTimeSlewM3 = cms.bool(True),
        chiSqSwitch = cms.double(15.0),
        correctForPhaseContainment = cms.bool(True),
        correctionPhaseNS = cms.double(6.0),
        deltaChiSqThresh = cms.double(0.001),
        dynamicPed = cms.bool(True),
        firstSampleShift = cms.int32(0),
        fitTimes = cms.int32(1),
        meanPed = cms.double(0.0),
        meanTime = cms.double(0.0),
        nMaxItersMin = cms.int32(500),
        nMaxItersNNLS = cms.int32(500),
        nnlsThresh = cms.double(1e-11),
        pulseJitter = cms.double(1.0),
        respCorrM3 = cms.double(1.0),
        samplesToAdd = cms.int32(2),
        tdcTimeShift = cms.double(0.0),
        timeMax = cms.double(12.5),
        timeMin = cms.double(-12.5),
        timeSigmaHPD = cms.double(5.0),
        timeSigmaSiPM = cms.double(2.5),
        timeSlewParsType = cms.int32(3),
        ts4Max = cms.vdouble(100.0, 20000.0, 30000),
        ts4Min = cms.double(0.0),
        ts4Thresh = cms.double(0.0),
        ts4chi2 = cms.vdouble(15.0, 15.0),
        useM2 = cms.bool(False),
        useM3 = cms.bool(False),
        useMahi = cms.bool(False)
    ),
    digiLabelQIE11 = cms.InputTag("hcalDigis"),
    digiLabelQIE8 = cms.InputTag("hcalDigis"),
    dropZSmarkedPassed = cms.bool(False),
    flagParametersQIE11 = cms.PSet(

    ),
    flagParametersQIE8 = cms.PSet(
        hitEnergyMinimum = cms.double(1.0),
        hitMultiplicityThreshold = cms.int32(17),
        nominalPedestal = cms.double(3.0),
        pulseShapeParameterSets = cms.VPSet(
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    0.0, 100.0, -50.0, 0.0, -15.0,
                    0.15
                )
            ),
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    100.0, 2000.0, -50.0, 0.0, -5.0,
                    0.05
                )
            ),
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    2000.0, 1000000.0, -50.0, 0.0, 95.0,
                    0.0
                )
            ),
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    -1000000.0, 1000000.0, 45.0, 0.1, 1000000.0,
                    0.0
                )
            )
        )
    ),
    makeRecHits = cms.bool(True),
    processQIE11 = cms.bool(False),
    processQIE8 = cms.bool(True),
    pulseShapeParametersQIE11 = cms.PSet(

    ),
    pulseShapeParametersQIE8 = cms.PSet(
        LeftSlopeCut = cms.vdouble(5, 2.55, 2.55),
        LeftSlopeThreshold = cms.vdouble(250, 500, 100000),
        LinearCut = cms.vdouble(-3, -0.054, -0.054),
        LinearThreshold = cms.vdouble(20, 100, 100000),
        MinimumChargeThreshold = cms.double(20),
        MinimumTS4TS5Threshold = cms.double(100),
        R45MinusOneRange = cms.double(0.2),
        R45PlusOneRange = cms.double(0.2),
        RMS8MaxCut = cms.vdouble(-13.5, -11.5, -11.5),
        RMS8MaxThreshold = cms.vdouble(20, 100, 100000),
        RightSlopeCut = cms.vdouble(5, 4.15, 4.15),
        RightSlopeSmallCut = cms.vdouble(1.08, 1.16, 1.16),
        RightSlopeSmallThreshold = cms.vdouble(150, 200, 100000),
        RightSlopeThreshold = cms.vdouble(250, 400, 100000),
        TS3TS4ChargeThreshold = cms.double(70),
        TS3TS4UpperChargeThreshold = cms.double(20),
        TS4TS5ChargeThreshold = cms.double(70),
        TS4TS5LowerCut = cms.vdouble(
            -1, -0.7, -0.5, -0.4, -0.3,
            0.1
        ),
        TS4TS5LowerThreshold = cms.vdouble(
            100, 120, 160, 200, 300,
            500
        ),
        TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72),
        TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400),
        TS5TS6ChargeThreshold = cms.double(70),
        TS5TS6UpperChargeThreshold = cms.double(20),
        TriangleIgnoreSlow = cms.bool(False),
        TrianglePeakTS = cms.uint32(10000),
        UseDualFit = cms.bool(True)
    ),
    recoParamsFromDB = cms.bool(True),
    saveDroppedInfos = cms.bool(False),
    saveEffectivePedestal = cms.bool(False),
    saveInfos = cms.bool(False),
    setLegacyFlagsQIE11 = cms.bool(False),
    setLegacyFlagsQIE8 = cms.bool(False),
    setNegativeFlagsQIE11 = cms.bool(False),
    setNegativeFlagsQIE8 = cms.bool(False),
    setNoiseFlagsQIE11 = cms.bool(False),
    setNoiseFlagsQIE8 = cms.bool(True),
    setPulseShapeFlagsQIE11 = cms.bool(False),
    setPulseShapeFlagsQIE8 = cms.bool(False),
    sipmQNTStoSum = cms.int32(3),
    sipmQTSShift = cms.int32(0),
    tsFromDB = cms.bool(False)
)


process.hbhereco = cms.EDProducer("HBHEIsolatedNoiseReflagger",
    EBThreshold = cms.double(0.07),
    EEThreshold = cms.double(0.3),
    EcalAcceptSeverityLevel = cms.uint32(3),
    HBThreshold = cms.double(0.7),
    HEDThreshold = cms.double(0.8),
    HESThreshold = cms.double(0.8),
    HcalAcceptSeverityLevel = cms.uint32(9),
    LooseDiHitEne = cms.double(50.0),
    LooseEcalIsol = cms.double(0.08),
    LooseHPDEne1 = cms.double(20.0),
    LooseHPDEne2 = cms.double(80.0),
    LooseHPDHits1 = cms.int32(6),
    LooseHPDHits2 = cms.int32(3),
    LooseHcalIsol = cms.double(0.08),
    LooseMonoHitEne = cms.double(35.0),
    LooseRBXEne1 = cms.double(30.0),
    LooseRBXEne2 = cms.double(160.0),
    LooseRBXHits1 = cms.int32(14),
    LooseRBXHits2 = cms.int32(6),
    LooseTrackIsol = cms.double(0.1),
    MinValidTrackNHits = cms.int32(5),
    MinValidTrackPt = cms.double(0.3),
    MinValidTrackPtBarrel = cms.double(0.9),
    RBXEneThreshold = cms.double(500.0),
    TightDiHitEne = cms.double(15.0),
    TightEcalIsol = cms.double(0.04),
    TightHPDEne1 = cms.double(10.0),
    TightHPDEne2 = cms.double(30.0),
    TightHPDHits1 = cms.int32(6),
    TightHPDHits2 = cms.int32(3),
    TightHcalIsol = cms.double(0.04),
    TightMonoHitEne = cms.double(15.0),
    TightRBXEne1 = cms.double(25.0),
    TightRBXEne2 = cms.double(60.0),
    TightRBXHits1 = cms.int32(12),
    TightRBXHits2 = cms.int32(7),
    TightTrackIsol = cms.double(0.05),
    UseAllCombinedRechits = cms.bool(True),
    UseEcalRecoveredHits = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(True),
    debug = cms.untracked.bool(False),
    ebInput = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    eeInput = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbheInput = cms.InputTag("hbheprereco"),
    trackExtrapolationInput = cms.InputTag("trackExtrapolator")
)


process.hbherecoMB = cms.EDProducer("HBHEPhase1Reconstructor",
    algoConfigClass = cms.string(''),
    algorithm = cms.PSet(
        Class = cms.string('SimpleHBHEPhase1Algo'),
        activeBXs = cms.vint32(-1, 0, 1),
        applyPedConstraint = cms.bool(True),
        applyPulseJitter = cms.bool(False),
        applyTimeConstraint = cms.bool(True),
        applyTimeSlew = cms.bool(True),
        applyTimeSlewM3 = cms.bool(True),
        chiSqSwitch = cms.double(15.0),
        correctForPhaseContainment = cms.bool(True),
        correctionPhaseNS = cms.double(6.0),
        deltaChiSqThresh = cms.double(0.001),
        dynamicPed = cms.bool(True),
        firstSampleShift = cms.int32(0),
        fitTimes = cms.int32(1),
        meanPed = cms.double(0.0),
        meanTime = cms.double(0.0),
        nMaxItersMin = cms.int32(500),
        nMaxItersNNLS = cms.int32(500),
        nnlsThresh = cms.double(1e-11),
        pulseJitter = cms.double(1.0),
        respCorrM3 = cms.double(1.0),
        samplesToAdd = cms.int32(2),
        tdcTimeShift = cms.double(0.0),
        timeMax = cms.double(12.5),
        timeMin = cms.double(-12.5),
        timeSigmaHPD = cms.double(5.0),
        timeSigmaSiPM = cms.double(2.5),
        timeSlewParsType = cms.int32(3),
        ts4Max = cms.vdouble(100.0, 20000.0, 30000),
        ts4Min = cms.double(0.0),
        ts4Thresh = cms.double(0.0),
        ts4chi2 = cms.vdouble(15.0, 15.0),
        useM2 = cms.bool(False),
        useM3 = cms.bool(False),
        useMahi = cms.bool(False)
    ),
    digiLabelQIE11 = cms.InputTag("hcalDigis"),
    digiLabelQIE8 = cms.InputTag("hcalDigis"),
    dropZSmarkedPassed = cms.bool(False),
    flagParametersQIE11 = cms.PSet(

    ),
    flagParametersQIE8 = cms.PSet(
        hitEnergyMinimum = cms.double(1.0),
        hitMultiplicityThreshold = cms.int32(17),
        nominalPedestal = cms.double(3.0),
        pulseShapeParameterSets = cms.VPSet(
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    0.0, 100.0, -50.0, 0.0, -15.0,
                    0.15
                )
            ),
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    100.0, 2000.0, -50.0, 0.0, -5.0,
                    0.05
                )
            ),
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    2000.0, 1000000.0, -50.0, 0.0, 95.0,
                    0.0
                )
            ),
            cms.PSet(
                pulseShapeParameters = cms.vdouble(
                    -1000000.0, 1000000.0, 45.0, 0.1, 1000000.0,
                    0.0
                )
            )
        )
    ),
    makeRecHits = cms.bool(True),
    processQIE11 = cms.bool(False),
    processQIE8 = cms.bool(True),
    pulseShapeParametersQIE11 = cms.PSet(

    ),
    pulseShapeParametersQIE8 = cms.PSet(
        LeftSlopeCut = cms.vdouble(5, 2.55, 2.55),
        LeftSlopeThreshold = cms.vdouble(250, 500, 100000),
        LinearCut = cms.vdouble(-3, -0.054, -0.054),
        LinearThreshold = cms.vdouble(20, 100, 100000),
        MinimumChargeThreshold = cms.double(20),
        MinimumTS4TS5Threshold = cms.double(100),
        R45MinusOneRange = cms.double(0.2),
        R45PlusOneRange = cms.double(0.2),
        RMS8MaxCut = cms.vdouble(-13.5, -11.5, -11.5),
        RMS8MaxThreshold = cms.vdouble(20, 100, 100000),
        RightSlopeCut = cms.vdouble(5, 4.15, 4.15),
        RightSlopeSmallCut = cms.vdouble(1.08, 1.16, 1.16),
        RightSlopeSmallThreshold = cms.vdouble(150, 200, 100000),
        RightSlopeThreshold = cms.vdouble(250, 400, 100000),
        TS3TS4ChargeThreshold = cms.double(70),
        TS3TS4UpperChargeThreshold = cms.double(20),
        TS4TS5ChargeThreshold = cms.double(70),
        TS4TS5LowerCut = cms.vdouble(
            -1, -0.7, -0.5, -0.4, -0.3,
            0.1
        ),
        TS4TS5LowerThreshold = cms.vdouble(
            100, 120, 160, 200, 300,
            500
        ),
        TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72),
        TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400),
        TS5TS6ChargeThreshold = cms.double(70),
        TS5TS6UpperChargeThreshold = cms.double(20),
        TriangleIgnoreSlow = cms.bool(False),
        TrianglePeakTS = cms.uint32(10000),
        UseDualFit = cms.bool(True)
    ),
    recoParamsFromDB = cms.bool(True),
    saveDroppedInfos = cms.bool(False),
    saveEffectivePedestal = cms.bool(False),
    saveInfos = cms.bool(False),
    setLegacyFlagsQIE11 = cms.bool(False),
    setLegacyFlagsQIE8 = cms.bool(False),
    setNegativeFlagsQIE11 = cms.bool(False),
    setNegativeFlagsQIE8 = cms.bool(False),
    setNoiseFlagsQIE11 = cms.bool(False),
    setNoiseFlagsQIE8 = cms.bool(True),
    setPulseShapeFlagsQIE11 = cms.bool(False),
    setPulseShapeFlagsQIE8 = cms.bool(False),
    sipmQNTStoSum = cms.int32(3),
    sipmQTSShift = cms.int32(0),
    tsFromDB = cms.bool(False)
)


process.hcalDigis = cms.EDProducer("HcalRawToDigi",
    ComplainEmptyData = cms.untracked.bool(False),
    ElectronicsMap = cms.string(''),
    ExpectedOrbitMessageTime = cms.untracked.int32(-1),
    FEDs = cms.untracked.vint32(),
    FilterDataQuality = cms.bool(True),
    HcalFirstFED = cms.untracked.int32(700),
    InputLabel = cms.InputTag("rawDataRepacker"),
    UnpackCalib = cms.untracked.bool(True),
    UnpackTTP = cms.untracked.bool(True),
    UnpackUMNio = cms.untracked.bool(True),
    UnpackZDC = cms.untracked.bool(True),
    UnpackerMode = cms.untracked.int32(0),
    firstSample = cms.int32(0),
    lastSample = cms.int32(9),
    saveQIE10DataNSamples = cms.untracked.vint32(),
    saveQIE10DataTags = cms.untracked.vstring(),
    saveQIE11DataNSamples = cms.untracked.vint32(),
    saveQIE11DataTags = cms.untracked.vstring(),
    silent = cms.untracked.bool(True)
)


process.hcalnoise = cms.EDProducer("HcalNoiseInfoProducer",
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalRecHitFlagsToBeExcluded = cms.vint32(
        11, 12, 13, 14, 15,
        27
    ),
    TS4TS5EnergyThreshold = cms.double(50),
    TS4TS5LowerCut = cms.vdouble(
        -1, -0.7, -0.4, -0.2, -0.08,
        0, 0.1
    ),
    TS4TS5LowerThreshold = cms.vdouble(
        100, 120, 150, 200, 300,
        400, 500
    ),
    TS4TS5UpperCut = cms.vdouble(1, 0.8, 0.75, 0.72, 0.72),
    TS4TS5UpperThreshold = cms.vdouble(70, 90, 100, 400, 4000),
    calibdigiHBHEthreshold = cms.double(15),
    calibdigiHBHEtimeslices = cms.vint32(3, 4, 5, 6),
    calibdigiHFthreshold = cms.double(-999),
    calibdigiHFtimeslices = cms.vint32(
        0, 1, 2, 3, 4,
        5, 6, 7, 8, 9
    ),
    caloTowerCollName = cms.string('towerMaker'),
    digiCollName = cms.string('hcalDigis'),
    fillCaloTowers = cms.bool(True),
    fillDigis = cms.bool(True),
    fillLaserMonitor = cms.bool(True),
    fillRecHits = cms.bool(True),
    fillTracks = cms.bool(True),
    hlMaxHPDEMF = cms.double(-9999),
    hlMaxRBXEMF = cms.double(0.01),
    jetCollName = cms.string('ak4PFJets'),
    lMaxHighEHitTime = cms.double(9999),
    lMaxLowEHitTime = cms.double(9999),
    lMaxRatio = cms.double(999),
    lMinHPDHits = cms.int32(17),
    lMinHPDNoOtherHits = cms.int32(10),
    lMinHighEHitTime = cms.double(-9999),
    lMinLowEHitTime = cms.double(-9999),
    lMinRBXHits = cms.int32(999),
    lMinRatio = cms.double(-999),
    lMinZeros = cms.int32(10),
    lRBXRecHitR45Cuts = cms.vdouble(
        0, 1, 0, -0.5, 0,
        0, 1, -0.5
    ),
    laserMonCBoxList = cms.vint32(
        5, 5, 5, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 5, 5,
        5, 5, 5, 5
    ),
    laserMonIEtaList = cms.vint32(
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0, 0,
        0, 0, 0, 0
    ),
    laserMonIPhiList = cms.vint32(
        23, 22, 21, 20, 19,
        18, 17, 16, 15, 14,
        13, 12, 11, 10, 9,
        8, 7, 6, 5, 4,
        3, 2, 1, 0
    ),
    laserMonSamples = cms.uint32(4),
    laserMonTSEnd = cms.int32(-1),
    laserMonTSStart = cms.int32(0),
    lasermonDigis = cms.InputTag("hcalDigis","LASERMON"),
    maxCaloTowerIEta = cms.int32(20),
    maxNHF = cms.double(0.9),
    maxProblemRBXs = cms.int32(72),
    maxTrackEta = cms.double(2),
    maxjetindex = cms.int32(0),
    minEEMF = cms.double(50),
    minERatio = cms.double(50),
    minEZeros = cms.double(10),
    minHighHitE = cms.double(25),
    minLowHitE = cms.double(10),
    minR45HitE = cms.double(5),
    minRecHitE = cms.double(1.5),
    minTrackPt = cms.double(1),
    pMaxHPDEMF = cms.double(-0.02),
    pMaxHighEHitTime = cms.double(5),
    pMaxLowEHitTime = cms.double(6),
    pMaxRBXEMF = cms.double(0.02),
    pMaxRatio = cms.double(0.85),
    pMinE = cms.double(40),
    pMinEEMF = cms.double(10),
    pMinERatio = cms.double(25),
    pMinEZeros = cms.double(5),
    pMinHPDHits = cms.int32(10),
    pMinHPDNoOtherHits = cms.int32(7),
    pMinHighEHitTime = cms.double(-4),
    pMinLowEHitTime = cms.double(-6),
    pMinRBXHits = cms.int32(20),
    pMinRBXRechitR45Count = cms.int32(1),
    pMinRBXRechitR45EnergyFraction = cms.double(0.1),
    pMinRBXRechitR45Fraction = cms.double(0.1),
    pMinRatio = cms.double(0.75),
    pMinZeros = cms.int32(4),
    recHitCollName = cms.string('hbhereco'),
    tMaxHighEHitTime = cms.double(6),
    tMaxLowEHitTime = cms.double(9999),
    tMaxRatio = cms.double(999),
    tMinHPDHits = cms.int32(16),
    tMinHPDNoOtherHits = cms.int32(9),
    tMinHighEHitTime = cms.double(-7),
    tMinLowEHitTime = cms.double(-9999),
    tMinRBXHits = cms.int32(50),
    tMinRatio = cms.double(-999),
    tMinZeros = cms.int32(8),
    tRBXRecHitR45Cuts = cms.vdouble(
        0, 1, 0, -0.2, 0,
        0, 1, -0.2
    ),
    trackCollName = cms.string('hiGeneralTracks')
)


process.hfEMClusters = cms.EDProducer("HFEMClusterProducer",
    correctionType = cms.int32(1),
    forcePulseFlagMC = cms.bool(False),
    hits = cms.InputTag("hfreco"),
    maximumRenergy = cms.double(50),
    maximumSL = cms.double(98),
    minTowerEnergy = cms.double(4.0),
    seedThresholdET = cms.double(5.0),
    usePMTFlag = cms.bool(True),
    usePulseFlag = cms.bool(True)
)


process.hfRecoEcalCandidate = cms.EDProducer("HFRecoEcalCandidateProducer",
    Correct = cms.bool(True),
    HFDBvector = cms.vdouble(
        1.0, 1.0, 0.899, 0.994, 0.958,
        0.942, 0.943, 0.96, 0.928, 0.922,
        0.896, 0.812, 1.0, 1.0, 0.82,
        0.917, 0.952, 0.929, 0.975, 0.984,
        1.012, 0.971, 1.016, 0.938, 1.0,
        1.0, 0.0, 0.0, -0.0036, -0.0087,
        -0.0049, -0.0161, -0.0072, -0.0033, -0.0066,
        -0.0062, -0.0045, -0.009, 0.0, 0.0,
        -0.0056, -0.0024, -0.0064, -0.0063, -0.0078,
        -0.0079, -0.0075, -0.0074, 0.0009, -0.018,
        0.0, 0.0, 1.0, 1.0, 1.0565,
        1.0432, 1.0714, 1.114, 1.0908, 1.0576,
        1.0821, 1.0807, 1.0885, 1.1783, 1.0,
        1.0, 1.157, 1.0631, 1.0401, 1.0803,
        1.0506, 1.0491, 1.0235, 1.0643, 0.991,
        1.0489, 1.0, 1.0
    ),
    HFDBversion = cms.int32(1),
    VertexCollection = cms.InputTag("hiSelectedVertex"),
    e1e9Cut = cms.vdouble(-1, 99),
    e9e25Cut = cms.double(0.94),
    eCOREe9Cut = cms.vdouble(-1, 99),
    eSeLCut = cms.vdouble(-1, 99),
    hfclusters = cms.InputTag("hfEMClusters"),
    intercept2DCut = cms.double(0.815),
    intercept2DSlope = cms.double(0.475)
)


process.hfprereco = cms.EDProducer("HFPreReconstructor",
    digiLabel = cms.InputTag("hcalDigis"),
    dropZSmarkedPassed = cms.bool(False),
    forceSOI = cms.int32(-1),
    soiShift = cms.int32(0),
    sumAllTimeSlices = cms.bool(False),
    tsFromDB = cms.bool(False)
)


process.hfprerecoMB = cms.EDProducer("HFPreReconstructor",
    digiLabel = cms.InputTag("hcalDigis"),
    dropZSmarkedPassed = cms.bool(False),
    forceSOI = cms.int32(-1),
    soiShift = cms.int32(0),
    sumAllTimeSlices = cms.bool(False),
    tsFromDB = cms.bool(False)
)


process.hfreco = cms.EDProducer("HcalHitReconstructor",
    HFInWindowStat = cms.PSet(
        hflongEthresh = cms.double(40.0),
        hflongMaxWindowTime = cms.vdouble(10),
        hflongMinWindowTime = cms.vdouble(-10),
        hfshortEthresh = cms.double(40.0),
        hfshortMaxWindowTime = cms.vdouble(10),
        hfshortMinWindowTime = cms.vdouble(-12)
    ),
    PETstat = cms.PSet(
        HcalAcceptSeverityLevel = cms.int32(9),
        longETParams = cms.vdouble(
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0
        ),
        longEnergyParams = cms.vdouble(
            43.5, 45.7, 48.32, 51.36, 54.82,
            58.7, 63.0, 67.72, 72.86, 78.42,
            84.4, 90.8, 97.62
        ),
        long_R = cms.vdouble(0.98),
        long_R_29 = cms.vdouble(0.8),
        shortETParams = cms.vdouble(
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0
        ),
        shortEnergyParams = cms.vdouble(
            35.1773, 35.37, 35.7933, 36.4472, 37.3317,
            38.4468, 39.7925, 41.3688, 43.1757, 45.2132,
            47.4813, 49.98, 52.7093
        ),
        short_R = cms.vdouble(0.8),
        short_R_29 = cms.vdouble(0.8)
    ),
    S8S1stat = cms.PSet(
        HcalAcceptSeverityLevel = cms.int32(9),
        isS8S1 = cms.bool(True),
        longETParams = cms.vdouble(
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0
        ),
        longEnergyParams = cms.vdouble(
            40, 100, 100, 100, 100,
            100, 100, 100, 100, 100,
            100, 100, 100
        ),
        long_optimumSlope = cms.vdouble(
            0.3, 0.1, 0.1, 0.1, 0.1,
            0.1, 0.1, 0.1, 0.1, 0.1,
            0.1, 0.1, 0.1
        ),
        shortETParams = cms.vdouble(
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0
        ),
        shortEnergyParams = cms.vdouble(
            40, 100, 100, 100, 100,
            100, 100, 100, 100, 100,
            100, 100, 100
        ),
        short_optimumSlope = cms.vdouble(
            0.3, 0.1, 0.1, 0.1, 0.1,
            0.1, 0.1, 0.1, 0.1, 0.1,
            0.1, 0.1, 0.1
        )
    ),
    S9S1stat = cms.PSet(
        HcalAcceptSeverityLevel = cms.int32(9),
        isS8S1 = cms.bool(False),
        longETParams = cms.vdouble(
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0
        ),
        longEnergyParams = cms.vdouble(
            43.5, 45.7, 48.32, 51.36, 54.82,
            58.7, 63.0, 67.72, 72.86, 78.42,
            84.4, 90.8, 97.62
        ),
        long_optimumSlope = cms.vdouble(
            -99999, 0.0164905, 0.0238698, 0.0321383, 0.041296,
            0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422,
            0.135313, 0.136289, 0.0589927
        ),
        shortETParams = cms.vdouble(
            0, 0, 0, 0, 0,
            0, 0, 0, 0, 0,
            0, 0, 0
        ),
        shortEnergyParams = cms.vdouble(
            35.1773, 35.37, 35.7933, 36.4472, 37.3317,
            38.4468, 39.7925, 41.3688, 43.1757, 45.2132,
            47.4813, 49.98, 52.7093
        ),
        short_optimumSlope = cms.vdouble(
            -99999, 0.0164905, 0.0238698, 0.0321383, 0.041296,
            0.0513428, 0.0622789, 0.0741041, 0.0868186, 0.100422,
            0.135313, 0.136289, 0.0589927
        )
    ),
    Subdetector = cms.string('HF'),
    correctForPhaseContainment = cms.bool(False),
    correctForTimeslew = cms.bool(False),
    correctTiming = cms.bool(True),
    correctionPhaseNS = cms.double(13.0),
    dataOOTCorrectionCategory = cms.string('Data'),
    dataOOTCorrectionName = cms.string(''),
    digiLabel = cms.InputTag("hcalDigis"),
    digiTimeFromDB = cms.bool(True),
    digistat = cms.PSet(
        HFdigiflagCoef = cms.vdouble(0.93, -0.38275, -0.012667),
        HFdigiflagExpectedPeak = cms.int32(2),
        HFdigiflagFirstSample = cms.int32(1),
        HFdigiflagMinEthreshold = cms.double(40),
        HFdigiflagSamplesToAdd = cms.int32(3)
    ),
    dropZSmarkedPassed = cms.bool(True),
    firstAuxTS = cms.int32(1),
    firstSample = cms.int32(2),
    hfTimingTrustParameters = cms.PSet(
        hfTimingTrustLevel1 = cms.int32(1),
        hfTimingTrustLevel2 = cms.int32(4)
    ),
    mcOOTCorrectionCategory = cms.string('MC'),
    mcOOTCorrectionName = cms.string(''),
    recoParamsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(1),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    setHSCPFlags = cms.bool(False),
    setNegativeFlags = cms.bool(False),
    setNoiseFlags = cms.bool(True),
    setPulseShapeFlags = cms.bool(False),
    setSaturationFlags = cms.bool(True),
    setTimingTrustFlags = cms.bool(True),
    tsFromDB = cms.bool(True),
    useLeakCorrection = cms.bool(False)
)


process.hfrecoMB = cms.EDProducer("HcalSimpleReconstructor",
    Subdetector = cms.string('HF'),
    correctForPhaseContainment = cms.bool(False),
    correctForTimeslew = cms.bool(False),
    correctionPhaseNS = cms.double(0),
    digiLabel = cms.InputTag("hcalDigis"),
    dropZSmarkedPassed = cms.bool(False),
    firstSample = cms.int32(4),
    samplesToAdd = cms.int32(2),
    tsFromDB = cms.bool(True)
)


process.hgcalDigis = cms.EDProducer("HGCalRawToDigiFake",
    bhDigis = cms.InputTag("simHGCalUnsuppressedDigis","HEback"),
    eeDigis = cms.InputTag("simHGCalUnsuppressedDigis","EE"),
    fhDigis = cms.InputTag("simHGCalUnsuppressedDigis","HEfront")
)


process.hgcalTrackCollection = cms.EDProducer("HGCalTrackCollectionProducer",
    DPtOverPtCuts_byTrackAlgo = cms.vdouble(
        10.0, 10.0, 10.0, 10.0, 10.0,
        5.0
    ),
    NHitCuts_byTrackAlgo = cms.vuint32(
        3, 3, 3, 3, 3,
        32700
    ),
    debug = cms.bool(False),
    hgcalGeometryNames = cms.PSet(
        HGC_ECAL = cms.string('HGCalEESensitive')
    ),
    src = cms.InputTag("pfTrack"),
    useIterativeTracking = cms.bool(True)
)


process.hiAkPu4CaloJetsCorrectedPreSplitting = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ak4CaloL2L3'),
    src = cms.InputTag("hiAkPu4CaloJetsForTrkPreSplitting")
)


process.hiAkPu4CaloJetsForTrkPreSplitting = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('AntiKt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(8),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("hiCaloTowerForTrkPreSplitting"),
    srcPVs = cms.InputTag("hiSelectedVertexPreSplitting"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.hiCaloTowerForTrk = cms.EDProducer("CaloTowersCreator",
    AllowMissingInputs = cms.bool(False),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBSumThreshold = cms.double(0.2),
    EBThreshold = cms.double(0.07),
    EBWeight = cms.double(1.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EESumThreshold = cms.double(0.45),
    EEThreshold = cms.double(0.3),
    EEWeight = cms.double(1.0),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring(
        'kTime',
        'kWeird',
        'kBad'
    ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    EcutTower = cms.double(-1000.0),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HBThreshold = cms.double(0.7),
    HBThreshold1 = cms.double(0.7),
    HBThreshold2 = cms.double(0.7),
    HBWeight = cms.double(1.0),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDThreshold = cms.double(0.8),
    HEDThreshold1 = cms.double(0.8),
    HEDWeight = cms.double(1.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HESThreshold = cms.double(0.8),
    HESThreshold1 = cms.double(0.8),
    HESWeight = cms.double(1.0),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Threshold = cms.double(0.5),
    HF1Weight = cms.double(1.0),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF2Threshold = cms.double(0.85),
    HF2Weight = cms.double(1.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HOThreshold0 = cms.double(1.1),
    HOThresholdMinus1 = cms.double(3.5),
    HOThresholdMinus2 = cms.double(3.5),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HOWeight = cms.double(1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HcalPhase = cms.int32(0),
    HcalThreshold = cms.double(-1000.0),
    MomConstrMethod = cms.int32(1),
    MomEBDepth = cms.double(0.3),
    MomEEDepth = cms.double(0.0),
    MomHBDepth = cms.double(0.2),
    MomHEDepth = cms.double(0.4),
    UseEcalRecoveredHits = cms.bool(False),
    UseEtEBTreshold = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    UseHO = cms.bool(True),
    UseHcalRecoveredHits = cms.bool(True),
    UseRejectedHitsOnly = cms.bool(False),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    UseSymEBTreshold = cms.bool(True),
    UseSymEETreshold = cms.bool(True),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    hbheInput = cms.InputTag("hbheprereco"),
    hfInput = cms.InputTag("hfreco"),
    hoInput = cms.InputTag("horeco"),
    missingHcalRescaleFactorForEcal = cms.double(0)
)


process.hiCaloTowerForTrkPreSplitting = cms.EDProducer("CaloTowersCreator",
    AllowMissingInputs = cms.bool(False),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBSumThreshold = cms.double(0.2),
    EBThreshold = cms.double(0.07),
    EBWeight = cms.double(1.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EESumThreshold = cms.double(0.45),
    EEThreshold = cms.double(0.3),
    EEWeight = cms.double(1.0),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring(
        'kTime',
        'kWeird',
        'kBad'
    ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    EcutTower = cms.double(-1000.0),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HBThreshold = cms.double(0.7),
    HBThreshold1 = cms.double(0.7),
    HBThreshold2 = cms.double(0.7),
    HBWeight = cms.double(1.0),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDThreshold = cms.double(0.8),
    HEDThreshold1 = cms.double(0.8),
    HEDWeight = cms.double(1.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HESThreshold = cms.double(0.8),
    HESThreshold1 = cms.double(0.8),
    HESWeight = cms.double(1.0),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Threshold = cms.double(0.5),
    HF1Weight = cms.double(1.0),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF2Threshold = cms.double(0.85),
    HF2Weight = cms.double(1.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HOThreshold0 = cms.double(1.1),
    HOThresholdMinus1 = cms.double(3.5),
    HOThresholdMinus2 = cms.double(3.5),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HOWeight = cms.double(1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HcalPhase = cms.int32(0),
    HcalThreshold = cms.double(-1000.0),
    MomConstrMethod = cms.int32(1),
    MomEBDepth = cms.double(0.3),
    MomEEDepth = cms.double(0.0),
    MomHBDepth = cms.double(0.2),
    MomHEDepth = cms.double(0.4),
    UseEcalRecoveredHits = cms.bool(False),
    UseEtEBTreshold = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    UseHO = cms.bool(True),
    UseHcalRecoveredHits = cms.bool(True),
    UseRejectedHitsOnly = cms.bool(False),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    UseSymEBTreshold = cms.bool(True),
    UseSymEETreshold = cms.bool(True),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    hbheInput = cms.InputTag("hbheprereco"),
    hfInput = cms.InputTag("hfreco"),
    hoInput = cms.InputTag("horeco"),
    missingHcalRescaleFactorForEcal = cms.double(0)
)


process.hiCentrality = cms.EDProducer("CentralityProducer",
    TrackQuality = cms.string('highPurity'),
    UseQuality = cms.bool(True),
    doPixelCut = cms.bool(True),
    hfEtaCut = cms.double(4),
    lowGainZDC = cms.bool(True),
    midRapidityRange = cms.double(1),
    produceETmidRapidity = cms.bool(True),
    produceEcalhits = cms.bool(True),
    produceHFhits = cms.bool(True),
    produceHFtowers = cms.bool(True),
    producePixelTracks = cms.bool(True),
    producePixelhits = cms.bool(True),
    produceTracks = cms.bool(True),
    produceZDChits = cms.bool(True),
    reUseCentrality = cms.bool(False),
    srcEBhits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    srcEEhits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    srcHFhits = cms.InputTag("hfreco"),
    srcPixelTracks = cms.InputTag("hiPixel3PrimTracks"),
    srcPixelhits = cms.InputTag("siPixelRecHits"),
    srcReUse = cms.InputTag("hiCentrality"),
    srcTowers = cms.InputTag("towerMaker"),
    srcTracks = cms.InputTag("hiGeneralTracks"),
    srcVertex = cms.InputTag("hiSelectedVertex"),
    srcZDChits = cms.InputTag("zdcreco"),
    trackEtaCut = cms.double(2),
    trackPtCut = cms.double(1)
)


process.hiClusterCompatibility = cms.EDProducer("ClusterCompatibilityProducer",
    inputTag = cms.InputTag("siPixelRecHits"),
    maxZ = cms.double(40.05),
    minZ = cms.double(-40.0),
    zStep = cms.double(0.2)
)


process.hiConformalPixelFilter = cms.EDProducer("HIPixelTrackFilterProducer",
    VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
    chi2 = cms.double(80.0),
    clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
    lipMax = cms.double(999.0),
    nSigmaLipMaxTolerance = cms.double(14.0),
    nSigmaTipMaxTolerance = cms.double(999.0),
    ptMax = cms.double(999999),
    ptMin = cms.double(0.25),
    tipMax = cms.double(999.0),
    useClusterShape = cms.bool(False)
)


process.hiConformalPixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('trackCleaner'),
    Filter = cms.InputTag("hiConformalPixelFilter"),
    Fitter = cms.InputTag("pixelFitterByConformalMappingAndLine"),
    SeedingHitSets = cms.InputTag("hiConformalPixelTracksHitTriplets"),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiConformalPixelTracksHitTriplets__reRECO',
        'IntermediateHitDoublets_hiConformalPixelTracksHitDoublets__reRECO'
    )
)


process.hiConformalPixelTracksHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("PixelLayerTriplets"),
    trackingRegions = cms.InputTag("hiTrackingRegionWithVertex"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiConformalPixelTracksHitTriplets = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hiConformalPixelTracksHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(5000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiConformalPixelTracksHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiConformalPixelTracksPhase1Filter = cms.EDProducer("HIPixelTrackFilterProducer",
    VertexCollection = cms.InputTag("offlinePrimaryVertices"),
    chi2 = cms.double(999.9),
    clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
    lipMax = cms.double(999.0),
    nSigmaLipMaxTolerance = cms.double(999.9),
    nSigmaTipMaxTolerance = cms.double(999.0),
    ptMax = cms.double(999999),
    ptMin = cms.double(0.3),
    tipMax = cms.double(999.0),
    useClusterShape = cms.bool(False)
)


process.hiConformalPixelTracksPhase1HitDoubletsCA = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("trackerClusterCheck"),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiConformalPixelTracksPhase1SeedLayers"),
    trackingRegions = cms.InputTag("hiConformalPixelTracksPhase1TrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiConformalPixelTracksPhase1HitQuadrupletsCA = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.0012),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hiConformalPixelTracksPhase1HitDoubletsCA"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2),
        value1 = cms.double(200),
        value2 = cms.double(50)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiConformalPixelTracksPhase1HitDoubletsCA__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.hiConformalPixelTracksPhase1SeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3+BPix4',
        'BPix1+BPix2+BPix3+FPix1_pos',
        'BPix1+BPix2+BPix3+FPix1_neg',
        'BPix1+BPix2+FPix1_pos+FPix2_pos',
        'BPix1+BPix2+FPix1_neg+FPix2_neg',
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg'
    )
)


process.hiConformalPixelTracksPhase1TrackingRegions = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("offlinePrimaryVertices"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(0.2),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1000),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(3.0),
        originRScaling4BigEvts = cms.bool(False),
        originRadius = cms.double(0.2),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.3),
        ptMinScaling4BigEvts = cms.bool(False),
        scalingEndNPix = cms.double(1),
        scalingStartNPix = cms.double(0),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiDetachedQuadStepClusters = cms.EDProducer("HITrackClusterRemover",
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    Strip = cms.PSet(
        maxChi2 = cms.double(9.0),
        maxSize = cms.uint32(2)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    overrideTrkQuals = cms.InputTag("hiHighPtTripletStepSelector","hiHighPtTripletStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trajectories = cms.InputTag("hiHighPtTripletStepTracks")
)


process.hiDetachedQuadStepPixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('trackCleaner'),
    Filter = cms.InputTag("hiDetachedQuadStepPixelTracksFilter"),
    Fitter = cms.InputTag("pixelFitterByHelixProjections"),
    SeedingHitSets = cms.InputTag("hiDetachedQuadStepTracksHitQuadrupletsCA"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hiDetachedQuadStepTracksHitQuadrupletsCA__reRECO'),
    passLabel = cms.string('Pixel detached tracks with vertex constraint')
)


process.hiDetachedQuadStepPixelTracksFilter = cms.EDProducer("HIPixelTrackFilterProducer",
    VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
    chi2 = cms.double(1000),
    clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
    lipMax = cms.double(1.0),
    nSigmaLipMaxTolerance = cms.double(0),
    nSigmaTipMaxTolerance = cms.double(0),
    ptMax = cms.double(999999),
    ptMin = cms.double(0.95),
    tipMax = cms.double(1.0),
    useClusterShape = cms.bool(False)
)


process.hiDetachedQuadStepQual = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiDetachedQuadStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiDetachedQuadStepSelector","hiDetachedQuadStep")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiDetachedQuadStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiDetachedQuadStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiDetachedQuadStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3+BPix4',
        'BPix1+BPix2+BPix3+FPix1_pos',
        'BPix1+BPix2+BPix3+FPix1_neg',
        'BPix1+BPix2+FPix1_pos+FPix2_pos',
        'BPix1+BPix2+FPix1_neg+FPix2_neg',
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg'
    )
)


process.hiDetachedQuadStepSeeds = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hiDetachedQuadStepPixelTracks"),
    InputVertexCollection = cms.InputTag(""),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        MinOneOverPtError = cms.double(1),
        OriginTransverseErrorMultiplier = cms.double(1),
        SeedMomentumForBOFF = cms.double(5),
        TTRHBuilder = cms.string('WithTrackAngle'),
        forceKinematicWithRegionDirection = cms.bool(False),
        magneticField = cms.string(''),
        propagator = cms.string('PropagatorWithMaterial')
    ),
    TTRHBuilder = cms.string('WithTrackAngle'),
    originHalfLength = cms.double(1000000000),
    originRadius = cms.double(1000000000),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hiDetachedQuadStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter10'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiDetachedQuadStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiDetachedQuadStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiDetachedQuadStepTight'),
            preFilterName = cms.string('hiDetachedQuadStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiDetachedQuadStep'),
            preFilterName = cms.string('hiDetachedQuadStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiDetachedQuadStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('hiDetachedQuadStepTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiDetachedQuadStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiDetachedQuadStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiDetachedQuadStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiDetachedQuadStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(0.5),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1000),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(False),
        originRadius = cms.double(1.5),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        ptMinScaling4BigEvts = cms.bool(False),
        scalingEndNPix = cms.double(1),
        scalingStartNPix = cms.double(0),
        sigmaZVertex = cms.double(4.0),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiDetachedQuadStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('detachedQuadStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiDetachedQuadStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiDetachedQuadStepTracksHitDoubletsCA = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiDetachedQuadStepSeedLayers"),
    trackingRegions = cms.InputTag("hiDetachedQuadStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiDetachedQuadStepTracksHitQuadrupletsCA = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0),
    CAPhiCut = cms.double(0),
    CAThetaCut = cms.double(0.0011),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hiDetachedQuadStepTracksHitDoubletsCA"),
    extraHitRPhitolerance = cms.double(0.0),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(2),
        value1 = cms.double(500),
        value2 = cms.double(100)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiDetachedQuadStepTracksHitDoubletsCA__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.hiDetachedTripletStepClusters = cms.EDProducer("HITrackClusterRemover",
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    Strip = cms.PSet(
        maxChi2 = cms.double(9.0),
        maxSize = cms.uint32(2)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    overrideTrkQuals = cms.InputTag("hiInitialStepSelector","hiInitialStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trajectories = cms.InputTag("hiGlobalPrimTracks")
)


process.hiDetachedTripletStepPixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('trackCleaner'),
    Filter = cms.InputTag("hiDetachedTripletStepPixelTracksFilter"),
    Fitter = cms.InputTag("pixelFitterByHelixProjections"),
    SeedingHitSets = cms.InputTag("hiDetachedTripletStepTracksHitTriplets"),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiDetachedTripletStepTracksHitTriplets__reRECO',
        'IntermediateHitDoublets_hiDetachedTripletStepTracksHitDoublets__reRECO'
    ),
    passLabel = cms.string('Pixel detached tracks with vertex constraint')
)


process.hiDetachedTripletStepPixelTracksFilter = cms.EDProducer("HIPixelTrackFilterProducer",
    VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
    chi2 = cms.double(1000),
    clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
    lipMax = cms.double(1.0),
    nSigmaLipMaxTolerance = cms.double(0),
    nSigmaTipMaxTolerance = cms.double(0),
    ptMax = cms.double(999999),
    ptMin = cms.double(0.95),
    tipMax = cms.double(1.0),
    useClusterShape = cms.bool(False)
)


process.hiDetachedTripletStepQual = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiDetachedTripletStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiDetachedTripletStepSelector","hiDetachedTripletStep")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiDetachedTripletStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiDetachedTripletStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiDetachedTripletStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg'
    )
)


process.hiDetachedTripletStepSeeds = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hiDetachedTripletStepPixelTracks"),
    InputVertexCollection = cms.InputTag(""),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        MinOneOverPtError = cms.double(1),
        OriginTransverseErrorMultiplier = cms.double(1),
        SeedMomentumForBOFF = cms.double(5),
        TTRHBuilder = cms.string('WithTrackAngle'),
        forceKinematicWithRegionDirection = cms.bool(False),
        magneticField = cms.string(''),
        propagator = cms.string('PropagatorWithMaterial')
    ),
    TTRHBuilder = cms.string('WithTrackAngle'),
    originHalfLength = cms.double(1000000000),
    originRadius = cms.double(1000000000),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hiDetachedTripletStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter7'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiDetachedTripletStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiDetachedTripletStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiDetachedTripletStepTight'),
            preFilterName = cms.string('hiDetachedTripletStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiDetachedTripletStep'),
            preFilterName = cms.string('hiDetachedTripletStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiDetachedTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('hiDetachedTripletStepTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiDetachedTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiDetachedTripletStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiDetachedTripletStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiDetachedTripletStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(0.5),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1000),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(False),
        originRadius = cms.double(0.5),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        ptMinScaling4BigEvts = cms.bool(False),
        scalingEndNPix = cms.double(1),
        scalingStartNPix = cms.double(0),
        sigmaZVertex = cms.double(4.0),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiDetachedTripletStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('detachedTripletStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiDetachedTripletStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiDetachedTripletStepTracksHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiDetachedTripletStepSeedLayers"),
    trackingRegions = cms.InputTag("hiDetachedTripletStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiDetachedTripletStepTracksHitDoubletsCA = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiDetachedTripletStepSeedLayers"),
    trackingRegions = cms.InputTag("hiDetachedTripletStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiDetachedTripletStepTracksHitTriplets = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hiDetachedTripletStepTracksHitDoublets"),
    extraHitRPhitolerance = cms.double(0.0),
    extraHitRZtolerance = cms.double(0.0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiDetachedTripletStepTracksHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiDetachedTripletStepTracksHitTripletsCA = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.2),
    CAPhiCut = cms.double(0),
    CAThetaCut = cms.double(0.001),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hiDetachedTripletStepTracksHitDoubletsCA"),
    extraHitRPhitolerance = cms.double(0.0),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(2),
        value1 = cms.double(300),
        value2 = cms.double(10)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiDetachedTripletStepTracksHitDoubletsCA__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.hiEarlyGeneralTracks = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(
        cms.InputTag("hiGlobalPrimTracks"), cms.InputTag("hiDetachedTripletStepTracks"), cms.InputTag("hiLowPtTripletStepTracks"), cms.InputTag("hiPixelPairGlobalPrimTracks"), cms.InputTag("hiJetCoreRegionalStepTracks"),
        cms.InputTag("hiRegitMuInitialStepTracks"), cms.InputTag("hiRegitMuPixelPairStepTracks"), cms.InputTag("hiRegitMuMixedTripletStepTracks"), cms.InputTag("hiRegitMuPixelLessStepTracks"), cms.InputTag("hiRegitMuDetachedTripletStepTracks")
    ),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(
        1, 1, 1, 1, 1,
        1, 1, 1, 1, 1
    ),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(
        cms.InputTag("hiInitialStepSelector","hiInitialStep"), cms.InputTag("hiDetachedTripletStepSelector","hiDetachedTripletStep"), cms.InputTag("hiLowPtTripletStepSelector","hiLowPtTripletStep"), cms.InputTag("hiPixelPairStepSelector","hiPixelPairStep"), cms.InputTag("hiJetCoreRegionalStepSelector","hiJetCoreRegionalStep"),
        cms.InputTag("hiRegitMuInitialStepSelector","hiRegitMuInitialStepLoose"), cms.InputTag("hiRegitMuPixelPairStepSelector","hiRegitMuPixelPairStep"), cms.InputTag("hiRegitMuMixedTripletStepSelector","hiRegitMuMixedTripletStep"), cms.InputTag("hiRegitMuPixelLessStepSelector","hiRegitMuPixelLessStep"), cms.InputTag("hiRegitMuDetachedTripletStepSelector","hiRegitMuDetachedTripletStep")
    ),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(True),
        tLists = cms.vint32(
            0, 1, 2, 3, 4,
            5, 6, 7, 8, 9
        )
    )),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiEarlyMuons = cms.EDProducer("MuonIdProducer",
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("ak4CaloJets"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            PruneCut = cms.double(9.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(0.0),
            DoWireCorr = cms.bool(True),
            DropTheta = cms.bool(True),
            HitError = cms.double(2.8),
            HitsMin = cms.int32(3),
            PruneCut = cms.double(5.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTradius = cms.double(0.01),
            DTsegments = cms.InputTag("dt4DSegments"),
            RPChits = cms.InputTag("rpcRecHits"),
            TightMatchCSC = cms.bool(True),
            TightMatchDT = cms.bool(False)
        ),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(False)
    ),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(False),
        useGEM = cms.bool(False),
        useHO = cms.bool(False),
        useHcal = cms.bool(False),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("generalTracks")
    ),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(True)
    ),
    addExtraSoftMuons = cms.bool(False),
    arbitrateTrackerMuons = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        ClusterDPhi = cms.double(0.6),
        ClusterDTheta = cms.double(0.02),
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        OverlapDTheta = cms.double(0.02)
    ),
    debugWithTruthMatching = cms.bool(False),
    ecalDepositName = cms.string('ecal'),
    fillCaloCompatibility = cms.bool(False),
    fillEnergy = cms.bool(False),
    fillGlobalTrackQuality = cms.bool(False),
    fillGlobalTrackRefits = cms.bool(False),
    fillIsolation = cms.bool(False),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(False),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    inputCollectionLabels = cms.VInputTag(cms.InputTag("hiEarlyGeneralTracks"), cms.InputTag("standAloneMuons","UpdatedAtVtx")),
    inputCollectionTypes = cms.vstring(
        'inner tracks',
        'outer tracks'
    ),
    jetDepositName = cms.string('jets'),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    maxAbsEta = cms.double(3.0),
    maxAbsPullX = cms.double(3.0),
    maxAbsPullY = cms.double(9999.0),
    minCaloCompatibility = cms.double(0.6),
    minNumberOfMatches = cms.int32(1),
    minP = cms.double(3.0),
    minPCaloMuon = cms.double(3.0),
    minPt = cms.double(2.0),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    runArbitrationCleaner = cms.bool(True),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    trackDepositName = cms.string('tracker'),
    writeIsoDeposits = cms.bool(True)
)


process.hiEvtPlane = cms.EDProducer("EvtPlaneProducer",
    CentBinCompression = cms.int32(5),
    FlatOrder = cms.int32(9),
    NumFlatBins = cms.int32(40),
    caloCentRef = cms.double(80.0),
    caloCentRefWidth = cms.double(5.0),
    caloTag = cms.InputTag("towerMaker"),
    castorTag = cms.InputTag("CastorTowerReco"),
    centralityBinTag = cms.InputTag("centralityBin","HFtowers"),
    centralityVariable = cms.string('HFtowers'),
    chi2 = cms.double(40.0),
    dzerr = cms.double(10.0),
    loadDB = cms.bool(False),
    maxet = cms.double(-1.0),
    maxpt = cms.double(3.0),
    maxvtx = cms.double(25.0),
    minet = cms.double(-1.0),
    minpt = cms.double(0.3),
    minvtx = cms.double(-25.0),
    nonDefaultGlauberModel = cms.string(''),
    trackTag = cms.InputTag("hiGeneralTracks"),
    vertexTag = cms.InputTag("hiSelectedVertex")
)


process.hiFJRhoProducer = cms.EDProducer("HiFJRhoProducer",
    etaMaxExcl = cms.double(2.0),
    etaMaxExcl2 = cms.double(3.0),
    etaRanges = cms.vdouble(
        -5.0, -3.0, -2.1, -1.3, 1.3,
        2.1, 3.0, 5.0
    ),
    jetSource = cms.InputTag("kt4PFJetsForRho"),
    nExcl = cms.int32(2),
    nExcl2 = cms.int32(1),
    ptMinExcl = cms.double(20.0),
    ptMinExcl2 = cms.double(20.0)
)


process.hiFilter = cms.EDProducer("HIPixelTrackFilterProducer",
    VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
    chi2 = cms.double(1000),
    clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
    lipMax = cms.double(0.3),
    nSigmaLipMaxTolerance = cms.double(0),
    nSigmaTipMaxTolerance = cms.double(6),
    ptMax = cms.double(999999),
    ptMin = cms.double(0.9),
    tipMax = cms.double(0),
    useClusterShape = cms.bool(False)
)


process.hiGeneralAndPixelTracks = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiConformalPixelTracks"), cms.InputTag("hiGeneralTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1, 1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiPixelOnlyStepSelector","hiPixelOnlyTrkHighPurity"), cms.InputTag("hiHighPtStepSelector","hiHighPtTrkTrunc")),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(False),
        tLists = cms.vint32(0, 1)
    )),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiGeneralAndRegitMuTracks = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(
        cms.InputTag("hiRegitMuInitialStepTracks"), cms.InputTag("hiRegitMuPixelPairStepTracks"), cms.InputTag("hiRegitMuMixedTripletStepTracks"), cms.InputTag("hiRegitMuPixelLessStepTracks"), cms.InputTag("hiRegitMuDetachedTripletStepTracks"),
        cms.InputTag("hiRegitMuonSeededTracksOutIn"), cms.InputTag("hiRegitMuonSeededTracksInOut")
    ),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(
        1, 1, 1, 1, 1,
        1, 1
    ),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(
        cms.InputTag("hiRegitMuInitialStepSelector","hiRegitMuInitialStepLoose"), cms.InputTag("hiRegitMuPixelPairStepSelector","hiRegitMuPixelPairStep"), cms.InputTag("hiRegitMuMixedTripletStepSelector","hiRegitMuMixedTripletStep"), cms.InputTag("hiRegitMuPixelLessStepSelector","hiRegitMuPixelLessStep"), cms.InputTag("hiRegitMuDetachedTripletStepSelector","hiRegitMuDetachedTripletStep"),
        cms.InputTag("hiRegitMuonSeededTracksOutInSelector","hiRegitMuonSeededTracksOutInHighPurity"), cms.InputTag("hiRegitMuonSeededTracksInOutSelector","hiRegitMuonSeededTracksInOutHighPurity")
    ),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(True),
        tLists = cms.vint32(
            0, 1, 2, 3, 4,
            5, 6
        )
    )),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiGeneralTracks = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(
        cms.InputTag("hiGlobalPrimTracks"), cms.InputTag("hiDetachedTripletStepTracks"), cms.InputTag("hiLowPtTripletStepTracks"), cms.InputTag("hiPixelPairGlobalPrimTracks"), cms.InputTag("hiJetCoreRegionalStepTracks"),
        cms.InputTag("hiRegitMuInitialStepTracks"), cms.InputTag("hiRegitMuPixelPairStepTracks"), cms.InputTag("hiRegitMuMixedTripletStepTracks"), cms.InputTag("hiRegitMuPixelLessStepTracks"), cms.InputTag("hiRegitMuDetachedTripletStepTracks"),
        cms.InputTag("hiRegitMuonSeededTracksOutIn"), cms.InputTag("hiRegitMuonSeededTracksInOut")
    ),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(
        1, 1, 1, 1, 1,
        1, 1, 1, 1, 1,
        1, 1
    ),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(
        cms.InputTag("hiInitialStepSelector","hiInitialStep"), cms.InputTag("hiDetachedTripletStepSelector","hiDetachedTripletStep"), cms.InputTag("hiLowPtTripletStepSelector","hiLowPtTripletStep"), cms.InputTag("hiPixelPairStepSelector","hiPixelPairStep"), cms.InputTag("hiJetCoreRegionalStepSelector","hiJetCoreRegionalStep"),
        cms.InputTag("hiRegitMuInitialStepSelector","hiRegitMuInitialStepLoose"), cms.InputTag("hiRegitMuPixelPairStepSelector","hiRegitMuPixelPairStep"), cms.InputTag("hiRegitMuMixedTripletStepSelector","hiRegitMuMixedTripletStep"), cms.InputTag("hiRegitMuPixelLessStepSelector","hiRegitMuPixelLessStep"), cms.InputTag("hiRegitMuDetachedTripletStepSelector","hiRegitMuDetachedTripletStep"),
        cms.InputTag("hiRegitMuonSeededTracksOutInSelector","hiRegitMuonSeededTracksOutInHighPurity"), cms.InputTag("hiRegitMuonSeededTracksInOutSelector","hiRegitMuonSeededTracksInOutHighPurity")
    ),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(True),
        tLists = cms.vint32(
            0, 1, 2, 3, 4,
            5, 6, 7, 8, 9,
            10, 11
        )
    )),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiGeneralTracksNoRegitMu = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiGlobalPrimTracks"), cms.InputTag("hiDetachedTripletStepTracks"), cms.InputTag("hiLowPtTripletStepTracks"), cms.InputTag("hiPixelPairGlobalPrimTracks"), cms.InputTag("hiJetCoreRegionalStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1, 1, 1, 1, 1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiInitialStepSelector","hiInitialStep"), cms.InputTag("hiDetachedTripletStepSelector","hiDetachedTripletStep"), cms.InputTag("hiLowPtTripletStepSelector","hiLowPtTripletStep"), cms.InputTag("hiPixelPairStepSelector","hiPixelPairStep")),
    setsToMerge = cms.VPSet(cms.PSet(
        pQual = cms.bool(True),
        tLists = cms.vint32(0, 1, 2, 3)
    )),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiGlobalPrimTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('initialStep'),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiPrimTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiHighPtStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string(''),
    GBRForestVars = cms.vstring(),
    applyPixelMergingCuts = cms.bool(True),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiGeneralTracks"),
    trackSelectors = cms.VPSet(cms.PSet(
        applyAbsCutsIfNoPV = cms.bool(False),
        applyAdaptedPVCuts = cms.bool(True),
        chi2n_no1Dmod_par = cms.double(9999.0),
        chi2n_par = cms.double(0.3),
        copyExtras = cms.untracked.bool(True),
        copyTrajectories = cms.untracked.bool(True),
        d0_par1 = cms.vdouble(9999.0, 0.0),
        d0_par2 = cms.vdouble(9999.0, 0.0),
        dz_par1 = cms.vdouble(9999.0, 0.0),
        dz_par2 = cms.vdouble(9999.0, 0.0),
        keepAllTracks = cms.bool(False),
        maxNumberLostLayers = cms.uint32(999),
        max_d0 = cms.double(100),
        max_eta = cms.double(9999.0),
        max_lostHitFraction = cms.double(1.0),
        max_minMissHitOutOrIn = cms.int32(99),
        max_relpterr = cms.double(9999.0),
        max_z0 = cms.double(100),
        minHitsToBypassChecks = cms.uint32(9999),
        minMVA = cms.double(-1),
        minNumber3DLayers = cms.uint32(0),
        minNumberLayers = cms.uint32(0),
        min_eta = cms.double(-9999.0),
        min_nhits = cms.uint32(12),
        nSigmaZ = cms.double(9999.0),
        name = cms.string('hiHighPtTrkTrunc'),
        pixel_pTMaxCut = cms.vdouble(9998, 9999, 9999, 1.0),
        pixel_pTMinCut = cms.vdouble(1.0, 1.8, 0.15, 2.5),
        preFilterName = cms.string(''),
        qualityBit = cms.string(''),
        res_par = cms.vdouble(99999.0, 99999.0),
        useMVA = cms.bool(False),
        vertexCut = cms.string(''),
        vtxNumber = cms.int32(-1)
    )),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiHighPtTripletStepClusters = cms.EDProducer("HITrackClusterRemover",
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    Strip = cms.PSet(
        maxChi2 = cms.double(9.0),
        maxSize = cms.uint32(2)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    overrideTrkQuals = cms.InputTag("hiLowPtQuadStepSelector","hiLowPtQuadStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trajectories = cms.InputTag("hiLowPtQuadStepTracks")
)


process.hiHighPtTripletStepPixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('trackCleaner'),
    Filter = cms.InputTag("hiHighPtTripletStepPixelTracksFilter"),
    Fitter = cms.InputTag("pixelFitterByHelixProjections"),
    SeedingHitSets = cms.InputTag("hiHighPtTripletStepTracksHitTripletsCA"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hiHighPtTripletStepTracksHitTripletsCA__reRECO'),
    passLabel = cms.string('Pixel detached tracks with vertex constraint')
)


process.hiHighPtTripletStepPixelTracksFilter = cms.EDProducer("HIPixelTrackFilterProducer",
    VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
    chi2 = cms.double(1000),
    clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
    lipMax = cms.double(1.0),
    nSigmaLipMaxTolerance = cms.double(0),
    nSigmaTipMaxTolerance = cms.double(0),
    ptMax = cms.double(999999),
    ptMin = cms.double(1.0),
    tipMax = cms.double(1.0),
    useClusterShape = cms.bool(False)
)


process.hiHighPtTripletStepQual = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiHighPtTripletStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiHighPtTripletStepSelector","hiHighPtTripletStep")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiHighPtTripletStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiHighPtTripletStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiHighPtTripletStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix2+BPix3+BPix4',
        'BPix1+BPix3+BPix4',
        'BPix1+BPix2+BPix4',
        'BPix2+BPix3+FPix1_pos',
        'BPix2+BPix3+FPix1_neg',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+BPix3+FPix1_pos',
        'BPix1+BPix3+FPix1_neg',
        'BPix2+FPix1_pos+FPix2_pos',
        'BPix2+FPix1_neg+FPix2_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg',
        'BPix1+BPix2+FPix2_pos',
        'BPix1+BPix2+FPix2_neg',
        'FPix1_pos+FPix2_pos+FPix3_pos',
        'FPix1_neg+FPix2_neg+FPix3_neg',
        'BPix1+FPix2_pos+FPix3_pos',
        'BPix1+FPix2_neg+FPix3_neg',
        'BPix1+FPix1_pos+FPix3_pos',
        'BPix1+FPix1_neg+FPix3_neg'
    )
)


process.hiHighPtTripletStepSeeds = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hiHighPtTripletStepPixelTracks"),
    InputVertexCollection = cms.InputTag(""),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        MinOneOverPtError = cms.double(1),
        OriginTransverseErrorMultiplier = cms.double(1),
        SeedMomentumForBOFF = cms.double(5),
        TTRHBuilder = cms.string('WithTrackAngle'),
        forceKinematicWithRegionDirection = cms.bool(False),
        magneticField = cms.string(''),
        propagator = cms.string('PropagatorWithMaterial')
    ),
    TTRHBuilder = cms.string('WithTrackAngle'),
    originHalfLength = cms.double(1000000000),
    originRadius = cms.double(1000000000),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hiHighPtTripletStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter9'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiHighPtTripletStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiHighPtTripletStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiHighPtTripletStepTight'),
            preFilterName = cms.string('hiHighPtTripletStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiHighPtTripletStep'),
            preFilterName = cms.string('hiHighPtTripletStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiHighPtTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('hiHighPtTripletStepTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiHighPtTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiHighPtTripletStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiHighPtTripletStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiHighPtTripletStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(0.5),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1000),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(False),
        originRadius = cms.double(0.02),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.8),
        ptMinScaling4BigEvts = cms.bool(False),
        scalingEndNPix = cms.double(1),
        scalingStartNPix = cms.double(0),
        sigmaZVertex = cms.double(4.0),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiHighPtTripletStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('highPtTripletStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiHighPtTripletStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiHighPtTripletStepTracksHitDoubletsCA = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiHighPtTripletStepSeedLayers"),
    trackingRegions = cms.InputTag("hiHighPtTripletStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiHighPtTripletStepTracksHitTripletsCA = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.07),
    CAThetaCut = cms.double(0.004),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hiHighPtTripletStepTracksHitDoubletsCA"),
    extraHitRPhitolerance = cms.double(0.0),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(8),
        value1 = cms.double(100),
        value2 = cms.double(6)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiHighPtTripletStepTracksHitDoubletsCA__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.hiInitialStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter4'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'dxyperdxyerror',
        'dzperdzerror',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiGlobalPrimTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiInitialStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.77),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiInitialStepTight'),
            preFilterName = cms.string('hiInitialStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.77),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiInitialStep'),
            preFilterName = cms.string('hiInitialStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiInitialStepTrackRefsForJets = cms.EDProducer("ChargedRefCandidateProducer",
    particleType = cms.string('pi+'),
    src = cms.InputTag("hiGlobalPrimTracks")
)


process.hiJetCoreRegionalStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        hitErrorRPhi = cms.double(0.0027),
        hitErrorRZ = cms.double(0.006),
        useErrorsFromParam = cms.bool(True)
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        hitErrorRPhi = cms.double(0.0051),
        hitErrorRZ = cms.double(0.0036),
        useErrorsFromParam = cms.bool(True)
    ),
    TIB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutNone')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit")
    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg',
        'BPix1+BPix2+TIB1',
        'BPix1+BPix3+TIB1',
        'BPix2+BPix3+TIB1'
    )
)


process.hiJetCoreRegionalStepSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    ClusterCheckPSet = cms.PSet(
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(400000),
        MaxNumberOfPixelClusters = cms.uint32(40000),
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        cut = cms.string('strip < 400000 && pixel < 40000 && (strip < 50000 + 10*pixel) && (pixel < 5000 + 0.1*strip)'),
        doClusterCheck = cms.bool(False)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitTripletGenerator'),
        GeneratorPSet = cms.PSet(
            ComponentName = cms.string('PixelTripletHLTGenerator'),
            SeedComparitorPSet = cms.PSet(
                ComponentName = cms.string('none')
            ),
            extraHitRPhitolerance = cms.double(0.032),
            extraHitRZtolerance = cms.double(0.037),
            maxElement = cms.uint32(1000000),
            phiPreFiltering = cms.double(0.3),
            useBending = cms.bool(True),
            useFixedPreFiltering = cms.bool(False),
            useMultScattering = cms.bool(True)
        ),
        SeedingLayers = cms.InputTag("hiJetCoreRegionalStepSeedLayers")
    ),
    RegionFactoryPSet = cms.PSet(
        ComponentName = cms.string('TauRegionalPixelSeedGenerator'),
        RegionPSet = cms.PSet(
            JetSrc = cms.InputTag("hiJetsForCoreTracking"),
            deltaEtaRegion = cms.double(0.3),
            deltaPhiRegion = cms.double(0.3),
            howToUseMeasurementTracker = cms.string('Never'),
            measurementTrackerName = cms.InputTag("MeasurementTrackerEvent"),
            originHalfLength = cms.double(0.2),
            originRadius = cms.double(0.2),
            precise = cms.bool(True),
            ptMin = cms.double(10.0),
            useFakeVertices = cms.bool(False),
            useMultipleScattering = cms.bool(False),
            vertexSrc = cms.InputTag("hiFirstStepGoodPrimaryVertices")
        )
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        MinOneOverPtError = cms.double(1.0),
        OriginTransverseErrorMultiplier = cms.double(1.0),
        SeedMomentumForBOFF = cms.double(5.0),
        TTRHBuilder = cms.string('WithTrackAngle'),
        forceKinematicWithRegionDirection = cms.bool(True),
        magneticField = cms.string('ParabolicMf'),
        propagator = cms.string('PropagatorWithMaterialParabolicMf')
    )
)


process.hiJetCoreRegionalStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string(''),
    GBRForestVars = cms.vstring(),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiJetCoreRegionalStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiJetCoreRegionalStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiJetCoreRegionalStepTight'),
            preFilterName = cms.string('hiJetCoreRegionalStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(14),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiJetCoreRegionalStep'),
            preFilterName = cms.string('hiJetCoreRegionalStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiFirstStepGoodPrimaryVertices")
)


process.hiJetCoreRegionalStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiJetCoreRegionalStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(10000),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiJetCoreRegionalStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiJetCoreRegionalStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('jetCoreRegionalStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiJetCoreRegionalStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiLowPtQuadStepClusters = cms.EDProducer("HITrackClusterRemover",
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    Strip = cms.PSet(
        maxChi2 = cms.double(9.0),
        maxSize = cms.uint32(2)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    overrideTrkQuals = cms.InputTag("hiInitialStepSelector","hiInitialStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trajectories = cms.InputTag("hiGlobalPrimTracks")
)


process.hiLowPtQuadStepPixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('trackCleaner'),
    Filter = cms.InputTag("hiLowPtQuadStepPixelTracksFilter"),
    Fitter = cms.InputTag("pixelFitterByHelixProjections"),
    SeedingHitSets = cms.InputTag("hiLowPtQuadStepTracksHitQuadrupletsCA"),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hiLowPtQuadStepTracksHitQuadrupletsCA__reRECO'),
    passLabel = cms.string('Pixel detached tracks with vertex constraint')
)


process.hiLowPtQuadStepPixelTracksFilter = cms.EDProducer("HIPixelTrackFilterProducer",
    VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
    chi2 = cms.double(1000),
    clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
    lipMax = cms.double(1.0),
    nSigmaLipMaxTolerance = cms.double(0),
    nSigmaTipMaxTolerance = cms.double(0),
    ptMax = cms.double(999999),
    ptMin = cms.double(0.4),
    tipMax = cms.double(1.0),
    useClusterShape = cms.bool(False)
)


process.hiLowPtQuadStepQual = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiLowPtQuadStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiLowPtQuadStepSelector","hiLowPtQuadStep")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiLowPtQuadStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiLowPtQuadStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiLowPtQuadStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3+BPix4',
        'BPix1+BPix2+BPix3+FPix1_pos',
        'BPix1+BPix2+BPix3+FPix1_neg',
        'BPix1+BPix2+FPix1_pos+FPix2_pos',
        'BPix1+BPix2+FPix1_neg+FPix2_neg',
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg'
    )
)


process.hiLowPtQuadStepSeeds = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hiLowPtQuadStepPixelTracks"),
    InputVertexCollection = cms.InputTag(""),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        MinOneOverPtError = cms.double(1),
        OriginTransverseErrorMultiplier = cms.double(1),
        SeedMomentumForBOFF = cms.double(5),
        TTRHBuilder = cms.string('WithTrackAngle'),
        forceKinematicWithRegionDirection = cms.bool(False),
        magneticField = cms.string(''),
        propagator = cms.string('PropagatorWithMaterial')
    ),
    TTRHBuilder = cms.string('WithTrackAngle'),
    originHalfLength = cms.double(1000000000),
    originRadius = cms.double(1000000000),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hiLowPtQuadStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter8'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiLowPtQuadStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiLowPtQuadStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiLowPtQuadStepTight'),
            preFilterName = cms.string('hiLowPtQuadStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiLowPtQuadStep'),
            preFilterName = cms.string('hiLowPtQuadStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiLowPtQuadStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('hiLowPtQuadStepTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiLowPtQuadStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiLowPtQuadStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiLowPtQuadStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiLowPtQuadStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(0.5),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1000),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(False),
        originRadius = cms.double(0.02),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.3),
        ptMinScaling4BigEvts = cms.bool(False),
        scalingEndNPix = cms.double(1),
        scalingStartNPix = cms.double(0),
        sigmaZVertex = cms.double(4.0),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiLowPtQuadStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('lowPtQuadStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiLowPtQuadStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiLowPtQuadStepTracksHitDoubletsCA = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiLowPtQuadStepSeedLayers"),
    trackingRegions = cms.InputTag("hiLowPtQuadStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiLowPtQuadStepTracksHitQuadrupletsCA = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0),
    CAPhiCut = cms.double(0.3),
    CAThetaCut = cms.double(0.0017),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hiLowPtQuadStepTracksHitDoubletsCA"),
    extraHitRPhitolerance = cms.double(0.0),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2),
        value1 = cms.double(1000),
        value2 = cms.double(150)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiLowPtQuadStepTracksHitDoubletsCA__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.hiLowPtTripletStepClusters = cms.EDProducer("HITrackClusterRemover",
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    Strip = cms.PSet(
        maxChi2 = cms.double(9.0),
        maxSize = cms.uint32(2)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hiDetachedTripletStepClusters"),
    overrideTrkQuals = cms.InputTag("hiDetachedTripletStepSelector","hiDetachedTripletStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trajectories = cms.InputTag("hiDetachedTripletStepTracks")
)


process.hiLowPtTripletStepPixelTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('trackCleaner'),
    Filter = cms.InputTag("hiLowPtTripletStepPixelTracksFilter"),
    Fitter = cms.InputTag("pixelFitterByHelixProjections"),
    SeedingHitSets = cms.InputTag("hiLowPtTripletStepTracksHitTriplets"),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiLowPtTripletStepTracksHitTriplets__reRECO',
        'IntermediateHitDoublets_hiLowPtTripletStepTracksHitDoublets__reRECO'
    ),
    passLabel = cms.string('Pixel primary tracks with vertex constraint')
)


process.hiLowPtTripletStepPixelTracksFilter = cms.EDProducer("HIPixelTrackFilterProducer",
    VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
    chi2 = cms.double(1000),
    clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
    lipMax = cms.double(0),
    nSigmaLipMaxTolerance = cms.double(4.0),
    nSigmaTipMaxTolerance = cms.double(4.0),
    ptMax = cms.double(999999),
    ptMin = cms.double(0.4),
    tipMax = cms.double(0),
    useClusterShape = cms.bool(False)
)


process.hiLowPtTripletStepQual = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiLowPtTripletStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiLowPtTripletStepSelector","hiLowPtTripletStep")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiLowPtTripletStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiLowPtTripletStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiLowPtTripletStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg'
    )
)


process.hiLowPtTripletStepSeeds = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hiLowPtTripletStepPixelTracks"),
    InputVertexCollection = cms.InputTag(""),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        MinOneOverPtError = cms.double(1),
        OriginTransverseErrorMultiplier = cms.double(1),
        SeedMomentumForBOFF = cms.double(5),
        TTRHBuilder = cms.string('WithTrackAngle'),
        forceKinematicWithRegionDirection = cms.bool(False),
        magneticField = cms.string(''),
        propagator = cms.string('PropagatorWithMaterial')
    ),
    TTRHBuilder = cms.string('WithTrackAngle'),
    originHalfLength = cms.double(1000000000),
    originRadius = cms.double(1000000000),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hiLowPtTripletStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter5'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'dxyperdxyerror',
        'dzperdzerror',
        'relpterr',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiLowPtTripletStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiLowPtTripletStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.58),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiLowPtTripletStepTight'),
            preFilterName = cms.string('hiLowPtTripletStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(0.35),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiLowPtTripletStep'),
            preFilterName = cms.string('hiLowPtTripletStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiLowPtTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiLowPtTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiLowPtTripletStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiLowPtTripletStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiLowPtTripletStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(0.2),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1000),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(False),
        originRadius = cms.double(0.02),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.4),
        ptMinScaling4BigEvts = cms.bool(False),
        scalingEndNPix = cms.double(1),
        scalingStartNPix = cms.double(0),
        sigmaZVertex = cms.double(4.0),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(False),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiLowPtTripletStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('lowPtTripletStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiLowPtTripletStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiLowPtTripletStepTracksHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiLowPtTripletStepSeedLayers"),
    trackingRegions = cms.InputTag("hiLowPtTripletStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiLowPtTripletStepTracksHitDoubletsCA = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiLowPtTripletStepSeedLayers"),
    trackingRegions = cms.InputTag("hiLowPtTripletStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiLowPtTripletStepTracksHitTriplets = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hiLowPtTripletStepTracksHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiLowPtTripletStepTracksHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiLowPtTripletStepTracksHitTripletsCA = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0),
    CAPhiCut = cms.double(0.05),
    CAThetaCut = cms.double(0.002),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hiLowPtTripletStepTracksHitDoubletsCA"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(2),
        value1 = cms.double(70),
        value2 = cms.double(8)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiLowPtTripletStepTracksHitDoubletsCA__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.hiMixedTripletStepClusters = cms.EDProducer("HITrackClusterRemover",
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    Strip = cms.PSet(
        maxChi2 = cms.double(9.0),
        maxSize = cms.uint32(2)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    overrideTrkQuals = cms.InputTag("hiPixelPairStepSelector","hiPixelPairStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trajectories = cms.InputTag("hiPixelPairGlobalPrimTracks")
)


process.hiMixedTripletStepQual = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiMixedTripletStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiMixedTripletStepSelector","hiMixedTripletStep")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiMixedTripletStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter11'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiMixedTripletStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiMixedTripletStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiMixedTripletStepTight'),
            preFilterName = cms.string('hiMixedTripletStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiMixedTripletStep'),
            preFilterName = cms.string('hiMixedTripletStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiMixedTripletStepTrackingRegionsA = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(3.75),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(0.7),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(True),
        originRadius = cms.double(1.5),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.4),
        ptMinScaling4BigEvts = cms.bool(True),
        scalingEndNPix = cms.double(35000),
        scalingStartNPix = cms.double(20000),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiMixedTripletStepTrackingRegionsB = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(3.75),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(0.7),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(True),
        originRadius = cms.double(1.0),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.4),
        ptMinScaling4BigEvts = cms.bool(True),
        scalingEndNPix = cms.double(35000),
        scalingStartNPix = cms.double(20000),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiMixedTripletStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('mixedTripletStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("mixedTripletStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiMultiTrackSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string(''),
    GBRForestVars = cms.vstring(),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiGeneralTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiTrkLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiTrkTight'),
            preFilterName = cms.string('hiTrkLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiTrkHighPurity'),
            preFilterName = cms.string('hiTrkTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiMuons1stStep = cms.EDProducer("MuonIdProducer",
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("iterativeConePu5CaloJets"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            PruneCut = cms.double(9.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(0.0),
            DoWireCorr = cms.bool(True),
            DropTheta = cms.bool(True),
            HitError = cms.double(2.8),
            HitsMin = cms.int32(3),
            PruneCut = cms.double(5.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTradius = cms.double(0.01),
            DTsegments = cms.InputTag("dt4DSegments"),
            RPChits = cms.InputTag("rpcRecHits"),
            TightMatchCSC = cms.bool(True),
            TightMatchDT = cms.bool(False)
        ),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(False)
    ),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("hiGeneralTracks")
    ),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(True)
    ),
    addExtraSoftMuons = cms.bool(False),
    arbitrateTrackerMuons = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        ClusterDPhi = cms.double(0.6),
        ClusterDTheta = cms.double(0.02),
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        OverlapDTheta = cms.double(0.02)
    ),
    debugWithTruthMatching = cms.bool(False),
    ecalDepositName = cms.string('ecal'),
    fillCaloCompatibility = cms.bool(True),
    fillEnergy = cms.bool(True),
    fillGlobalTrackQuality = cms.bool(True),
    fillGlobalTrackRefits = cms.bool(True),
    fillIsolation = cms.bool(True),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(True),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    inputCollectionLabels = cms.VInputTag(
        "hiGeneralTracks", "globalMuons", "standAloneMuons:UpdatedAtVtx", "tevMuons:firstHit", "tevMuons:picky",
        "tevMuons:dyt"
    ),
    inputCollectionTypes = cms.vstring(
        'inner tracks',
        'links',
        'outer tracks',
        'tev firstHit',
        'tev picky',
        'tev dyt'
    ),
    jetDepositName = cms.string('jets'),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    maxAbsEta = cms.double(3.0),
    maxAbsPullX = cms.double(3.0),
    maxAbsPullY = cms.double(9999.0),
    minCaloCompatibility = cms.double(0.6),
    minNumberOfMatches = cms.int32(1),
    minP = cms.double(2.5),
    minPCaloMuon = cms.double(1000000000.0),
    minPt = cms.double(0.8),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    runArbitrationCleaner = cms.bool(True),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    trackDepositName = cms.string('tracker'),
    writeIsoDeposits = cms.bool(False)
)


process.hiOfflinePrimaryVertices = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkGapClusParameters = cms.PSet(
            zSeparation = cms.double(1.0)
        ),
        algorithm = cms.string('gap')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filterWithThreshold'),
        maxD0Significance = cms.double(3.0),
        maxEta = cms.double(100.0),
        maxNormalizedChi2 = cms.double(5.0),
        minPixelLayersWithHits = cms.int32(3),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(5),
        numTracksThreshold = cms.int32(2),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("hiGeneralTracks"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(3.0),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(0.1),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ))
)


process.hiPixel3PRotoTracksHitDoubletsPreSplitting = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("PixelLayerTripletsPreSplitting"),
    trackingRegions = cms.InputTag("hiPixel3ProtoTracksTrackingRegionsPreSplitting"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiPixel3PrimTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('trackCleaner'),
    Filter = cms.InputTag("hiFilter"),
    Fitter = cms.InputTag("pixelFitterByHelixProjections"),
    SeedingHitSets = cms.InputTag("hiPixel3PrimTracksHitTriplets"),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiPixel3PrimTracksHitTriplets__reRECO',
        'IntermediateHitTriplets_hiPixel3PrimTracksHitTriplets__reRECO',
        'IntermediateHitDoublets_hiPixel3PrimTracksHitDoublets__reRECO'
    ),
    passLabel = cms.string('Pixel triplet primary tracks with vertex constraint')
)


process.hiPixel3PrimTracksHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("PixelLayerTriplets"),
    trackingRegions = cms.InputTag("hiTrackingRegionWithVertex"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiPixel3PrimTracksHitDoubletsCA = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("PixelLayerTriplets"),
    trackingRegions = cms.InputTag("hiTrackingRegionWithVertex"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiPixel3PrimTracksHitQuadrupletsCA = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.0012),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hiPixel3PrimTracksHitDoubletsCA"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2),
        value1 = cms.double(200),
        value2 = cms.double(50)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiPixel3PrimTracksHitDoubletsCA__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.hiPixel3PrimTracksHitTriplets = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hiPixel3PrimTracksHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiPixel3PrimTracksHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(True),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiPixel3ProtoTracks = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('pixelTrackCleanerBySharedHits'),
    Filter = cms.InputTag("hiProtoTrackFilter"),
    Fitter = cms.InputTag("pixelFitterByHelixProjections"),
    SeedingHitSets = cms.InputTag("hiPixel3ProtoTracksHitTriplets"),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiPixel3ProtoTracksHitTriplets__reRECO',
        'IntermediateHitDoublets_hiPixel3ProtoTracksHitDoublets__reRECO'
    ),
    passLabel = cms.string('Pixel triplet tracks for vertexing')
)


process.hiPixel3ProtoTracksHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("PixelLayerTriplets"),
    trackingRegions = cms.InputTag("hiTrackingRegionFromClusterVtx"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiPixel3ProtoTracksHitTriplets = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hiPixel3ProtoTracksHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(100000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiPixel3ProtoTracksHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiPixel3ProtoTracksHitTripletsPreSplitting = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    doublets = cms.InputTag("hiPixel3PRotoTracksHitDoubletsPreSplitting"),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(100000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiPixel3PRotoTracksHitDoubletsPreSplitting__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiPixel3ProtoTracksPreSplitting = cms.EDProducer("PixelTrackProducer",
    Cleaner = cms.string('pixelTrackCleanerBySharedHits'),
    Filter = cms.InputTag("hiProtoTrackFilterPreSplitting"),
    Fitter = cms.InputTag("pixelFitterByHelixProjections"),
    SeedingHitSets = cms.InputTag("hiPixel3ProtoTracksHitTripletsPreSplitting"),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiPixel3ProtoTracksHitTripletsPreSplitting__reRECO',
        'IntermediateHitDoublets_hiPixel3PRotoTracksHitDoubletsPreSplitting__reRECO'
    ),
    passLabel = cms.string('Pixel triplet tracks for vertexing')
)


process.hiPixel3ProtoTracksTrackingRegionsPreSplitting = cms.EDProducer("HITrackingRegionForPrimaryVtxEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiPixelClusterVertexPreSplitting"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        directionXCoord = cms.double(1),
        directionYCoord = cms.double(1),
        directionZCoord = cms.double(0),
        doVariablePtMin = cms.bool(True),
        fixedError = cms.double(3),
        nSigmaZ = cms.double(3),
        originRadius = cms.double(0.2),
        precise = cms.bool(True),
        ptMin = cms.double(0.7),
        siPixelRecHits = cms.InputTag("siPixelRecHitsPreSplitting"),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiPixelAdaptiveVertex = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkGapClusParameters = cms.PSet(
            zSeparation = cms.double(1.0)
        ),
        algorithm = cms.string('gap')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filterWithThreshold'),
        maxD0Significance = cms.double(3.0),
        maxEta = cms.double(100.0),
        maxNormalizedChi2 = cms.double(5.0),
        minPixelLayersWithHits = cms.int32(2),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(0),
        numTracksThreshold = cms.int32(2),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("hiSelectedProtoTracks"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(3.0),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(0.1),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ))
)


process.hiPixelAdaptiveVertexPreSplitting = cms.EDProducer("PrimaryVertexProducer",
    TkClusParameters = cms.PSet(
        TkGapClusParameters = cms.PSet(
            zSeparation = cms.double(1.0)
        ),
        algorithm = cms.string('gap')
    ),
    TkFilterParameters = cms.PSet(
        algorithm = cms.string('filterWithThreshold'),
        maxD0Significance = cms.double(3.0),
        maxEta = cms.double(100.0),
        maxNormalizedChi2 = cms.double(5.0),
        minPixelLayersWithHits = cms.int32(2),
        minPt = cms.double(0.0),
        minSiliconLayersWithHits = cms.int32(0),
        numTracksThreshold = cms.int32(2),
        trackQuality = cms.string('any')
    ),
    TrackLabel = cms.InputTag("hiSelectedProtoTracksPreSplitting"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    verbose = cms.untracked.bool(False),
    vertexCollections = cms.VPSet(cms.PSet(
        algorithm = cms.string('AdaptiveVertexFitter'),
        chi2cutoff = cms.double(3.0),
        label = cms.string(''),
        maxDistanceToBeam = cms.double(0.1),
        minNdof = cms.double(0.0),
        useBeamConstraint = cms.bool(False)
    ))
)


process.hiPixelClusterVertex = cms.EDProducer("HIPixelClusterVtxProducer",
    maxZ = cms.double(30.05),
    minZ = cms.double(-30.0),
    pixelRecHits = cms.string('siPixelRecHits'),
    zStep = cms.double(0.1)
)


process.hiPixelClusterVertexPreSplitting = cms.EDProducer("HIPixelClusterVtxProducer",
    maxZ = cms.double(30.05),
    minZ = cms.double(-30.0),
    pixelRecHits = cms.string('siPixelRecHitsPreSplitting'),
    zStep = cms.double(0.1)
)


process.hiPixelLayerQuadruplets = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3+BPix4',
        'BPix1+BPix2+BPix3+FPix1_pos',
        'BPix1+BPix2+BPix3+FPix1_neg',
        'BPix1+BPix2+FPix1_pos+FPix2_pos',
        'BPix1+BPix2+FPix1_neg+FPix2_neg',
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg'
    )
)


process.hiPixelLessStepClusters = cms.EDProducer("HITrackClusterRemover",
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    Strip = cms.PSet(
        maxChi2 = cms.double(9.0),
        maxSize = cms.uint32(2)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    overrideTrkQuals = cms.InputTag("hiMixedTripletStepSelector","hiMixedTripletStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trajectories = cms.InputTag("hiMixedTripletStepTracks")
)


process.hiPixelLessStepQual = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiPixelLessStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiPixelLessStepSelector","hiPixelLessStep")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiPixelLessStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter12'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiPixelLessStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiPixelLessStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiPixelLessStepTight'),
            preFilterName = cms.string('hiPixelLessStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiPixelLessStep'),
            preFilterName = cms.string('hiPixelLessStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiPixelLessStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(3.0),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1.0),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(True),
        originRadius = cms.double(1.0),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.7),
        ptMinScaling4BigEvts = cms.bool(True),
        scalingEndNPix = cms.double(35000),
        scalingStartNPix = cms.double(20000),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiPixelLessStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('pixelLessStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("pixelLessStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiPixelMedianVertex = cms.EDProducer("HIPixelMedianVtxProducer",
    FitBinsPerCm = cms.int32(500),
    FitMaxZ = cms.double(0.1),
    FitThreshold = cms.int32(5),
    PeakFindBinsPerCm = cms.int32(10),
    PeakFindMaxZ = cms.double(30.0),
    PeakFindThreshold = cms.uint32(100),
    PtMin = cms.double(0.075),
    TrackCollection = cms.InputTag("hiPixel3ProtoTracks")
)


process.hiPixelMedianVertexPreSplitting = cms.EDProducer("HIPixelMedianVtxProducer",
    FitBinsPerCm = cms.int32(500),
    FitMaxZ = cms.double(0.1),
    FitThreshold = cms.int32(5),
    PeakFindBinsPerCm = cms.int32(10),
    PeakFindMaxZ = cms.double(30.0),
    PeakFindThreshold = cms.uint32(100),
    PtMin = cms.double(0.075),
    TrackCollection = cms.InputTag("hiPixel3ProtoTracksPreSplitting")
)


process.hiPixelOnlyStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string(''),
    GBRForestVars = cms.vstring(),
    applyPixelMergingCuts = cms.bool(True),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiConformalPixelTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(25.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(9999.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(14.0, 0.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiPixelOnlyTrkLoose'),
            pixel_pTMaxCut = cms.vdouble(10, 5, 25, 2.5),
            pixel_pTMinCut = cms.vdouble(0.0001, 0.0, 9999, 1.0),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(18.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(9999.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(12.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiPixelOnlyTrkTight'),
            pixel_pTMaxCut = cms.vdouble(4, 2, 18, 2.5),
            pixel_pTMinCut = cms.vdouble(0.0001, 0.0, 9999, 1.0),
            preFilterName = cms.string('hiPixelOnlyTrkLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(12.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(9999.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(10.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiPixelOnlyTrkHighPurity'),
            pixel_pTMaxCut = cms.vdouble(2.4, 1.6, 12, 2.5),
            pixel_pTMinCut = cms.vdouble(0.0001, 0.0, 9999, 1.0),
            preFilterName = cms.string('hiPixelOnlyTrkTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiPixelPairClusters = cms.EDProducer("HITrackClusterRemover",
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    Strip = cms.PSet(
        maxChi2 = cms.double(9.0),
        maxSize = cms.uint32(2)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hiLowPtTripletStepClusters"),
    overrideTrkQuals = cms.InputTag("hiLowPtTripletStepSelector","hiLowPtTripletStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trajectories = cms.InputTag("hiLowPtTripletStepTracks")
)


process.hiPixelPairGlobalPrimTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('pixelPairStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiPixelPairTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiPixelPairSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        skipClusters = cms.InputTag("hiPixelPairClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
        skipClusters = cms.InputTag("hiPixelPairClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2',
        'BPix1+BPix3',
        'BPix2+BPix3',
        'BPix1+FPix1_pos',
        'BPix1+FPix1_neg',
        'BPix2+FPix1_pos',
        'BPix2+FPix1_neg',
        'FPix1_pos+FPix2_pos',
        'FPix1_neg+FPix2_neg'
    )
)


process.hiPixelPairSeeds = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    ClusterCheckPSet = cms.PSet(
        ClusterCollectionLabel = cms.InputTag("siStripClusters"),
        MaxNumberOfCosmicClusters = cms.uint32(50000000),
        MaxNumberOfPixelClusters = cms.uint32(5000000),
        PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
        doClusterCheck = cms.bool(True)
    ),
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.InputTag("hiPixelPairSeedLayers"),
        maxElement = cms.uint32(5000000)
    ),
    RegionFactoryPSet = cms.PSet(
        ComponentName = cms.string('GlobalTrackingRegionWithVerticesProducer'),
        RegionPSet = cms.PSet(
            VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            fixedError = cms.double(0.2),
            halfLengthScaling4BigEvts = cms.bool(False),
            maxNVertices = cms.int32(-1),
            maxPtMin = cms.double(1000),
            minHalfLength = cms.double(0),
            minOriginR = cms.double(0),
            nSigmaZ = cms.double(4),
            originRScaling4BigEvts = cms.bool(False),
            originRadius = cms.double(0.005),
            pixelClustersForScaling = cms.InputTag("siPixelClusters"),
            precise = cms.bool(True),
            ptMin = cms.double(1.0),
            ptMinScaling4BigEvts = cms.bool(False),
            scalingEndNPix = cms.double(1),
            scalingStartNPix = cms.double(0),
            sigmaZVertex = cms.double(4.0),
            useFakeVertices = cms.bool(False),
            useFixedError = cms.bool(False),
            useFoundVertices = cms.bool(True),
            useMultipleScattering = cms.bool(False)
        )
    ),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(True),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        MinOneOverPtError = cms.double(1.0),
        OriginTransverseErrorMultiplier = cms.double(1.0),
        SeedMomentumForBOFF = cms.double(5.0),
        TTRHBuilder = cms.string('WithTrackAngle'),
        forceKinematicWithRegionDirection = cms.bool(False),
        magneticField = cms.string('ParabolicMf'),
        propagator = cms.string('PropagatorWithMaterialParabolicMf')
    )
)


process.hiPixelPairStepHitDoubletsPhase1 = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(1000000),
    produceIntermediateHitDoublets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hiPixelPairSeedLayers"),
    trackingRegions = cms.InputTag("hiPixelPairStepTrackingRegionPhase1"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiPixelPairStepSeedsPhase1 = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(True),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hiPixelPairStepHitDoubletsPhase1__reRECO'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hiPixelPairStepHitDoubletsPhase1")
)


process.hiPixelPairStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter6'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'dxyperdxyerror',
        'dzperdzerror',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiPixelPairGlobalPrimTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiPixelPairStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.58),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiPixelPairStepTight'),
            preFilterName = cms.string('hiPixelPairStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(0.77),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiPixelPairStep'),
            preFilterName = cms.string('hiPixelPairStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiPixelPairStepTrackingRegionPhase1 = cms.EDProducer("PointSeededTrackingRegionsEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        deltaEta = cms.double(1.8),
        deltaPhi = cms.double(0.5),
        maxNRegions = cms.int32(10),
        maxNVertices = cms.int32(1),
        measurementTrackerName = cms.InputTag(""),
        mode = cms.string('VerticesSigma'),
        nSigmaZBeamSpot = cms.double(4),
        nSigmaZVertex = cms.double(4.0),
        originRadius = cms.double(0.005),
        points = cms.PSet(
            eta = cms.vdouble(0.0),
            phi = cms.vdouble(3.0)
        ),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        searchOpt = cms.bool(False),
        vertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        whereToUseMeasurementTracker = cms.string('Never'),
        zErrorBeamSpot = cms.double(24.2),
        zErrorVetex = cms.double(0.2)
    )
)


process.hiPixelPairTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiPixelPairTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiPixelPairClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiPixelPairSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiPixelTrackSeeds = cms.EDProducer("SeedGeneratorFromProtoTracksEDProducer",
    InputCollection = cms.InputTag("hiPixel3PrimTracks"),
    InputVertexCollection = cms.InputTag(""),
    SeedCreatorPSet = cms.PSet(
        ComponentName = cms.string('SeedFromConsecutiveHitsCreator'),
        MinOneOverPtError = cms.double(1),
        OriginTransverseErrorMultiplier = cms.double(1),
        SeedMomentumForBOFF = cms.double(5),
        TTRHBuilder = cms.string('WithTrackAngle'),
        forceKinematicWithRegionDirection = cms.bool(False),
        magneticField = cms.string(''),
        propagator = cms.string('PropagatorWithMaterial')
    ),
    TTRHBuilder = cms.string('WithTrackAngle'),
    originHalfLength = cms.double(1000000000),
    originRadius = cms.double(1000000000),
    useEventsWithNoVertex = cms.bool(True),
    usePV = cms.bool(False),
    useProtoTrackKinematics = cms.bool(False)
)


process.hiPrimTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('none'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('CkfTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(False),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiPixelTrackSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiProtoTrackFilter = cms.EDProducer("HIProtoTrackFilterProducer",
    beamSpot = cms.InputTag("offlineBeamSpot"),
    chi2 = cms.double(1000),
    doVariablePtMin = cms.bool(True),
    ptMin = cms.double(1),
    siPixelRecHits = cms.InputTag("siPixelRecHits"),
    tipMax = cms.double(1)
)


process.hiProtoTrackFilterPreSplitting = cms.EDProducer("HIProtoTrackFilterProducer",
    beamSpot = cms.InputTag("offlineBeamSpot"),
    chi2 = cms.double(1000),
    doVariablePtMin = cms.bool(True),
    ptMin = cms.double(1),
    siPixelRecHits = cms.InputTag("siPixelRecHitsPreSplitting"),
    tipMax = cms.double(1)
)


process.hiRegitMuClusterCheck = cms.EDProducer("ClusterCheckerEDProducer",
    ClusterCollectionLabel = cms.InputTag("siStripClusters"),
    MaxNumberOfCosmicClusters = cms.uint32(400000),
    MaxNumberOfPixelClusters = cms.uint32(40000),
    PixelClusterCollectionLabel = cms.InputTag("siPixelClusters"),
    cut = cms.string('strip < 400000 && pixel < 40000 && (strip < 50000 + 10*pixel) && (pixel < 5000 + 0.1*strip)'),
    doClusterCheck = cms.bool(False),
    silentClusterCheck = cms.untracked.bool(False)
)


process.hiRegitMuDetachedTripletStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('tight'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag("hiRegitMuPixelLessStepSelector","hiRegitMuPixelLessStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag(""),
    trajectories = cms.InputTag("hiRegitMuPixelLessStepTracks")
)


process.hiRegitMuDetachedTripletStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hiRegitMuClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiRegitMuDetachedTripletStepSeedLayers"),
    trackingRegions = cms.InputTag("hiRegitMuDetachedTripletStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiRegitMuDetachedTripletStepHitTriplets = cms.EDProducer("PixelTripletLargeTipEDProducer",
    doublets = cms.InputTag("hiRegitMuDetachedTripletStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0),
    extraHitRZtolerance = cms.double(0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiRegitMuDetachedTripletStepHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiRegitMuDetachedTripletStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiRegitMuDetachedTripletStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiRegitMuDetachedTripletStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg'
    )
)


process.hiRegitMuDetachedTripletStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiRegitMuDetachedTripletStepHitTriplets__reRECO',
        'IntermediateHitDoublets_hiRegitMuDetachedTripletStepHitDoublets__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hiRegitMuDetachedTripletStepHitTriplets")
)


process.hiRegitMuDetachedTripletStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter7'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiRegitMuDetachedTripletStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(4.0),
            name = cms.string('hiRegitMuDetachedTripletStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuDetachedTripletStepTight'),
            preFilterName = cms.string('hiRegitMuDetachedTripletStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuDetachedTripletStep'),
            preFilterName = cms.string('hiRegitMuDetachedTripletStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiRegitMuDetachedTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('hiRegitMuDetachedTripletStepTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('detachedTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('detachedTripletStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiRegitMuDetachedTripletStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiRegitMuDetachedTripletStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiRegitMuDetachedTripletStepTrackingRegions = cms.EDProducer("HIMuonTrackingRegionEDProducer",
    MuonSrc = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    MuonTrackingRegionBuilder = cms.PSet(
        DeltaEta = cms.double(0.2),
        DeltaPhi = cms.double(0.3),
        DeltaR = cms.double(2.0),
        DeltaZ = cms.double(2.0),
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        Eta_fixed = cms.bool(True),
        Eta_min = cms.double(0.1),
        MeasurementTrackerName = cms.InputTag(""),
        OnDemand = cms.int32(-1),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        Phi_fixed = cms.bool(True),
        Phi_min = cms.double(0.1),
        Pt_fixed = cms.bool(False),
        Pt_min = cms.double(0.9),
        Rescale_Dz = cms.double(4.0),
        Rescale_eta = cms.double(3.0),
        Rescale_phi = cms.double(3.0),
        UseVertex = cms.bool(True),
        Z_fixed = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        input = cms.InputTag(""),
        maxRegions = cms.int32(1),
        precise = cms.bool(True),
        vertexCollection = cms.InputTag("hiSelectedPixelVertex")
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)


process.hiRegitMuDetachedTripletStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hiRegitMuDetachedTripletStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiRegitMuDetachedTripletStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiRegitMuInitialStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hiRegitMuClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiRegitMuInitialStepSeedLayers"),
    trackingRegions = cms.InputTag("hiRegitMuInitialStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiRegitMuInitialStepHitTriplets = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("hiRegitMuInitialStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiRegitMuInitialStepHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiRegitMuInitialStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg'
    )
)


process.hiRegitMuInitialStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiRegitMuInitialStepHitTriplets__reRECO',
        'IntermediateHitDoublets_hiRegitMuInitialStepHitDoublets__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hiRegitMuInitialStepHitTriplets")
)


process.hiRegitMuInitialStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter4'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'dxyperdxyerror',
        'dzperdzerror',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiRegitMuInitialStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(4.0),
            name = cms.string('hiRegitMuInitialStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.38),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuInitialStepTight'),
            preFilterName = cms.string('hiRegitMuInitialStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.77),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuInitialStep'),
            preFilterName = cms.string('hiRegitMuInitialStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiRegitMuInitialStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiRegitMuInitialStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(1000000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiRegitMuInitialStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiRegitMuInitialStepTrackingRegions = cms.EDProducer("HIMuonTrackingRegionEDProducer",
    MuonSrc = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    MuonTrackingRegionBuilder = cms.PSet(
        DeltaEta = cms.double(0.2),
        DeltaPhi = cms.double(0.3),
        DeltaR = cms.double(1),
        DeltaZ = cms.double(1),
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        Eta_fixed = cms.bool(True),
        Eta_min = cms.double(0.1),
        MeasurementTrackerName = cms.InputTag(""),
        OnDemand = cms.int32(-1),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        Phi_fixed = cms.bool(True),
        Phi_min = cms.double(0.1),
        Pt_fixed = cms.bool(False),
        Pt_min = cms.double(3.0),
        Rescale_Dz = cms.double(4.0),
        Rescale_eta = cms.double(3.0),
        Rescale_phi = cms.double(3.0),
        UseVertex = cms.bool(True),
        Z_fixed = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        input = cms.InputTag(""),
        maxRegions = cms.int32(1),
        precise = cms.bool(True),
        vertexCollection = cms.InputTag("hiSelectedPixelVertex")
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)


process.hiRegitMuInitialStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hiRegitMuInitialStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiRegitMuInitialStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiRegitMuMixedTripletStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('tight'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hiRegitMuPixelPairStepClusters"),
    overrideTrkQuals = cms.InputTag("hiRegitMuPixelPairStepSelector","hiRegitMuPixelPairStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag(""),
    trajectories = cms.InputTag("hiRegitMuPixelPairStepTracks")
)


process.hiRegitMuMixedTripletStepHitDoubletsA = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hiRegitMuClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiRegitMuMixedTripletStepSeedLayersA"),
    trackingRegions = cms.InputTag("hiRegitMuMixedTripletStepTrackingRegionsA"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiRegitMuMixedTripletStepHitDoubletsB = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hiRegitMuClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiRegitMuMixedTripletStepSeedLayersB"),
    trackingRegions = cms.InputTag("hiRegitMuMixedTripletStepTrackingRegionsB"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiRegitMuMixedTripletStepHitTripletsA = cms.EDProducer("PixelTripletLargeTipEDProducer",
    doublets = cms.InputTag("hiRegitMuMixedTripletStepHitDoubletsA"),
    extraHitRPhitolerance = cms.double(0),
    extraHitRZtolerance = cms.double(0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiRegitMuMixedTripletStepHitDoubletsA__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiRegitMuMixedTripletStepHitTripletsB = cms.EDProducer("PixelTripletLargeTipEDProducer",
    doublets = cms.InputTag("hiRegitMuMixedTripletStepHitDoubletsB"),
    extraHitRPhitolerance = cms.double(0),
    extraHitRZtolerance = cms.double(0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiRegitMuMixedTripletStepHitDoubletsB__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.hiRegitMuMixedTripletStepSeedLayersA = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiRegitMuMixedTripletStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiRegitMuMixedTripletStepClusters")
    ),
    TEC = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        maxRing = cms.int32(1),
        minRing = cms.int32(1),
        skipClusters = cms.InputTag("hiRegitMuMixedTripletStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg',
        'BPix2+FPix1_pos+FPix2_pos',
        'BPix2+FPix1_neg+FPix2_neg'
    )
)


process.hiRegitMuMixedTripletStepSeedLayersB = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiRegitMuMixedTripletStepClusters")
    ),
    TIB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        skipClusters = cms.InputTag("hiRegitMuMixedTripletStepClusters")
    ),
    layerList = cms.vstring('BPix2+BPix3+TIB1')
)


process.hiRegitMuMixedTripletStepSeeds = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag(cms.InputTag("hiRegitMuMixedTripletStepSeedsA"), cms.InputTag("hiRegitMuMixedTripletStepSeedsB"))
)


process.hiRegitMuMixedTripletStepSeedsA = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('mixedTripletStepClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(True)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiRegitMuMixedTripletStepHitTripletsA__reRECO',
        'IntermediateHitDoublets_hiRegitMuMixedTripletStepHitDoubletsA__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hiRegitMuMixedTripletStepHitTripletsA")
)


process.hiRegitMuMixedTripletStepSeedsB = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('mixedTripletStepClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(True)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiRegitMuMixedTripletStepHitTripletsB__reRECO',
        'IntermediateHitDoublets_hiRegitMuMixedTripletStepHitDoubletsB__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hiRegitMuMixedTripletStepHitTripletsB")
)


process.hiRegitMuMixedTripletStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter7'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiRegitMuMixedTripletStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(4.0),
            name = cms.string('hiRegitMuMixedTripletStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuMixedTripletStepTight'),
            preFilterName = cms.string('hiRegitMuMixedTripletStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuMixedTripletStep'),
            preFilterName = cms.string('hiRegitMuMixedTripletStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiRegitMuMixedTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiRegitMuMixedTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('mixedTripletStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiRegitMuMixedTripletStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(1000000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiRegitMuMixedTripletStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiRegitMuMixedTripletStepTrackingRegionsA = cms.EDProducer("HIMuonTrackingRegionEDProducer",
    MuonSrc = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    MuonTrackingRegionBuilder = cms.PSet(
        DeltaEta = cms.double(0.2),
        DeltaPhi = cms.double(0.3),
        DeltaR = cms.double(0.5),
        DeltaZ = cms.double(0.5),
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        Eta_fixed = cms.bool(True),
        Eta_min = cms.double(0.1),
        MeasurementTrackerName = cms.InputTag(""),
        OnDemand = cms.int32(-1),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        Phi_fixed = cms.bool(True),
        Phi_min = cms.double(0.1),
        Pt_fixed = cms.bool(False),
        Pt_min = cms.double(1.3),
        Rescale_Dz = cms.double(4.0),
        Rescale_eta = cms.double(3.0),
        Rescale_phi = cms.double(3.0),
        UseVertex = cms.bool(True),
        Z_fixed = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        input = cms.InputTag(""),
        maxRegions = cms.int32(1),
        precise = cms.bool(True),
        vertexCollection = cms.InputTag("hiSelectedPixelVertex")
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)


process.hiRegitMuMixedTripletStepTrackingRegionsB = cms.EDProducer("HIMuonTrackingRegionEDProducer",
    MuonSrc = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    MuonTrackingRegionBuilder = cms.PSet(
        DeltaEta = cms.double(0.2),
        DeltaPhi = cms.double(0.3),
        DeltaR = cms.double(0.5),
        DeltaZ = cms.double(0.5),
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        Eta_fixed = cms.bool(True),
        Eta_min = cms.double(0.1),
        MeasurementTrackerName = cms.InputTag(""),
        OnDemand = cms.int32(-1),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        Phi_fixed = cms.bool(True),
        Phi_min = cms.double(0.1),
        Pt_fixed = cms.bool(False),
        Pt_min = cms.double(1.5),
        Rescale_Dz = cms.double(4.0),
        Rescale_eta = cms.double(3.0),
        Rescale_phi = cms.double(3.0),
        UseVertex = cms.bool(True),
        Z_fixed = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        input = cms.InputTag(""),
        maxRegions = cms.int32(1),
        precise = cms.bool(True),
        vertexCollection = cms.InputTag("hiSelectedPixelVertex")
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)


process.hiRegitMuMixedTripletStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hiRegitMuMixedTripletStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiRegitMuMixedTripletStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiRegitMuPixelLessStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('tight'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("hiRegitMuMixedTripletStepClusters"),
    overrideTrkQuals = cms.InputTag("hiRegitMuMixedTripletStepSelector","hiRegitMuMixedTripletStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag(""),
    trajectories = cms.InputTag("hiRegitMuMixedTripletStepTracks")
)


process.hiRegitMuPixelLessStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hiRegitMuClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("hiRegitMuPixelLessStepSeedLayers"),
    trackingRegions = cms.InputTag("hiRegitMuPixelLessStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiRegitMuPixelLessStepHitTriplets = cms.EDProducer("MultiHitFromChi2EDProducer",
    ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    chi2VsPtCut = cms.bool(True),
    chi2_cuts = cms.vdouble(3, 4, 5, 5),
    detIdsToDebug = cms.vint32(0, 0, 0),
    doublets = cms.InputTag("hiRegitMuPixelLessStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0),
    extraHitRZtolerance = cms.double(0),
    extraPhiKDBox = cms.double(0.005),
    extraRKDBox = cms.double(0.2),
    extraZKDBox = cms.double(0.2),
    fnSigmaRZ = cms.double(2),
    maxChi2 = cms.double(5),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_hiRegitMuPixelLessStepHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    pt_interv = cms.vdouble(0.4, 0.7, 1, 2),
    refitHits = cms.bool(True),
    useFixedPreFiltering = cms.bool(False)
)


process.hiRegitMuPixelLessStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    MTEC = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        maxRing = cms.int32(3),
        minRing = cms.int32(3),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
        skipClusters = cms.InputTag("hiRegitMuPixelLessStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    MTIB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
        skipClusters = cms.InputTag("hiRegitMuPixelLessStepClusters")
    ),
    MTID = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        maxRing = cms.int32(3),
        minRing = cms.int32(3),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
        skipClusters = cms.InputTag("hiRegitMuPixelLessStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    TEC = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        maxRing = cms.int32(2),
        minRing = cms.int32(1),
        skipClusters = cms.InputTag("hiRegitMuPixelLessStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    TIB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        skipClusters = cms.InputTag("hiRegitMuPixelLessStepClusters")
    ),
    TID = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        maxRing = cms.int32(2),
        minRing = cms.int32(1),
        skipClusters = cms.InputTag("hiRegitMuPixelLessStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    layerList = cms.vstring(
        'TIB1+TIB2+MTIB3',
        'TIB1+TIB2+MTIB4',
        'TIB1+TIB2+MTID1_pos',
        'TIB1+TIB2+MTID1_neg',
        'TID1_pos+TID2_pos+TID3_pos',
        'TID1_neg+TID2_neg+TID3_neg',
        'TID1_pos+TID2_pos+MTID3_pos',
        'TID1_neg+TID2_neg+MTID3_neg',
        'TID1_pos+TID2_pos+MTEC1_pos',
        'TID1_neg+TID2_neg+MTEC1_neg',
        'TID2_pos+TID3_pos+TEC1_pos',
        'TID2_neg+TID3_neg+TEC1_neg',
        'TID2_pos+TID3_pos+MTEC1_pos',
        'TID2_neg+TID3_neg+MTEC1_neg',
        'TEC1_pos+TEC2_pos+TEC3_pos',
        'TEC1_neg+TEC2_neg+TEC3_neg',
        'TEC1_pos+TEC2_pos+MTEC3_pos',
        'TEC1_neg+TEC2_neg+MTEC3_neg',
        'TEC1_pos+TEC2_pos+TEC4_pos',
        'TEC1_neg+TEC2_neg+TEC4_neg',
        'TEC1_pos+TEC2_pos+MTEC4_pos',
        'TEC1_neg+TEC2_neg+MTEC4_neg',
        'TEC2_pos+TEC3_pos+TEC4_pos',
        'TEC2_neg+TEC3_neg+TEC4_neg',
        'TEC2_pos+TEC3_pos+MTEC4_pos',
        'TEC2_neg+TEC3_neg+MTEC4_neg',
        'TEC2_pos+TEC3_pos+TEC5_pos',
        'TEC2_neg+TEC3_neg+TEC5_neg',
        'TEC2_pos+TEC3_pos+TEC6_pos',
        'TEC2_neg+TEC3_neg+TEC6_neg',
        'TEC3_pos+TEC4_pos+TEC5_pos',
        'TEC3_neg+TEC4_neg+TEC5_neg',
        'TEC3_pos+TEC4_pos+MTEC5_pos',
        'TEC3_neg+TEC4_neg+MTEC5_neg',
        'TEC3_pos+TEC5_pos+TEC6_pos',
        'TEC3_neg+TEC5_neg+TEC6_neg',
        'TEC4_pos+TEC5_pos+TEC6_pos',
        'TEC4_neg+TEC5_neg+TEC6_neg'
    )
)


process.hiRegitMuPixelLessStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('CombinedSeedComparitor'),
        comparitors = cms.VPSet(
            cms.PSet(
                ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
                ClusterShapeHitFilterName = cms.string('pixelLessStepClusterShapeHitFilter'),
                ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
                FilterAtHelixStage = cms.bool(True),
                FilterPixelHits = cms.bool(False),
                FilterStripHits = cms.bool(True)
            ),
            cms.PSet(
                ComponentName = cms.string('StripSubClusterShapeSeedFilter'),
                FilterAtHelixStage = cms.bool(False),
                label = cms.untracked.string('Seeds'),
                maxNSat = cms.uint32(3),
                maxTrimmedSizeDiffNeg = cms.double(1.0),
                maxTrimmedSizeDiffPos = cms.double(0.7),
                seedCutMIPs = cms.double(0.35),
                seedCutSN = cms.double(7.0),
                subclusterCutMIPs = cms.double(0.45),
                subclusterCutSN = cms.double(12.0),
                subclusterWindow = cms.double(0.7),
                trimMaxADC = cms.double(30.0),
                trimMaxFracNeigh = cms.double(0.25),
                trimMaxFracTotal = cms.double(0.15)
            )
        ),
        mode = cms.string('and')
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_hiRegitMuPixelLessStepHitTriplets__reRECO',
        'BaseTrackerRecHitsOwned_hiRegitMuPixelLessStepHitTriplets__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hiRegitMuPixelLessStepHitTriplets")
)


process.hiRegitMuPixelLessStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter7'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiRegitMuPixelLessStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(4.0),
            name = cms.string('hiRegitMuPixelLessStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuPixelLessStepTight'),
            preFilterName = cms.string('hiRegitMuPixelLessStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuPixelLessStep'),
            preFilterName = cms.string('hiRegitMuPixelLessStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiRegitMuPixelLessStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('hiRegitMuPixelLessStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('pixelLessStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiRegitMuPixelLessStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(1000000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiRegitMuPixelLessStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiRegitMuPixelLessStepTrackingRegions = cms.EDProducer("HIMuonTrackingRegionEDProducer",
    MuonSrc = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    MuonTrackingRegionBuilder = cms.PSet(
        DeltaEta = cms.double(0.1),
        DeltaPhi = cms.double(0.2),
        DeltaR = cms.double(0.2),
        DeltaZ = cms.double(0.2),
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        Eta_fixed = cms.bool(True),
        Eta_min = cms.double(0.1),
        MeasurementTrackerName = cms.InputTag(""),
        OnDemand = cms.int32(-1),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        Phi_fixed = cms.bool(True),
        Phi_min = cms.double(0.1),
        Pt_fixed = cms.bool(False),
        Pt_min = cms.double(2.0),
        Rescale_Dz = cms.double(4.0),
        Rescale_eta = cms.double(3.0),
        Rescale_phi = cms.double(3.0),
        UseVertex = cms.bool(True),
        Z_fixed = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        input = cms.InputTag(""),
        maxRegions = cms.int32(1),
        precise = cms.bool(True),
        vertexCollection = cms.InputTag("hiSelectedPixelVertex")
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)


process.hiRegitMuPixelLessStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hiRegitMuPixelLessStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiRegitMuPixelLessStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiRegitMuPixelPairStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('tight'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag("hiRegitMuInitialStepSelector","hiRegitMuInitialStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag(""),
    trajectories = cms.InputTag("hiRegitMuInitialStepTracks")
)


process.hiRegitMuPixelPairStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("hiRegitMuClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(1000000),
    produceIntermediateHitDoublets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("hiRegitMuPixelPairStepSeedLayers"),
    trackingRegions = cms.InputTag("hiRegitMuPixelPairStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.hiRegitMuPixelPairStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiRegitMuPixelPairStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiRegitMuPixelPairStepClusters")
    ),
    layerList = cms.vstring(
        'BPix1+BPix2',
        'BPix1+BPix3',
        'BPix2+BPix3',
        'BPix1+FPix1_pos',
        'BPix1+FPix1_neg',
        'BPix2+FPix1_pos',
        'BPix2+FPix1_neg',
        'FPix1_pos+FPix2_pos',
        'FPix1_neg+FPix2_neg'
    )
)


process.hiRegitMuPixelPairStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(True),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_hiRegitMuPixelPairStepHitDoublets__reRECO'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("hiRegitMuPixelPairStepHitDoublets")
)


process.hiRegitMuPixelPairStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter6'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'dxyperdxyerror',
        'dzperdzerror',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiRegitMuPixelPairStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(4.0),
            name = cms.string('hiRegitMuPixelPairStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.58),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuPixelPairStepTight'),
            preFilterName = cms.string('hiRegitMuPixelPairStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(0.77),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuPixelPairStep'),
            preFilterName = cms.string('hiRegitMuPixelPairStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiRegitMuPixelPairStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('hiRegitMuPixelPairStepTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('pixelPairStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiRegitMuPixelPairStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(1000000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiRegitMuPixelPairStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.hiRegitMuPixelPairStepTrackingRegions = cms.EDProducer("HIMuonTrackingRegionEDProducer",
    MuonSrc = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    MuonTrackingRegionBuilder = cms.PSet(
        DeltaEta = cms.double(0.2),
        DeltaPhi = cms.double(0.3),
        DeltaR = cms.double(0.01),
        DeltaZ = cms.double(0.09),
        EtaR_UpperLimit_Par1 = cms.double(0.25),
        EtaR_UpperLimit_Par2 = cms.double(0.15),
        Eta_fixed = cms.bool(True),
        Eta_min = cms.double(0.1),
        MeasurementTrackerName = cms.InputTag(""),
        OnDemand = cms.int32(-1),
        PhiR_UpperLimit_Par1 = cms.double(0.6),
        PhiR_UpperLimit_Par2 = cms.double(0.2),
        Phi_fixed = cms.bool(True),
        Phi_min = cms.double(0.1),
        Pt_fixed = cms.bool(False),
        Pt_min = cms.double(1.0),
        Rescale_Dz = cms.double(0.0),
        Rescale_eta = cms.double(3.0),
        Rescale_phi = cms.double(3.0),
        UseVertex = cms.bool(True),
        Z_fixed = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        input = cms.InputTag(""),
        maxRegions = cms.int32(1),
        precise = cms.bool(True),
        vertexCollection = cms.InputTag("hiSelectedPixelVertex")
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    )
)


process.hiRegitMuPixelPairStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hiRegitMuPixelPairStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    clustersToSkip = cms.InputTag("hiRegitMuPixelPairStepClusters"),
    src = cms.InputTag("hiRegitMuPixelPairStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiRegitMuonSeededSeedsInOut = cms.EDProducer("MuonReSeeder",
    DoPredictionsOnly = cms.bool(False),
    Fitter = cms.string('KFFitterForRefitInsideOut'),
    MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
    Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
    RefitDirection = cms.string('alongMomentum'),
    RefitRPCHits = cms.bool(True),
    Smoother = cms.string('KFSmootherForRefitInsideOut'),
    TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
    cut = cms.string('pt > 2'),
    debug = cms.untracked.bool(False),
    insideOut = cms.bool(True),
    layersToKeep = cms.int32(5),
    src = cms.InputTag("hiEarlyMuons")
)


process.hiRegitMuonSeededSeedsOutIn = cms.EDProducer("OutsideInMuonSeeder",
    cut = cms.string('pt > 10 && outerTrack.hitPattern.muonStationsWithValidHits >= 2'),
    debug = cms.untracked.bool(False),
    errorRescaleFactor = cms.double(2.0),
    fromVertex = cms.bool(True),
    hitCollector = cms.string('hitCollectorForOutInMuonSeeds'),
    hitsToTry = cms.int32(3),
    layersToTry = cms.int32(3),
    maxEtaForTOB = cms.double(1.8),
    minEtaForTEC = cms.double(0.7),
    muonPropagator = cms.string('SteppingHelixPropagatorAlong'),
    src = cms.InputTag("hiEarlyMuons"),
    trackerPropagator = cms.string('PropagatorWithMaterial')
)


process.hiRegitMuonSeededTrackCandidatesInOut = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('none'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryBuilderForInOut')
    ),
    TrajectoryCleaner = cms.string('muonSeededTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiRegitMuonSeededSeedsInOut"),
    useHitsSplitting = cms.bool(True)
)


process.hiRegitMuonSeededTrackCandidatesOutIn = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryBuilderForOutIn')
    ),
    TrajectoryCleaner = cms.string('muonSeededTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(False),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("hiRegitMuonSeededSeedsOutIn"),
    useHitsSplitting = cms.bool(True)
)


process.hiRegitMuonSeededTracksInOut = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hiRegitMuMuonSeededStepInOut'),
    Fitter = cms.string('muonSeededFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiRegitMuonSeededTrackCandidatesInOut"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiRegitMuonSeededTracksInOutSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter7'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiRegitMuonSeededTracksInOut"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(4.0),
            name = cms.string('hiRegitMuonSeededTracksInOutLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuonSeededTracksInOutTight'),
            preFilterName = cms.string('hiRegitMuonSeededTracksInOutLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuonSeededTracksInOutHighPurity'),
            preFilterName = cms.string('hiRegitMuonSeededTracksInOutTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiRegitMuonSeededTracksOutIn = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('hiRegitMuMuonSeededStepOutIn'),
    Fitter = cms.string('muonSeededFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("hiRegitMuonSeededTrackCandidatesOutIn"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiRegitMuonSeededTracksOutInSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter7'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiRegitMuonSeededTracksOutIn"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(4.0),
            name = cms.string('hiRegitMuonSeededTracksOutInLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuonSeededTracksOutInTight'),
            preFilterName = cms.string('hiRegitMuonSeededTracksOutInLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiRegitMuonSeededTracksOutInHighPurity'),
            preFilterName = cms.string('hiRegitMuonSeededTracksOutInTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(True),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiSelectedPixelVertex = cms.EDProducer("HIBestVertexProducer",
    adaptiveVertexCollection = cms.InputTag("hiBestAdaptiveVertex"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    medianVertexCollection = cms.InputTag("hiPixelMedianVertex"),
    useFinalAdaptiveVertexCollection = cms.bool(False)
)


process.hiSelectedTracks = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiGlobalPrimTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiInitialStepSelector","hiInitialStep")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiSelectedVertex = cms.EDProducer("HIBestVertexProducer",
    adaptiveVertexCollection = cms.InputTag("hiBestAdaptiveVertex"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    finalAdaptiveVertexCollection = cms.InputTag("hiBestOfflinePrimaryVertex"),
    medianVertexCollection = cms.InputTag("hiPixelMedianVertex"),
    useFinalAdaptiveVertexCollection = cms.bool(True)
)


process.hiSelectedVertexPreSplitting = cms.EDProducer("HIBestVertexProducer",
    adaptiveVertexCollection = cms.InputTag("hiBestAdaptiveVertexPreSplitting"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    medianVertexCollection = cms.InputTag("hiPixelMedianVertexPreSplitting"),
    useFinalAdaptiveVertexCollection = cms.bool(False)
)


process.hiSpikeCleanedSC = cms.EDProducer("HiSpikeCleaner",
    TimingCut = cms.untracked.double(4.0),
    etCut = cms.double(10),
    originalSuperClusterProducer = cms.InputTag("correctedIslandBarrelSuperClusters"),
    outputColl = cms.string(''),
    recHitProducerBarrel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    recHitProducerEndcap = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    swissCutThr = cms.untracked.double(0.95)
)


process.hiTobTecStepClusters = cms.EDProducer("HITrackClusterRemover",
    Common = cms.PSet(
        maxChi2 = cms.double(9.0)
    ),
    Strip = cms.PSet(
        maxChi2 = cms.double(9.0),
        maxSize = cms.uint32(2)
    ),
    TrackQuality = cms.string('highPurity'),
    clusterLessSolution = cms.bool(True),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    overrideTrkQuals = cms.InputTag("hiPixelLessStepSelector","hiPixelLessStep"),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trajectories = cms.InputTag("hiPixelLessStepTracks")
)


process.hiTobTecStepQual = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag("hiTobTecStepTracks")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(1),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    makeReKeyedSeeds = cms.untracked.bool(False),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag("hiTobTecStepSelector","hiTobTecStep")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.hiTobTecStepSelector = cms.EDProducer("HIMultiTrackSelector",
    GBRForestLabel = cms.string('HIMVASelectorIter13'),
    GBRForestVars = cms.vstring(
        'chi2perdofperlayer',
        'nhits',
        'nlayers',
        'eta'
    ),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("hiTobTecStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999.0),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.2),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-1),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiTobTecStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.25),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(5.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(5.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.075),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.2),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiTobTecStepTight'),
            preFilterName = cms.string('hiTobTecStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(0.15),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(True),
            d0_par1 = cms.vdouble(9999.0, 0.0),
            d0_par2 = cms.vdouble(3.0, 0.0),
            dz_par1 = cms.vdouble(9999.0, 0.0),
            dz_par2 = cms.vdouble(3.0, 0.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(0.05),
            max_z0 = cms.double(100),
            minHitsToBypassChecks = cms.uint32(999),
            minMVA = cms.double(-0.09),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(8),
            nSigmaZ = cms.double(9999.0),
            name = cms.string('hiTobTecStep'),
            preFilterName = cms.string('hiTobTecStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(99999.0, 99999.0),
            useMVA = cms.bool(False),
            vertexCut = cms.string(''),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(True),
    vertices = cms.InputTag("hiSelectedPixelVertex")
)


process.hiTobTecStepTrackingRegionsPair = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(7.5),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1.5),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(True),
        originRadius = cms.double(6.0),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        ptMinScaling4BigEvts = cms.bool(True),
        scalingEndNPix = cms.double(35000),
        scalingStartNPix = cms.double(20000),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiTobTecStepTrackingRegionsTripl = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(5.0),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1.2),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(True),
        originRadius = cms.double(3.5),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        ptMinScaling4BigEvts = cms.bool(True),
        scalingEndNPix = cms.double(35000),
        scalingStartNPix = cms.double(20000),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiTobTecStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('tobTecStep'),
    Fitter = cms.string('tobTecFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("tobTecStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.hiTrackingRegionFromClusterVtx = cms.EDProducer("HITrackingRegionForPrimaryVtxEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiPixelClusterVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        directionXCoord = cms.double(1),
        directionYCoord = cms.double(1),
        directionZCoord = cms.double(0),
        doVariablePtMin = cms.bool(True),
        fixedError = cms.double(3),
        nSigmaZ = cms.double(3),
        originRadius = cms.double(0.2),
        precise = cms.bool(True),
        ptMin = cms.double(0.7),
        siPixelRecHits = cms.InputTag("siPixelRecHits"),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.hiTrackingRegionWithVertex = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("hiSelectedPixelVertex"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(0.2),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1000),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(3.0),
        originRScaling4BigEvts = cms.bool(False),
        originRadius = cms.double(0.1),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.9),
        ptMinScaling4BigEvts = cms.bool(False),
        scalingEndNPix = cms.double(1),
        scalingStartNPix = cms.double(0),
        sigmaZVertex = cms.double(3.0),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(False)
    )
)


process.highPtTripletStep = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorHighPtTripletStep_Phase1')
    ),
    qualityCuts = cms.vdouble(0.2, 0.3, 0.4),
    src = cms.InputTag("highPtTripletStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.highPtTripletStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("")
)


process.highPtTripletStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("trackerClusterCheck"),
    layerPairs = cms.vuint32(0, 1),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("highPtTripletStepSeedLayers"),
    trackingRegions = cms.InputTag("highPtTripletStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.highPtTripletStepHitTriplets = cms.EDProducer("CAHitTripletEDProducer",
    CAHardPtCut = cms.double(0.3),
    CAPhiCut = cms.double(0.07),
    CAThetaCut = cms.double(0.004),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("highPtTripletStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.8),
        pt2 = cms.double(8),
        value1 = cms.double(100),
        value2 = cms.double(6)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_highPtTripletStepHitDoublets__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.highPtTripletStepMasks = cms.EDProducer("FastTrackerRecHitMaskProducer",
    TrackQuality = cms.string('highPurity'),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    minNumberOfLayersWithMeasBeforeFiltering_ = cms.int32(0),
    oldHitRemovalInfo = cms.InputTag(""),
    recHits = cms.InputTag("fastTrackerRecHits"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trackQuality = cms.string('hightPurity'),
    trajectories = cms.InputTag("")
)


process.highPtTripletStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("highPtTripletStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("highPtTripletStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix2+BPix3+BPix4',
        'BPix1+BPix3+BPix4',
        'BPix1+BPix2+BPix4',
        'BPix2+BPix3+FPix1_pos',
        'BPix2+BPix3+FPix1_neg',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+BPix3+FPix1_pos',
        'BPix1+BPix3+FPix1_neg',
        'BPix2+FPix1_pos+FPix2_pos',
        'BPix2+FPix1_neg+FPix2_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg',
        'BPix1+BPix2+FPix2_pos',
        'BPix1+BPix2+FPix2_neg',
        'FPix1_pos+FPix2_pos+FPix3_pos',
        'FPix1_neg+FPix2_neg+FPix3_neg',
        'BPix1+FPix2_pos+FPix3_pos',
        'BPix1+FPix2_neg+FPix3_neg',
        'BPix1+FPix1_pos+FPix3_pos',
        'BPix1+FPix1_neg+FPix3_neg'
    )
)


process.highPtTripletStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_highPtTripletStepHitTriplets__reRECO'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("highPtTripletStepHitTriplets")
)


process.highPtTripletStepSelector = cms.EDProducer("MultiTrackSelector",
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("highPtTripletStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(2.0),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.7, 4.0),
            d0_par2 = cms.vdouble(0.6, 4.0),
            dz_par1 = cms.vdouble(0.8, 4.0),
            dz_par2 = cms.vdouble(0.6, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(3),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('highPtTripletStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.002),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.0),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.6, 4.0),
            d0_par2 = cms.vdouble(0.5, 4.0),
            dz_par1 = cms.vdouble(0.7, 4.0),
            dz_par2 = cms.vdouble(0.6, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('highPtTripletStepTight'),
            preFilterName = cms.string('highPtTripletStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.002),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.8),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.6, 4.0),
            d0_par2 = cms.vdouble(0.45, 4.0),
            dz_par1 = cms.vdouble(0.7, 4.0),
            dz_par2 = cms.vdouble(0.55, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(4),
            minNumberLayers = cms.uint32(4),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(4),
            nSigmaZ = cms.double(4.0),
            name = cms.string('highPtTripletStep'),
            preFilterName = cms.string('highPtTripletStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.highPtTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('highPtTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("highPtTripletStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("highPtTripletStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.highPtTripletStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(4),
        originHalfLength = cms.double(0),
        originRadius = cms.double(0.02),
        precise = cms.bool(True),
        ptMin = cms.double(0.55),
        useMultipleScattering = cms.bool(False)
    )
)


process.highPtTripletStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('highPtTripletStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("highPtTripletStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.horeco = cms.EDProducer("HcalHitReconstructor",
    Subdetector = cms.string('HO'),
    correctForPhaseContainment = cms.bool(True),
    correctForTimeslew = cms.bool(True),
    correctTiming = cms.bool(True),
    correctionPhaseNS = cms.double(13.0),
    dataOOTCorrectionCategory = cms.string('Data'),
    dataOOTCorrectionName = cms.string(''),
    digiLabel = cms.InputTag("hcalDigis"),
    dropZSmarkedPassed = cms.bool(True),
    firstAuxTS = cms.int32(4),
    firstSample = cms.int32(4),
    mcOOTCorrectionCategory = cms.string('MC'),
    mcOOTCorrectionName = cms.string(''),
    recoParamsFromDB = cms.bool(True),
    samplesToAdd = cms.int32(4),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    setHSCPFlags = cms.bool(True),
    setNegativeFlags = cms.bool(False),
    setNoiseFlags = cms.bool(True),
    setPulseShapeFlags = cms.bool(False),
    setSaturationFlags = cms.bool(True),
    setTimingTrustFlags = cms.bool(False),
    tsFromDB = cms.bool(True),
    useLeakCorrection = cms.bool(False)
)


process.horecoMB = cms.EDProducer("HcalSimpleReconstructor",
    Subdetector = cms.string('HO'),
    correctForPhaseContainment = cms.bool(True),
    correctForTimeslew = cms.bool(True),
    correctionPhaseNS = cms.double(13),
    digiLabel = cms.InputTag("hcalDigis"),
    dropZSmarkedPassed = cms.bool(False),
    firstSample = cms.int32(4),
    samplesToAdd = cms.int32(4),
    tsFromDB = cms.bool(True)
)


process.hybridSuperClusters = cms.EDProducer("UnifiedSCCollectionProducer",
    bcCollection = cms.string('hybridBarrelBasicClusters'),
    bcCollectionUncleanOnly = cms.string('uncleanOnlyHybridBarrelBasicClusters'),
    cleanBcCollection = cms.InputTag("cleanedHybridSuperClusters","hybridBarrelBasicClusters"),
    cleanScCollection = cms.InputTag("cleanedHybridSuperClusters"),
    scCollection = cms.string(''),
    scCollectionUncleanOnly = cms.string('uncleanOnlyHybridSuperClusters'),
    uncleanBcCollection = cms.InputTag("uncleanedHybridSuperClusters","hybridBarrelBasicClusters"),
    uncleanScCollection = cms.InputTag("uncleanedHybridSuperClusters")
)


process.ic5CaloJetsL1FastL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ic5CaloL1FastL2L3'),
    src = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5CaloJetsL1FastL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ic5CaloL1FastL2L3Residual'),
    src = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ic5CaloL1L2L3'),
    src = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5CaloJetsL1L2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ic5CaloL1L2L3Residual'),
    src = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ic5CaloL2L3'),
    src = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5CaloJetsL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('ic5CaloL2L3Residual'),
    src = cms.InputTag("iterativeCone5CaloJets")
)


process.ic5PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ic5PFL1FastL2L3'),
    src = cms.InputTag("iterativeCone5PFJets")
)


process.ic5PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ic5PFL1FastL2L3Residual'),
    src = cms.InputTag("iterativeCone5PFJets")
)


process.ic5PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ic5PFL1L2L3'),
    src = cms.InputTag("iterativeCone5PFJets")
)


process.ic5PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ic5PFL1L2L3Residual'),
    src = cms.InputTag("iterativeCone5PFJets")
)


process.ic5PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ic5PFL2L3'),
    src = cms.InputTag("iterativeCone5PFJets")
)


process.ic5PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('ic5PFL2L3Residual'),
    src = cms.InputTag("iterativeCone5PFJets")
)


process.initialStep = cms.EDProducer("ClassifierMerger",
    inputClassifiers = cms.vstring(
        'initialStepClassifier1',
        'initialStepClassifier2',
        'initialStepClassifier3'
    )
)


process.initialStepClassifier1 = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter0_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.9, -0.8, -0.7),
    src = cms.InputTag("initialStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.initialStepClassifier2 = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter3_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.5, 0.0, 0.5),
    src = cms.InputTag("initialStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.initialStepClassifier3 = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter1_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.6, -0.3, -0.1),
    src = cms.InputTag("initialStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.initialStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("trackerClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("initialStepSeedLayers"),
    trackingRegions = cms.InputTag("initialStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.initialStepHitQuadruplets = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0),
    CAPhiCut = cms.double(0.2),
    CAThetaCut = cms.double(0.0012),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("initialStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2),
        value1 = cms.double(200),
        value2 = cms.double(50)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_initialStepHitDoublets__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.initialStepHitTriplets = cms.EDProducer("PixelTripletHLTEDProducer",
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("initialStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    extraHitRZtolerance = cms.double(0.037),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_initialStepHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.initialStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle')
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg'
    )
)


process.initialStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_initialStepHitTriplets__reRECO',
        'IntermediateHitDoublets_initialStepHitDoublets__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("initialStepHitTriplets")
)


process.initialStepSelector = cms.EDProducer("MultiTrackSelector",
    GBRForestLabel = cms.string('MVASelectorIter0'),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("initialStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('initialStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.7),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.3, 4.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('initialStepTight'),
            preFilterName = cms.string('initialStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.7),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.3, 4.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('QualityMasks'),
            preFilterName = cms.string('initialStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.initialStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('initialStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("initialStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.initialStepTrackRefsForJets = cms.EDProducer("ChargedRefCandidateProducer",
    particleType = cms.string('pi+'),
    src = cms.InputTag("initialStepTracks")
)


process.initialStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(4),
        originHalfLength = cms.double(0),
        originRadius = cms.double(0.02),
        precise = cms.bool(True),
        ptMin = cms.double(0.6),
        useMultipleScattering = cms.bool(False)
    )
)


process.initialStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('initialStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("initialStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.interestingEcalDetIdEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("hybridSuperClusters","hybridBarrelBasicClusters"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    severityLevel = cms.int32(1)
)


process.interestingEcalDetIdEBU = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("hybridSuperClusters","uncleanOnlyHybridBarrelBasicClusters"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    severityLevel = cms.int32(1)
)


process.interestingEcalDetIdEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapBasicClusters"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    severityLevel = cms.int32(1)
)


process.interestingEcalDetIdOOTPFEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("particleFlowSuperClusterOOTECAL","particleFlowBasicClusterOOTECALBarrel"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    severityLevel = cms.int32(1)
)


process.interestingEcalDetIdOOTPFEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("particleFlowSuperClusterOOTECAL","particleFlowBasicClusterOOTECALEndcap"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    severityLevel = cms.int32(1)
)


process.interestingEcalDetIdOOTPFES = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("particleFlowSuperClusterOOTECAL","particleFlowBasicClusterOOTECALPreshower"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(False),
    keepNextToDead = cms.bool(False),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    severityLevel = cms.int32(-1)
)


process.interestingEcalDetIdPFEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("particleFlowSuperClusterECAL","particleFlowBasicClusterECALBarrel"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    severityLevel = cms.int32(1)
)


process.interestingEcalDetIdPFEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("particleFlowSuperClusterECAL","particleFlowBasicClusterECALEndcap"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    severityLevel = cms.int32(1)
)


process.interestingEcalDetIdPFES = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("particleFlowSuperClusterECAL","particleFlowBasicClusterECALPreshower"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(False),
    keepNextToDead = cms.bool(False),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    severityLevel = cms.int32(-1)
)


process.interestingEcalDetIdRefinedEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("particleFlowEGamma","EBEEClusters"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    severityLevel = cms.int32(1)
)


process.interestingEcalDetIdRefinedEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("particleFlowEGamma","EBEEClusters"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    severityLevel = cms.int32(1)
)


process.interestingEcalDetIdRefinedES = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("particleFlowEGamma","ESClusters"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(False),
    keepNextToDead = cms.bool(False),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    severityLevel = cms.int32(-1)
)


process.interestingEleIsoDetId = cms.EDProducer("EleIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("gedGsfElectrons"),
    energyCut = cms.double(0.04),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.interestingGamIsoDetId = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("photons"),
    energyCut = cms.double(0.04),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.interestingGamIsoDetIdEB = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("photons"),
    energyCut = cms.double(0.095),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.interestingGamIsoDetIdEE = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("photons"),
    energyCut = cms.double(0.0),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0.11),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE")
)


process.interestingGedEgammaIsoESDetId = cms.EDProducer("EgammaIsoESDetIdCollectionProducer",
    ecalPFClustersLabel = cms.InputTag("particleFlowClusterECALRemade"),
    eeClusToESMapLabel = cms.InputTag("particleFlowClusterECALRemade"),
    elesLabel = cms.InputTag("gedGsfElectrons"),
    interestingDetIdCollection = cms.string(''),
    maxDR = cms.double(0.4),
    minEleEt = cms.double(20),
    minPhoEt = cms.double(20),
    minSCEt = cms.double(500),
    phosLabel = cms.InputTag("gedPhotons"),
    superClustersLabel = cms.InputTag("particleFlowEGamma")
)


process.interestingGedEgammaIsoHCALDetId = cms.EDProducer("EgammaIsoHcalDetIdCollectionProducer",
    elesLabel = cms.InputTag("gedGsfElectrons"),
    hitSelection = cms.PSet(
        maxDIEta = cms.int32(5),
        maxDIPhi = cms.int32(5),
        minEnergyHB = cms.double(0.8),
        minEnergyHEDefault = cms.double(0.2),
        minEnergyHEDepth1 = cms.double(0.1)
    ),
    interestingDetIdCollection = cms.string(''),
    minEleEt = cms.double(20),
    minPhoEt = cms.double(20),
    minSCEt = cms.double(20),
    phosLabel = cms.InputTag("gedPhotons"),
    recHitsLabel = cms.InputTag("hbhereco"),
    superClustersLabel = cms.InputTag("particleFlowEGamma")
)


process.interestingGedEleIsoDetIdEB = cms.EDProducer("EleIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("gedGsfElectrons"),
    energyCut = cms.double(0.095),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.interestingGedEleIsoDetIdEE = cms.EDProducer("EleIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("gedGsfElectrons"),
    energyCut = cms.double(0.0),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0.11),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE")
)


process.interestingGedGamIsoDetIdEB = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("gedPhotons"),
    energyCut = cms.double(0.095),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.interestingGedGamIsoDetIdEE = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("gedPhotons"),
    energyCut = cms.double(0.0),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0.11),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE")
)


process.interestingOotEgammaIsoESDetId = cms.EDProducer("EgammaIsoESDetIdCollectionProducer",
    ecalPFClustersLabel = cms.InputTag("particleFlowClusterOOTECAL"),
    eeClusToESMapLabel = cms.InputTag("particleFlowClusterOOTECAL"),
    elesLabel = cms.InputTag(""),
    interestingDetIdCollection = cms.string(''),
    maxDR = cms.double(0.4),
    minEleEt = cms.double(20),
    minPhoEt = cms.double(20),
    minSCEt = cms.double(500),
    phosLabel = cms.InputTag("ootPhotons"),
    superClustersLabel = cms.InputTag("")
)


process.interestingOotEgammaIsoHCALDetId = cms.EDProducer("EgammaIsoHcalDetIdCollectionProducer",
    elesLabel = cms.InputTag(""),
    hitSelection = cms.PSet(
        maxDIEta = cms.int32(5),
        maxDIPhi = cms.int32(5),
        minEnergyHB = cms.double(0.8),
        minEnergyHEDefault = cms.double(0.2),
        minEnergyHEDepth1 = cms.double(0.1)
    ),
    interestingDetIdCollection = cms.string(''),
    minEleEt = cms.double(20),
    minPhoEt = cms.double(20),
    minSCEt = cms.double(20),
    phosLabel = cms.InputTag("ootPhotons"),
    recHitsLabel = cms.InputTag("hbhereco"),
    superClustersLabel = cms.InputTag("")
)


process.interestingOotGamIsoDetIdEB = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("ootPhotons"),
    energyCut = cms.double(0.095),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB")
)


process.interestingOotGamIsoDetIdEE = cms.EDProducer("GamIsoDetIdCollectionProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    emObjectLabel = cms.InputTag("ootPhotons"),
    energyCut = cms.double(0.0),
    etCandCut = cms.double(0.0),
    etCut = cms.double(0.11),
    innerRadius = cms.double(0.0),
    interestingDetIdCollection = cms.string(''),
    outerRadius = cms.double(0.6),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE")
)


process.interestingTrackEcalDetIds = cms.EDProducer("InterestingTrackEcalDetIdProducer",
    MinTrackPt = cms.double(50.0),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackCollection = cms.InputTag("hiGeneralTracks")
)


process.islandBasicClusters = cms.EDProducer("IslandClusterProducer",
    IslandBarrelSeedThr = cms.double(0.5),
    IslandEndcapSeedThr = cms.double(0.18),
    VerbosityLevel = cms.string('ERROR'),
    barrelClusterCollection = cms.string('islandBarrelBasicClusters'),
    barrelHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    barrelShapeAssociation = cms.string('islandBarrelShapeAssoc'),
    clustershapecollectionEB = cms.string('islandBarrelShape'),
    clustershapecollectionEE = cms.string('islandEndcapShape'),
    endcapClusterCollection = cms.string('islandEndcapBasicClusters'),
    endcapHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    endcapShapeAssociation = cms.string('islandEndcapShapeAssoc'),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    )
)


process.islandPhotonCore = cms.EDProducer("PhotonCoreProducer",
    conversionProducer = cms.InputTag(""),
    minSCEt = cms.double(8.0),
    photonCoreCollection = cms.string(''),
    pixelSeedProducer = cms.InputTag("electronMergedSeeds"),
    risolveConversionAmbiguity = cms.bool(True),
    scHybridBarrelProducer = cms.InputTag("correctedIslandBarrelSuperClusters"),
    scIslandEndcapProducer = cms.InputTag("correctedIslandEndcapSuperClusters")
)


process.islandPhotons = cms.EDProducer("PhotonProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromEcalEnergy'),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        trackProducer = cms.InputTag("generalTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHoverEBarrel = cms.double(0.99),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(10.0),
    minR9Endcap = cms.double(10.0),
    minSCEtBarrel = cms.double(5.0),
    minSCEtEndcap = cms.double(15.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    photonCoreProducer = cms.InputTag("islandPhotonCore"),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    primaryVertexProducer = cms.InputTag("offlinePrimaryVerticesWithBS"),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True)
)


process.islandSuperClusters = cms.EDProducer("HiSuperClusterProducer",
    VerbosityLevel = cms.string('ERROR'),
    barrelBCEnergyThreshold = cms.double(0),
    barrelClusterCollection = cms.string('islandBarrelBasicClusters'),
    barrelClusterProducer = cms.string('islandBasicClusters'),
    barrelEtaSearchRoad = cms.double(0.07),
    barrelPhiSearchRoad = cms.double(0.8),
    barrelSuperclusterCollection = cms.string('islandBarrelSuperClusters'),
    doBarrel = cms.bool(True),
    doEndcaps = cms.bool(True),
    endcapBCEnergyThreshold = cms.double(0),
    endcapClusterCollection = cms.string('islandEndcapBasicClusters'),
    endcapClusterProducer = cms.string('islandBasicClusters'),
    endcapEtaSearchRoad = cms.double(0.14),
    endcapPhiSearchRoad = cms.double(0.6),
    endcapSuperclusterCollection = cms.string('islandEndcapSuperClusters'),
    seedTransverseEnergyThreshold = cms.double(1.0)
)


process.iterativeConePu5CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('IterativeCone'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.5),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.jetCoreClusterSplitter = cms.EDProducer("JetCoreClusterSplitter",
    centralMIPCharge = cms.double(26000),
    chargeFractionMin = cms.double(2.0),
    chargePerUnit = cms.double(2000),
    cores = cms.InputTag("ak5CaloJets"),
    deltaRmax = cms.double(0.05),
    forceXError = cms.double(100),
    forceYError = cms.double(150),
    fractionalWidth = cms.double(0.4),
    pixelCPE = cms.string('PixelCPEGeneric'),
    pixelClusters = cms.InputTag("siPixelCluster"),
    ptMin = cms.double(200),
    verbose = cms.bool(False),
    vertices = cms.InputTag("offlinePrimaryVertices")
)


process.kinematicFilter = cms.EDProducer("PixelTrackFilterByKinematicsProducer",
    chi2 = cms.double(1000),
    nSigmaInvPtTolerance = cms.double(0),
    nSigmaTipMaxTolerance = cms.double(0),
    ptMin = cms.double(0.7),
    tipMax = cms.double(1)
)


process.kt4CaloJetsL1FastL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt4CaloL1FastL2L3'),
    src = cms.InputTag("kt4CaloJets")
)


process.kt4CaloJetsL1FastL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt4CaloL1FastL2L3Residual'),
    src = cms.InputTag("kt4CaloJets")
)


process.kt4CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt4CaloL1L2L3'),
    src = cms.InputTag("kt4CaloJets")
)


process.kt4CaloJetsL1L2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt4CaloL1L2L3Residual'),
    src = cms.InputTag("kt4CaloJets")
)


process.kt4CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt4CaloL2L3'),
    src = cms.InputTag("kt4CaloJets")
)


process.kt4CaloJetsL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt4CaloL2L3Residual'),
    src = cms.InputTag("kt4CaloJets")
)


process.kt4PFJetsForRho = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.005),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.5),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(False),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(True),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.0),
    jetAlgorithm = cms.string('Kt'),
    jetPtMin = cms.double(0.0),
    jetType = cms.string('PFJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    src = cms.InputTag("particleFlow"),
    srcPVs = cms.InputTag(""),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.kt4PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt4PFL1FastL2L3'),
    src = cms.InputTag("kt4PFJets")
)


process.kt4PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt4PFL1FastL2L3Residual'),
    src = cms.InputTag("kt4PFJets")
)


process.kt4PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt4PFL1L2L3'),
    src = cms.InputTag("kt4PFJets")
)


process.kt4PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt4PFL1L2L3Residual'),
    src = cms.InputTag("kt4PFJets")
)


process.kt4PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt4PFL2L3'),
    src = cms.InputTag("kt4PFJets")
)


process.kt4PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt4PFL2L3Residual'),
    src = cms.InputTag("kt4PFJets")
)


process.kt6CaloJetsL1FastL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt6CaloL1FastL2L3'),
    src = cms.InputTag("kt6CaloJets")
)


process.kt6CaloJetsL1FastL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt6CaloL1FastL2L3Residual'),
    src = cms.InputTag("kt6CaloJets")
)


process.kt6CaloJetsL1L2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt6CaloL1L2L3'),
    src = cms.InputTag("kt6CaloJets")
)


process.kt6CaloJetsL1L2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt6CaloL1L2L3Residual'),
    src = cms.InputTag("kt6CaloJets")
)


process.kt6CaloJetsL2L3 = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt6CaloL2L3'),
    src = cms.InputTag("kt6CaloJets")
)


process.kt6CaloJetsL2L3Residual = cms.EDProducer("CaloJetCorrectionProducer",
    correctors = cms.vstring('kt6CaloL2L3Residual'),
    src = cms.InputTag("kt6CaloJets")
)


process.kt6PFJetsL1FastL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt6PFL1FastL2L3'),
    src = cms.InputTag("kt6PFJets")
)


process.kt6PFJetsL1FastL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt6PFL1FastL2L3Residual'),
    src = cms.InputTag("kt6PFJets")
)


process.kt6PFJetsL1L2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt6PFL1L2L3'),
    src = cms.InputTag("kt6PFJets")
)


process.kt6PFJetsL1L2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt6PFL1L2L3Residual'),
    src = cms.InputTag("kt6PFJets")
)


process.kt6PFJetsL2L3 = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt6PFL2L3'),
    src = cms.InputTag("kt6PFJets")
)


process.kt6PFJetsL2L3Residual = cms.EDProducer("PFJetCorrectionProducer",
    correctors = cms.vstring('kt6PFL2L3Residual'),
    src = cms.InputTag("kt6PFJets")
)


process.ktPu4CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('Kt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.4),
    radiusPU = cms.double(0.5),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.ktPu6CaloJets = cms.EDProducer("FastjetJetProducer",
    Active_Area_Repeats = cms.int32(1),
    GhostArea = cms.double(0.01),
    Ghost_EtaMax = cms.double(6.5),
    Rho_EtaMax = cms.double(4.4),
    doAreaDiskApprox = cms.bool(False),
    doAreaFastjet = cms.bool(True),
    doFastJetNonUniform = cms.bool(True),
    doPUOffsetCorr = cms.bool(True),
    doPVCorrection = cms.bool(False),
    doRhoFastjet = cms.bool(False),
    inputEMin = cms.double(0.0),
    inputEtMin = cms.double(0.3),
    jetAlgorithm = cms.string('Kt'),
    jetPtMin = cms.double(10.0),
    jetType = cms.string('CaloJet'),
    maxBadEcalCells = cms.uint32(9999999),
    maxBadHcalCells = cms.uint32(9999999),
    maxProblematicEcalCells = cms.uint32(9999999),
    maxProblematicHcalCells = cms.uint32(9999999),
    maxRecoveredEcalCells = cms.uint32(9999999),
    maxRecoveredHcalCells = cms.uint32(9999999),
    minSeed = cms.uint32(14327),
    nExclude = cms.uint32(2),
    nSigmaPU = cms.double(1.0),
    puCenters = cms.vdouble(
        -5, -4, -3, -2, -1,
        0, 1, 2, 3, 4,
        5
    ),
    puPtMin = cms.double(10),
    puWidth = cms.double(0.8),
    rParam = cms.double(0.6),
    radiusPU = cms.double(0.7),
    src = cms.InputTag("towerMaker"),
    srcPVs = cms.InputTag("offlinePrimaryVertices"),
    subtractorName = cms.string('MultipleAlgoIterator'),
    sumRecHits = cms.bool(False),
    useDeterministicSeed = cms.bool(True),
    voronoiRfact = cms.double(-0.9)
)


process.l1GtRecord = cms.EDProducer("L1GlobalTriggerRecordProducer",
    L1GtReadoutRecordTag = cms.InputTag("gtDigis")
)


process.l1GtTriggerMenuLite = cms.EDProducer("L1GtTriggerMenuLiteProducer")


process.l1L1GtObjectMap = cms.EDProducer("ConvertObjectMapRecord",
    L1GtObjectMapTag = cms.InputTag("hltL1GtObjectMap")
)


process.l1extraParticles = cms.EDProducer("L1ExtraParticlesProd",
    centralBxOnly = cms.bool(True),
    centralJetSource = cms.InputTag("caloStage1LegacyFormatDigis","cenJets"),
    etHadSource = cms.InputTag("caloStage1LegacyFormatDigis"),
    etMissSource = cms.InputTag("caloStage1LegacyFormatDigis"),
    etTotalSource = cms.InputTag("caloStage1LegacyFormatDigis"),
    forwardJetSource = cms.InputTag("caloStage1LegacyFormatDigis","forJets"),
    hfRingBitCountsSource = cms.InputTag("caloStage1LegacyFormatDigis"),
    hfRingEtSumsSource = cms.InputTag("caloStage1LegacyFormatDigis"),
    htMissSource = cms.InputTag("caloStage1LegacyFormatDigis"),
    ignoreHtMiss = cms.bool(False),
    isoTauJetSource = cms.InputTag("caloStage1LegacyFormatDigis","isoTauJets"),
    isolatedEmSource = cms.InputTag("caloStage1LegacyFormatDigis","isoEm"),
    muonSource = cms.InputTag("gtDigis"),
    nonIsolatedEmSource = cms.InputTag("caloStage1LegacyFormatDigis","nonIsoEm"),
    produceCaloParticles = cms.bool(True),
    produceMuonParticles = cms.bool(True),
    tauJetSource = cms.InputTag("caloStage1LegacyFormatDigis","tauJets")
)


process.lowPtQuadStep = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorLowPtQuadStep_Phase1')
    ),
    qualityCuts = cms.vdouble(-0.7, -0.35, -0.15),
    src = cms.InputTag("lowPtQuadStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.lowPtQuadStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag(""),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trajectories = cms.InputTag("")
)


process.lowPtQuadStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("trackerClusterCheck"),
    layerPairs = cms.vuint32(0, 1, 2),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("lowPtQuadStepSeedLayers"),
    trackingRegions = cms.InputTag("lowPtQuadStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.lowPtQuadStepHitQuadruplets = cms.EDProducer("CAHitQuadrupletEDProducer",
    CAHardPtCut = cms.double(0),
    CAPhiCut = cms.double(0.3),
    CAThetaCut = cms.double(0.0017),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('LowPtClusterShapeSeedComparitor'),
        clusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        clusterShapeHitFilter = cms.string('ClusterShapeHitFilter')
    ),
    doublets = cms.InputTag("lowPtQuadStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0.032),
    fitFastCircle = cms.bool(True),
    fitFastCircleChi2Cut = cms.bool(True),
    maxChi2 = cms.PSet(
        enabled = cms.bool(True),
        pt1 = cms.double(0.7),
        pt2 = cms.double(2),
        value1 = cms.double(1000),
        value2 = cms.double(150)
    ),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_lowPtQuadStepHitDoublets__reRECO'),
    useBendingCorrection = cms.bool(True)
)


process.lowPtQuadStepMasks = cms.EDProducer("FastTrackerRecHitMaskProducer",
    TrackQuality = cms.string('highPurity'),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    minNumberOfLayersWithMeasBeforeFiltering_ = cms.int32(0),
    oldHitRemovalInfo = cms.InputTag(""),
    recHits = cms.InputTag("fastTrackerRecHits"),
    trackClassifier = cms.InputTag("","QualityMasks"),
    trackQuality = cms.string('hightPurity'),
    trajectories = cms.InputTag("")
)


process.lowPtQuadStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("lowPtQuadStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("lowPtQuadStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3+BPix4',
        'BPix1+BPix2+BPix3+FPix1_pos',
        'BPix1+BPix2+BPix3+FPix1_neg',
        'BPix1+BPix2+FPix1_pos+FPix2_pos',
        'BPix1+BPix2+FPix1_neg+FPix2_neg',
        'BPix1+FPix1_pos+FPix2_pos+FPix3_pos',
        'BPix1+FPix1_neg+FPix2_neg+FPix3_neg'
    )
)


process.lowPtQuadStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_lowPtQuadStepHitQuadruplets__reRECO'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("lowPtQuadStepHitQuadruplets")
)


process.lowPtQuadStepSelector = cms.EDProducer("MultiTrackSelector",
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("lowPtQuadStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(2.0),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.8, 4.0),
            d0_par2 = cms.vdouble(0.6, 4.0),
            dz_par1 = cms.vdouble(0.7, 4.0),
            dz_par2 = cms.vdouble(0.6, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('lowPtQuadStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.002),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.4),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.7, 4.0),
            d0_par2 = cms.vdouble(0.5, 4.0),
            dz_par1 = cms.vdouble(0.6, 4.0),
            dz_par2 = cms.vdouble(0.5, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('lowPtQuadStepTight'),
            preFilterName = cms.string('lowPtQuadStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.002),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.2),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.5, 4.0),
            d0_par2 = cms.vdouble(0.45, 4.0),
            dz_par1 = cms.vdouble(0.5, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('lowPtQuadStep'),
            preFilterName = cms.string('lowPtQuadStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.lowPtQuadStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('lowPtQuadStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('lowPtQuadStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("lowPtQuadStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("lowPtQuadStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.lowPtQuadStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(4),
        originHalfLength = cms.double(0),
        originRadius = cms.double(0.02),
        precise = cms.bool(True),
        ptMin = cms.double(0.15),
        useMultipleScattering = cms.bool(False)
    )
)


process.lowPtQuadStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('lowPtQuadStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("lowPtQuadStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.lowPtTripletStep = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter1_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.6, -0.3, -0.1),
    src = cms.InputTag("lowPtTripletStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.lumiProducer = cms.EDProducer("LumiProducer",
    connect = cms.string('frontier://LumiProd/CMS_LUMI_PROD'),
    lumiversion = cms.untracked.string(''),
    ncacheEntries = cms.untracked.uint32(5)
)


process.me0RecHits = cms.EDProducer("ME0RecHitProducer",
    me0DigiLabel = cms.InputTag("simMuonME0PseudoReDigis"),
    recAlgo = cms.string('ME0RecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    )
)


process.me0Segments = cms.EDProducer("ME0SegmentProducer",
    algo_psets = cms.VPSet(
        cms.PSet(
            algo_name = cms.string('ME0SegmentAlgorithm'),
            algo_pset = cms.PSet(
                ME0Debug = cms.untracked.bool(True),
                dEtaChainBoxMax = cms.double(0.05),
                dPhiChainBoxMax = cms.double(0.02),
                dTimeChainBoxMax = cms.double(15.0),
                dXclusBoxMax = cms.double(1.0),
                dYclusBoxMax = cms.double(5.0),
                maxRecHitsInCluster = cms.int32(6),
                minHitsPerSegment = cms.uint32(3),
                preClustering = cms.bool(True),
                preClusteringUseChaining = cms.bool(True)
            )
        ),
        cms.PSet(
            algo_name = cms.string('ME0SegAlgoRU'),
            algo_pset = cms.PSet(
                allowWideSegments = cms.bool(True),
                doCollisions = cms.bool(True),
                maxChi2Additional = cms.double(100.0),
                maxChi2GoodSeg = cms.double(50),
                maxChi2Prune = cms.double(50),
                maxETASeeds = cms.double(0.1),
                maxPhiAdditional = cms.double(0.001096605744),
                maxPhiSeeds = cms.double(0.001096605744),
                maxTOFDiff = cms.double(25),
                minNumberOfHits = cms.uint32(4),
                requireCentralBX = cms.bool(True)
            )
        )
    ),
    algo_type = cms.int32(2),
    me0RecHitLabel = cms.InputTag("me0RecHits")
)


process.mergedDuplicateDisplacedTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('undefAlgorithm'),
    Fitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("duplicateDisplacedTrackCandidates","candidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.mergedDuplicateTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('undefAlgorithm'),
    Fitter = cms.string('RKFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("duplicateTrackCandidates","candidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.mergedStandAloneMuonSeeds = cms.EDProducer("MuonSeedMerger",
    SeedCollections = cms.VInputTag(cms.InputTag("ancientMuonSeed"), cms.InputTag("MuonSeed"))
)


process.mixedTripletStep = cms.EDProducer("ClassifierMerger",
    inputClassifiers = cms.vstring(
        'mixedTripletStepClassifier1',
        'mixedTripletStepClassifier2'
    )
)


process.mixedTripletStepClassifier1 = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter4_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.5, 0.0, 0.5),
    src = cms.InputTag("mixedTripletStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.mixedTripletStepClassifier2 = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter0_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.2, -0.2, -0.2),
    src = cms.InputTag("mixedTripletStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.mixedTripletStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("chargeCut2069Clusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag("pixelPairStep","QualityMasks"),
    trajectories = cms.InputTag("pixelPairStepTracks")
)


process.mixedTripletStepHitDoubletsA = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("mixedTripletStepSeedLayersA"),
    trackingRegions = cms.InputTag("hiMixedTripletStepTrackingRegionsA"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.mixedTripletStepHitDoubletsB = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("mixedTripletStepSeedLayersB"),
    trackingRegions = cms.InputTag("hiMixedTripletStepTrackingRegionsB"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.mixedTripletStepHitTripletsA = cms.EDProducer("PixelTripletLargeTipEDProducer",
    doublets = cms.InputTag("mixedTripletStepHitDoubletsA"),
    extraHitRPhitolerance = cms.double(0),
    extraHitRZtolerance = cms.double(0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_mixedTripletStepHitDoubletsA__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.mixedTripletStepHitTripletsB = cms.EDProducer("PixelTripletLargeTipEDProducer",
    doublets = cms.InputTag("mixedTripletStepHitDoubletsB"),
    extraHitRPhitolerance = cms.double(0),
    extraHitRZtolerance = cms.double(0),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_mixedTripletStepHitDoubletsB__reRECO'),
    phiPreFiltering = cms.double(0.3),
    produceIntermediateHitTriplets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    useBending = cms.bool(True),
    useFixedPreFiltering = cms.bool(False),
    useMultScattering = cms.bool(True)
)


process.mixedTripletStepMasks = cms.EDProducer("FastTrackerRecHitMaskProducer",
    TrackQuality = cms.string('highPurity'),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    minNumberOfLayersWithMeasBeforeFiltering_ = cms.int32(0),
    oldHitRemovalInfo = cms.InputTag("pixelPairStepMasks"),
    recHits = cms.InputTag("fastTrackerRecHits"),
    trackClassifier = cms.InputTag("pixelPairStep","QualityMasks"),
    trackQuality = cms.string('hightPurity'),
    trajectories = cms.InputTag("pixelPairStepTracks")
)


process.mixedTripletStepSeedLayersA = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiMixedTripletStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiMixedTripletStepClusters")
    ),
    TEC = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        maxRing = cms.int32(1),
        minRing = cms.int32(1),
        skipClusters = cms.InputTag("hiMixedTripletStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    layerList = cms.vstring(
        'BPix1+BPix2+BPix3',
        'BPix1+BPix2+FPix1_pos',
        'BPix1+BPix2+FPix1_neg',
        'BPix1+FPix1_pos+FPix2_pos',
        'BPix1+FPix1_neg+FPix2_neg',
        'BPix2+FPix1_pos+FPix2_pos',
        'BPix2+FPix1_neg+FPix2_neg'
    )
)


process.mixedTripletStepSeedLayersB = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("hiMixedTripletStepClusters")
    ),
    TIB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        skipClusters = cms.InputTag("hiMixedTripletStepClusters")
    ),
    layerList = cms.vstring('BPix2+BPix3+TIB1')
)


process.mixedTripletStepSeeds = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag(cms.InputTag("mixedTripletStepSeedsA"), cms.InputTag("mixedTripletStepSeedsB"))
)


process.mixedTripletStepSeedsA = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('mixedTripletStepClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(True)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_mixedTripletStepHitTripletsA__reRECO',
        'IntermediateHitDoublets_mixedTripletStepHitDoubletsA__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("mixedTripletStepHitTripletsA")
)


process.mixedTripletStepSeedsB = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('mixedTripletStepClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(False),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(True)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_mixedTripletStepHitTripletsB__reRECO',
        'IntermediateHitDoublets_mixedTripletStepHitDoubletsB__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("mixedTripletStepHitTripletsB")
)


process.mixedTripletStepSelector = cms.EDProducer("MultiTrackSelector",
    GBRForestLabel = cms.string('MVASelectorIter4'),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("mixedTripletStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.2),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.2, 3.0),
            d0_par2 = cms.vdouble(1.3, 3.0),
            dz_par1 = cms.vdouble(1.2, 3.0),
            dz_par2 = cms.vdouble(1.3, 3.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(2),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('mixedTripletStepVtxLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.2, 4.0),
            d0_par2 = cms.vdouble(1.2, 4.0),
            dz_par1 = cms.vdouble(1.2, 4.0),
            dz_par2 = cms.vdouble(1.2, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(4),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('mixedTripletStepTrkLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.1, 3.0),
            d0_par2 = cms.vdouble(1.2, 3.0),
            dz_par1 = cms.vdouble(1.1, 3.0),
            dz_par2 = cms.vdouble(1.2, 3.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('mixedTripletStepVtxTight'),
            preFilterName = cms.string('mixedTripletStepVtxLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.4),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.1, 4.0),
            d0_par2 = cms.vdouble(1.1, 4.0),
            dz_par1 = cms.vdouble(1.1, 4.0),
            dz_par2 = cms.vdouble(1.1, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(4),
            minNumberLayers = cms.uint32(5),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('mixedTripletStepTrkTight'),
            preFilterName = cms.string('mixedTripletStepTrkLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.4),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.1, 3.0),
            d0_par2 = cms.vdouble(1.2, 3.0),
            dz_par1 = cms.vdouble(1.1, 3.0),
            dz_par2 = cms.vdouble(1.2, 3.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('mixedTripletStepVtx'),
            preFilterName = cms.string('mixedTripletStepVtxTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.3),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.9, 4.0),
            d0_par2 = cms.vdouble(0.9, 4.0),
            dz_par1 = cms.vdouble(0.9, 4.0),
            dz_par2 = cms.vdouble(0.9, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(0),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(4),
            minNumberLayers = cms.uint32(5),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('mixedTripletStepTrk'),
            preFilterName = cms.string('mixedTripletStepTrkTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.mixedTripletStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('mixedTripletStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('mixedTripletStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiMixedTripletStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("mixedTripletStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.mixedTripletStepTrackingRegionsA = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(0),
        originHalfLength = cms.double(15.0),
        originRadius = cms.double(1.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.4),
        useMultipleScattering = cms.bool(False)
    )
)


process.mixedTripletStepTrackingRegionsB = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(0),
        originHalfLength = cms.double(10.0),
        originRadius = cms.double(1.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.6),
        useMultipleScattering = cms.bool(False)
    )
)


process.mixedTripletStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('mixedTripletStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("mixedTripletStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.muIsoDepositCalByAssociatorHits = cms.EDProducer("MuIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.025),
        Threshold_H = cms.double(0.1),
        Threshold_HO = cms.double(0.1),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(False),
            useEcal = cms.bool(True),
            useGEM = cms.bool(False),
            useHO = cms.bool(True),
            useHcal = cms.bool(True),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(True)
    ),
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        InputType = cms.string('MuonCollection'),
        MultipleDepositsFlag = cms.bool(True),
        MuonTrackRefType = cms.string('bestTrkSta'),
        inputMuonCollection = cms.InputTag("muons1stStep")
    )
)


process.muIsoDepositCalByAssociatorTowers = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(
        'ecal',
        'hcal',
        'ho'
    ),
    inputTags = cms.VInputTag(cms.InputTag("hiMuons1stStep","ecal"), cms.InputTag("hiMuons1stStep","hcal"), cms.InputTag("hiMuons1stStep","ho"))
)


process.muIsoDepositJets = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(''),
    inputTags = cms.VInputTag(cms.InputTag("hiMuons1stStep","jets"))
)


process.muIsoDepositTk = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(''),
    inputTags = cms.VInputTag(cms.InputTag("hiMuons1stStep","tracker"))
)


process.muParamGlobalIsoDepositCalByAssociatorHits = cms.EDProducer("MuIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.025),
        Threshold_H = cms.double(0.1),
        Threshold_HO = cms.double(0.1),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(False),
            useEcal = cms.bool(True),
            useGEM = cms.bool(False),
            useHO = cms.bool(True),
            useHcal = cms.bool(True),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(True)
    ),
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        InputType = cms.string('MuonCollection'),
        MultipleDepositsFlag = cms.bool(True),
        MuonTrackRefType = cms.string('bestTrkSta'),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
    )
)


process.muParamGlobalIsoDepositCalByAssociatorTowers = cms.EDProducer("MuIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        InputType = cms.string('MuonCollection'),
        MultipleDepositsFlag = cms.bool(True),
        MuonTrackRefType = cms.string('bestTrkSta'),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
    )
)


process.muParamGlobalIsoDepositCalEcal = cms.EDProducer("MuIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        ComponentName = cms.string('CaloExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DepositLabel = cms.untracked.string('EcalPlusHcal'),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Vertex_Constraint_XY = cms.bool(False),
        Vertex_Constraint_Z = cms.bool(False),
        Weight_E = cms.double(1.0),
        Weight_H = cms.double(0.0)
    ),
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        InputType = cms.string('MuonCollection'),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
    )
)


process.muParamGlobalIsoDepositCalHcal = cms.EDProducer("MuIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        ComponentName = cms.string('CaloExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DepositLabel = cms.untracked.string('EcalPlusHcal'),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Vertex_Constraint_XY = cms.bool(False),
        Vertex_Constraint_Z = cms.bool(False),
        Weight_E = cms.double(0.0),
        Weight_H = cms.double(1.0)
    ),
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        InputType = cms.string('MuonCollection'),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
    )
)


process.muParamGlobalIsoDepositCtfTk = cms.EDProducer("MuIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("ctfGSWithMaterialTracks")
    ),
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        InputType = cms.string('MuonCollection'),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('bestTrkSta'),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
    )
)


process.muParamGlobalIsoDepositGsTk = cms.EDProducer("MuIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("ctfGSWithMaterialTracks")
    ),
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        InputType = cms.string('MuonCollection'),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
    )
)


process.muParamGlobalIsoDepositJets = cms.EDProducer("MuIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("ak4CaloJets"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        InputType = cms.string('MuonCollection'),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('bestTrkSta'),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
    )
)


process.muParamGlobalIsoDepositTk = cms.EDProducer("MuIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("generalTracks")
    ),
    IOPSet = cms.PSet(
        ExtractForCandidate = cms.bool(False),
        InputType = cms.string('MuonCollection'),
        MultipleDepositsFlag = cms.bool(False),
        MuonTrackRefType = cms.string('track'),
        inputMuonCollection = cms.InputTag("paramMuons","ParamGlobalMuons")
    )
)


process.muidAllArbitrated = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('AllArbitrated')
)


process.muidGMStaChiCompatibility = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('GMStaChiCompatibility')
)


process.muidGMTkChiCompatibility = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('GMTkChiCompatibility')
)


process.muidGMTkKinkTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('GMTkKinkTight')
)


process.muidGlobalMuonPromptTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('GlobalMuonPromptTight')
)


process.muidRPCMuLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('RPCMuLoose')
)


process.muidTM2DCompatibilityLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TM2DCompatibilityLoose')
)


process.muidTM2DCompatibilityTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TM2DCompatibilityTight')
)


process.muidTMLastStationAngLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationAngLoose')
)


process.muidTMLastStationAngTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationAngTight')
)


process.muidTMLastStationLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationLoose')
)


process.muidTMLastStationOptimizedLowPtLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationOptimizedLowPtLoose')
)


process.muidTMLastStationOptimizedLowPtTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationOptimizedLowPtTight')
)


process.muidTMLastStationTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMLastStationTight')
)


process.muidTMOneStationAngLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMOneStationAngLoose')
)


process.muidTMOneStationAngTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMOneStationAngTight')
)


process.muidTMOneStationLoose = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMOneStationLoose')
)


process.muidTMOneStationTight = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TMOneStationTight')
)


process.muidTrackerMuonArbitrated = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('TrackerMuonArbitrated')
)


process.multi5x5BasicClustersCleaned = cms.EDProducer("Multi5x5ClusterProducer",
    IslandBarrelSeedThr = cms.double(0.5),
    IslandEndcapSeedThr = cms.double(0.18),
    RecHitFlagToBeExcluded = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    barrelClusterCollection = cms.string('multi5x5BarrelBasicClusters'),
    barrelHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    doBarrel = cms.bool(False),
    doEndcap = cms.bool(True),
    endcapClusterCollection = cms.string('multi5x5EndcapBasicClusters'),
    endcapHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    reassignSeedCrysToClusterItSeeds = cms.bool(True)
)


process.multi5x5BasicClustersUncleaned = cms.EDProducer("Multi5x5ClusterProducer",
    IslandBarrelSeedThr = cms.double(0.5),
    IslandEndcapSeedThr = cms.double(0.18),
    RecHitFlagToBeExcluded = cms.vstring(),
    barrelClusterCollection = cms.string('multi5x5BarrelBasicClusters'),
    barrelHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    doBarrel = cms.bool(False),
    doEndcap = cms.bool(True),
    endcapClusterCollection = cms.string('multi5x5EndcapBasicClusters'),
    endcapHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    reassignSeedCrysToClusterItSeeds = cms.bool(True)
)


process.multi5x5PreshowerClusterShape = cms.EDProducer("PreshowerClusterShapeProducer",
    PreshowerClusterShapeCollectionX = cms.string('multi5x5PreshowerXClustersShape'),
    PreshowerClusterShapeCollectionY = cms.string('multi5x5PreshowerYClustersShape'),
    debugLevel = cms.string('INFO'),
    endcapSClusterProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    preshPi0Nstrip = cms.int32(5),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    preshStripEnergyCut = cms.double(0.0)
)


process.multi5x5SuperClusters = cms.EDProducer("UnifiedSCCollectionProducer",
    bcCollection = cms.string('multi5x5EndcapBasicClusters'),
    bcCollectionUncleanOnly = cms.string('uncleanOnlyMulti5x5EndcapBasicClusters'),
    cleanBcCollection = cms.InputTag("multi5x5BasicClustersCleaned","multi5x5EndcapBasicClusters"),
    cleanScCollection = cms.InputTag("multi5x5SuperClustersCleaned","multi5x5EndcapSuperClusters"),
    scCollection = cms.string('multi5x5EndcapSuperClusters'),
    scCollectionUncleanOnly = cms.string('uncleanOnlyMulti5x5EndcapSuperClusters'),
    uncleanBcCollection = cms.InputTag("multi5x5BasicClustersUncleaned","multi5x5EndcapBasicClusters"),
    uncleanScCollection = cms.InputTag("multi5x5SuperClustersUncleaned","multi5x5EndcapSuperClusters")
)


process.multi5x5SuperClustersCleaned = cms.EDProducer("Multi5x5SuperClusterProducer",
    barrelClusterTag = cms.InputTag("multi5x5BasicClusters","multi5x5BarrelBasicClustersCleaned"),
    barrelEtaSearchRoad = cms.double(0.06),
    barrelPhiSearchRoad = cms.double(0.8),
    barrelSuperclusterCollection = cms.string('multi5x5BarrelSuperClusters'),
    bremRecoveryPset = cms.PSet(
        barrel = cms.PSet(
            cryMin = cms.int32(2),
            cryVec = cms.vint32(
                16, 13, 11, 10, 9,
                8, 7, 6, 5, 4,
                3
            ),
            etVec = cms.vdouble(
                5.0, 10.0, 15.0, 20.0, 30.0,
                40.0, 45.0, 55.0, 135.0, 195.0,
                225.0
            )
        ),
        endcap = cms.PSet(
            a = cms.double(47.85),
            b = cms.double(108.8),
            c = cms.double(0.1201)
        )
    ),
    doBarrel = cms.bool(False),
    doEndcaps = cms.bool(True),
    dynamicPhiRoad = cms.bool(False),
    endcapClusterTag = cms.InputTag("multi5x5BasicClustersCleaned","multi5x5EndcapBasicClusters"),
    endcapEtaSearchRoad = cms.double(0.14),
    endcapPhiSearchRoad = cms.double(0.6),
    endcapSuperclusterCollection = cms.string('multi5x5EndcapSuperClusters'),
    seedTransverseEnergyThreshold = cms.double(1.0)
)


process.multi5x5SuperClustersUncleaned = cms.EDProducer("Multi5x5SuperClusterProducer",
    barrelClusterTag = cms.InputTag("multi5x5BasicClusters","multi5x5BarrelBasicClustersCleaned"),
    barrelEtaSearchRoad = cms.double(0.06),
    barrelPhiSearchRoad = cms.double(0.8),
    barrelSuperclusterCollection = cms.string('multi5x5BarrelSuperClusters'),
    bremRecoveryPset = cms.PSet(
        barrel = cms.PSet(
            cryMin = cms.int32(2),
            cryVec = cms.vint32(
                16, 13, 11, 10, 9,
                8, 7, 6, 5, 4,
                3
            ),
            etVec = cms.vdouble(
                5.0, 10.0, 15.0, 20.0, 30.0,
                40.0, 45.0, 55.0, 135.0, 195.0,
                225.0
            )
        ),
        endcap = cms.PSet(
            a = cms.double(47.85),
            b = cms.double(108.8),
            c = cms.double(0.1201)
        )
    ),
    doBarrel = cms.bool(False),
    doEndcaps = cms.bool(True),
    dynamicPhiRoad = cms.bool(False),
    endcapClusterProducer = cms.string('multi5x5BasicClustersUncleaned'),
    endcapClusterTag = cms.InputTag("multi5x5BasicClustersCleaned","multi5x5EndcapBasicClusters"),
    endcapEtaSearchRoad = cms.double(0.14),
    endcapPhiSearchRoad = cms.double(0.6),
    endcapSuperclusterCollection = cms.string('multi5x5EndcapSuperClusters'),
    seedTransverseEnergyThreshold = cms.double(1.0)
)


process.multi5x5SuperClustersWithPreshower = cms.EDProducer("PreshowerPhiClusterProducer",
    assocSClusterCollection = cms.string(''),
    endcapSClusterProducer = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters"),
    esPhiClusterDeltaEta = cms.double(0.15),
    esPhiClusterDeltaPhi = cms.double(0.12),
    esStripEnergyCut = cms.double(0.0),
    etThresh = cms.double(0.0),
    preshClusterCollectionX = cms.string('preshowerXClusters'),
    preshClusterCollectionY = cms.string('preshowerYClusters'),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES")
)


process.muonCSCDigis = cms.EDProducer("CSCDCCUnpacker",
    Debug = cms.untracked.bool(False),
    ErrorMask = cms.uint32(0),
    ExaminerMask = cms.uint32(535558134),
    FormatedEventDump = cms.untracked.bool(False),
    InputObjects = cms.InputTag("rawDataRepacker"),
    PrintEventNumber = cms.untracked.bool(False),
    SuppressZeroLCT = cms.untracked.bool(True),
    UnpackStatusDigis = cms.bool(False),
    UseExaminer = cms.bool(True),
    UseFormatStatus = cms.bool(True),
    UseSelectiveUnpacking = cms.bool(True),
    VisualFEDInspect = cms.untracked.bool(False),
    VisualFEDShort = cms.untracked.bool(False),
    runDQM = cms.untracked.bool(False)
)


process.muonDTDigis = cms.EDProducer("DTUnpackingModule",
    dataType = cms.string('DDU'),
    dqmOnly = cms.bool(False),
    inputLabel = cms.InputTag("rawDataRepacker"),
    maxFEDid = cms.untracked.int32(779),
    minFEDid = cms.untracked.int32(770),
    readOutParameters = cms.PSet(
        debug = cms.untracked.bool(False),
        localDAQ = cms.untracked.bool(False),
        performDataIntegrityMonitor = cms.untracked.bool(False),
        rosParameters = cms.PSet(
            debug = cms.untracked.bool(False),
            localDAQ = cms.untracked.bool(False),
            performDataIntegrityMonitor = cms.untracked.bool(False),
            readDDUIDfromDDU = cms.untracked.bool(True),
            readingDDU = cms.untracked.bool(True),
            writeSC = cms.untracked.bool(True)
        )
    ),
    useStandardFEDid = cms.bool(True)
)


process.muonEcalDetIds = cms.EDProducer("InterestingEcalDetIdProducer",
    inputCollection = cms.InputTag("hiMuons1stStep")
)


process.muonGEMDigis = cms.EDProducer("GEMRawToDigiModule",
    InputLabel = cms.InputTag("rawDataCollector"),
    unPackStatusDigis = cms.bool(False),
    useDBEMap = cms.bool(False)
)


process.muonRPCDigis = cms.EDProducer("RPCUnpackingModule",
    InputLabel = cms.InputTag("rawDataRepacker"),
    doSynchro = cms.bool(True)
)


process.muonSeededSeedsInOut = cms.EDProducer("MuonReSeeder",
    DoPredictionsOnly = cms.bool(False),
    Fitter = cms.string('KFFitterForRefitInsideOut'),
    MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
    Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
    RefitDirection = cms.string('alongMomentum'),
    RefitRPCHits = cms.bool(True),
    Smoother = cms.string('KFSmootherForRefitInsideOut'),
    TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
    cut = cms.string('pt > 2'),
    debug = cms.untracked.bool(False),
    insideOut = cms.bool(True),
    layersToKeep = cms.int32(5),
    src = cms.InputTag("earlyMuons")
)


process.muonSeededSeedsInOutAsTracks = cms.EDProducer("FakeTrackProducerFromSeed",
    src = cms.InputTag("muonSeededSeedsInOut")
)


process.muonSeededSeedsOutIn = cms.EDProducer("OutsideInMuonSeeder",
    cut = cms.string('pt > 10 && outerTrack.hitPattern.muonStationsWithValidHits >= 2'),
    debug = cms.untracked.bool(False),
    errorRescaleFactor = cms.double(2.0),
    fromVertex = cms.bool(True),
    hitCollector = cms.string('hitCollectorForOutInMuonSeeds'),
    hitsToTry = cms.int32(3),
    layersToTry = cms.int32(3),
    maxEtaForTOB = cms.double(1.8),
    minEtaForTEC = cms.double(0.7),
    muonPropagator = cms.string('SteppingHelixPropagatorAlong'),
    src = cms.InputTag("earlyMuons"),
    trackerPropagator = cms.string('PropagatorWithMaterial')
)


process.muonSeededSeedsOutInAsTracks = cms.EDProducer("FakeTrackProducerFromSeed",
    src = cms.InputTag("muonSeededSeedsOutIn")
)


process.muonSeededSeedsOutInDisplaced = cms.EDProducer("OutsideInMuonSeeder",
    cut = cms.string('pt > 10 && outerTrack.hitPattern.muonStationsWithValidHits >= 2'),
    debug = cms.untracked.bool(False),
    errorRescaleFactor = cms.double(2.0),
    fromVertex = cms.bool(False),
    hitCollector = cms.string('hitCollectorForOutInMuonSeeds'),
    hitsToTry = cms.int32(3),
    layersToTry = cms.int32(3),
    maxEtaForTOB = cms.double(1.8),
    minEtaForTEC = cms.double(0.7),
    muonPropagator = cms.string('SteppingHelixPropagatorAlong'),
    src = cms.InputTag("earlyDisplacedMuons"),
    trackerPropagator = cms.string('PropagatorWithMaterial')
)


process.muonSeededSeedsOutInDisplacedAsTracks = cms.EDProducer("FakeTrackProducerFromSeed",
    src = cms.InputTag("muonSeededSeedsOutInDisplaced")
)


process.muonSeededTrackCandidatesInOut = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('none'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryBuilderForInOut')
    ),
    TrajectoryCleaner = cms.string('muonSeededTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("muonSeededSeedsInOut"),
    useHitsSplitting = cms.bool(True)
)


process.muonSeededTrackCandidatesInOutAsTracks = cms.EDProducer("FakeTrackProducerFromCandidate",
    src = cms.InputTag("muonSeededTrackCandidatesInOut")
)


process.muonSeededTrackCandidatesOutIn = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryBuilderForOutIn')
    ),
    TrajectoryCleaner = cms.string('muonSeededTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(False),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("muonSeededSeedsOutIn"),
    useHitsSplitting = cms.bool(True)
)


process.muonSeededTrackCandidatesOutInAsTracks = cms.EDProducer("FakeTrackProducerFromCandidate",
    src = cms.InputTag("muonSeededTrackCandidatesOutIn")
)


process.muonSeededTrackCandidatesOutInDisplaced = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('muonSeededTrajectoryBuilderForOutInDisplaced')
    ),
    TrajectoryCleaner = cms.string('muonSeededTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(False),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("muonSeededSeedsOutInDisplaced"),
    useHitsSplitting = cms.bool(True)
)


process.muonSeededTrackCandidatesOutInDisplacedAsTracks = cms.EDProducer("FakeTrackProducerFromCandidate",
    src = cms.InputTag("muonSeededTrackCandidatesOutInDisplaced")
)


process.muonSeededTracksInOut = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('muonSeededStepInOut'),
    Fitter = cms.string('muonSeededFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("muonSeededTrackCandidatesInOut"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.muonSeededTracksInOutClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            drWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dr_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dzWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dz_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        isHLT = cms.bool(False),
        maxChi2 = cms.vdouble(9999.0, 9999.0, 9999.0),
        maxChi2n = cms.vdouble(10.0, 1.0, 0.4),
        maxDr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24, 15),
        maxLostLayers = cms.vint32(4, 3, 2),
        maxRelPtErr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        min3DLayers = cms.vint32(1, 2, 2),
        minHits = cms.vint32(0, 0, 1),
        minHits4pass = cms.vint32(2147483647, 2147483647, 2147483647),
        minLayers = cms.vint32(3, 5, 5),
        minNVtxTrk = cms.int32(2),
        minNdof = cms.vdouble(-1, -1, -1),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("muonSeededTracksInOut"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.muonSeededTracksInOutSelector = cms.EDProducer("MultiTrackSelector",
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("muonSeededTracksInOut"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(10.0),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(4),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(7),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(5),
            nSigmaZ = cms.double(4.0),
            name = cms.string('muonSeededTracksInOutLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.0),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.3, 4.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(3),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(10),
            minNumber3DLayers = cms.uint32(2),
            minNumberLayers = cms.uint32(5),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(6),
            nSigmaZ = cms.double(4.0),
            name = cms.string('muonSeededTracksInOutTight'),
            preFilterName = cms.string('muonSeededTracksInOutLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.4),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.3, 4.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(2),
            minNumberLayers = cms.uint32(5),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(7),
            nSigmaZ = cms.double(4.0),
            name = cms.string('muonSeededTracksInOutHighPurity'),
            preFilterName = cms.string('muonSeededTracksInOutTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.muonSeededTracksOutIn = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('muonSeededStepOutIn'),
    Fitter = cms.string('muonSeededFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("muonSeededTrackCandidatesOutIn"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.muonSeededTracksOutInClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            drWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dr_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dzWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dz_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        isHLT = cms.bool(False),
        maxChi2 = cms.vdouble(9999.0, 9999.0, 9999.0),
        maxChi2n = cms.vdouble(10.0, 1.0, 0.4),
        maxDr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24, 15),
        maxLostLayers = cms.vint32(4, 3, 2),
        maxRelPtErr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        min3DLayers = cms.vint32(1, 2, 2),
        minHits = cms.vint32(0, 0, 1),
        minHits4pass = cms.vint32(2147483647, 2147483647, 2147483647),
        minLayers = cms.vint32(3, 5, 5),
        minNVtxTrk = cms.int32(2),
        minNdof = cms.vdouble(-1, -1, -1),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("muonSeededTracksOutIn"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.muonSeededTracksOutInDisplaced = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('muonSeededStepOutIn'),
    Fitter = cms.string('muonSeededFittingSmootherWithOutliersRejectionAndRK'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("muonSeededTrackCandidatesOutInDisplaced"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.muonSeededTracksOutInDisplacedClassifier = cms.EDProducer("TrackCutClassifier",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        dr_par = cms.PSet(
            d0err = cms.vdouble(0.003, 0.003, 0.003),
            d0err_par = cms.vdouble(0.001, 0.001, 0.001),
            drWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dr_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dr_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        dz_par = cms.PSet(
            dzWPVerr_par = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_exp = cms.vint32(2147483647, 2147483647, 2147483647),
            dz_par1 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
            dz_par2 = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38)
        ),
        isHLT = cms.bool(False),
        maxChi2 = cms.vdouble(9999.0, 9999.0, 9999.0),
        maxChi2n = cms.vdouble(10.0, 1.0, 0.4),
        maxDr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDz = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        maxDzWrtBS = cms.vdouble(3.40282346639e+38, 24, 15),
        maxLostLayers = cms.vint32(4, 3, 2),
        maxRelPtErr = cms.vdouble(3.40282346639e+38, 3.40282346639e+38, 3.40282346639e+38),
        min3DLayers = cms.vint32(1, 2, 2),
        minHits = cms.vint32(0, 0, 1),
        minHits4pass = cms.vint32(2147483647, 2147483647, 2147483647),
        minLayers = cms.vint32(3, 5, 5),
        minNVtxTrk = cms.int32(2),
        minNdof = cms.vdouble(-1, -1, -1),
        minPixelHits = cms.vint32(0, 0, 0)
    ),
    qualityCuts = cms.vdouble(-0.7, 0.1, 0.7),
    src = cms.InputTag("muonSeededTracksOutInDisplaced"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.muonSeededTracksOutInSelector = cms.EDProducer("MultiTrackSelector",
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("muonSeededTracksOutIn"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(10.0),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(4),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(7),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(5),
            nSigmaZ = cms.double(4.0),
            name = cms.string('muonSeededTracksOutInLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.0),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.3, 4.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(3),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(10),
            minNumber3DLayers = cms.uint32(2),
            minNumberLayers = cms.uint32(5),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(6),
            nSigmaZ = cms.double(4.0),
            name = cms.string('muonSeededTracksOutInTight'),
            preFilterName = cms.string('muonSeededTracksOutInLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(False),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.4),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.3, 4.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(2),
            minNumberLayers = cms.uint32(5),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(7),
            nSigmaZ = cms.double(4.0),
            name = cms.string('muonSeededTracksOutInHighPurity'),
            preFilterName = cms.string('muonSeededTracksOutInTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.muonSelectionTypeValueMapProducer = cms.EDProducer("MuonSelectionTypeValueMapProducer",
    inputMuonCollection = cms.InputTag("muons1stStep"),
    selectionType = cms.string('All')
)


process.muonShowerInformation = cms.EDProducer("MuonShowerInformationProducer",
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    ShowerInformationFillerParameters = cms.PSet(
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        CSCSegmentLabel = cms.InputTag("cscSegments"),
        DT4DRecSegmentLabel = cms.InputTag("dt4DSegments"),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        ServiceParameters = cms.PSet(
            CSCLayers = cms.untracked.bool(True),
            GEMLayers = cms.untracked.bool(False),
            ME0Layers = cms.bool(False),
            Propagators = cms.untracked.vstring(
                'SteppingHelixPropagatorAny',
                'SteppingHelixPropagatorAlong',
                'SteppingHelixPropagatorOpposite',
                'SteppingHelixPropagatorL2Any',
                'SteppingHelixPropagatorL2Along',
                'SteppingHelixPropagatorL2Opposite',
                'SteppingHelixPropagatorAnyNoError',
                'SteppingHelixPropagatorAlongNoError',
                'SteppingHelixPropagatorOppositeNoError',
                'SteppingHelixPropagatorL2AnyNoError',
                'SteppingHelixPropagatorL2AlongNoError',
                'SteppingHelixPropagatorL2OppositeNoError',
                'PropagatorWithMaterial',
                'PropagatorWithMaterialOpposite',
                'SmartPropagator',
                'SmartPropagatorOpposite',
                'SmartPropagatorAnyOpposite',
                'SmartPropagatorAny',
                'SmartPropagatorRK',
                'SmartPropagatorAnyRK',
                'StraightLinePropagator'
            ),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        TrackerRecHitBuilder = cms.string('WithTrackAngle')
    ),
    muonCollection = cms.InputTag("hiMuons1stStep"),
    trackCollection = cms.InputTag("generalTracks")
)


process.muons = cms.EDProducer("MuonProducer",
    ActivateDebug = cms.untracked.bool(False),
    ComputeStandardSelectors = cms.bool(True),
    CosmicIdMap = cms.InputTag("cosmicsVeto"),
    EcalIsoDeposits = cms.InputTag("muIsoDepositCalByAssociatorTowers","ecal"),
    FillCosmicsIdMap = cms.bool(False),
    FillDetectorBasedIsolation = cms.bool(False),
    FillPFIsolation = cms.bool(False),
    FillPFMomentumAndAssociation = cms.bool(True),
    FillSelectorMaps = cms.bool(False),
    FillShoweringInfo = cms.bool(False),
    FillTimingInfo = cms.bool(True),
    HcalIsoDeposits = cms.InputTag("muIsoDepositCalByAssociatorTowers","hcal"),
    HoIsoDeposits = cms.InputTag("muIsoDepositCalByAssociatorTowers","ho"),
    InputMuons = cms.InputTag("hiMuons1stStep"),
    JetIsoDeposits = cms.InputTag("muIsoDepositJets"),
    PFCandidates = cms.InputTag("particleFlowTmp"),
    PFIsolation = cms.PSet(
        pfIsoMeanDRProfileR03 = cms.PSet(
            chargedHadron = cms.InputTag("muPFMeanDRIsoValueCharged03"),
            chargedParticle = cms.InputTag("muPFMeanDRIsoValueChargedAll03"),
            neutralHadron = cms.InputTag("muPFMeanDRIsoValueNeutral03"),
            neutralHadronHighThreshold = cms.InputTag("muPFMeanDRIsoValueNeutralHighThreshold03"),
            photon = cms.InputTag("muPFMeanDRIsoValueGamma03"),
            photonHighThreshold = cms.InputTag("muPFMeanDRIsoValueGammaHighThreshold03"),
            pu = cms.InputTag("muPFMeanDRIsoValuePU03")
        ),
        pfIsoMeanDRProfileR04 = cms.PSet(
            chargedHadron = cms.InputTag("muPFMeanDRIsoValueCharged04"),
            chargedParticle = cms.InputTag("muPFMeanDRIsoValueChargedAll04"),
            neutralHadron = cms.InputTag("muPFMeanDRIsoValueNeutral04"),
            neutralHadronHighThreshold = cms.InputTag("muPFMeanDRIsoValueNeutralHighThreshold04"),
            photon = cms.InputTag("muPFMeanDRIsoValueGamma04"),
            photonHighThreshold = cms.InputTag("muPFMeanDRIsoValueGammaHighThreshold04"),
            pu = cms.InputTag("muPFMeanDRIsoValuePU04")
        ),
        pfIsoSumDRProfileR03 = cms.PSet(
            chargedHadron = cms.InputTag("muPFSumDRIsoValueCharged03"),
            chargedParticle = cms.InputTag("muPFSumDRIsoValueChargedAll03"),
            neutralHadron = cms.InputTag("muPFSumDRIsoValueNeutral03"),
            neutralHadronHighThreshold = cms.InputTag("muPFSumDRIsoValueNeutralHighThreshold03"),
            photon = cms.InputTag("muPFSumDRIsoValueGamma03"),
            photonHighThreshold = cms.InputTag("muPFSumDRIsoValueGammaHighThreshold03"),
            pu = cms.InputTag("muPFSumDRIsoValuePU03")
        ),
        pfIsoSumDRProfileR04 = cms.PSet(
            chargedHadron = cms.InputTag("muPFSumDRIsoValueCharged04"),
            chargedParticle = cms.InputTag("muPFSumDRIsoValueChargedAll04"),
            neutralHadron = cms.InputTag("muPFSumDRIsoValueNeutral04"),
            neutralHadronHighThreshold = cms.InputTag("muPFSumDRIsoValueNeutralHighThreshold04"),
            photon = cms.InputTag("muPFSumDRIsoValueGamma04"),
            photonHighThreshold = cms.InputTag("muPFSumDRIsoValueGammaHighThreshold04"),
            pu = cms.InputTag("muPFSumDRIsoValuePU04")
        ),
        pfIsolationR03 = cms.PSet(
            chargedHadron = cms.InputTag("muPFIsoValueCharged03"),
            chargedParticle = cms.InputTag("muPFIsoValueChargedAll03"),
            neutralHadron = cms.InputTag("muPFIsoValueNeutral03"),
            neutralHadronHighThreshold = cms.InputTag("muPFIsoValueNeutralHighThreshold03"),
            photon = cms.InputTag("muPFIsoValueGamma03"),
            photonHighThreshold = cms.InputTag("muPFIsoValueGammaHighThreshold03"),
            pu = cms.InputTag("muPFIsoValuePU03")
        ),
        pfIsolationR04 = cms.PSet(
            chargedHadron = cms.InputTag("muPFIsoValueCharged04"),
            chargedParticle = cms.InputTag("muPFIsoValueChargedAll04"),
            neutralHadron = cms.InputTag("muPFIsoValueNeutral04"),
            neutralHadronHighThreshold = cms.InputTag("muPFIsoValueNeutralHighThreshold04"),
            photon = cms.InputTag("muPFIsoValueGamma04"),
            photonHighThreshold = cms.InputTag("muPFIsoValueGammaHighThreshold04"),
            pu = cms.InputTag("muPFIsoValuePU04")
        )
    ),
    SelectorMaps = cms.VInputTag(
        cms.InputTag("muidTMLastStationOptimizedLowPtLoose"), cms.InputTag("muidTMLastStationOptimizedLowPtTight"), cms.InputTag("muidTM2DCompatibilityLoose"), cms.InputTag("muidTM2DCompatibilityTight"), cms.InputTag("muidTrackerMuonArbitrated"),
        cms.InputTag("muidTMLastStationAngLoose"), cms.InputTag("muidGlobalMuonPromptTight"), cms.InputTag("muidGMStaChiCompatibility"), cms.InputTag("muidTMLastStationAngTight"), cms.InputTag("muidGMTkChiCompatibility"),
        cms.InputTag("muidTMOneStationAngTight"), cms.InputTag("muidTMOneStationAngLoose"), cms.InputTag("muidTMLastStationLoose"), cms.InputTag("muidTMLastStationTight"), cms.InputTag("muidTMOneStationTight"),
        cms.InputTag("muidTMOneStationLoose"), cms.InputTag("muidAllArbitrated"), cms.InputTag("muidGMTkKinkTight"), cms.InputTag("muidRPCMuLoose")
    ),
    ShowerInfoMap = cms.InputTag("muonShowerInformation"),
    TrackIsoDeposits = cms.InputTag("muIsoDepositTk"),
    vertices = cms.InputTag("hiSelectedVertex")
)


process.muons1stStep = cms.EDProducer("MuonIdProducer",
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("ak4CaloJets"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            PruneCut = cms.double(9.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(0.0),
            DoWireCorr = cms.bool(True),
            DropTheta = cms.bool(True),
            HitError = cms.double(2.8),
            HitsMin = cms.int32(3),
            PruneCut = cms.double(5.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTradius = cms.double(0.01),
            DTsegments = cms.InputTag("dt4DSegments"),
            RPChits = cms.InputTag("rpcRecHits"),
            TightMatchCSC = cms.bool(True),
            TightMatchDT = cms.bool(False)
        ),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(False)
    ),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("generalTracks")
    ),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(True)
    ),
    addExtraSoftMuons = cms.bool(False),
    arbitrateTrackerMuons = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        ClusterDPhi = cms.double(0.6),
        ClusterDTheta = cms.double(0.02),
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        OverlapDTheta = cms.double(0.02)
    ),
    debugWithTruthMatching = cms.bool(False),
    ecalDepositName = cms.string('ecal'),
    fillCaloCompatibility = cms.bool(True),
    fillEnergy = cms.bool(True),
    fillGlobalTrackQuality = cms.bool(True),
    fillGlobalTrackRefits = cms.bool(True),
    fillIsolation = cms.bool(True),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(True),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    inputCollectionLabels = cms.VInputTag(
        cms.InputTag("generalTracks"), cms.InputTag("globalMuons"), cms.InputTag("standAloneMuons","UpdatedAtVtx"), cms.InputTag("tevMuons","firstHit"), cms.InputTag("tevMuons","picky"),
        cms.InputTag("tevMuons","dyt")
    ),
    inputCollectionTypes = cms.vstring(
        'inner tracks',
        'links',
        'outer tracks',
        'tev firstHit',
        'tev picky',
        'tev dyt'
    ),
    jetDepositName = cms.string('jets'),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    maxAbsEta = cms.double(3.0),
    maxAbsPullX = cms.double(3.0),
    maxAbsPullY = cms.double(9999.0),
    minCaloCompatibility = cms.double(0.6),
    minNumberOfMatches = cms.int32(1),
    minP = cms.double(2.5),
    minPCaloMuon = cms.double(1000000000.0),
    minPt = cms.double(0.5),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    runArbitrationCleaner = cms.bool(True),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    trackDepositName = cms.string('tracker'),
    writeIsoDeposits = cms.bool(True)
)


process.muonsWithSET = cms.EDProducer("MuonIdProducer",
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("ak4CaloJets"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            PruneCut = cms.double(9.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(0.0),
            DoWireCorr = cms.bool(True),
            DropTheta = cms.bool(True),
            HitError = cms.double(2.8),
            HitsMin = cms.int32(3),
            PruneCut = cms.double(5.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTradius = cms.double(0.01),
            DTsegments = cms.InputTag("dt4DSegments"),
            RPChits = cms.InputTag("rpcRecHits"),
            TightMatchCSC = cms.bool(True),
            TightMatchDT = cms.bool(False)
        ),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(False)
    ),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("generalTracks")
    ),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(True)
    ),
    addExtraSoftMuons = cms.bool(False),
    arbitrateTrackerMuons = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        ClusterDPhi = cms.double(0.6),
        ClusterDTheta = cms.double(0.02),
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        OverlapDTheta = cms.double(0.02)
    ),
    debugWithTruthMatching = cms.bool(False),
    ecalDepositName = cms.string('ecal'),
    fillCaloCompatibility = cms.bool(True),
    fillEnergy = cms.bool(True),
    fillGlobalTrackQuality = cms.bool(True),
    fillGlobalTrackRefits = cms.bool(True),
    fillIsolation = cms.bool(True),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(True),
    globalTrackQualityInputTag = cms.InputTag("glbTrackQual"),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    inputCollectionLabels = cms.VInputTag("generalTracks", "globalSETMuons", cms.InputTag("standAloneSETMuons","UpdatedAtVtx")),
    inputCollectionTypes = cms.vstring(
        'inner tracks',
        'links',
        'outer tracks'
    ),
    jetDepositName = cms.string('jets'),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    maxAbsEta = cms.double(3.0),
    maxAbsPullX = cms.double(3.0),
    maxAbsPullY = cms.double(9999.0),
    minCaloCompatibility = cms.double(0.6),
    minNumberOfMatches = cms.int32(1),
    minP = cms.double(2.5),
    minPCaloMuon = cms.double(1000000000.0),
    minPt = cms.double(0.5),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    runArbitrationCleaner = cms.bool(True),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    trackDepositName = cms.string('tracker'),
    writeIsoDeposits = cms.bool(True)
)


process.muontiming = cms.EDProducer("MuonTimingProducer",
    MuonCollection = cms.InputTag("muons"),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            PruneCut = cms.double(9.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(0.0),
            DoWireCorr = cms.bool(True),
            DropTheta = cms.bool(True),
            HitError = cms.double(2.8),
            HitsMin = cms.int32(3),
            PruneCut = cms.double(5.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTradius = cms.double(0.01),
            DTsegments = cms.InputTag("dt4DSegments"),
            RPChits = cms.InputTag("rpcRecHits"),
            TightMatchCSC = cms.bool(True),
            TightMatchDT = cms.bool(False)
        ),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(False)
    )
)


process.mvaElectrons = cms.EDProducer("ElectronIdMVABased",
    HZZmvaWeightFile = cms.vstring(
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_10_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_12_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_20_17Feb2011.weights.xml',
        'RecoEgamma/ElectronIdentification/data/TMVA_Category_BDTSimpleCat_22_17Feb2011.weights.xml'
    ),
    electronTag = cms.InputTag("electronsWithPresel"),
    thresholdBarrel = cms.double(-0.1875),
    thresholdEndcap = cms.double(-0.1075),
    thresholdIsoDR03Barrel = cms.double(10.0),
    thresholdIsoDR03Endcap = cms.double(10.0),
    vertexTag = cms.InputTag("hiSelectedVertex")
)


process.offlineBeamSpot = cms.EDProducer("BeamSpotProducer")


process.onlineMetaDataDigis = cms.EDProducer("OnlineMetaDataRawToDigi",
    onlineMetaDataInputLabel = cms.InputTag("rawDataRepacker")
)


process.onlineMetaDataRawToDigi = cms.EDProducer("OnlineMetaDataRawToDigi",
    onlineMetaDataInputLabel = cms.InputTag("rawDataCollector")
)


process.ootPhotonCore = cms.EDProducer("PhotonCoreProducer",
    conversionProducer = cms.InputTag("conversions"),
    minSCEt = cms.double(8.0),
    photonCoreCollection = cms.string(''),
    pixelSeedProducer = cms.InputTag("electronMergedSeeds"),
    risolveConversionAmbiguity = cms.bool(True),
    scHybridBarrelProducer = cms.InputTag("particleFlowSuperClusterOOTECAL","particleFlowSuperClusterOOTECALBarrel"),
    scIslandEndcapProducer = cms.InputTag("particleFlowSuperClusterOOTECAL","particleFlowSuperClusterOOTECALEndcapWithPreshower")
)


process.ootPhotonEcalPFClusterIsolationProducer = cms.EDProducer("PhotonEcalPFClusterIsolationProducer",
    candidateProducer = cms.InputTag("ootPhotonsTmp"),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0),
    drVetoEndcap = cms.double(0),
    energyBarrel = cms.double(0),
    energyEndcap = cms.double(0),
    etaStripBarrel = cms.double(0),
    etaStripEndcap = cms.double(0),
    pfClusterProducer = cms.InputTag("particleFlowClusterOOTECAL")
)


process.ootPhotonHcalPFClusterIsolationProducer = cms.EDProducer("PhotonHcalPFClusterIsolationProducer",
    candidateProducer = cms.InputTag("ootPhotonsTmp"),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0),
    drVetoEndcap = cms.double(0),
    energyBarrel = cms.double(0),
    energyEndcap = cms.double(0),
    etaStripBarrel = cms.double(0),
    etaStripEndcap = cms.double(0),
    pfClusterProducerHCAL = cms.InputTag("particleFlowClusterHCAL"),
    useHF = cms.bool(False)
)


process.ootPhotons = cms.EDProducer("GEDPhotonProducer",
    PFIsolationCalculatorSet = cms.PSet(
        ComponentName = cms.string('pfIsolationCalculator'),
        applyDzDxyVeto = cms.bool(True),
        applyMissHitPhVeto = cms.bool(False),
        applyPFPUVeto = cms.bool(True),
        applyVeto = cms.bool(True),
        checkClosestZVertex = cms.bool(True),
        coneDR = cms.double(0.3),
        deltaRVetoBarrel = cms.bool(True),
        deltaRVetoBarrelCharged = cms.double(0.02),
        deltaRVetoBarrelNeutrals = cms.double(-1.0),
        deltaRVetoBarrelPhotons = cms.double(-1.0),
        deltaRVetoEndcap = cms.bool(True),
        deltaRVetoEndcapCharged = cms.double(0.02),
        deltaRVetoEndcapNeutrals = cms.double(-1.0),
        deltaRVetoEndcapPhotons = cms.double(0.07),
        numberOfCrystalEndcapPhotons = cms.double(4.0),
        numberOfRings = cms.int32(1),
        particleType = cms.int32(1),
        rectangleDeltaEtaVetoBarrelCharged = cms.double(-1),
        rectangleDeltaEtaVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoBarrelPhotons = cms.double(0.015),
        rectangleDeltaEtaVetoEndcapCharged = cms.double(-1),
        rectangleDeltaEtaVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoEndcapPhotons = cms.double(-1),
        rectangleDeltaPhiVetoBarrelCharged = cms.double(-1),
        rectangleDeltaPhiVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoBarrelPhotons = cms.double(1.0),
        rectangleDeltaPhiVetoEndcapCharged = cms.double(-1),
        rectangleDeltaPhiVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoEndcapPhotons = cms.double(-1),
        rectangleVetoBarrel = cms.bool(True),
        rectangleVetoEndcap = cms.bool(False),
        ringSize = cms.double(0.3),
        useCrystalSize = cms.bool(True)
    ),
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromEcalEnergy'),
    chargedHadronIsolation = cms.InputTag(""),
    checkHcalStatus = cms.bool(True),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        trackProducer = cms.InputTag("hiGeneralTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHoverEBarrel = cms.double(0.5),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(0.94),
    minR9Endcap = cms.double(0.95),
    minSCEtBarrel = cms.double(10.0),
    minSCEtEndcap = cms.double(10.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    neutralHadronIsolation = cms.InputTag(""),
    outputPhotonCollection = cms.string(''),
    pfCandidates = cms.InputTag("particleFlowTmp"),
    pfECALClusIsolation = cms.InputTag("ootPhotonEcalPFClusterIsolationProducer"),
    pfEgammaCandidates = cms.InputTag(""),
    pfHCALClusIsolation = cms.InputTag("ootPhotonHcalPFClusterIsolationProducer"),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    photonIsolation = cms.InputTag(""),
    photonProducer = cms.InputTag("ootPhotonsTmp"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    preshowerHits = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    primaryVertexProducer = cms.InputTag("hiSelectedVertex"),
    reconstructionStep = cms.string('ootfinal'),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True),
    useRegression = cms.bool(True),
    valueMapPhotons = cms.string('')
)


process.ootPhotonsTmp = cms.EDProducer("GEDPhotonProducer",
    PFIsolationCalculatorSet = cms.PSet(
        ComponentName = cms.string('pfIsolationCalculator'),
        applyDzDxyVeto = cms.bool(True),
        applyMissHitPhVeto = cms.bool(False),
        applyPFPUVeto = cms.bool(True),
        applyVeto = cms.bool(True),
        checkClosestZVertex = cms.bool(True),
        coneDR = cms.double(0.3),
        deltaRVetoBarrel = cms.bool(True),
        deltaRVetoBarrelCharged = cms.double(0.02),
        deltaRVetoBarrelNeutrals = cms.double(-1.0),
        deltaRVetoBarrelPhotons = cms.double(-1.0),
        deltaRVetoEndcap = cms.bool(True),
        deltaRVetoEndcapCharged = cms.double(0.02),
        deltaRVetoEndcapNeutrals = cms.double(-1.0),
        deltaRVetoEndcapPhotons = cms.double(0.07),
        numberOfCrystalEndcapPhotons = cms.double(4.0),
        numberOfRings = cms.int32(1),
        particleType = cms.int32(1),
        rectangleDeltaEtaVetoBarrelCharged = cms.double(-1),
        rectangleDeltaEtaVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoBarrelPhotons = cms.double(0.015),
        rectangleDeltaEtaVetoEndcapCharged = cms.double(-1),
        rectangleDeltaEtaVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaEtaVetoEndcapPhotons = cms.double(-1),
        rectangleDeltaPhiVetoBarrelCharged = cms.double(-1),
        rectangleDeltaPhiVetoBarrelNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoBarrelPhotons = cms.double(1.0),
        rectangleDeltaPhiVetoEndcapCharged = cms.double(-1),
        rectangleDeltaPhiVetoEndcapNeutrals = cms.double(-1),
        rectangleDeltaPhiVetoEndcapPhotons = cms.double(-1),
        rectangleVetoBarrel = cms.bool(True),
        rectangleVetoEndcap = cms.bool(False),
        ringSize = cms.double(0.3),
        useCrystalSize = cms.bool(True)
    ),
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromEcalEnergy'),
    checkHcalStatus = cms.bool(True),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        trackProducer = cms.InputTag("hiGeneralTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHoverEBarrel = cms.double(0.5),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(0.94),
    minR9Endcap = cms.double(0.95),
    minSCEtBarrel = cms.double(10.0),
    minSCEtEndcap = cms.double(10.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    outputPhotonCollection = cms.string(''),
    pfCandidates = cms.InputTag("particleFlowTmp"),
    pfEgammaCandidates = cms.InputTag(""),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    photonProducer = cms.InputTag("ootPhotonCore"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    preshowerHits = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    primaryVertexProducer = cms.InputTag("hiSelectedVertex"),
    reconstructionStep = cms.string('oot'),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True),
    useRegression = cms.bool(True),
    valueMapPhotons = cms.string('')
)


process.particleBasedIsolation = cms.EDProducer("ParticleBasedIsoProducer",
    electronProducer = cms.InputTag("gedGsfElectrons"),
    electronTmpProducer = cms.InputTag("gedGsfElectronsTmp"),
    pfBlockBasedIsolationSetUp = cms.PSet(
        ComponentName = cms.string('pfBlockBasedIsolation'),
        coneSize = cms.double(9999999999)
    ),
    pfCandidates = cms.InputTag("particleFlow"),
    pfEgammaCandidates = cms.InputTag("particleFlowEGamma"),
    photonProducer = cms.InputTag("gedPhotons"),
    photonTmpProducer = cms.InputTag("gedPhotonsTmp"),
    valueMapElePFblockIso = cms.string('gedGsfElectrons'),
    valueMapEleToEG = cms.string(''),
    valueMapPhoPFblockIso = cms.string('gedPhotons'),
    valueMapPhoToEG = cms.string('valMapPFEgammaCandToPhoton')
)


process.particleBasedIsolationTmp = cms.EDProducer("ParticleBasedIsoProducer",
    electronProducer = cms.InputTag("gedGsfElectronsTmp"),
    electronTmpProducer = cms.InputTag("gedGsfElectronsTmp"),
    pfBlockBasedIsolationSetUp = cms.PSet(
        ComponentName = cms.string('pfBlockBasedIsolation'),
        coneSize = cms.double(9999999999)
    ),
    pfCandidates = cms.InputTag("particleFlowTmp"),
    pfEgammaCandidates = cms.InputTag("particleFlowEGamma"),
    photonProducer = cms.InputTag("gedPhotonsTmp"),
    photonTmpProducer = cms.InputTag("gedPhotonsTmp"),
    valueMapElePFblockIso = cms.string('gedGsfElectronsTmp'),
    valueMapEleToEG = cms.string(''),
    valueMapPhoPFblockIso = cms.string('gedPhotonsTmp'),
    valueMapPhoToEG = cms.string('valMapPFEgammaCandToPhoton')
)


process.particleFlow = cms.EDProducer("PFLinker",
    FillMuonRefs = cms.bool(True),
    GsfElectrons = cms.InputTag("gedGsfElectrons"),
    Muons = cms.InputTag("muons","hiMuons1stStep2muonsMap"),
    OutputPF = cms.string(''),
    PFCandidate = cms.VInputTag(cms.InputTag("particleFlowTmp")),
    Photons = cms.InputTag("gedPhotons"),
    ProducePFCandidates = cms.bool(True),
    ValueMapElectrons = cms.string('electrons'),
    ValueMapMerged = cms.string('all'),
    ValueMapPhotons = cms.string('photons'),
    forceElectronsInHGCAL = cms.bool(False)
)


process.particleFlowBadHcalPseudoCluster = cms.EDProducer("PFBadHcalPseudoClusterProducer",
    debug = cms.untracked.bool(False),
    enable = cms.bool(False)
)


process.particleFlowBlock = cms.EDProducer("PFBlockProducer",
    debug = cms.untracked.bool(False),
    elementImporters = cms.VPSet(
        cms.PSet(
            gsfsAreSecondary = cms.bool(False),
            importerName = cms.string('GSFTrackImporter'),
            source = cms.InputTag("pfTrackElec"),
            superClustersArePF = cms.bool(True)
        ),
        cms.PSet(
            importerName = cms.string('SuperClusterImporter'),
            maximumHoverE = cms.double(0.5),
            minPTforBypass = cms.double(100.0),
            minSuperClusterPt = cms.double(10.0),
            source_eb = cms.InputTag("particleFlowSuperClusterECAL","particleFlowSuperClusterECALBarrel"),
            source_ee = cms.InputTag("particleFlowSuperClusterECAL","particleFlowSuperClusterECALEndcapWithPreshower"),
            source_towers = cms.InputTag("towerMaker"),
            superClustersArePF = cms.bool(True)
        ),
        cms.PSet(
            DPtOverPtCuts_byTrackAlgo = cms.vdouble(-1.0, -1.0, -1.0, 1.0, 1.0),
            NHitCuts_byTrackAlgo = cms.vuint32(3, 3, 3, 3, 3),
            importerName = cms.string('GeneralTracksImporter'),
            muonSrc = cms.InputTag("hiMuons1stStep"),
            source = cms.InputTag("pfTrack"),
            useIterativeTracking = cms.bool(False)
        ),
        cms.PSet(
            BCtoPFCMap = cms.InputTag("particleFlowSuperClusterECAL","PFClusterAssociationEBEE"),
            importerName = cms.string('ECALClusterImporter'),
            source = cms.InputTag("particleFlowClusterECAL")
        ),
        cms.PSet(
            importerName = cms.string('GenericClusterImporter'),
            source = cms.InputTag("particleFlowClusterHCAL")
        ),
        cms.PSet(
            importerName = cms.string('GenericClusterImporter'),
            source = cms.InputTag("particleFlowClusterHO")
        ),
        cms.PSet(
            importerName = cms.string('GenericClusterImporter'),
            source = cms.InputTag("particleFlowClusterHF")
        ),
        cms.PSet(
            importerName = cms.string('GenericClusterImporter'),
            source = cms.InputTag("particleFlowClusterPS")
        )
    ),
    linkDefinitions = cms.VPSet(
        cms.PSet(
            linkType = cms.string('PS1:ECAL'),
            linkerName = cms.string('PreshowerAndECALLinker'),
            useKDTree = cms.bool(True)
        ),
        cms.PSet(
            linkType = cms.string('PS2:ECAL'),
            linkerName = cms.string('PreshowerAndECALLinker'),
            useKDTree = cms.bool(True)
        ),
        cms.PSet(
            linkType = cms.string('TRACK:ECAL'),
            linkerName = cms.string('TrackAndECALLinker'),
            useKDTree = cms.bool(True)
        ),
        cms.PSet(
            linkType = cms.string('TRACK:HCAL'),
            linkerName = cms.string('TrackAndHCALLinker'),
            useKDTree = cms.bool(True)
        ),
        cms.PSet(
            linkType = cms.string('TRACK:HO'),
            linkerName = cms.string('TrackAndHOLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('ECAL:HCAL'),
            linkerName = cms.string('ECALAndHCALLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('HCAL:HO'),
            linkerName = cms.string('HCALAndHOLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('HFEM:HFHAD'),
            linkerName = cms.string('HFEMAndHFHADLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('TRACK:TRACK'),
            linkerName = cms.string('TrackAndTrackLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('ECAL:ECAL'),
            linkerName = cms.string('ECALAndECALLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('GSF:ECAL'),
            linkerName = cms.string('GSFAndECALLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('TRACK:GSF'),
            linkerName = cms.string('TrackAndGSFLinker'),
            useConvertedBrems = cms.bool(True),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('GSF:BREM'),
            linkerName = cms.string('GSFAndBREMLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('GSF:GSF'),
            linkerName = cms.string('GSFAndGSFLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('ECAL:BREM'),
            linkerName = cms.string('ECALAndBREMLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('GSF:HCAL'),
            linkerName = cms.string('GSFAndHCALLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            linkType = cms.string('HCAL:BREM'),
            linkerName = cms.string('HCALAndBREMLinker'),
            useKDTree = cms.bool(False)
        ),
        cms.PSet(
            SuperClusterMatchByRef = cms.bool(True),
            linkType = cms.string('SC:ECAL'),
            linkerName = cms.string('SCAndECALLinker'),
            useKDTree = cms.bool(False)
        )
    ),
    verbose = cms.untracked.bool(False)
)


process.particleFlowClusterECAL = cms.EDProducer("CorrectedECALPFClusterProducer",
    energyCorrector = cms.PSet(
        algoName = cms.string('PFClusterEMEnergyCorrector'),
        applyCrackCorrections = cms.bool(False),
        applyMVACorrections = cms.bool(True),
        autoDetectBunchSpacing = cms.bool(True),
        bunchSpacing = cms.int32(25),
        ebSrFlagLabel = cms.InputTag("ecalDigis"),
        eeSrFlagLabel = cms.InputTag("ecalDigis"),
        maxPtForMVAEvaluation = cms.double(90.0),
        recHitsEBLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        recHitsEELabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        srfAwareCorrection = cms.bool(False),
        verticesLabel = cms.InputTag("hiPixelAdaptiveVertex")
    ),
    inputECAL = cms.InputTag("particleFlowClusterECALUncorrected"),
    inputPS = cms.InputTag("particleFlowClusterPS"),
    minimumPSEnergy = cms.double(0)
)


process.particleFlowClusterECALUncorrected = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                gatheringThreshold = cms.double(0.08),
                gatheringThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                gatheringThreshold = cms.double(0.3),
                gatheringThresholdPt = cms.double(0.0)
            )
        ),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.10889),
                noiseTermLowE = cms.double(1.31883),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.72489999999),
                noiseTermLowE = cms.double(6.92683000001),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(9),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.10889),
                noiseTermLowE = cms.double(1.31883),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.72489999999),
                noiseTermLowE = cms.double(6.92683000001),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        positionCalcForConvergence = cms.PSet(
            T0_EB = cms.double(7.4),
            T0_EE = cms.double(3.1),
            T0_ES = cms.double(1.2),
            W0 = cms.double(4.2),
            X0 = cms.double(0.89),
            algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
            minAllowedNormalization = cms.double(0.0),
            minFractionInCalc = cms.double(0.0)
        ),
        recHitEnergyNorms = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                recHitEnergyNorm = cms.double(0.08)
            ),
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                recHitEnergyNorm = cms.double(0.3)
            )
        ),
        showerSigma = cms.double(1.5),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(
        T0_EB = cms.double(7.4),
        T0_EE = cms.double(3.1),
        T0_ES = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89),
        algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
        minAllowedNormalization = cms.double(0.0),
        minFractionInCalc = cms.double(0.0)
    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("particleFlowRecHitECAL"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(8),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                seedingThreshold = cms.double(0.6),
                seedingThresholdPt = cms.double(0.15)
            ),
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                seedingThreshold = cms.double(0.23),
                seedingThresholdPt = cms.double(0.0)
            )
        )
    )
)


process.particleFlowClusterHBHE = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                depths = cms.vint32(1, 2, 3, 4),
                detector = cms.string('HCAL_BARREL1'),
                gatheringThreshold = cms.vdouble(0.8, 0.8, 0.8, 0.8),
                gatheringThresholdPt = cms.vdouble(0.0, 0.0, 0.0, 0.0)
            ),
            cms.PSet(
                depths = cms.vint32(
                    1, 2, 3, 4, 5,
                    6, 7
                ),
                detector = cms.string('HCAL_ENDCAP'),
                gatheringThreshold = cms.vdouble(
                    0.8, 0.8, 0.8, 0.8, 0.8,
                    0.8, 0.8
                ),
                gatheringThresholdPt = cms.vdouble(
                    0.0, 0.0, 0.0, 0.0, 0.0,
                    0.0, 0.0
                )
            )
        ),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominatorByDetector = cms.VPSet(
                cms.PSet(
                    depths = cms.vint32(1, 2, 3, 4),
                    detector = cms.string('HCAL_BARREL1'),
                    logWeightDenominator = cms.vdouble(0.8, 0.8, 0.8, 0.8)
                ),
                cms.PSet(
                    depths = cms.vint32(
                        1, 2, 3, 4, 5,
                        6, 7
                    ),
                    detector = cms.string('HCAL_ENDCAP'),
                    logWeightDenominator = cms.vdouble(
                        0.8, 0.8, 0.8, 0.8, 0.8,
                        0.8, 0.8
                    )
                )
            ),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        clusterTimeResFromSeed = cms.bool(False),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        maxNSigmaTime = cms.double(10.0),
        minChi2Prob = cms.double(0.0),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominatorByDetector = cms.VPSet(
                cms.PSet(
                    depths = cms.vint32(1, 2, 3, 4),
                    detector = cms.string('HCAL_BARREL1'),
                    logWeightDenominator = cms.vdouble(0.8, 0.8, 0.8, 0.8)
                ),
                cms.PSet(
                    depths = cms.vint32(
                        1, 2, 3, 4, 5,
                        6, 7
                    ),
                    detector = cms.string('HCAL_ENDCAP'),
                    logWeightDenominator = cms.vdouble(
                        0.8, 0.8, 0.8, 0.8, 0.8,
                        0.8, 0.8
                    )
                )
            ),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(5)
        ),
        recHitEnergyNorms = cms.VPSet(
            cms.PSet(
                depths = cms.vint32(1, 2, 3, 4),
                detector = cms.string('HCAL_BARREL1'),
                recHitEnergyNorm = cms.vdouble(0.8, 0.8, 0.8, 0.8)
            ),
            cms.PSet(
                depths = cms.vint32(
                    1, 2, 3, 4, 5,
                    6, 7
                ),
                detector = cms.string('HCAL_ENDCAP'),
                recHitEnergyNorm = cms.vdouble(
                    0.8, 0.8, 0.8, 0.8, 0.8,
                    0.8, 0.8
                )
            )
        ),
        showerSigma = cms.double(10.0),
        stoppingTolerance = cms.double(1e-08),
        timeResolutionCalcBarrel = cms.PSet(
            constantTerm = cms.double(2.82),
            constantTermLowE = cms.double(4.24),
            corrTermLowE = cms.double(0.0),
            noiseTerm = cms.double(21.86),
            noiseTermLowE = cms.double(8),
            threshHighE = cms.double(15.0),
            threshLowE = cms.double(6.0)
        ),
        timeResolutionCalcEndcap = cms.PSet(
            constantTerm = cms.double(2.82),
            constantTermLowE = cms.double(4.24),
            corrTermLowE = cms.double(0.0),
            noiseTerm = cms.double(21.86),
            noiseTermLowE = cms.double(8),
            threshHighE = cms.double(15.0),
            threshLowE = cms.double(6.0)
        ),
        timeSigmaEB = cms.double(10.0),
        timeSigmaEE = cms.double(10.0)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("particleFlowRecHitHBHE"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(4),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                depths = cms.vint32(1, 2, 3, 4),
                detector = cms.string('HCAL_BARREL1'),
                seedingThreshold = cms.vdouble(1.0, 1.0, 1.0, 1.0),
                seedingThresholdPt = cms.vdouble(0.0, 0.0, 0.0, 0.0)
            ),
            cms.PSet(
                depths = cms.vint32(
                    1, 2, 3, 4, 5,
                    6, 7
                ),
                detector = cms.string('HCAL_ENDCAP'),
                seedingThreshold = cms.vdouble(
                    1.1, 1.1, 1.1, 1.1, 1.1,
                    1.1, 1.1
                ),
                seedingThresholdPt = cms.vdouble(
                    0.0, 0.0, 0.0, 0.0, 0.0,
                    0.0, 0.0
                )
            )
        )
    )
)


process.particleFlowClusterHBHETimeSelected = cms.EDProducer("PFClusterTimeSelector",
    cuts = cms.VPSet(
        cms.PSet(
            depth = cms.double(1.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(1.0),
            maxTime = cms.double(30.0),
            minEnergy = cms.double(0.0),
            minTime = cms.double(-30.0)
        ),
        cms.PSet(
            depth = cms.double(1.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(1.0),
            maxTime = cms.double(30.0),
            minEnergy = cms.double(0.0),
            minTime = cms.double(-30.0)
        ),
        cms.PSet(
            depth = cms.double(2.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(1.0),
            maxTime = cms.double(30.0),
            minEnergy = cms.double(0.0),
            minTime = cms.double(-30.0)
        ),
        cms.PSet(
            depth = cms.double(2.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(1.0),
            maxTime = cms.double(30.0),
            minEnergy = cms.double(0.0),
            minTime = cms.double(-30.0)
        ),
        cms.PSet(
            depth = cms.double(3.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(1.0),
            maxTime = cms.double(30.0),
            minEnergy = cms.double(0.0),
            minTime = cms.double(-30.0)
        ),
        cms.PSet(
            depth = cms.double(3.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(1.0),
            maxTime = cms.double(30.0),
            minEnergy = cms.double(0.0),
            minTime = cms.double(-30.0)
        ),
        cms.PSet(
            depth = cms.double(1.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(2.0),
            maxTime = cms.double(15.0),
            minEnergy = cms.double(1.0),
            minTime = cms.double(-20.0)
        ),
        cms.PSet(
            depth = cms.double(1.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(2.0),
            maxTime = cms.double(16.0),
            minEnergy = cms.double(1.0),
            minTime = cms.double(-20.0)
        ),
        cms.PSet(
            depth = cms.double(2.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(2.0),
            maxTime = cms.double(15.0),
            minEnergy = cms.double(1.0),
            minTime = cms.double(-20.0)
        ),
        cms.PSet(
            depth = cms.double(2.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(2.0),
            maxTime = cms.double(15.0),
            minEnergy = cms.double(1.0),
            minTime = cms.double(-20.0)
        ),
        cms.PSet(
            depth = cms.double(3.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(2.0),
            maxTime = cms.double(15.0),
            minEnergy = cms.double(1.0),
            minTime = cms.double(-20.0)
        ),
        cms.PSet(
            depth = cms.double(3.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(2.0),
            maxTime = cms.double(15.0),
            minEnergy = cms.double(1.0),
            minTime = cms.double(-20.0)
        ),
        cms.PSet(
            depth = cms.double(1.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(5.0),
            maxTime = cms.double(25.0),
            minEnergy = cms.double(2.0),
            minTime = cms.double(-20.0)
        ),
        cms.PSet(
            depth = cms.double(1.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(5.0),
            maxTime = cms.double(25.0),
            minEnergy = cms.double(2.0),
            minTime = cms.double(-20.0)
        ),
        cms.PSet(
            depth = cms.double(2.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(5.0),
            maxTime = cms.double(25.0),
            minEnergy = cms.double(2.0),
            minTime = cms.double(-15.0)
        ),
        cms.PSet(
            depth = cms.double(2.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(5.0),
            maxTime = cms.double(25.0),
            minEnergy = cms.double(2.0),
            minTime = cms.double(-15.0)
        ),
        cms.PSet(
            depth = cms.double(3.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(5.0),
            maxTime = cms.double(25.0),
            minEnergy = cms.double(2.0),
            minTime = cms.double(-15.0)
        ),
        cms.PSet(
            depth = cms.double(3.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(5.0),
            maxTime = cms.double(25.0),
            minEnergy = cms.double(2.0),
            minTime = cms.double(-15.0)
        ),
        cms.PSet(
            depth = cms.double(1.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(9999999.0),
            maxTime = cms.double(20.0),
            minEnergy = cms.double(5.0),
            minTime = cms.double(-5)
        ),
        cms.PSet(
            depth = cms.double(1.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(9999999.0),
            maxTime = cms.double(20.0),
            minEnergy = cms.double(5.0),
            minTime = cms.double(-5)
        ),
        cms.PSet(
            depth = cms.double(2.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(9999999.0),
            maxTime = cms.double(20.0),
            minEnergy = cms.double(5.0),
            minTime = cms.double(-5)
        ),
        cms.PSet(
            depth = cms.double(2.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(9999999.0),
            maxTime = cms.double(20.0),
            minEnergy = cms.double(5.0),
            minTime = cms.double(-5)
        ),
        cms.PSet(
            depth = cms.double(3.0),
            endcap = cms.bool(False),
            maxEnergy = cms.double(9999999.0),
            maxTime = cms.double(20.0),
            minEnergy = cms.double(5.0),
            minTime = cms.double(-5)
        ),
        cms.PSet(
            depth = cms.double(3.0),
            endcap = cms.bool(True),
            maxEnergy = cms.double(9999999.0),
            maxTime = cms.double(20.0),
            minEnergy = cms.double(5.0),
            minTime = cms.double(-5)
        )
    ),
    src = cms.InputTag("particleFlowClusterHBHE")
)


process.particleFlowClusterHCAL = cms.EDProducer("PFMultiDepthClusterProducer",
    clustersSource = cms.InputTag("particleFlowClusterHBHE"),
    energyCorrector = cms.PSet(

    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('PFMultiDepthClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominatorByDetector = cms.VPSet(
                cms.PSet(
                    depths = cms.vint32(1, 2, 3, 4),
                    detector = cms.string('HCAL_BARREL1'),
                    logWeightDenominator = cms.vdouble(0.8, 0.8, 0.8, 0.8)
                ),
                cms.PSet(
                    depths = cms.vint32(
                        1, 2, 3, 4, 5,
                        6, 7
                    ),
                    detector = cms.string('HCAL_ENDCAP'),
                    logWeightDenominator = cms.vdouble(
                        0.8, 0.8, 0.8, 0.8, 0.8,
                        0.8, 0.8
                    )
                )
            ),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        minFractionToKeep = cms.double(1e-07),
        nSigmaEta = cms.double(2.0),
        nSigmaPhi = cms.double(2.0)
    ),
    positionReCalc = cms.PSet(

    )
)


process.particleFlowClusterHF = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('HF_EM'),
                gatheringThreshold = cms.double(0.8),
                gatheringThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('HF_HAD'),
                gatheringThreshold = cms.double(0.8),
                gatheringThresholdPt = cms.double(0.0)
            )
        ),
        useCornerCells = cms.bool(False)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.8),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(5)
        ),
        recHitEnergyNorms = cms.VPSet(
            cms.PSet(
                detector = cms.string('HF_EM'),
                recHitEnergyNorm = cms.double(0.8)
            ),
            cms.PSet(
                detector = cms.string('HF_HAD'),
                recHitEnergyNorm = cms.double(0.8)
            )
        ),
        showerSigma = cms.double(10.0),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("particleFlowRecHitHF"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(0),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('HF_EM'),
                seedingThreshold = cms.double(1.4),
                seedingThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('HF_HAD'),
                seedingThreshold = cms.double(1.4),
                seedingThresholdPt = cms.double(0.0)
            )
        )
    )
)


process.particleFlowClusterHO = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('HCAL_BARREL2_RING0'),
                gatheringThreshold = cms.double(0.05),
                gatheringThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('HCAL_BARREL2_RING1'),
                gatheringThreshold = cms.double(0.05),
                gatheringThresholdPt = cms.double(0.0)
            )
        ),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.05),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.05),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(5)
        ),
        recHitEnergyNorms = cms.VPSet(
            cms.PSet(
                detector = cms.string('HCAL_BARREL2_RING0'),
                recHitEnergyNorm = cms.double(0.05)
            ),
            cms.PSet(
                detector = cms.string('HCAL_BARREL2_RING1'),
                recHitEnergyNorm = cms.double(0.05)
            )
        ),
        showerSigma = cms.double(10.0),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("particleFlowRecHitHO"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(4),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('HCAL_BARREL2_RING0'),
                seedingThreshold = cms.double(0.08),
                seedingThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('HCAL_BARREL2_RING1'),
                seedingThreshold = cms.double(0.08),
                seedingThresholdPt = cms.double(0.0)
            )
        )
    )
)


process.particleFlowClusterOOTECAL = cms.EDProducer("CorrectedECALPFClusterProducer",
    energyCorrector = cms.PSet(
        algoName = cms.string('PFClusterEMEnergyCorrector'),
        applyCrackCorrections = cms.bool(False),
        applyMVACorrections = cms.bool(True),
        autoDetectBunchSpacing = cms.bool(True),
        bunchSpacing = cms.int32(25),
        ebSrFlagLabel = cms.InputTag("ecalDigis"),
        eeSrFlagLabel = cms.InputTag("ecalDigis"),
        maxPtForMVAEvaluation = cms.double(90.0),
        recHitsEBLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        recHitsEELabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        srfAwareCorrection = cms.bool(False),
        verticesLabel = cms.InputTag("offlinePrimaryVertices")
    ),
    inputECAL = cms.InputTag("particleFlowClusterOOTECALUncorrected"),
    inputPS = cms.InputTag("particleFlowClusterPS"),
    minimumPSEnergy = cms.double(0)
)


process.particleFlowClusterOOTECALUncorrected = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                gatheringThreshold = cms.double(0.08),
                gatheringThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                gatheringThreshold = cms.double(0.3),
                gatheringThresholdPt = cms.double(0.0)
            )
        ),
        useCornerCells = cms.bool(True)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        allCellsPositionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.10889),
                noiseTermLowE = cms.double(1.31883),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.72489999999),
                noiseTermLowE = cms.double(6.92683000001),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(0.08),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(9),
            timeResolutionCalcBarrel = cms.PSet(
                constantTerm = cms.double(0.428192),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0510871),
                noiseTerm = cms.double(1.10889),
                noiseTermLowE = cms.double(1.31883),
                threshHighE = cms.double(5.0),
                threshLowE = cms.double(0.5)
            ),
            timeResolutionCalcEndcap = cms.PSet(
                constantTerm = cms.double(0.0),
                constantTermLowE = cms.double(0.0),
                corrTermLowE = cms.double(0.0),
                noiseTerm = cms.double(5.72489999999),
                noiseTermLowE = cms.double(6.92683000001),
                threshHighE = cms.double(10.0),
                threshLowE = cms.double(1.0)
            )
        ),
        positionCalcForConvergence = cms.PSet(
            T0_EB = cms.double(7.4),
            T0_EE = cms.double(3.1),
            T0_ES = cms.double(1.2),
            W0 = cms.double(4.2),
            X0 = cms.double(0.89),
            algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
            minAllowedNormalization = cms.double(0.0),
            minFractionInCalc = cms.double(0.0)
        ),
        recHitEnergyNorms = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                recHitEnergyNorm = cms.double(0.08)
            ),
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                recHitEnergyNorm = cms.double(0.3)
            )
        ),
        showerSigma = cms.double(1.5),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(
        T0_EB = cms.double(7.4),
        T0_EE = cms.double(3.1),
        T0_ES = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89),
        algoName = cms.string('ECAL2DPositionCalcWithDepthCorr'),
        minAllowedNormalization = cms.double(0.0),
        minFractionInCalc = cms.double(0.0)
    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("particleFlowRecHitOOTECAL"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(8),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('ECAL_ENDCAP'),
                seedingThreshold = cms.double(0.6),
                seedingThresholdPt = cms.double(0.15)
            ),
            cms.PSet(
                detector = cms.string('ECAL_BARREL'),
                seedingThreshold = cms.double(0.23),
                seedingThresholdPt = cms.double(0.0)
            )
        )
    )
)


process.particleFlowClusterPS = cms.EDProducer("PFClusterProducer",
    energyCorrector = cms.PSet(

    ),
    initialClusteringStep = cms.PSet(
        algoName = cms.string('Basic2DGenericTopoClusterizer'),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('PS1'),
                gatheringThreshold = cms.double(6e-05),
                gatheringThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('PS2'),
                gatheringThreshold = cms.double(6e-05),
                gatheringThresholdPt = cms.double(0.0)
            )
        ),
        useCornerCells = cms.bool(False)
    ),
    pfClusterBuilder = cms.PSet(
        algoName = cms.string('Basic2DGenericPFlowClusterizer'),
        excludeOtherSeeds = cms.bool(True),
        maxIterations = cms.uint32(50),
        minFracTot = cms.double(1e-20),
        minFractionToKeep = cms.double(1e-07),
        positionCalc = cms.PSet(
            algoName = cms.string('Basic2DGenericPFlowPositionCalc'),
            logWeightDenominator = cms.double(6e-05),
            minAllowedNormalization = cms.double(1e-09),
            minFractionInCalc = cms.double(1e-09),
            posCalcNCrystals = cms.int32(-1)
        ),
        recHitEnergyNorms = cms.VPSet(
            cms.PSet(
                detector = cms.string('PS1'),
                recHitEnergyNorm = cms.double(6e-05)
            ),
            cms.PSet(
                detector = cms.string('PS2'),
                recHitEnergyNorm = cms.double(6e-05)
            )
        ),
        showerSigma = cms.double(0.3),
        stoppingTolerance = cms.double(1e-08)
    ),
    positionReCalc = cms.PSet(

    ),
    recHitCleaners = cms.VPSet(),
    recHitsSource = cms.InputTag("particleFlowRecHitPS"),
    seedFinder = cms.PSet(
        algoName = cms.string('LocalMaximumSeedFinder'),
        nNeighbours = cms.int32(4),
        thresholdsByDetector = cms.VPSet(
            cms.PSet(
                detector = cms.string('PS1'),
                seedingThreshold = cms.double(0.00012),
                seedingThresholdPt = cms.double(0.0)
            ),
            cms.PSet(
                detector = cms.string('PS2'),
                seedingThreshold = cms.double(0.00012),
                seedingThresholdPt = cms.double(0.0)
            )
        )
    )
)


process.particleFlowDisplacedVertex = cms.EDProducer("PFDisplacedVertexProducer",
    avfParameters = cms.PSet(
        Tini = cms.double(256.0),
        ratio = cms.double(0.25),
        sigmacut = cms.double(6.0)
    ),
    debug = cms.untracked.bool(False),
    longSize = cms.double(5),
    mainVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    minAdaptWeight = cms.double(0.5),
    offlineBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    primaryVertexCut = cms.double(1.8),
    switchOff2TrackVertex = cms.untracked.bool(True),
    tecCut = cms.double(220),
    tobCut = cms.double(100),
    tracksSelectorParameters = cms.PSet(
        bSelectTracks = cms.bool(True),
        dxy_min = cms.double(0.2),
        nChi2_max = cms.double(5.0),
        nChi2_min = cms.double(0.5),
        nHits_min = cms.int32(6),
        nOuterHits_max = cms.int32(9),
        pt_min = cms.double(0.2),
        quality = cms.string('HighPurity')
    ),
    transvSize = cms.double(1.0),
    verbose = cms.untracked.bool(False),
    vertexCandidatesLabel = cms.InputTag("particleFlowDisplacedVertexCandidate"),
    vertexIdentifierParameters = cms.PSet(
        angles = cms.vdouble(15, 15),
        bIdentifyVertices = cms.bool(True),
        logPrimSec_min = cms.double(0.0),
        looper_eta_max = cms.double(0.1),
        masses = cms.vdouble(
            0.05, 0.485, 0.515, 0.48, 0.52,
            1.107, 1.125, 0.2
        ),
        pt_kink_min = cms.double(3.0),
        pt_min = cms.double(0.5)
    )
)


process.particleFlowDisplacedVertexCandidate = cms.EDProducer("PFDisplacedVertexCandidateProducer",
    dcaCut = cms.double(0.5),
    dcaPInnerHitCut = cms.double(1000.0),
    debug = cms.untracked.bool(False),
    mainVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    offlineBeamSpotLabel = cms.InputTag("offlineBeamSpot"),
    primaryVertexCut = cms.double(1.8),
    trackCollection = cms.InputTag("generalTracks"),
    tracksSelectorParameters = cms.PSet(
        dxy = cms.double(0.2),
        nChi2_max = cms.double(5.0),
        pt_min = cms.double(0.2),
        pt_min_prim = cms.double(0.8)
    ),
    verbose = cms.untracked.bool(False)
)


process.particleFlowEGamma = cms.EDProducer("PFEGammaProducer",
    EEtoPS_source = cms.InputTag("particleFlowClusterECAL"),
    X0_Map = cms.string('RecoParticleFlow/PFProducer/data/allX0histos.root'),
    algoType = cms.uint32(0),
    blocks = cms.InputTag("particleFlowBlock"),
    calibHF_a_EMHAD = cms.vdouble(
        1.42215, 1.00496, 0.68961, 0.81656, 0.98504,
        0.98504, 1.00802, 1.0593, 1.4576, 1.4576
    ),
    calibHF_a_EMonly = cms.vdouble(
        0.96945, 0.96701, 0.76309, 0.82268, 0.87583,
        0.89718, 0.98674, 1.4681, 1.458, 1.458
    ),
    calibHF_b_EMHAD = cms.vdouble(
        1.27541, 0.85361, 0.86333, 0.89091, 0.94348,
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444
    ),
    calibHF_b_HADonly = cms.vdouble(
        1.27541, 0.85361, 0.86333, 0.89091, 0.94348,
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444
    ),
    calibHF_eta_step = cms.vdouble(
        0.0, 2.9, 3.0, 3.2, 4.2,
        4.4, 4.6, 4.8, 5.2, 5.4
    ),
    calibHF_use = cms.bool(False),
    calibPFSCEle_Fbrem_barrel = cms.vdouble(
        0.6, 6, -0.0255975, 0.0576727, 0.975442,
        -0.000546394, 1.26147, 25, -0.02025, 0.04537,
        0.9728, -0.0008962, 1.172
    ),
    calibPFSCEle_Fbrem_endcap = cms.vdouble(
        0.9, 6.5, -0.0692932, 0.101776, 0.995338,
        -0.00236548, 0.874998, 1.653, -0.0750184, 0.147,
        0.923165, 0.000474665, 1.10782
    ),
    calibPFSCEle_barrel = cms.vdouble(
        1.004, -1.536, 22.88, -1.467, 0.3555,
        0.6227, 14.65, 2051, 25, 0.9932,
        -0.5444, 0, 0.5438, 0.7109, 7.645,
        0.2904, 0
    ),
    calibPFSCEle_endcap = cms.vdouble(
        1.153, -16.5975, 5.668, -0.1772, 16.22,
        7.326, 0.0483, -4.068, 9.406
    ),
    calibrationsLabel = cms.string(''),
    cleanedHF = cms.VInputTag(cms.InputTag("particleFlowRecHitHCAL","Cleaned"), cms.InputTag("particleFlowClusterHF","Cleaned")),
    coneEcalIsoForEgammaSC = cms.double(0.3),
    coneTrackIsoForEgammaSC = cms.double(0.3),
    cosmicRejectionDistance = cms.double(1.0),
    debug = cms.untracked.bool(True),
    dptRel_DispVtx = cms.double(10.0),
    dzPV = cms.double(0.2),
    egammaElectrons = cms.InputTag("mvaElectrons"),
    eventFactorForCosmics = cms.double(10.0),
    eventFractionForCleaning = cms.double(0.5),
    eventFractionForRejection = cms.double(0.8),
    factors_45 = cms.vdouble(10.0, 100.0),
    iCfgCandConnector = cms.PSet(
        bCalibPrimary = cms.bool(True),
        bCorrect = cms.bool(True),
        dptRel_MergedTrack = cms.double(5.0),
        dptRel_PrimaryTrack = cms.double(10.0),
        nuclCalibFactors = cms.vdouble(0.8, 0.15, 0.5, 0.5, 0.05),
        ptErrorSecondary = cms.double(1.0)
    ),
    maxDPtOPt = cms.double(1.0),
    maxDeltaPhiPt = cms.double(7.0),
    maxSignificance = cms.double(2.5),
    metFactorForCleaning = cms.double(4.0),
    metFactorForFakes = cms.double(4.0),
    metFactorForHighEta = cms.double(25.0),
    metFactorForRejection = cms.double(4.0),
    metSignificanceForCleaning = cms.double(3.0),
    metSignificanceForRejection = cms.double(4.0),
    minDeltaMet = cms.double(0.4),
    minEnergyForPunchThrough = cms.double(100.0),
    minHFCleaningPt = cms.double(5.0),
    minMomentumForPunchThrough = cms.double(100.0),
    minPixelHits = cms.int32(1),
    minPtForPostCleaning = cms.double(20.0),
    minSignificance = cms.double(2.5),
    minSignificanceReduction = cms.double(1.4),
    minTrackerHits = cms.int32(8),
    muon_ECAL = cms.vdouble(0.5, 0.5),
    muon_HCAL = cms.vdouble(3.0, 3.0),
    muon_HO = cms.vdouble(0.9, 0.9),
    muons = cms.InputTag("muons1stStep"),
    nTrackIsoForEgammaSC = cms.uint32(2),
    nsigma_TRACK = cms.double(1.0),
    pf_GlobC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFGlobalCorr_14Dec2011.root'),
    pf_Res_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFRes_14Dec2011.root'),
    pf_convID_mvaWeightFile = cms.FileInPath('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_pfConversionAug0411.txt'),
    pf_conv_mvaCut = cms.double(0.0),
    pf_electronID_crackCorrection = cms.bool(False),
    pf_electronID_mvaWeightFile = cms.FileInPath('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_PfElectrons23Jan_IntToFloat.txt'),
    pf_electron_mvaCut = cms.double(-0.1),
    pf_electron_output_col = cms.string('electrons'),
    pf_locC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFClusterLCorr_14Dec2011.root'),
    pf_nsigma_ECAL = cms.double(0.0),
    pf_nsigma_HCAL = cms.double(1.0),
    postHFCleaning = cms.bool(False),
    postMuonCleaning = cms.bool(True),
    produceEGCandsWithNoSuperCluster = cms.bool(False),
    ptErrorScale = cms.double(8.0),
    ptFactorForHighEta = cms.double(2.0),
    pt_Error = cms.double(1.0),
    punchThroughFactor = cms.double(3.0),
    punchThroughMETFactor = cms.double(4.0),
    rejectTracks_Bad = cms.bool(True),
    rejectTracks_Step45 = cms.bool(True),
    sumEtEcalIsoForEgammaSC_barrel = cms.double(1.0),
    sumEtEcalIsoForEgammaSC_endcap = cms.double(2.0),
    sumPtTrackIsoForEgammaSC_barrel = cms.double(4.0),
    sumPtTrackIsoForEgammaSC_endcap = cms.double(4.0),
    sumPtTrackIsoForPhoton = cms.double(2.0),
    sumPtTrackIsoSlopeForPhoton = cms.double(0.001),
    trackQuality = cms.string('highPurity'),
    useCalibrationsFromDB = cms.bool(True),
    useEGammaElectrons = cms.bool(True),
    useEGammaSupercluster = cms.bool(True),
    useHO = cms.bool(True),
    usePFConversions = cms.bool(True),
    usePFDecays = cms.bool(False),
    usePFElectrons = cms.bool(True),
    usePFNuclearInteractions = cms.bool(True),
    usePFPhotons = cms.bool(True),
    usePFSCEleCalib = cms.bool(True),
    usePhotonReg = cms.bool(False),
    useRegressionFromDB = cms.bool(True),
    useVerticesForNeutral = cms.bool(True),
    verbose = cms.untracked.bool(True),
    vertexCollection = cms.InputTag("hiSelectedVertex")
)


process.particleFlowPtrs = cms.EDProducer("PFCandidateFwdPtrProducer",
    src = cms.InputTag("particleFlow")
)


process.particleFlowRecHitECAL = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        barrel = cms.PSet(

        ),
        endcap = cms.PSet(

        ),
        name = cms.string('PFRecHitECALNavigator')
    ),
    producers = cms.VPSet(
        cms.PSet(
            name = cms.string('PFEBRecHitCreator'),
            qualityTests = cms.VPSet(
                cms.PSet(
                    applySelectionsToAllCrystals = cms.bool(True),
                    name = cms.string('PFRecHitQTestDBThreshold')
                ),
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(True),
                    topologicalCleaning = cms.bool(True)
                )
            ),
            srFlags = cms.InputTag(""),
            src = cms.InputTag("ecalRecHit","EcalRecHitsEB")
        ),
        cms.PSet(
            name = cms.string('PFEERecHitCreator'),
            qualityTests = cms.VPSet(
                cms.PSet(
                    applySelectionsToAllCrystals = cms.bool(True),
                    name = cms.string('PFRecHitQTestDBThreshold')
                ),
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(True),
                    topologicalCleaning = cms.bool(True)
                )
            ),
            srFlags = cms.InputTag(""),
            src = cms.InputTag("ecalRecHit","EcalRecHitsEE")
        )
    )
)


process.particleFlowRecHitHBHE = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        name = cms.string('PFRecHitHCALNavigator'),
        sigmaCut = cms.double(4.0),
        timeResolutionCalc = cms.PSet(
            constantTerm = cms.double(1.92),
            constantTermLowE = cms.double(6.0),
            corrTermLowE = cms.double(0.0),
            noiseTerm = cms.double(8.64),
            noiseTermLowE = cms.double(0.0),
            threshHighE = cms.double(8.0),
            threshLowE = cms.double(2.0)
        )
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFHBHERecHitCreator'),
        qualityTests = cms.VPSet(
            cms.PSet(
                cuts = cms.VPSet(
                    cms.PSet(
                        depth = cms.vint32(1, 2, 3, 4),
                        detectorEnum = cms.int32(1),
                        threshold = cms.vdouble(0.8, 0.8, 0.8, 0.8)
                    ),
                    cms.PSet(
                        depth = cms.vint32(
                            1, 2, 3, 4, 5,
                            6, 7
                        ),
                        detectorEnum = cms.int32(2),
                        threshold = cms.vdouble(
                            0.8, 0.8, 0.8, 0.8, 0.8,
                            0.8, 0.8
                        )
                    )
                ),
                name = cms.string('PFRecHitQTestHCALThresholdVsDepth')
            ),
            cms.PSet(
                cleaningThresholds = cms.vdouble(0.0),
                flags = cms.vstring('Standard'),
                maxSeverities = cms.vint32(11),
                name = cms.string('PFRecHitQTestHCALChannel')
            )
        ),
        src = cms.InputTag("hbhereco")
    ))
)


process.particleFlowRecHitHF = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        barrel = cms.PSet(

        ),
        endcap = cms.PSet(

        ),
        name = cms.string('PFRecHitHCALNavigator')
    ),
    producers = cms.VPSet(cms.PSet(
        EMDepthCorrection = cms.double(22.0),
        HADDepthCorrection = cms.double(25.0),
        HFCalib29 = cms.double(1.07),
        LongFibre_Cut = cms.double(120.0),
        LongFibre_Fraction = cms.double(0.1),
        ShortFibre_Cut = cms.double(60.0),
        ShortFibre_Fraction = cms.double(0.01),
        name = cms.string('PFHFRecHitCreator'),
        qualityTests = cms.VPSet(
            cms.PSet(
                cleaningThresholds = cms.vdouble(0.0, 120.0, 60.0),
                flags = cms.vstring(
                    'Standard',
                    'HFLong',
                    'HFShort'
                ),
                maxSeverities = cms.vint32(11, 9, 9),
                name = cms.string('PFRecHitQTestHCALChannel')
            ),
            cms.PSet(
                cuts = cms.VPSet(cms.PSet(
                    depth = cms.vint32(1, 2),
                    detectorEnum = cms.int32(4),
                    threshold = cms.vdouble(1.2, 1.8)
                )),
                name = cms.string('PFRecHitQTestHCALThresholdVsDepth')
            )
        ),
        src = cms.InputTag("hfreco"),
        thresh_HF = cms.double(0.4)
    ))
)


process.particleFlowRecHitHGC = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        hgcee = cms.PSet(
            name = cms.string('PFRecHitHGCEENavigator'),
            topologySource = cms.string('HGCalEESensitive')
        ),
        hgcheb = cms.PSet(
            name = cms.string('PFRecHitHGCHENavigator'),
            topologySource = cms.string('HGCalHEScintillatorSensitive')
        ),
        hgchef = cms.PSet(
            name = cms.string('PFRecHitHGCHENavigator'),
            topologySource = cms.string('HGCalHESiliconSensitive')
        ),
        name = cms.string('PFRecHitHGCNavigator')
    ),
    producers = cms.VPSet(
        cms.PSet(
            geometryInstance = cms.string('HGCalEESensitive'),
            name = cms.string('PFHGCEERecHitCreator'),
            qualityTests = cms.VPSet(cms.PSet(
                name = cms.string('PFRecHitQTestHGCalThresholdSNR'),
                thresholdSNR = cms.double(5.0)
            )),
            src = cms.InputTag("HGCalRecHit","HGCEERecHits")
        ),
        cms.PSet(
            geometryInstance = cms.string('HGCalHESiliconSensitive'),
            name = cms.string('PFHGCHEFRecHitCreator'),
            qualityTests = cms.VPSet(cms.PSet(
                name = cms.string('PFRecHitQTestHGCalThresholdSNR'),
                thresholdSNR = cms.double(5.0)
            )),
            src = cms.InputTag("HGCalRecHit","HGCHEFRecHits")
        ),
        cms.PSet(
            geometryInstance = cms.string(''),
            name = cms.string('PFHGCHEBRecHitCreator'),
            qualityTests = cms.VPSet(cms.PSet(
                name = cms.string('PFRecHitQTestHGCalThresholdSNR'),
                thresholdSNR = cms.double(5.0)
            )),
            src = cms.InputTag("HGCalRecHit","HGCHEBRecHits")
        )
    )
)


process.particleFlowRecHitHO = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        name = cms.string('PFRecHitHCALNavigator')
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFHORecHitCreator'),
        qualityTests = cms.VPSet(
            cms.PSet(
                name = cms.string('PFRecHitQTestThreshold'),
                threshold = cms.double(0.05)
            ),
            cms.PSet(
                cleaningThresholds = cms.vdouble(0.0),
                flags = cms.vstring('Standard'),
                maxSeverities = cms.vint32(11),
                name = cms.string('PFRecHitQTestHCALChannel')
            )
        ),
        src = cms.InputTag("horeco")
    ))
)


process.particleFlowRecHitOOTECAL = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        barrel = cms.PSet(

        ),
        endcap = cms.PSet(

        ),
        name = cms.string('PFRecHitECALNavigator')
    ),
    producers = cms.VPSet(
        cms.PSet(
            name = cms.string('PFEBRecHitCreator'),
            qualityTests = cms.VPSet(
                cms.PSet(
                    applySelectionsToAllCrystals = cms.bool(True),
                    name = cms.string('PFRecHitQTestDBThreshold')
                ),
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(False),
                    topologicalCleaning = cms.bool(True)
                )
            ),
            srFlags = cms.InputTag(""),
            src = cms.InputTag("ecalRecHit","EcalRecHitsEB")
        ),
        cms.PSet(
            name = cms.string('PFEERecHitCreator'),
            qualityTests = cms.VPSet(
                cms.PSet(
                    applySelectionsToAllCrystals = cms.bool(True),
                    name = cms.string('PFRecHitQTestDBThreshold')
                ),
                cms.PSet(
                    cleaningThreshold = cms.double(2.0),
                    name = cms.string('PFRecHitQTestECAL'),
                    skipTTRecoveredHits = cms.bool(True),
                    timingCleaning = cms.bool(False),
                    topologicalCleaning = cms.bool(True)
                )
            ),
            srFlags = cms.InputTag(""),
            src = cms.InputTag("ecalRecHit","EcalRecHitsEE")
        )
    )
)


process.particleFlowRecHitPS = cms.EDProducer("PFRecHitProducer",
    navigator = cms.PSet(
        name = cms.string('PFRecHitPreshowerNavigator')
    ),
    producers = cms.VPSet(cms.PSet(
        name = cms.string('PFPSRecHitCreator'),
        qualityTests = cms.VPSet(
            cms.PSet(
                name = cms.string('PFRecHitQTestThreshold'),
                threshold = cms.double(0.0)
            ),
            cms.PSet(
                cleaningThreshold = cms.double(0.0),
                name = cms.string('PFRecHitQTestES'),
                topologicalCleaning = cms.bool(True)
            )
        ),
        src = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES")
    ))
)


process.particleFlowSimParticle = cms.EDProducer("PFSimParticleProducer",
    Fitter = cms.string('KFFittingSmoother'),
    MCTruthMatchingInfo = cms.untracked.bool(False),
    ParticleFilter = cms.PSet(
        EMin = cms.double(0.0),
        EProton = cms.double(5000.0),
        etaMax = cms.double(5.0),
        pTMin = cms.double(0.0)
    ),
    Propagator = cms.string('PropagatorWithMaterial'),
    RecTracks = cms.InputTag("trackerDrivenElectronSeeds"),
    TTRHBuilder = cms.string('WithTrackAngle'),
    ecalRecHitsEB = cms.InputTag("caloRecHits","EcalRecHitsEB"),
    ecalRecHitsEE = cms.InputTag("caloRecHits","EcalRecHitsEE"),
    fastSimProducer = cms.untracked.InputTag("fastSimProducer","EcalHitsEB"),
    process_Particles = cms.untracked.bool(True),
    process_RecTracks = cms.untracked.bool(False),
    sim = cms.InputTag("g4SimHits"),
    verbose = cms.untracked.bool(False)
)


process.particleFlowSuperClusterECAL = cms.EDProducer("PFECALSuperClusterProducer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    ClusteringType = cms.string('Mustache'),
    ESAssociation = cms.InputTag("particleFlowClusterECAL"),
    EnergyWeight = cms.string('Raw'),
    PFBasicClusterCollectionBarrel = cms.string('particleFlowBasicClusterECALBarrel'),
    PFBasicClusterCollectionEndcap = cms.string('particleFlowBasicClusterECALEndcap'),
    PFBasicClusterCollectionPreshower = cms.string('particleFlowBasicClusterECALPreshower'),
    PFClusters = cms.InputTag("particleFlowClusterECAL"),
    PFSuperClusterCollectionBarrel = cms.string('particleFlowSuperClusterECALBarrel'),
    PFSuperClusterCollectionEndcap = cms.string('particleFlowSuperClusterECALEndcap'),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string('particleFlowSuperClusterECALEndcapWithPreshower'),
    applyCrackCorrections = cms.bool(False),
    doSatelliteClusterMerge = cms.bool(False),
    dropUnseedable = cms.bool(False),
    etawidth_SuperClusterBarrel = cms.double(0.04),
    etawidth_SuperClusterEndcap = cms.double(0.04),
    phiwidth_SuperClusterBarrel = cms.double(0.6),
    phiwidth_SuperClusterEndcap = cms.double(0.6),
    regressionConfig = cms.PSet(
        ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        regressionKeyEB = cms.string('pfscecal_EBCorrection_offline_v2'),
        regressionKeyEE = cms.string('pfscecal_EECorrection_offline_v2'),
        uncertaintyKeyEB = cms.string('pfscecal_EBUncertainty_offline_v2'),
        uncertaintyKeyEE = cms.string('pfscecal_EEUncertainty_offline_v2'),
        vertexCollection = cms.InputTag("hiSelectedVertex")
    ),
    satelliteClusterSeedThreshold = cms.double(50.0),
    satelliteMajorityFraction = cms.double(0.5),
    seedThresholdIsET = cms.bool(True),
    thresh_PFClusterBarrel = cms.double(0.0),
    thresh_PFClusterES = cms.double(0.0),
    thresh_PFClusterEndcap = cms.double(0.0),
    thresh_PFClusterSeedBarrel = cms.double(1.0),
    thresh_PFClusterSeedEndcap = cms.double(1.0),
    thresh_SCEt = cms.double(4.0),
    useDynamicDPhiWindow = cms.bool(True),
    useRegression = cms.bool(True),
    use_preshower = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.particleFlowSuperClusterECALBox = cms.EDProducer("PFECALSuperClusterProducer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    ClusteringType = cms.string('Box'),
    ESAssociation = cms.InputTag("particleFlowClusterECAL"),
    EnergyWeight = cms.string('Raw'),
    PFBasicClusterCollectionBarrel = cms.string('particleFlowBasicClusterECALBarrel'),
    PFBasicClusterCollectionEndcap = cms.string('particleFlowBasicClusterECALEndcap'),
    PFBasicClusterCollectionPreshower = cms.string('particleFlowBasicClusterECALPreshower'),
    PFClusters = cms.InputTag("particleFlowClusterECAL"),
    PFSuperClusterCollectionBarrel = cms.string('particleFlowSuperClusterECALBarrel'),
    PFSuperClusterCollectionEndcap = cms.string('particleFlowSuperClusterECALEndcap'),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string('particleFlowSuperClusterECALEndcapWithPreshower'),
    applyCrackCorrections = cms.bool(False),
    doSatelliteClusterMerge = cms.bool(False),
    dropUnseedable = cms.bool(False),
    etawidth_SuperClusterBarrel = cms.double(0.04),
    etawidth_SuperClusterEndcap = cms.double(0.04),
    phiwidth_SuperClusterBarrel = cms.double(0.28),
    phiwidth_SuperClusterEndcap = cms.double(0.28),
    regressionConfig = cms.PSet(
        ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        regressionKeyEB = cms.string('pfscecal_EBCorrection_offline_v2'),
        regressionKeyEE = cms.string('pfscecal_EECorrection_offline_v2'),
        uncertaintyKeyEB = cms.string('pfscecal_EBUncertainty_offline_v2'),
        uncertaintyKeyEE = cms.string('pfscecal_EEUncertainty_offline_v2'),
        vertexCollection = cms.InputTag("offlinePrimaryVertices")
    ),
    satelliteClusterSeedThreshold = cms.double(50.0),
    satelliteMajorityFraction = cms.double(0.5),
    seedThresholdIsET = cms.bool(True),
    thresh_PFClusterBarrel = cms.double(0.5),
    thresh_PFClusterES = cms.double(0.0),
    thresh_PFClusterEndcap = cms.double(0.5),
    thresh_PFClusterSeedBarrel = cms.double(3.0),
    thresh_PFClusterSeedEndcap = cms.double(5.0),
    thresh_SCEt = cms.double(4.0),
    useDynamicDPhiWindow = cms.bool(False),
    useRegression = cms.bool(False),
    use_preshower = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.particleFlowSuperClusterECALMustache = cms.EDProducer("PFECALSuperClusterProducer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    ClusteringType = cms.string('Mustache'),
    ESAssociation = cms.InputTag("particleFlowClusterECAL"),
    EnergyWeight = cms.string('Raw'),
    PFBasicClusterCollectionBarrel = cms.string('particleFlowBasicClusterECALBarrel'),
    PFBasicClusterCollectionEndcap = cms.string('particleFlowBasicClusterECALEndcap'),
    PFBasicClusterCollectionPreshower = cms.string('particleFlowBasicClusterECALPreshower'),
    PFClusters = cms.InputTag("particleFlowClusterECAL"),
    PFSuperClusterCollectionBarrel = cms.string('particleFlowSuperClusterECALBarrel'),
    PFSuperClusterCollectionEndcap = cms.string('particleFlowSuperClusterECALEndcap'),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string('particleFlowSuperClusterECALEndcapWithPreshower'),
    applyCrackCorrections = cms.bool(False),
    doSatelliteClusterMerge = cms.bool(False),
    dropUnseedable = cms.bool(False),
    etawidth_SuperClusterBarrel = cms.double(0.04),
    etawidth_SuperClusterEndcap = cms.double(0.04),
    phiwidth_SuperClusterBarrel = cms.double(0.6),
    phiwidth_SuperClusterEndcap = cms.double(0.6),
    regressionConfig = cms.PSet(
        ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        regressionKeyEB = cms.string('pfscecal_EBCorrection_offline_v2'),
        regressionKeyEE = cms.string('pfscecal_EECorrection_offline_v2'),
        uncertaintyKeyEB = cms.string('pfscecal_EBUncertainty_offline_v2'),
        uncertaintyKeyEE = cms.string('pfscecal_EEUncertainty_offline_v2'),
        vertexCollection = cms.InputTag("offlinePrimaryVertices")
    ),
    satelliteClusterSeedThreshold = cms.double(50.0),
    satelliteMajorityFraction = cms.double(0.5),
    seedThresholdIsET = cms.bool(True),
    thresh_PFClusterBarrel = cms.double(0.0),
    thresh_PFClusterES = cms.double(0.0),
    thresh_PFClusterEndcap = cms.double(0.0),
    thresh_PFClusterSeedBarrel = cms.double(1.0),
    thresh_PFClusterSeedEndcap = cms.double(1.0),
    thresh_SCEt = cms.double(4.0),
    useDynamicDPhiWindow = cms.bool(True),
    useRegression = cms.bool(True),
    use_preshower = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.particleFlowSuperClusterHGCal = cms.EDProducer("PFECALSuperClusterProducer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    ClusteringType = cms.string('Mustache'),
    ESAssociation = cms.InputTag("particleFlowClusterECAL"),
    EnergyWeight = cms.string('Raw'),
    PFBasicClusterCollectionBarrel = cms.string('particleFlowBasicClusterECALBarrel'),
    PFBasicClusterCollectionEndcap = cms.string('particleFlowBasicClusterECALEndcap'),
    PFBasicClusterCollectionPreshower = cms.string('particleFlowBasicClusterECALPreshower'),
    PFClusters = cms.InputTag("particleFlowClusterECAL"),
    PFSuperClusterCollectionBarrel = cms.string('particleFlowSuperClusterECALBarrel'),
    PFSuperClusterCollectionEndcap = cms.string('particleFlowSuperClusterECALEndcap'),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string('particleFlowSuperClusterECALEndcapWithPreshower'),
    applyCrackCorrections = cms.bool(False),
    doSatelliteClusterMerge = cms.bool(False),
    dropUnseedable = cms.bool(False),
    etawidth_SuperClusterBarrel = cms.double(0.04),
    etawidth_SuperClusterEndcap = cms.double(0.04),
    phiwidth_SuperClusterBarrel = cms.double(0.6),
    phiwidth_SuperClusterEndcap = cms.double(0.6),
    regressionConfig = cms.PSet(
        ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        regressionKeyEB = cms.string('pfscecal_EBCorrection_offline_v2'),
        regressionKeyEE = cms.string('pfscecal_EECorrection_offline_v2'),
        uncertaintyKeyEB = cms.string('pfscecal_EBUncertainty_offline_v2'),
        uncertaintyKeyEE = cms.string('pfscecal_EEUncertainty_offline_v2'),
        vertexCollection = cms.InputTag("offlinePrimaryVertices")
    ),
    satelliteClusterSeedThreshold = cms.double(50.0),
    satelliteMajorityFraction = cms.double(0.5),
    seedThresholdIsET = cms.bool(True),
    thresh_PFClusterBarrel = cms.double(0.0),
    thresh_PFClusterES = cms.double(0.0),
    thresh_PFClusterEndcap = cms.double(0.0),
    thresh_PFClusterSeedBarrel = cms.double(1.0),
    thresh_PFClusterSeedEndcap = cms.double(1.0),
    thresh_SCEt = cms.double(4.0),
    useDynamicDPhiWindow = cms.bool(True),
    useRegression = cms.bool(True),
    use_preshower = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.particleFlowSuperClusterHGCalFromMultiCl = cms.EDProducer("PFECALSuperClusterProducer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    ClusteringType = cms.string('Mustache'),
    ESAssociation = cms.InputTag("particleFlowClusterECAL"),
    EnergyWeight = cms.string('Raw'),
    PFBasicClusterCollectionBarrel = cms.string('particleFlowBasicClusterECALBarrel'),
    PFBasicClusterCollectionEndcap = cms.string('particleFlowBasicClusterECALEndcap'),
    PFBasicClusterCollectionPreshower = cms.string('particleFlowBasicClusterECALPreshower'),
    PFClusters = cms.InputTag("particleFlowClusterECAL"),
    PFSuperClusterCollectionBarrel = cms.string('particleFlowSuperClusterECALBarrel'),
    PFSuperClusterCollectionEndcap = cms.string('particleFlowSuperClusterECALEndcap'),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string('particleFlowSuperClusterECALEndcapWithPreshower'),
    applyCrackCorrections = cms.bool(False),
    doSatelliteClusterMerge = cms.bool(False),
    dropUnseedable = cms.bool(False),
    etawidth_SuperClusterBarrel = cms.double(0.04),
    etawidth_SuperClusterEndcap = cms.double(0.04),
    phiwidth_SuperClusterBarrel = cms.double(0.6),
    phiwidth_SuperClusterEndcap = cms.double(0.6),
    regressionConfig = cms.PSet(
        ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        regressionKeyEB = cms.string('pfscecal_EBCorrection_offline_v2'),
        regressionKeyEE = cms.string('pfscecal_EECorrection_offline_v2'),
        uncertaintyKeyEB = cms.string('pfscecal_EBUncertainty_offline_v2'),
        uncertaintyKeyEE = cms.string('pfscecal_EEUncertainty_offline_v2'),
        vertexCollection = cms.InputTag("offlinePrimaryVertices")
    ),
    satelliteClusterSeedThreshold = cms.double(50.0),
    satelliteMajorityFraction = cms.double(0.5),
    seedThresholdIsET = cms.bool(True),
    thresh_PFClusterBarrel = cms.double(0.0),
    thresh_PFClusterES = cms.double(0.0),
    thresh_PFClusterEndcap = cms.double(0.0),
    thresh_PFClusterSeedBarrel = cms.double(1.0),
    thresh_PFClusterSeedEndcap = cms.double(1.0),
    thresh_SCEt = cms.double(4.0),
    useDynamicDPhiWindow = cms.bool(True),
    useRegression = cms.bool(True),
    use_preshower = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.particleFlowSuperClusterOOTECAL = cms.EDProducer("PFECALSuperClusterProducer",
    BeamSpot = cms.InputTag("offlineBeamSpot"),
    ClusteringType = cms.string('Mustache'),
    ESAssociation = cms.InputTag("particleFlowClusterOOTECAL"),
    EnergyWeight = cms.string('Raw'),
    PFBasicClusterCollectionBarrel = cms.string('particleFlowBasicClusterOOTECALBarrel'),
    PFBasicClusterCollectionEndcap = cms.string('particleFlowBasicClusterOOTECALEndcap'),
    PFBasicClusterCollectionPreshower = cms.string('particleFlowBasicClusterOOTECALPreshower'),
    PFClusters = cms.InputTag("particleFlowClusterOOTECAL"),
    PFSuperClusterCollectionBarrel = cms.string('particleFlowSuperClusterOOTECALBarrel'),
    PFSuperClusterCollectionEndcap = cms.string('particleFlowSuperClusterOOTECALEndcap'),
    PFSuperClusterCollectionEndcapWithPreshower = cms.string('particleFlowSuperClusterOOTECALEndcapWithPreshower'),
    applyCrackCorrections = cms.bool(False),
    barrelRecHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    doSatelliteClusterMerge = cms.bool(False),
    dropUnseedable = cms.bool(False),
    endcapRecHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    etawidth_SuperClusterBarrel = cms.double(0.04),
    etawidth_SuperClusterEndcap = cms.double(0.04),
    isOOTCollection = cms.bool(True),
    phiwidth_SuperClusterBarrel = cms.double(0.6),
    phiwidth_SuperClusterEndcap = cms.double(0.6),
    regressionConfig = cms.PSet(
        ecalRecHitsEB = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        ecalRecHitsEE = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        regressionKeyEB = cms.string('pfscecal_EBCorrection_offline_v2'),
        regressionKeyEE = cms.string('pfscecal_EECorrection_offline_v2'),
        uncertaintyKeyEB = cms.string('pfscecal_EBUncertainty_offline_v2'),
        uncertaintyKeyEE = cms.string('pfscecal_EEUncertainty_offline_v2'),
        vertexCollection = cms.InputTag("hiSelectedVertex")
    ),
    satelliteClusterSeedThreshold = cms.double(50.0),
    satelliteMajorityFraction = cms.double(0.5),
    seedThresholdIsET = cms.bool(True),
    thresh_PFClusterBarrel = cms.double(0.0),
    thresh_PFClusterES = cms.double(0.0),
    thresh_PFClusterEndcap = cms.double(0.0),
    thresh_PFClusterSeedBarrel = cms.double(1.0),
    thresh_PFClusterSeedEndcap = cms.double(1.0),
    thresh_SCEt = cms.double(4.0),
    useDynamicDPhiWindow = cms.bool(True),
    useRegression = cms.bool(True),
    use_preshower = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.particleFlowTimeAssignerECAL = cms.EDProducer("PFClusterTimeAssigner",
    src = cms.InputTag("particleFlowClusterECALUncorrected"),
    timeResoSrc = cms.InputTag("ecalBarrelClusterFastTimer","PerfectResolutionModelResolution"),
    timeSrc = cms.InputTag("ecalBarrelClusterFastTimer","PerfectResolutionModel")
)


process.particleFlowTmp = cms.EDProducer("PFProducer",
    GedElectronValueMap = cms.InputTag("gedGsfElectronsTmp"),
    GedPhotonValueMap = cms.InputTag("gedPhotonsTmp","valMapPFEgammaCandToPhoton"),
    PFEGammaCandidates = cms.InputTag("particleFlowEGamma"),
    X0_Map = cms.string('RecoParticleFlow/PFProducer/data/allX0histos.root'),
    algoType = cms.uint32(0),
    blocks = cms.InputTag("particleFlowBlock"),
    calibHF_a_EMHAD = cms.vdouble(
        1.42215, 1.00496, 0.68961, 0.81656, 0.98504,
        0.98504, 1.00802, 1.0593, 1.4576, 1.4576
    ),
    calibHF_a_EMonly = cms.vdouble(
        0.96945, 0.96701, 0.76309, 0.82268, 0.87583,
        0.89718, 0.98674, 1.4681, 1.458, 1.458
    ),
    calibHF_b_EMHAD = cms.vdouble(
        1.27541, 0.85361, 0.86333, 0.89091, 0.94348,
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444
    ),
    calibHF_b_HADonly = cms.vdouble(
        1.27541, 0.85361, 0.86333, 0.89091, 0.94348,
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444
    ),
    calibHF_eta_step = cms.vdouble(
        0.0, 2.9, 3.0, 3.2, 4.2,
        4.4, 4.6, 4.8, 5.2, 5.4
    ),
    calibHF_use = cms.bool(False),
    calibPFSCEle_Fbrem_barrel = cms.vdouble(
        0.6, 6, -0.0255975, 0.0576727, 0.975442,
        -0.000546394, 1.26147, 25, -0.02025, 0.04537,
        0.9728, -0.0008962, 1.172
    ),
    calibPFSCEle_Fbrem_endcap = cms.vdouble(
        0.9, 6.5, -0.0692932, 0.101776, 0.995338,
        -0.00236548, 0.874998, 1.653, -0.0750184, 0.147,
        0.923165, 0.000474665, 1.10782
    ),
    calibPFSCEle_barrel = cms.vdouble(
        1.004, -1.536, 22.88, -1.467, 0.3555,
        0.6227, 14.65, 2051, 25, 0.9932,
        -0.5444, 0, 0.5438, 0.7109, 7.645,
        0.2904, 0
    ),
    calibPFSCEle_endcap = cms.vdouble(
        1.153, -16.5975, 5.668, -0.1772, 16.22,
        7.326, 0.0483, -4.068, 9.406
    ),
    calibrationsLabel = cms.string(''),
    cleanedHF = cms.VInputTag(cms.InputTag("particleFlowRecHitHF","Cleaned"), cms.InputTag("particleFlowClusterHF","Cleaned")),
    coneEcalIsoForEgammaSC = cms.double(0.3),
    coneTrackIsoForEgammaSC = cms.double(0.3),
    cosmicRejectionDistance = cms.double(1.0),
    debug = cms.untracked.bool(False),
    dptRel_DispVtx = cms.double(10.0),
    dzPV = cms.double(0.2),
    egammaElectrons = cms.InputTag("mvaElectrons"),
    electron_iso_combIso_barrel = cms.double(10.0),
    electron_iso_combIso_endcap = cms.double(10.0),
    electron_iso_mva_barrel = cms.double(-0.1875),
    electron_iso_mva_endcap = cms.double(-0.1075),
    electron_iso_pt = cms.double(10.0),
    electron_missinghits = cms.uint32(1),
    electron_noniso_mvaCut = cms.double(-0.1),
    electron_protectionsForBadHcal = cms.PSet(
        dEta = cms.vdouble(0.0064, 0.01264),
        dPhi = cms.vdouble(0.0547, 0.0394),
        eInvPInv = cms.vdouble(0.184, 0.0721),
        enableProtections = cms.bool(False),
        full5x5_sigmaIetaIeta = cms.vdouble(0.0106, 0.0387)
    ),
    electron_protectionsForJetMET = cms.PSet(
        maxDPhiIN = cms.double(0.1),
        maxE = cms.double(50.0),
        maxEcalEOverPRes = cms.double(0.2),
        maxEcalEOverP_1 = cms.double(0.5),
        maxEcalEOverP_2 = cms.double(0.2),
        maxEeleOverPout = cms.double(0.2),
        maxEeleOverPoutRes = cms.double(0.5),
        maxEleHcalEOverEcalE = cms.double(0.1),
        maxHcalE = cms.double(10.0),
        maxHcalEOverEcalE = cms.double(0.1),
        maxHcalEOverP = cms.double(1.0),
        maxNtracks = cms.double(3.0),
        maxTrackPOverEele = cms.double(1.0)
    ),
    eventFactorForCosmics = cms.double(10.0),
    eventFractionForCleaning = cms.double(0.5),
    eventFractionForRejection = cms.double(0.8),
    factors_45 = cms.vdouble(10.0, 100.0),
    goodPixelTrackDeadHcal_chi2n = cms.double(2),
    goodPixelTrackDeadHcal_dxy = cms.double(0.02),
    goodPixelTrackDeadHcal_dz = cms.double(0.05),
    goodPixelTrackDeadHcal_maxLost3Hit = cms.int32(0),
    goodPixelTrackDeadHcal_maxLost4Hit = cms.int32(1),
    goodPixelTrackDeadHcal_maxPt = cms.double(50.0),
    goodPixelTrackDeadHcal_minEta = cms.double(2.3),
    goodPixelTrackDeadHcal_ptErrRel = cms.double(1.0),
    goodTrackDeadHcal_chi2n = cms.double(5),
    goodTrackDeadHcal_dxy = cms.double(0.5),
    goodTrackDeadHcal_layers = cms.uint32(4),
    goodTrackDeadHcal_ptErrRel = cms.double(0.2),
    goodTrackDeadHcal_validFr = cms.double(0.5),
    iCfgCandConnector = cms.PSet(
        bCalibPrimary = cms.bool(True),
        bCorrect = cms.bool(True),
        dptRel_MergedTrack = cms.double(5.0),
        dptRel_PrimaryTrack = cms.double(10.0),
        nuclCalibFactors = cms.vdouble(0.8, 0.15, 0.5, 0.5, 0.05),
        ptErrorSecondary = cms.double(1.0)
    ),
    isolatedElectronID_mvaWeightFile = cms.string('RecoEgamma/ElectronIdentification/data/TMVA_BDTSimpleCat_17Feb2011.weights.xml'),
    maxDPtOPt = cms.double(1.0),
    maxDeltaPhiPt = cms.double(7.0),
    maxSignificance = cms.double(2.5),
    metFactorForCleaning = cms.double(4.0),
    metFactorForFakes = cms.double(4.0),
    metFactorForHighEta = cms.double(25.0),
    metFactorForRejection = cms.double(4.0),
    metSignificanceForCleaning = cms.double(3.0),
    metSignificanceForRejection = cms.double(4.0),
    minDeltaMet = cms.double(0.4),
    minEnergyForPunchThrough = cms.double(100.0),
    minHFCleaningPt = cms.double(5.0),
    minMomentumForPunchThrough = cms.double(100.0),
    minPixelHits = cms.int32(1),
    minPtForPostCleaning = cms.double(20.0),
    minSignificance = cms.double(2.5),
    minSignificanceReduction = cms.double(1.4),
    minTrackerHits = cms.int32(8),
    muon_ECAL = cms.vdouble(0.5, 0.5),
    muon_HCAL = cms.vdouble(3.0, 3.0),
    muon_HO = cms.vdouble(0.9, 0.9),
    muons = cms.InputTag("hiMuons1stStep"),
    nTrackIsoForEgammaSC = cms.uint32(2),
    nsigma_TRACK = cms.double(1.0),
    pf_GlobC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFGlobalCorr_14Dec2011.root'),
    pf_Res_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFRes_14Dec2011.root'),
    pf_convID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_pfConversionAug0411.txt'),
    pf_conv_mvaCut = cms.double(0.0),
    pf_electronID_crackCorrection = cms.bool(False),
    pf_electronID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_PfElectrons23Jan_IntToFloat.txt'),
    pf_electron_mvaCut = cms.double(-0.1),
    pf_electron_output_col = cms.string('electrons'),
    pf_locC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFClusterLCorr_14Dec2011.root'),
    pf_nsigma_ECAL = cms.double(0.0),
    pf_nsigma_HCAL = cms.double(1.0),
    photon_HoE = cms.double(0.05),
    photon_MinEt = cms.double(10.0),
    photon_SigmaiEtaiEta_barrel = cms.double(0.0125),
    photon_SigmaiEtaiEta_endcap = cms.double(0.034),
    photon_combIso = cms.double(10.0),
    photon_protectionsForBadHcal = cms.PSet(
        enableProtections = cms.bool(False),
        solidConeTrkIsoOffset = cms.double(10.0),
        solidConeTrkIsoSlope = cms.double(0.3)
    ),
    photon_protectionsForJetMET = cms.PSet(
        sumPtTrackIso = cms.double(4.0),
        sumPtTrackIsoSlope = cms.double(0.001)
    ),
    postHFCleaning = cms.bool(False),
    postMuonCleaning = cms.bool(False),
    ptErrorScale = cms.double(8.0),
    ptFactorForHighEta = cms.double(2.0),
    pt_Error = cms.double(1.0),
    punchThroughFactor = cms.double(3.0),
    punchThroughMETFactor = cms.double(4.0),
    rejectTracks_Bad = cms.bool(True),
    rejectTracks_Step45 = cms.bool(True),
    sumEtEcalIsoForEgammaSC_barrel = cms.double(1.0),
    sumEtEcalIsoForEgammaSC_endcap = cms.double(2.0),
    sumPtTrackIsoForEgammaSC_barrel = cms.double(4.0),
    sumPtTrackIsoForEgammaSC_endcap = cms.double(4.0),
    sumPtTrackIsoForPhoton = cms.double(2.0),
    sumPtTrackIsoSlopeForPhoton = cms.double(0.001),
    trackQuality = cms.string('highPurity'),
    useCalibrationsFromDB = cms.bool(True),
    useEGammaElectrons = cms.bool(True),
    useEGammaFilters = cms.bool(True),
    useEGammaSupercluster = cms.bool(True),
    useHO = cms.bool(True),
    usePFConversions = cms.bool(False),
    usePFDecays = cms.bool(False),
    usePFElectrons = cms.bool(True),
    usePFNuclearInteractions = cms.bool(True),
    usePFPhotons = cms.bool(False),
    usePFSCEleCalib = cms.bool(True),
    usePhotonReg = cms.bool(False),
    useProtectionsForJetMET = cms.bool(True),
    useRegressionFromDB = cms.bool(True),
    useVerticesForNeutral = cms.bool(True),
    verbose = cms.untracked.bool(False),
    vertexCollection = cms.InputTag("hiSelectedVertex")
)


process.particleFlowTmpBarrel = cms.EDProducer("PFProducer",
    GedElectronValueMap = cms.InputTag("gedGsfElectronsTmp"),
    GedPhotonValueMap = cms.InputTag("gedPhotonsTmp","valMapPFEgammaCandToPhoton"),
    PFEGammaCandidates = cms.InputTag("particleFlowEGamma"),
    X0_Map = cms.string('RecoParticleFlow/PFProducer/data/allX0histos.root'),
    algoType = cms.uint32(0),
    blocks = cms.InputTag("particleFlowBlock"),
    calibHF_a_EMHAD = cms.vdouble(
        1.42215, 1.00496, 0.68961, 0.81656, 0.98504,
        0.98504, 1.00802, 1.0593, 1.4576, 1.4576
    ),
    calibHF_a_EMonly = cms.vdouble(
        0.96945, 0.96701, 0.76309, 0.82268, 0.87583,
        0.89718, 0.98674, 1.4681, 1.458, 1.458
    ),
    calibHF_b_EMHAD = cms.vdouble(
        1.27541, 0.85361, 0.86333, 0.89091, 0.94348,
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444
    ),
    calibHF_b_HADonly = cms.vdouble(
        1.27541, 0.85361, 0.86333, 0.89091, 0.94348,
        0.94348, 0.9437, 1.0034, 1.0444, 1.0444
    ),
    calibHF_eta_step = cms.vdouble(
        0.0, 2.9, 3.0, 3.2, 4.2,
        4.4, 4.6, 4.8, 5.2, 5.4
    ),
    calibHF_use = cms.bool(False),
    calibPFSCEle_Fbrem_barrel = cms.vdouble(
        0.6, 6, -0.0255975, 0.0576727, 0.975442,
        -0.000546394, 1.26147, 25, -0.02025, 0.04537,
        0.9728, -0.0008962, 1.172
    ),
    calibPFSCEle_Fbrem_endcap = cms.vdouble(
        0.9, 6.5, -0.0692932, 0.101776, 0.995338,
        -0.00236548, 0.874998, 1.653, -0.0750184, 0.147,
        0.923165, 0.000474665, 1.10782
    ),
    calibPFSCEle_barrel = cms.vdouble(
        1.004, -1.536, 22.88, -1.467, 0.3555,
        0.6227, 14.65, 2051, 25, 0.9932,
        -0.5444, 0, 0.5438, 0.7109, 7.645,
        0.2904, 0
    ),
    calibPFSCEle_endcap = cms.vdouble(
        1.153, -16.5975, 5.668, -0.1772, 16.22,
        7.326, 0.0483, -4.068, 9.406
    ),
    calibrationsLabel = cms.string(''),
    cleanedHF = cms.VInputTag(cms.InputTag("particleFlowRecHitHF","Cleaned"), cms.InputTag("particleFlowClusterHF","Cleaned")),
    coneEcalIsoForEgammaSC = cms.double(0.3),
    coneTrackIsoForEgammaSC = cms.double(0.3),
    cosmicRejectionDistance = cms.double(1.0),
    debug = cms.untracked.bool(False),
    dptRel_DispVtx = cms.double(10.0),
    dzPV = cms.double(0.2),
    egammaElectrons = cms.InputTag("mvaElectrons"),
    electron_iso_combIso_barrel = cms.double(10.0),
    electron_iso_combIso_endcap = cms.double(10.0),
    electron_iso_mva_barrel = cms.double(-0.1875),
    electron_iso_mva_endcap = cms.double(-0.1075),
    electron_iso_pt = cms.double(10.0),
    electron_missinghits = cms.uint32(1),
    electron_noniso_mvaCut = cms.double(-0.1),
    electron_protectionsForBadHcal = cms.PSet(
        dEta = cms.vdouble(0.0064, 0.01264),
        dPhi = cms.vdouble(0.0547, 0.0394),
        eInvPInv = cms.vdouble(0.184, 0.0721),
        enableProtections = cms.bool(False),
        full5x5_sigmaIetaIeta = cms.vdouble(0.0106, 0.0387)
    ),
    electron_protectionsForJetMET = cms.PSet(
        maxDPhiIN = cms.double(0.1),
        maxE = cms.double(50.0),
        maxEcalEOverPRes = cms.double(0.2),
        maxEcalEOverP_1 = cms.double(0.5),
        maxEcalEOverP_2 = cms.double(0.2),
        maxEeleOverPout = cms.double(0.2),
        maxEeleOverPoutRes = cms.double(0.5),
        maxEleHcalEOverEcalE = cms.double(0.1),
        maxHcalE = cms.double(10.0),
        maxHcalEOverEcalE = cms.double(0.1),
        maxHcalEOverP = cms.double(1.0),
        maxNtracks = cms.double(3.0),
        maxTrackPOverEele = cms.double(1.0)
    ),
    eventFactorForCosmics = cms.double(10.0),
    eventFractionForCleaning = cms.double(0.5),
    eventFractionForRejection = cms.double(0.8),
    factors_45 = cms.vdouble(10.0, 100.0),
    goodPixelTrackDeadHcal_chi2n = cms.double(2),
    goodPixelTrackDeadHcal_dxy = cms.double(0.02),
    goodPixelTrackDeadHcal_dz = cms.double(0.05),
    goodPixelTrackDeadHcal_maxLost3Hit = cms.int32(0),
    goodPixelTrackDeadHcal_maxLost4Hit = cms.int32(1),
    goodPixelTrackDeadHcal_maxPt = cms.double(50.0),
    goodPixelTrackDeadHcal_minEta = cms.double(2.3),
    goodPixelTrackDeadHcal_ptErrRel = cms.double(1.0),
    goodTrackDeadHcal_chi2n = cms.double(5),
    goodTrackDeadHcal_dxy = cms.double(0.5),
    goodTrackDeadHcal_layers = cms.uint32(4),
    goodTrackDeadHcal_ptErrRel = cms.double(0.2),
    goodTrackDeadHcal_validFr = cms.double(0.5),
    iCfgCandConnector = cms.PSet(
        bCalibPrimary = cms.bool(True),
        bCorrect = cms.bool(True),
        dptRel_MergedTrack = cms.double(5.0),
        dptRel_PrimaryTrack = cms.double(10.0),
        nuclCalibFactors = cms.vdouble(0.8, 0.15, 0.5, 0.5, 0.05),
        ptErrorSecondary = cms.double(1.0)
    ),
    isolatedElectronID_mvaWeightFile = cms.string('RecoEgamma/ElectronIdentification/data/TMVA_BDTSimpleCat_17Feb2011.weights.xml'),
    maxDPtOPt = cms.double(1.0),
    maxDeltaPhiPt = cms.double(7.0),
    maxSignificance = cms.double(2.5),
    metFactorForCleaning = cms.double(4.0),
    metFactorForFakes = cms.double(4.0),
    metFactorForHighEta = cms.double(25.0),
    metFactorForRejection = cms.double(4.0),
    metSignificanceForCleaning = cms.double(3.0),
    metSignificanceForRejection = cms.double(4.0),
    minDeltaMet = cms.double(0.4),
    minEnergyForPunchThrough = cms.double(100.0),
    minHFCleaningPt = cms.double(5.0),
    minMomentumForPunchThrough = cms.double(100.0),
    minPixelHits = cms.int32(1),
    minPtForPostCleaning = cms.double(20.0),
    minSignificance = cms.double(2.5),
    minSignificanceReduction = cms.double(1.4),
    minTrackerHits = cms.int32(8),
    muon_ECAL = cms.vdouble(0.5, 0.5),
    muon_HCAL = cms.vdouble(3.0, 3.0),
    muon_HO = cms.vdouble(0.9, 0.9),
    muons = cms.InputTag("muons1stStep"),
    nTrackIsoForEgammaSC = cms.uint32(2),
    nsigma_TRACK = cms.double(1.0),
    pf_GlobC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFGlobalCorr_14Dec2011.root'),
    pf_Res_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFRes_14Dec2011.root'),
    pf_convID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_pfConversionAug0411.txt'),
    pf_conv_mvaCut = cms.double(0.0),
    pf_electronID_crackCorrection = cms.bool(False),
    pf_electronID_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/MVAnalysis_BDT.weights_PfElectrons23Jan_IntToFloat.txt'),
    pf_electron_mvaCut = cms.double(-0.1),
    pf_electron_output_col = cms.string('electrons'),
    pf_locC_mvaWeightFile = cms.string('RecoParticleFlow/PFProducer/data/TMVARegression_BDTG_PFClusterLCorr_14Dec2011.root'),
    pf_nsigma_ECAL = cms.double(0.0),
    pf_nsigma_HCAL = cms.double(1.0),
    photon_HoE = cms.double(0.05),
    photon_MinEt = cms.double(10.0),
    photon_SigmaiEtaiEta_barrel = cms.double(0.0125),
    photon_SigmaiEtaiEta_endcap = cms.double(0.034),
    photon_combIso = cms.double(10.0),
    photon_protectionsForBadHcal = cms.PSet(
        enableProtections = cms.bool(False),
        solidConeTrkIsoOffset = cms.double(10.0),
        solidConeTrkIsoSlope = cms.double(0.3)
    ),
    photon_protectionsForJetMET = cms.PSet(
        sumPtTrackIso = cms.double(4.0),
        sumPtTrackIsoSlope = cms.double(0.001)
    ),
    postHFCleaning = cms.bool(False),
    postMuonCleaning = cms.bool(True),
    ptErrorScale = cms.double(8.0),
    ptFactorForHighEta = cms.double(2.0),
    pt_Error = cms.double(1.0),
    punchThroughFactor = cms.double(3.0),
    punchThroughMETFactor = cms.double(4.0),
    rejectTracks_Bad = cms.bool(True),
    rejectTracks_Step45 = cms.bool(True),
    sumEtEcalIsoForEgammaSC_barrel = cms.double(1.0),
    sumEtEcalIsoForEgammaSC_endcap = cms.double(2.0),
    sumPtTrackIsoForEgammaSC_barrel = cms.double(4.0),
    sumPtTrackIsoForEgammaSC_endcap = cms.double(4.0),
    sumPtTrackIsoForPhoton = cms.double(2.0),
    sumPtTrackIsoSlopeForPhoton = cms.double(0.001),
    trackQuality = cms.string('highPurity'),
    useCalibrationsFromDB = cms.bool(True),
    useEGammaElectrons = cms.bool(True),
    useEGammaFilters = cms.bool(True),
    useEGammaSupercluster = cms.bool(True),
    useHO = cms.bool(True),
    usePFConversions = cms.bool(True),
    usePFDecays = cms.bool(False),
    usePFElectrons = cms.bool(False),
    usePFNuclearInteractions = cms.bool(True),
    usePFPhotons = cms.bool(False),
    usePFSCEleCalib = cms.bool(True),
    usePhotonReg = cms.bool(False),
    useProtectionsForJetMET = cms.bool(True),
    useRegressionFromDB = cms.bool(True),
    useVerticesForNeutral = cms.bool(True),
    verbose = cms.untracked.bool(False),
    vertexCollection = cms.InputTag("offlinePrimaryVertices")
)


process.particleFlowTmpPtrs = cms.EDProducer("PFCandidateFwdPtrProducer",
    src = cms.InputTag("particleFlowTmp")
)


process.pfAllElectronsClones = cms.EDProducer("PFCandidateProductFromFwdPtrProducer",
    src = cms.InputTag("pfAllElectrons")
)


process.pfAllMuonsClones = cms.EDProducer("PFCandidateProductFromFwdPtrProducer",
    src = cms.InputTag("pfAllMuons")
)


process.pfConversions = cms.EDProducer("PFConversionProducer",
    PrimaryVertexLabel = cms.InputTag("offlinePrimaryVertices"),
    conversionCollection = cms.InputTag("allConversions")
)


process.pfDisplacedTrackerVertex = cms.EDProducer("PFDisplacedTrackerVertexProducer",
    displacedTrackerVertexColl = cms.InputTag("particleFlowDisplacedVertex"),
    trackColl = cms.InputTag("generalTracks")
)


process.pfElectronInterestingEcalDetIdEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("pfElectronTranslator","pf"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    severityLevel = cms.int32(1)
)


process.pfElectronInterestingEcalDetIdEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("pfElectronTranslator","pf"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    severityLevel = cms.int32(1)
)


process.pfElectronTranslator = cms.EDProducer("PFElectronTranslator",
    CheckStatusFlag = cms.bool(True),
    ElectronMVA = cms.string('pf'),
    ElectronSC = cms.string('pf'),
    GSFTracks = cms.InputTag("electronGsfTracks"),
    MVACutBlock = cms.PSet(
        MVACut = cms.double(-1.0)
    ),
    PFBasicClusters = cms.string('pf'),
    PFCandidate = cms.InputTag("pfSelectedElectrons"),
    PFCandidateElectron = cms.InputTag("particleFlowTmp","electrons"),
    PFGsfElectron = cms.string('pf'),
    PFGsfElectronCore = cms.string('pf'),
    PFPreshowerClusters = cms.string('pf'),
    PFSuperClusters = cms.string('pf'),
    emptyIsOk = cms.bool(True),
    isolationValues = cms.PSet(
        pfSumChargedHadronPt = cms.InputTag("elPFIsoValueCharged04PFId"),
        pfSumNeutralHadronEt = cms.InputTag("elPFIsoValueNeutral04PFId"),
        pfSumPUPt = cms.InputTag("elPFIsoValuePU04PFId"),
        pfSumPhotonEt = cms.InputTag("elPFIsoValueGamma04PFId")
    ),
    useIsolationValues = cms.bool(False)
)


process.pfNoPileUp = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowTmpPtrs"),
    enable = cms.bool(False),
    name = cms.untracked.string('pileUpOnPFCandidates'),
    topCollection = cms.InputTag("pfPileUp"),
    verbose = cms.untracked.bool(False)
)


process.pfNoPileUpIso = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowTmpPtrs"),
    enable = cms.bool(False),
    name = cms.untracked.string('pileUpOnPFCandidates'),
    topCollection = cms.InputTag("pfPileUpIso"),
    verbose = cms.untracked.bool(False)
)


process.pfNoPileUpJME = cms.EDProducer("TPPFCandidatesOnPFCandidates",
    bottomCollection = cms.InputTag("particleFlowPtrs"),
    enable = cms.bool(True),
    name = cms.untracked.string('pileUpOnPFCandidates'),
    topCollection = cms.InputTag("pfPileUpJME"),
    verbose = cms.untracked.bool(False)
)


process.pfNuclear = cms.EDProducer("PFNuclearProducer",
    likelihoodCut = cms.double(0.1),
    nuclearColList = cms.VInputTag(cms.InputTag("firstnuclearInteractionMaker"))
)


process.pfPhotonInterestingEcalDetIdEB = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("pfPhotonTranslator","pfphot"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    severityLevel = cms.int32(1)
)


process.pfPhotonInterestingEcalDetIdEE = cms.EDProducer("InterestingDetIdCollectionProducer",
    basicClustersLabel = cms.InputTag("pfPhotonTranslator","pfphot"),
    etaSize = cms.int32(5),
    interestingDetIdCollection = cms.string(''),
    keepNextToBoundary = cms.bool(True),
    keepNextToDead = cms.bool(True),
    phiSize = cms.int32(5),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    severityLevel = cms.int32(1)
)


process.pfPhotonTranslator = cms.EDProducer("PFPhotonTranslator",
    EGPhotons = cms.string('photons'),
    PFBasicClusters = cms.string('pfphot'),
    PFCandidate = cms.InputTag("pfSelectedPhotons"),
    PFConversionCollection = cms.string('pfphot'),
    PFPhotonCores = cms.string('pfphot'),
    PFPhotons = cms.string('pfphot'),
    PFPreshowerClusters = cms.string('pfphot'),
    PFSuperClusters = cms.string('pfphot'),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hOverEConeSize = cms.double(0.15),
    hcalTowers = cms.InputTag("towerMaker"),
    isolationValues = cms.PSet(
        pfChargedHadrons = cms.InputTag("phPFIsoValueCharged04PFId"),
        pfNeutralHadrons = cms.InputTag("phPFIsoValueNeutral04PFId"),
        pfPhotons = cms.InputTag("phPFIsoValueGamma04PFId")
    ),
    primaryVertexProducer = cms.string('offlinePrimaryVerticesWithBS')
)


process.pfPileUp = cms.EDProducer("PFPileUp",
    Enable = cms.bool(False),
    PFCandidates = cms.InputTag("particleFlowTmpPtrs"),
    Vertices = cms.InputTag("offlinePrimaryVertices"),
    checkClosestZVertex = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.pfPileUpIso = cms.EDProducer("PFPileUp",
    Enable = cms.bool(False),
    PFCandidates = cms.InputTag("particleFlowTmpPtrs"),
    Vertices = cms.InputTag("offlinePrimaryVertices"),
    checkClosestZVertex = cms.bool(True),
    verbose = cms.untracked.bool(False)
)


process.pfPileUpJME = cms.EDProducer("PFPileUp",
    Enable = cms.bool(True),
    PFCandidates = cms.InputTag("particleFlowPtrs"),
    Vertices = cms.InputTag("goodOfflinePrimaryVertices"),
    checkClosestZVertex = cms.bool(False),
    verbose = cms.untracked.bool(False)
)


process.pfTrack = cms.EDProducer("PFTrackProducer",
    GsfTrackModuleLabel = cms.InputTag("electronGsfTracks"),
    GsfTracksInEvents = cms.bool(True),
    MuColl = cms.InputTag("hiMuons1stStep"),
    PrimaryVertexLabel = cms.InputTag("hiSelectedVertex"),
    TkColList = cms.VInputTag("hiGeneralTracks"),
    TrackQuality = cms.string('highPurity'),
    TrajInEvents = cms.bool(False),
    UseQuality = cms.bool(True)
)


process.pfTrackElec = cms.EDProducer("PFElecTkProducer",
    AbsEtaBarrelEndcapsSeparation = cms.double(1.479),
    Fitter = cms.string('GsfElectronFittingSmoother'),
    GsfTrackModuleLabel = cms.InputTag("electronGsfTracks"),
    MaxConvBremRecoPT = cms.double(49.0),
    MinDEtaGsfSC = cms.double(0.06),
    MinDPhiGsfSC = cms.double(0.15),
    MinSCEnergy = cms.double(4.0),
    ModeMomentum = cms.bool(True),
    PFConversions = cms.InputTag("pfConversions"),
    PFEcalClusters = cms.InputTag("particleFlowClusterECAL"),
    PFNuclear = cms.InputTag("pfDisplacedTrackerVertex"),
    PFRecTrackLabel = cms.InputTag("pfTrack"),
    PFV0 = cms.InputTag("pfV0"),
    PrimaryVertexLabel = cms.InputTag("hiSelectedVertex"),
    Propagator = cms.string('fwdElectronPropagator'),
    PtLowHighSeparation = cms.double(20),
    TTRHBuilder = cms.string('WithTrackAngle'),
    TrajInEvents = cms.bool(False),
    applyAlsoGsfAngularCleaning = cms.bool(True),
    applyEGSelection = cms.bool(False),
    applyGsfTrackCleaning = cms.bool(True),
    debugGsfCleaning = cms.bool(False),
    maxDEtaGsfAngularCleaning = cms.double(0.05),
    maxDPhiBremTangGsfAngularCleaning = cms.double(0.05),
    pf_convBremFinderID_mvaCutBarrelHighPt = cms.double(0.97),
    pf_convBremFinderID_mvaCutBarrelLowPt = cms.double(0.6),
    pf_convBremFinderID_mvaCutEndcapsHighPt = cms.double(0.995),
    pf_convBremFinderID_mvaCutEndcapsLowPt = cms.double(0.9),
    pf_convBremFinderID_mvaWeightFileBarrelHighPt = cms.string('RecoParticleFlow/PFTracking/data/TMVAClassification_ConvBremFinder_Testetgt20absetalt1_479_BDT.weights.xml'),
    pf_convBremFinderID_mvaWeightFileBarrelLowPt = cms.string('RecoParticleFlow/PFTracking/data/TMVAClassification_ConvBremFinder_Testetlt20absetalt1_479_BDT.weights.xml'),
    pf_convBremFinderID_mvaWeightFileEndcapsHighPt = cms.string('RecoParticleFlow/PFTracking/data/TMVAClassification_ConvBremFinder_Testetgt20absetagt1_479_BDT.weights.xml'),
    pf_convBremFinderID_mvaWeightFileEndcapsLowPt = cms.string('RecoParticleFlow/PFTracking/data/TMVAClassification_ConvBremFinder_Testetlt20absetagt1_479_BDT.weights.xml'),
    useConvBremFinder = cms.bool(True),
    useConversions = cms.bool(False),
    useFifthStepForEcalDrivenGsf = cms.bool(False),
    useFifthStepForTrackerDrivenGsf = cms.bool(False),
    useNuclear = cms.bool(False),
    useV0 = cms.bool(False)
)


process.pfV0 = cms.EDProducer("PFV0Producer",
    V0List = cms.VInputTag(cms.InputTag("generalV0Candidates","Kshort"), cms.InputTag("generalV0Candidates","Lambda"))
)


process.phPFIsoDepositCharged = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedHadrons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfSelectedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoDepositChargedAll = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllChargedParticles")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfSelectedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoDepositGamma = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('PFCandWithSuperClusterExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        MissHitSCMatch_Veto = cms.bool(False),
        SCMatch_Veto = cms.bool(True),
        inputCandView = cms.InputTag("pfAllPhotons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfSelectedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoDepositNeutral = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfAllNeutralHadrons")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfSelectedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoDepositPU = cms.EDProducer("CandIsoDepositProducer",
    ExtractorPSet = cms.PSet(
        ComponentName = cms.string('CandViewExtractor'),
        DR_Max = cms.double(0.4),
        DR_Veto = cms.double(0),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(99999.99),
        Diff_z = cms.double(99999.99),
        inputCandView = cms.InputTag("pfPileUpAllChargedParticles")
    ),
    MultipleDepositsFlag = cms.bool(False),
    src = cms.InputTag("pfSelectedPhotons"),
    trackType = cms.string('candidate')
)


process.phPFIsoValueCharged03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositCharged"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositCharged__reRECO')
)


process.phPFIsoValueCharged04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositCharged"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositCharged__reRECO')
)


process.phPFIsoValueChargedAll03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositChargedAll"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositChargedAll__reRECO')
)


process.phPFIsoValueChargedAll04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositChargedAll"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositChargedAll__reRECO')
)


process.phPFIsoValueGamma03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositGamma"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.05)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositGamma__reRECO')
)


process.phPFIsoValueGamma04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositGamma"),
        vetos = cms.vstring('EcalEndcaps:ConeVeto(0.05)'),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositGamma__reRECO')
)


process.phPFIsoValueNeutral03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositNeutral"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositNeutral__reRECO')
)


process.phPFIsoValueNeutral04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositNeutral"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositNeutral__reRECO')
)


process.phPFIsoValuePU03PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.3),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositPU"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositPU__reRECO')
)


process.phPFIsoValuePU04PFId = cms.EDProducer("PFCandIsolatorFromDeposits",
    deposits = cms.VPSet(cms.PSet(
        PivotCoordinatesForEBEE = cms.bool(True),
        deltaR = cms.double(0.4),
        mode = cms.string('sum'),
        skipDefaultVeto = cms.bool(True),
        src = cms.InputTag("phPFIsoDepositPU"),
        vetos = cms.vstring(),
        weight = cms.string('1')
    )),
    mightGet = cms.untracked.vstring('recoIsoDepositedmValueMap_phPFIsoDepositPU__reRECO')
)


process.photonCore = cms.EDProducer("PhotonCoreProducer",
    conversionProducer = cms.InputTag(""),
    minSCEt = cms.double(8.0),
    photonCoreCollection = cms.string(''),
    pixelSeedProducer = cms.InputTag("electronMergedSeeds"),
    risolveConversionAmbiguity = cms.bool(True),
    scHybridBarrelProducer = cms.InputTag("correctedIslandBarrelSuperClusters"),
    scIslandEndcapProducer = cms.InputTag("correctedIslandEndcapSuperClusters")
)


process.photonCoreFromMultiCl = cms.EDProducer("PhotonCoreProducer",
    conversionProducer = cms.InputTag(""),
    minSCEt = cms.double(10.0),
    photonCoreCollection = cms.string(''),
    pixelSeedProducer = cms.InputTag("electronMergedSeedsFromMultiCl"),
    risolveConversionAmbiguity = cms.bool(True),
    scHybridBarrelProducer = cms.InputTag("correctedHybridSuperClusters"),
    scIslandEndcapProducer = cms.InputTag("particleFlowSuperClusterHGCalFromMultiCl")
)


process.photonEcalPFClusterIsolationProducer = cms.EDProducer("PhotonEcalPFClusterIsolationProducer",
    candidateProducer = cms.InputTag("gedPhotonsTmp"),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0),
    drVetoEndcap = cms.double(0),
    energyBarrel = cms.double(0),
    energyEndcap = cms.double(0),
    etaStripBarrel = cms.double(0),
    etaStripEndcap = cms.double(0),
    pfClusterProducer = cms.InputTag("particleFlowClusterECAL")
)


process.photonHcalPFClusterIsolationProducer = cms.EDProducer("PhotonHcalPFClusterIsolationProducer",
    candidateProducer = cms.InputTag("gedPhotonsTmp"),
    drMax = cms.double(0.3),
    drVetoBarrel = cms.double(0),
    drVetoEndcap = cms.double(0),
    energyBarrel = cms.double(0),
    energyEndcap = cms.double(0),
    etaStripBarrel = cms.double(0),
    etaStripEndcap = cms.double(0),
    pfClusterProducerHCAL = cms.InputTag("particleFlowClusterHCAL"),
    useHF = cms.bool(False)
)


process.photonIsolationHIProducer = cms.EDProducer("photonIsolationHIProducer",
    basicClusterBarrel = cms.InputTag("islandBasicClusters","islandBarrelBasicClusters"),
    basicClusterEndcap = cms.InputTag("islandBasicClusters","islandEndcapBasicClusters"),
    ebRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    eeRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbhe = cms.InputTag("hbhereco"),
    hf = cms.InputTag("hfreco"),
    ho = cms.InputTag("horeco"),
    photonProducer = cms.InputTag("photons"),
    trackCollection = cms.InputTag("hiGeneralTracks"),
    trackQuality = cms.string('highPurity')
)


process.photonIsolationHIProducerGED = cms.EDProducer("photonIsolationHIProducer",
    basicClusterBarrel = cms.InputTag("islandBasicClusters","islandBarrelBasicClusters"),
    basicClusterEndcap = cms.InputTag("islandBasicClusters","islandEndcapBasicClusters"),
    ebRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    eeRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    hbhe = cms.InputTag("hbhereco"),
    hf = cms.InputTag("hfreco"),
    ho = cms.InputTag("horeco"),
    photonProducer = cms.InputTag("gedPhotonsTmp"),
    trackCollection = cms.InputTag("hiGeneralTracks"),
    trackQuality = cms.string('highPurity')
)


process.photons = cms.EDProducer("GEDPhotonProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromEcalEnergy'),
    checkHcalStatus = cms.bool(True),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        trackProducer = cms.InputTag("hiGeneralTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHoverEBarrel = cms.double(0.99),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(10.0),
    minR9Endcap = cms.double(10.0),
    minSCEtBarrel = cms.double(5.0),
    minSCEtEndcap = cms.double(15.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    outputPhotonCollection = cms.string(''),
    pfEgammaCandidates = cms.InputTag(""),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    photonProducer = cms.InputTag("photonCore"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    preshowerHits = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    primaryVertexProducer = cms.InputTag("hiSelectedVertex"),
    reconstructionStep = cms.string('tmp'),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True),
    valueMapPhotons = cms.string('')
)


process.photonsFromMultiCl = cms.EDProducer("GEDPhotonProducer",
    RecHitFlagToBeExcludedEB = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitFlagToBeExcludedEE = cms.vstring(
        'kFaultyHardware',
        'kNeighboursRecovered',
        'kTowerRecovered',
        'kDead',
        'kWeird'
    ),
    RecHitSeverityToBeExcludedEB = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    RecHitSeverityToBeExcludedEE = cms.vstring(
        'kWeird',
        'kBad',
        'kTime'
    ),
    barrelEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    candidateP4type = cms.string('fromEcalEnergy'),
    checkHcalStatus = cms.bool(True),
    ecalRecHitSumEtOffsetBarrel = cms.double(999999999),
    ecalRecHitSumEtOffsetEndcap = cms.double(999999999),
    ecalRecHitSumEtSlopeBarrel = cms.double(0.0),
    ecalRecHitSumEtSlopeEndcap = cms.double(0.0),
    endcapEcalHits = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    energyRegressionWeightsDBLocation = cms.string('wgbrph'),
    energyRegressionWeightsFileLocation = cms.string('/afs/cern.ch/user/b/bendavid/cmspublic/regweights/gbrph.root'),
    hOverEConeSize = cms.double(0.15),
    hbheInstance = cms.string(''),
    hbheModule = cms.string('hbhereco'),
    hcalTowerSumEtOffsetBarrel = cms.double(999999999),
    hcalTowerSumEtOffsetEndcap = cms.double(999999999),
    hcalTowerSumEtSlopeBarrel = cms.double(0.0),
    hcalTowerSumEtSlopeEndcap = cms.double(0.0),
    hcalTowers = cms.InputTag("towerMaker"),
    highEt = cms.double(100.0),
    isolationSumsCalculatorSet = cms.PSet(
        ComponentName = cms.string('isolationSumsCalculator'),
        EcalRecHitEtaSliceA_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceA_Endcap = cms.double(2.5),
        EcalRecHitEtaSliceB_Barrel = cms.double(2.5),
        EcalRecHitEtaSliceB_Endcap = cms.double(2.5),
        EcalRecHitInnerRadiusA_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusA_Endcap = cms.double(3.5),
        EcalRecHitInnerRadiusB_Barrel = cms.double(3.5),
        EcalRecHitInnerRadiusB_Endcap = cms.double(3.5),
        EcalRecHitOuterRadiusA_Barrel = cms.double(0.4),
        EcalRecHitOuterRadiusA_Endcap = cms.double(0.4),
        EcalRecHitOuterRadiusB_Barrel = cms.double(0.3),
        EcalRecHitOuterRadiusB_Endcap = cms.double(0.3),
        EcalRecHitThreshEA_Barrel = cms.double(0.095),
        EcalRecHitThreshEA_Endcap = cms.double(0.0),
        EcalRecHitThreshEB_Barrel = cms.double(0.095),
        EcalRecHitThreshEB_Endcap = cms.double(0.0),
        EcalRecHitThreshEtA_Barrel = cms.double(0.0),
        EcalRecHitThreshEtA_Endcap = cms.double(0.11),
        EcalRecHitThreshEtB_Barrel = cms.double(0.0),
        EcalRecHitThreshEtB_Endcap = cms.double(0.11),
        HcalDepth1TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth1TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth1TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth1TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth1TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth1TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth1TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth1TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth1TowerThreshEB_Endcap = cms.double(0.0),
        HcalDepth2TowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalDepth2TowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalDepth2TowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalDepth2TowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalDepth2TowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalDepth2TowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalDepth2TowerThreshEA_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEA_Endcap = cms.double(0.0),
        HcalDepth2TowerThreshEB_Barrel = cms.double(0.0),
        HcalDepth2TowerThreshEB_Endcap = cms.double(0.0),
        HcalRecHitCollection = cms.InputTag("towerMaker"),
        HcalTowerInnerRadiusA_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusA_Endcap = cms.double(0.15),
        HcalTowerInnerRadiusB_Barrel = cms.double(0.15),
        HcalTowerInnerRadiusB_Endcap = cms.double(0.15),
        HcalTowerOuterRadiusA_Barrel = cms.double(0.4),
        HcalTowerOuterRadiusA_Endcap = cms.double(0.4),
        HcalTowerOuterRadiusB_Barrel = cms.double(0.3),
        HcalTowerOuterRadiusB_Endcap = cms.double(0.3),
        HcalTowerThreshEA_Barrel = cms.double(0.0),
        HcalTowerThreshEA_Endcap = cms.double(0.0),
        HcalTowerThreshEB_Barrel = cms.double(0.0),
        HcalTowerThreshEB_Endcap = cms.double(0.0),
        TrackConeInnerRadiusA_Barrel = cms.double(0.04),
        TrackConeInnerRadiusA_Endcap = cms.double(0.04),
        TrackConeInnerRadiusB_Barrel = cms.double(0.04),
        TrackConeInnerRadiusB_Endcap = cms.double(0.04),
        TrackConeOuterRadiusA_Barrel = cms.double(0.4),
        TrackConeOuterRadiusA_Endcap = cms.double(0.4),
        TrackConeOuterRadiusB_Barrel = cms.double(0.3),
        TrackConeOuterRadiusB_Endcap = cms.double(0.3),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        beamSpotProducer = cms.InputTag("offlineBeamSpot"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        isolationtrackEtaSliceA_Barrel = cms.double(0.015),
        isolationtrackEtaSliceA_Endcap = cms.double(0.015),
        isolationtrackEtaSliceB_Barrel = cms.double(0.015),
        isolationtrackEtaSliceB_Endcap = cms.double(0.015),
        isolationtrackThresholdA_Barrel = cms.double(0.0),
        isolationtrackThresholdA_Endcap = cms.double(0.0),
        isolationtrackThresholdB_Barrel = cms.double(0.0),
        isolationtrackThresholdB_Endcap = cms.double(0.0),
        longImpactParameterA_Barrel = cms.double(0.2),
        longImpactParameterA_Endcap = cms.double(0.2),
        longImpactParameterB_Barrel = cms.double(0.2),
        longImpactParameterB_Endcap = cms.double(0.2),
        moduleEtaBoundary = cms.vdouble(
            0.0, 0.02, 0.43, 0.46, 0.78,
            0.81, 1.13, 1.15, 1.45, 1.58
        ),
        modulePhiBoundary = cms.double(0.0087),
        trackProducer = cms.InputTag("generalTracks"),
        transImpactParameterA_Barrel = cms.double(0.1),
        transImpactParameterA_Endcap = cms.double(0.1),
        transImpactParameterB_Barrel = cms.double(0.1),
        transImpactParameterB_Endcap = cms.double(0.1),
        useNumCrystals = cms.bool(True),
        vetoClustered = cms.bool(False)
    ),
    maxHoverEBarrel = cms.double(0.5),
    maxHoverEEndcap = cms.double(0.5),
    minR9Barrel = cms.double(0.94),
    minR9Endcap = cms.double(0.95),
    minSCEtBarrel = cms.double(10.0),
    minSCEtEndcap = cms.double(10.0),
    mipVariableSet = cms.PSet(
        ComponentName = cms.string('mipVariable'),
        HaloDiscThreshold = cms.double(70.0),
        ResidualWidth = cms.double(0.23),
        XRangeFit = cms.double(180.0),
        YRangeFit = cms.double(7.0),
        barrelEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        endcapEcalRecHitCollection = cms.InputTag("ecalRecHit","EcalRecHitsEE")
    ),
    nTrackHollowConeBarrel = cms.double(999999999),
    nTrackHollowConeEndcap = cms.double(999999999),
    nTrackSolidConeBarrel = cms.double(999999999),
    nTrackSolidConeEndcap = cms.double(999999999),
    outputPhotonCollection = cms.string(''),
    pfEgammaCandidates = cms.InputTag(""),
    photonEcalEnergyCorrFunction = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    photonProducer = cms.InputTag("photonCoreFromMultiCl"),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(6.3),
        T0_endcPresh = cms.double(3.6),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    posCalc_logweight = cms.bool(True),
    posCalc_t0_barl = cms.double(7.7),
    posCalc_t0_endc = cms.double(6.3),
    posCalc_t0_endcPresh = cms.double(3.6),
    posCalc_w0 = cms.double(4.2),
    posCalc_x0 = cms.double(0.89),
    preshowerHits = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    primaryVertexProducer = cms.InputTag("offlinePrimaryVerticesWithBS"),
    reconstructionStep = cms.string('tmp'),
    regressionWeightsFromDB = cms.bool(True),
    runMIPTagger = cms.bool(True),
    sigmaIetaIetaCutBarrel = cms.double(999999999),
    sigmaIetaIetaCutEndcap = cms.double(999999999),
    superClusterCrackEnergyCorrFunction = cms.string('EcalClusterCrackCorrection'),
    superClusterEnergyCorrFunction = cms.string('EcalClusterEnergyCorrection'),
    superClusterEnergyErrorFunction = cms.string('EcalClusterEnergyUncertainty'),
    trackPtSumHollowConeBarrel = cms.double(999999999),
    trackPtSumHollowConeEndcap = cms.double(999999999),
    trackPtSumSolidConeBarrel = cms.double(999999999),
    trackPtSumSolidConeEndcap = cms.double(999999999),
    usePrimaryVertex = cms.bool(True),
    valueMapPhotons = cms.string('')
)


process.pixelFitterByConformalMappingAndLine = cms.EDProducer("PixelFitterByConformalMappingAndLineProducer",
    TTRHBuilder = cms.string('PixelTTRHBuilderWithoutAngle'),
    fixImpactParameter = cms.double(0),
    useFixImpactParameter = cms.bool(False)
)


process.pixelFitterByHelixProjections = cms.EDProducer("PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool(False),
    scaleFactor = cms.double(0.65)
)


process.pixelFitterByHelixProjectionsDefault = cms.EDProducer("PixelFitterByHelixProjectionsProducer",
    scaleErrorsForBPix1 = cms.bool(False),
    scaleFactor = cms.double(0.65)
)


process.pixelLessStep = cms.EDProducer("ClassifierMerger",
    inputClassifiers = cms.vstring(
        'pixelLessStepClassifier1',
        'pixelLessStepClassifier2'
    )
)


process.pixelLessStepClassifier1 = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter5_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.4, 0.0, 0.4),
    src = cms.InputTag("pixelLessStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.pixelLessStepClassifier2 = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter0_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.0, 0.0, 0.0),
    src = cms.InputTag("pixelLessStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.pixelLessStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("mixedTripletStepClusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag("mixedTripletStep","QualityMasks"),
    trajectories = cms.InputTag("mixedTripletStepTracks")
)


process.pixelLessStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("pixelLessStepSeedLayers"),
    trackingRegions = cms.InputTag("hiPixelLessStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.pixelLessStepHitTriplets = cms.EDProducer("MultiHitFromChi2EDProducer",
    ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    chi2VsPtCut = cms.bool(True),
    chi2_cuts = cms.vdouble(3, 4, 5, 5),
    detIdsToDebug = cms.vint32(0, 0, 0),
    doublets = cms.InputTag("pixelLessStepHitDoublets"),
    extraHitRPhitolerance = cms.double(0),
    extraHitRZtolerance = cms.double(0),
    extraPhiKDBox = cms.double(0.005),
    extraRKDBox = cms.double(0.2),
    extraZKDBox = cms.double(0.2),
    fnSigmaRZ = cms.double(2),
    maxChi2 = cms.double(5),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_pixelLessStepHitDoublets__reRECO'),
    phiPreFiltering = cms.double(0.3),
    pt_interv = cms.vdouble(0.4, 0.7, 1, 2),
    refitHits = cms.bool(True),
    useFixedPreFiltering = cms.bool(False)
)


process.pixelLessStepMasks = cms.EDProducer("FastTrackerRecHitMaskProducer",
    TrackQuality = cms.string('highPurity'),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    minNumberOfLayersWithMeasBeforeFiltering_ = cms.int32(0),
    oldHitRemovalInfo = cms.InputTag("mixedTripletStepMasks"),
    recHits = cms.InputTag("fastTrackerRecHits"),
    trackClassifier = cms.InputTag("mixedTripletStep","QualityMasks"),
    trackQuality = cms.string('hightPurity'),
    trajectories = cms.InputTag("mixedTripletStepTracks")
)


process.pixelLessStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    MTEC = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        maxRing = cms.int32(3),
        minRing = cms.int32(3),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
        skipClusters = cms.InputTag("hiPixelLessStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    MTIB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
        skipClusters = cms.InputTag("hiPixelLessStepClusters")
    ),
    MTID = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        maxRing = cms.int32(3),
        minRing = cms.int32(3),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
        skipClusters = cms.InputTag("hiPixelLessStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    TEC = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        maxRing = cms.int32(2),
        minRing = cms.int32(1),
        skipClusters = cms.InputTag("hiPixelLessStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    TIB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        skipClusters = cms.InputTag("hiPixelLessStepClusters")
    ),
    TID = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        maxRing = cms.int32(2),
        minRing = cms.int32(1),
        skipClusters = cms.InputTag("hiPixelLessStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    layerList = cms.vstring(
        'TIB1+TIB2+MTIB3',
        'TIB1+TIB2+MTIB4',
        'TIB1+TIB2+MTID1_pos',
        'TIB1+TIB2+MTID1_neg',
        'TID1_pos+TID2_pos+TID3_pos',
        'TID1_neg+TID2_neg+TID3_neg',
        'TID1_pos+TID2_pos+MTID3_pos',
        'TID1_neg+TID2_neg+MTID3_neg',
        'TID1_pos+TID2_pos+MTEC1_pos',
        'TID1_neg+TID2_neg+MTEC1_neg',
        'TID2_pos+TID3_pos+TEC1_pos',
        'TID2_neg+TID3_neg+TEC1_neg',
        'TID2_pos+TID3_pos+MTEC1_pos',
        'TID2_neg+TID3_neg+MTEC1_neg',
        'TEC1_pos+TEC2_pos+TEC3_pos',
        'TEC1_neg+TEC2_neg+TEC3_neg',
        'TEC1_pos+TEC2_pos+MTEC3_pos',
        'TEC1_neg+TEC2_neg+MTEC3_neg',
        'TEC1_pos+TEC2_pos+TEC4_pos',
        'TEC1_neg+TEC2_neg+TEC4_neg',
        'TEC1_pos+TEC2_pos+MTEC4_pos',
        'TEC1_neg+TEC2_neg+MTEC4_neg',
        'TEC2_pos+TEC3_pos+TEC4_pos',
        'TEC2_neg+TEC3_neg+TEC4_neg',
        'TEC2_pos+TEC3_pos+MTEC4_pos',
        'TEC2_neg+TEC3_neg+MTEC4_neg',
        'TEC2_pos+TEC3_pos+TEC5_pos',
        'TEC2_neg+TEC3_neg+TEC5_neg',
        'TEC2_pos+TEC3_pos+TEC6_pos',
        'TEC2_neg+TEC3_neg+TEC6_neg',
        'TEC3_pos+TEC4_pos+TEC5_pos',
        'TEC3_neg+TEC4_neg+TEC5_neg',
        'TEC3_pos+TEC4_pos+MTEC5_pos',
        'TEC3_neg+TEC4_neg+MTEC5_neg',
        'TEC3_pos+TEC5_pos+TEC6_pos',
        'TEC3_neg+TEC5_neg+TEC6_neg',
        'TEC4_pos+TEC5_pos+TEC6_pos',
        'TEC4_neg+TEC5_neg+TEC6_neg'
    )
)


process.pixelLessStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsTripletOnlyEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('CombinedSeedComparitor'),
        comparitors = cms.VPSet(
            cms.PSet(
                ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
                ClusterShapeHitFilterName = cms.string('pixelLessStepClusterShapeHitFilter'),
                ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
                FilterAtHelixStage = cms.bool(True),
                FilterPixelHits = cms.bool(False),
                FilterStripHits = cms.bool(True)
            ),
            cms.PSet(
                ComponentName = cms.string('StripSubClusterShapeSeedFilter'),
                FilterAtHelixStage = cms.bool(False),
                label = cms.untracked.string('Seeds'),
                maxNSat = cms.uint32(3),
                maxTrimmedSizeDiffNeg = cms.double(1.0),
                maxTrimmedSizeDiffPos = cms.double(0.7),
                seedCutMIPs = cms.double(0.35),
                seedCutSN = cms.double(7.0),
                subclusterCutMIPs = cms.double(0.45),
                subclusterCutSN = cms.double(12.0),
                subclusterWindow = cms.double(0.7),
                trimMaxADC = cms.double(30.0),
                trimMaxFracNeigh = cms.double(0.25),
                trimMaxFracTotal = cms.double(0.15)
            )
        ),
        mode = cms.string('and')
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_pixelLessStepHitTriplets__reRECO',
        'BaseTrackerRecHitsOwned_pixelLessStepHitTriplets__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("pixelLessStepHitTriplets")
)


process.pixelLessStepSelector = cms.EDProducer("MultiTrackSelector",
    GBRForestLabel = cms.string('MVASelectorIter5'),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("pixelLessStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.5),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.3, 4.0),
            d0_par2 = cms.vdouble(1.3, 4.0),
            dz_par1 = cms.vdouble(1.3, 4.0),
            dz_par2 = cms.vdouble(1.3, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(1),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(4),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('pixelLessStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.35),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(1.1, 4.0),
            d0_par2 = cms.vdouble(1.1, 4.0),
            dz_par1 = cms.vdouble(1.1, 4.0),
            dz_par2 = cms.vdouble(1.1, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(0),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(4),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('pixelLessStepTight'),
            preFilterName = cms.string('pixelLessStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.2),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.9, 4.0),
            d0_par2 = cms.vdouble(0.9, 4.0),
            dz_par1 = cms.vdouble(0.9, 4.0),
            dz_par2 = cms.vdouble(0.9, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(0),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(4),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('QualityMasks'),
            preFilterName = cms.string('pixelLessStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(False),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("pixelVertices")
)


process.pixelLessStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('pixelLessStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('pixelLessStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiPixelLessStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("pixelLessStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.pixelLessStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(0),
        originHalfLength = cms.double(12.0),
        originRadius = cms.double(1.0),
        precise = cms.bool(True),
        ptMin = cms.double(0.4),
        useMultipleScattering = cms.bool(False)
    )
)


process.pixelLessStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('pixelLessStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("pixelLessStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.pixelPairStep = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter2_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.2, 0.0, 0.3),
    src = cms.InputTag("pixelPairStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.pixelPairStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("lowPtTripletStepClusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag("lowPtTripletStep","QualityMasks"),
    trajectories = cms.InputTag("lowPtTripletStepTracks")
)


process.pixelPairStepHitDoublets = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("trackerClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(1000000),
    produceIntermediateHitDoublets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("pixelPairStepSeedLayers"),
    trackingRegions = cms.InputTag("pixelPairStepTrackingRegions"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.pixelPairStepHitDoubletsB = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag("trackerClusterCheck"),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(1000000),
    produceIntermediateHitDoublets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag(""),
    trackingRegions = cms.InputTag(""),
    trackingRegionsSeedingLayers = cms.InputTag("pixelPairStepTrackingRegionsSeedLayersB")
)


process.pixelPairStepMasks = cms.EDProducer("FastTrackerRecHitMaskProducer",
    TrackQuality = cms.string('highPurity'),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    minNumberOfLayersWithMeasBeforeFiltering_ = cms.int32(0),
    oldHitRemovalInfo = cms.InputTag("lowPtTripletStepMasks"),
    recHits = cms.InputTag("fastTrackerRecHits"),
    trackClassifier = cms.InputTag("lowPtTripletStep","QualityMasks"),
    trackQuality = cms.string('hightPurity'),
    trajectories = cms.InputTag("lowPtTripletStepTracks")
)


process.pixelPairStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("pixelPairStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("pixelPairStepClusters")
    ),
    layerList = cms.vstring(
        'BPix1+BPix2',
        'BPix1+BPix3',
        'BPix2+BPix3',
        'BPix1+FPix1_pos',
        'BPix1+FPix1_neg',
        'BPix2+FPix1_pos',
        'BPix2+FPix1_neg',
        'FPix1_pos+FPix2_pos',
        'FPix1_neg+FPix2_neg'
    )
)


process.pixelPairStepSeeds = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(True),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_pixelPairStepHitDoublets__reRECO'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("pixelPairStepHitDoublets")
)


process.pixelPairStepSeedsA = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(True),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_pixelPairStepHitDoublets__reRECO'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("pixelPairStepHitDoublets")
)


process.pixelPairStepSeedsB = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
        ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
        ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
        FilterAtHelixStage = cms.bool(True),
        FilterPixelHits = cms.bool(True),
        FilterStripHits = cms.bool(False)
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_pixelPairStepHitDoubletsB__reRECO'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("pixelPairStepHitDoubletsB")
)


process.pixelPairStepSelector = cms.EDProducer("MultiTrackSelector",
    GBRForestLabel = cms.string('MVASelectorIter2'),
    beamspot = cms.InputTag("offlineBeamSpot"),
    src = cms.InputTag("pixelPairStepTracks"),
    trackSelectors = cms.VPSet(
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(1.6),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.55, 4.0),
            d0_par2 = cms.vdouble(0.55, 4.0),
            dz_par1 = cms.vdouble(0.65, 4.0),
            dz_par2 = cms.vdouble(0.45, 4.0),
            keepAllTracks = cms.bool(False),
            maxNumberLostLayers = cms.uint32(999),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(0),
            minNumberLayers = cms.uint32(0),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('pixelPairStepLoose'),
            preFilterName = cms.string(''),
            qualityBit = cms.string('loose'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.7),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.3, 4.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('pixelPairStepTight'),
            preFilterName = cms.string('pixelPairStepLoose'),
            qualityBit = cms.string('tight'),
            res_par = cms.vdouble(0.003, 0.01),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        ),
        cms.PSet(
            applyAbsCutsIfNoPV = cms.bool(False),
            applyAdaptedPVCuts = cms.bool(True),
            chi2n_no1Dmod_par = cms.double(9999),
            chi2n_par = cms.double(0.7),
            copyExtras = cms.untracked.bool(True),
            copyTrajectories = cms.untracked.bool(False),
            d0_par1 = cms.vdouble(0.3, 4.0),
            d0_par2 = cms.vdouble(0.4, 4.0),
            dz_par1 = cms.vdouble(0.35, 4.0),
            dz_par2 = cms.vdouble(0.4, 4.0),
            keepAllTracks = cms.bool(True),
            maxNumberLostLayers = cms.uint32(2),
            max_d0 = cms.double(100.0),
            max_eta = cms.double(9999.0),
            max_lostHitFraction = cms.double(1.0),
            max_minMissHitOutOrIn = cms.int32(99),
            max_relpterr = cms.double(9999.0),
            max_z0 = cms.double(100.0),
            minHitsToBypassChecks = cms.uint32(20),
            minNumber3DLayers = cms.uint32(3),
            minNumberLayers = cms.uint32(3),
            min_eta = cms.double(-9999.0),
            min_nhits = cms.uint32(0),
            nSigmaZ = cms.double(4.0),
            name = cms.string('QualityMasks'),
            preFilterName = cms.string('pixelPairStepTight'),
            qualityBit = cms.string('highPurity'),
            res_par = cms.vdouble(0.003, 0.001),
            vertexCut = cms.string('ndof>=2&!isFake'),
            vtxNumber = cms.int32(-1)
        )
    ),
    useAnyMVA = cms.bool(True),
    useVertices = cms.bool(True),
    useVtxError = cms.bool(False),
    vertices = cms.InputTag("pixelVertices")
)


process.pixelPairStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('pixelPairStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('TrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("pixelPairStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("pixelPairStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.pixelPairStepTrackingRegions = cms.EDProducer("GlobalTrackingRegionWithVerticesEDProducer",
    RegionPSet = cms.PSet(
        VertexCollection = cms.InputTag("firstStepPrimaryVertices"),
        beamSpot = cms.InputTag("offlineBeamSpot"),
        fixedError = cms.double(0.03),
        halfLengthScaling4BigEvts = cms.bool(False),
        maxNVertices = cms.int32(-1),
        maxPtMin = cms.double(1000),
        minHalfLength = cms.double(0),
        minOriginR = cms.double(0),
        nSigmaZ = cms.double(4),
        originRScaling4BigEvts = cms.bool(False),
        originRadius = cms.double(0.015),
        pixelClustersForScaling = cms.InputTag("siPixelClusters"),
        precise = cms.bool(True),
        ptMin = cms.double(0.6),
        ptMinScaling4BigEvts = cms.bool(False),
        scalingEndNPix = cms.double(1),
        scalingStartNPix = cms.double(0),
        sigmaZVertex = cms.double(3),
        useFakeVertices = cms.bool(False),
        useFixedError = cms.bool(True),
        useFoundVertices = cms.bool(True),
        useMultipleScattering = cms.bool(True)
    )
)


process.pixelPairStepTrackingRegionsSeedLayersB = cms.EDProducer("PixelInactiveAreaTrackingRegionsSeedingLayersProducer",
    BPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("pixelPairStepClusters")
    ),
    FPix = cms.PSet(
        HitProducer = cms.string('siPixelRecHits'),
        TTRHBuilder = cms.string('WithTrackAngle'),
        skipClusters = cms.InputTag("pixelPairStepClusters")
    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        deltaEta_Cand = cms.double(-1),
        deltaPhi_Cand = cms.double(-1),
        extraEta = cms.double(0),
        extraPhi = cms.double(0),
        input = cms.InputTag(""),
        maxNVertices = cms.int32(5),
        measurementTrackerName = cms.InputTag(""),
        nSigmaZBeamSpot = cms.double(4),
        nSigmaZVertex = cms.double(3),
        operationMode = cms.string('VerticesFixed'),
        originRadius = cms.double(0.015),
        precise = cms.bool(True),
        ptMin = cms.double(0.6),
        searchOpt = cms.bool(False),
        seedingMode = cms.string('Global'),
        vertexCollection = cms.InputTag("firstStepPrimaryVertices"),
        whereToUseMeasurementTracker = cms.string('Never'),
        zErrorBeamSpot = cms.double(24.2),
        zErrorVertex = cms.double(0.03)
    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    badPixelFEDChannelCollectionLabels = cms.VInputTag("siPixelDigis"),
    createPlottingFiles = cms.untracked.bool(False),
    debug = cms.untracked.bool(False),
    ignoreSingleFPixPanelModules = cms.bool(True),
    inactivePixelDetectorLabels = cms.VInputTag("siPixelDigis"),
    layerList = cms.vstring(
        'BPix1+BPix4',
        'BPix2+BPix4',
        'BPix3+BPix4',
        'BPix1+FPix2_pos',
        'BPix1+FPix2_neg',
        'BPix1+FPix3_pos',
        'BPix1+FPix3_neg',
        'BPix2+FPix2_pos',
        'BPix2+FPix2_neg',
        'BPix3+FPix1_pos',
        'BPix3+FPix1_neg',
        'FPix1_pos+FPix2_pos',
        'FPix1_neg+FPix2_neg',
        'FPix1_pos+FPix3_pos',
        'FPix1_neg+FPix3_neg',
        'FPix2_pos+FPix3_pos',
        'FPix2_neg+FPix3_neg'
    )
)


process.pixelPairStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('pixelPairStep'),
    Fitter = cms.string('FlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("pixelPairStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.preDuplicateMergingDisplacedTracks = cms.EDProducer("TrackCollectionMerger",
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(True),
    copyTrajectories = cms.untracked.bool(False),
    enableMerging = cms.bool(True),
    foundHitBonus = cms.double(100.0),
    inputClassifiers = cms.vstring(
        'muonSeededTracksInOutClassifier',
        'muonSeededTracksOutInDisplacedClassifier'
    ),
    lostHitPenalty = cms.double(1.0),
    minQuality = cms.string('loose'),
    minShareHits = cms.uint32(2),
    shareFrac = cms.double(0.19),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    trackProducers = cms.VInputTag("muonSeededTracksInOut", "muonSeededTracksOutInDisplaced")
)


process.preshowerClusterShape = cms.EDProducer("PreshowerClusterShapeProducer",
    PreshowerClusterShapeCollectionX = cms.string('preshowerXClustersShape'),
    PreshowerClusterShapeCollectionY = cms.string('preshowerYClustersShape'),
    debugLevel = cms.string('INFO'),
    endcapSClusterProducer = cms.InputTag("multi5x5SuperClusters","multi5x5EndcapSuperClusters"),
    preshPi0Nstrip = cms.int32(5),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    preshStripEnergyCut = cms.double(0.0)
)


process.quickTrackAssociatorByHits = cms.EDProducer("QuickTrackAssociatorByHitsProducer",
    AbsoluteNumberOfHits = cms.bool(False),
    Cut_RecoToSim = cms.double(0.75),
    PixelHitWeight = cms.double(1.0),
    Purity_SimToReco = cms.double(0.75),
    Quality_SimToReco = cms.double(0.5),
    SimToRecoDenominator = cms.string('reco'),
    ThreeHitTracksAreSpecial = cms.bool(True),
    cluster2TPSrc = cms.InputTag("tpClusterProducer"),
    useClusterTPAssociation = cms.bool(True)
)


process.quickTrackAssociatorByHitsTrackerHitAssociator = cms.EDProducer("QuickTrackAssociatorByHitsProducer",
    AbsoluteNumberOfHits = cms.bool(False),
    Cut_RecoToSim = cms.double(0.75),
    PixelHitWeight = cms.double(1.0),
    Purity_SimToReco = cms.double(0.75),
    Quality_SimToReco = cms.double(0.5),
    SimToRecoDenominator = cms.string('reco'),
    ThreeHitTracksAreSpecial = cms.bool(True),
    associatePixel = cms.bool(True),
    associateStrip = cms.bool(True),
    cluster2TPSrc = cms.InputTag("tpClusterProducer"),
    pixelSimLinkSrc = cms.InputTag("simSiPixelDigis"),
    stripSimLinkSrc = cms.InputTag("simSiStripDigis"),
    useClusterTPAssociation = cms.bool(False)
)


process.randomEngineStateProducer = cms.EDProducer("RandomEngineStateProducer")


process.reducedEcalRecHitsEB = cms.EDProducer("ReducedRecHitCollectionProducer",
    interestingDetIdCollections = cms.VInputTag(
        cms.InputTag("interestingEcalDetIdEB"), cms.InputTag("interestingEcalDetIdEBU"), cms.InputTag("interestingEcalDetIdPFEB"), cms.InputTag("interestingEcalDetIdRefinedEB"), cms.InputTag("interestingEcalDetIdOOTPFEB"),
        cms.InputTag("interestingGedEleIsoDetIdEB"), cms.InputTag("interestingGedGamIsoDetIdEB"), cms.InputTag("interestingOotGamIsoDetIdEB"), cms.InputTag("interestingGamIsoDetIdEB"), cms.InputTag("muonEcalDetIds"),
        cms.InputTag("interestingTrackEcalDetIds")
    ),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    reducedHitsCollection = cms.string('')
)


process.reducedEcalRecHitsEE = cms.EDProducer("ReducedRecHitCollectionProducer",
    interestingDetIdCollections = cms.VInputTag(
        cms.InputTag("interestingEcalDetIdEE"), cms.InputTag("interestingEcalDetIdPFEE"), cms.InputTag("interestingEcalDetIdRefinedEE"), cms.InputTag("interestingEcalDetIdOOTPFEE"), cms.InputTag("interestingGedEleIsoDetIdEE"),
        cms.InputTag("interestingGedGamIsoDetIdEE"), cms.InputTag("interestingOotGamIsoDetIdEE"), cms.InputTag("interestingGamIsoDetIdEE"), cms.InputTag("muonEcalDetIds"), cms.InputTag("interestingTrackEcalDetIds")
    ),
    recHitsLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    reducedHitsCollection = cms.string('')
)


process.reducedEcalRecHitsES = cms.EDProducer("ReducedESRecHitCollectionProducer",
    EcalRecHitCollectionES = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES"),
    EndcapSuperClusterCollection = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    OutputLabel_ES = cms.string(''),
    interestingDetIds = cms.VInputTag(cms.InputTag("interestingEcalDetIdPFES"), cms.InputTag("interestingEcalDetIdRefinedES"), cms.InputTag("interestingEcalDetIdOOTPFES")),
    interestingDetIdsNotToClean = cms.VInputTag(cms.InputTag("interestingGedEgammaIsoESDetId"), cms.InputTag("interestingOotEgammaIsoESDetId")),
    scEtThreshold = cms.double(15)
)


process.reducedHcalRecHits = cms.EDProducer("HcalHitSelection",
    hbheTag = cms.InputTag("hbhereco"),
    hfTag = cms.InputTag("hfreco"),
    hoSeverityLevel = cms.int32(13),
    hoTag = cms.InputTag("horeco"),
    interestingDetIds = cms.VInputTag(cms.InputTag("interestingGedEgammaIsoHCALDetId"), cms.InputTag("interestingOotEgammaIsoHCALDetId"))
)


process.refittedStandAloneMuons = cms.EDProducer("StandAloneMuonProducer",
    InputObjects = cms.InputTag("ancientMuonSeed"),
    MuonTrajectoryBuilder = cms.string('Exhaustive'),
    STATrajBuilderParameters = cms.PSet(
        BWFilterParameters = cms.PSet(
            BWSeedType = cms.string('fromGenerator'),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            EnableCSCMeasurement = cms.bool(True),
            EnableDTMeasurement = cms.bool(True),
            EnableGEMMeasurement = cms.bool(False),
            EnableME0Measurement = cms.bool(False),
            EnableRPCMeasurement = cms.bool(True),
            FitDirection = cms.string('outsideIn'),
            GEMRecSegmentLabel = cms.InputTag("gemRecHits"),
            ME0RecSegmentLabel = cms.InputTag("me0Segments"),
            MaxChi2 = cms.double(100.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                ExcludeRPCFromFit = cms.bool(False),
                Granularity = cms.int32(0),
                MaxChi2 = cms.double(25.0),
                RescaleError = cms.bool(False),
                RescaleErrorFactor = cms.double(100.0),
                UseInvalidHits = cms.bool(True)
            ),
            NumberOfSigma = cms.double(3.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
        ),
        DoBackwardFilter = cms.bool(True),
        DoRefit = cms.bool(True),
        DoSeedRefit = cms.bool(False),
        FilterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            EnableCSCMeasurement = cms.bool(True),
            EnableDTMeasurement = cms.bool(True),
            EnableGEMMeasurement = cms.bool(False),
            EnableME0Measurement = cms.bool(False),
            EnableRPCMeasurement = cms.bool(True),
            FitDirection = cms.string('insideOut'),
            GEMRecSegmentLabel = cms.InputTag("gemRecHits"),
            ME0RecSegmentLabel = cms.InputTag("me0Segments"),
            MaxChi2 = cms.double(1000.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                ExcludeRPCFromFit = cms.bool(False),
                Granularity = cms.int32(0),
                MaxChi2 = cms.double(25.0),
                RescaleError = cms.bool(False),
                RescaleErrorFactor = cms.double(100.0),
                UseInvalidHits = cms.bool(True)
            ),
            NumberOfSigma = cms.double(3.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
        ),
        NavigationType = cms.string('Standard'),
        RefitterParameters = cms.PSet(
            FitterName = cms.string('KFFitterSmootherSTA'),
            ForceAllIterations = cms.bool(False),
            MaxFractionOfLostHits = cms.double(0.05),
            NumberOfIterations = cms.uint32(3),
            RescaleError = cms.double(100.0)
        ),
        SeedPosition = cms.string('in'),
        SeedPropagator = cms.string('SteppingHelixPropagatorAny'),
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('KFFitterSmootherSTA'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            NMinRecHits = cms.uint32(2),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RescaleError = cms.double(100.0),
            UseSubRecHits = cms.bool(False)
        )
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(False),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)


process.reglbTrackQual = cms.EDProducer("GlobalTrackQualityProducer",
    BaseLabel = cms.string('GLB'),
    GlobalMuonTrackMatcher = cms.PSet(
        Chi2Cut_1 = cms.double(50.0),
        Chi2Cut_2 = cms.double(50.0),
        Chi2Cut_3 = cms.double(200.0),
        DeltaDCut_1 = cms.double(2.5),
        DeltaDCut_2 = cms.double(10.0),
        DeltaDCut_3 = cms.double(15.0),
        DeltaRCut_1 = cms.double(0.1),
        DeltaRCut_2 = cms.double(0.2),
        DeltaRCut_3 = cms.double(1.0),
        Eta_threshold = cms.double(1.2),
        LocChi2Cut = cms.double(20.0),
        MinP = cms.double(2.5),
        MinPt = cms.double(1.0),
        Propagator = cms.string('SteppingHelixPropagatorAny'),
        Pt_threshold1 = cms.double(0.0),
        Pt_threshold2 = cms.double(999999999.0),
        Quality_1 = cms.double(20.0),
        Quality_2 = cms.double(15.0),
        Quality_3 = cms.double(7.0)
    ),
    InputCollection = cms.InputTag("reglobalMuons"),
    InputLinksCollection = cms.InputTag("reglobalMuons"),
    MaxChi2 = cms.double(100000.0),
    RefitterParameters = cms.PSet(
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        Chi2CutCSC = cms.double(1.0),
        Chi2CutDT = cms.double(30.0),
        Chi2CutGEM = cms.double(1.0),
        Chi2CutME0 = cms.double(1.0),
        Chi2CutRPC = cms.double(1.0),
        Chi2ProbabilityCut = cms.double(30.0),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        DYTselector = cms.int32(1),
        DYTthrs = cms.vint32(10, 10),
        DYTupdator = cms.bool(True),
        DYTuseAPE = cms.bool(False),
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        GEMRecHitLabel = cms.InputTag("gemRecHits"),
        HitThreshold = cms.int32(1),
        ME0RecHitLabel = cms.InputTag("me0Segments"),
        MuonHitsOption = cms.int32(1),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        PropDirForCosmics = cms.bool(False),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        PtCut = cms.double(1.0),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        RefitDirection = cms.string('insideOut'),
        RefitFlag = cms.bool(True),
        RefitRPCHits = cms.bool(True),
        SkipStation = cms.int32(-1),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        TrackerSkipSection = cms.int32(-1),
        TrackerSkipSystem = cms.int32(-1)
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    nSigma = cms.double(3.0)
)


process.reglobalMuons = cms.EDProducer("GlobalMuonProducer",
    GLBTrajBuilderParameters = cms.PSet(
        GlbRefitterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            Chi2CutCSC = cms.double(150.0),
            Chi2CutDT = cms.double(10.0),
            Chi2CutGEM = cms.double(1.0),
            Chi2CutME0 = cms.double(1.0),
            Chi2CutRPC = cms.double(1.0),
            Chi2ProbabilityCut = cms.double(30.0),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            DYTselector = cms.int32(1),
            DYTthrs = cms.vint32(20, 30),
            DYTupdator = cms.bool(False),
            DYTuseAPE = cms.bool(False),
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('GlbMuKFFitter'),
            GEMRecHitLabel = cms.InputTag("gemRecHits"),
            HitThreshold = cms.int32(1),
            ME0RecHitLabel = cms.InputTag("me0Segments"),
            MuonHitsOption = cms.int32(1),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            PropDirForCosmics = cms.bool(False),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            PtCut = cms.double(1.0),
            RefitDirection = cms.string('insideOut'),
            RefitFlag = cms.bool(True),
            RefitRPCHits = cms.bool(True),
            SkipStation = cms.int32(-1),
            TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
            TrackerSkipSection = cms.int32(-1),
            TrackerSkipSystem = cms.int32(-1)
        ),
        GlobalMuonTrackMatcher = cms.PSet(
            Chi2Cut_1 = cms.double(50.0),
            Chi2Cut_2 = cms.double(50.0),
            Chi2Cut_3 = cms.double(200.0),
            DeltaDCut_1 = cms.double(2.5),
            DeltaDCut_2 = cms.double(10.0),
            DeltaDCut_3 = cms.double(15.0),
            DeltaRCut_1 = cms.double(0.1),
            DeltaRCut_2 = cms.double(0.2),
            DeltaRCut_3 = cms.double(1.0),
            Eta_threshold = cms.double(1.2),
            LocChi2Cut = cms.double(20.0),
            MinP = cms.double(2.5),
            MinPt = cms.double(1.0),
            Propagator = cms.string('SmartPropagatorRK'),
            Pt_threshold1 = cms.double(0.0),
            Pt_threshold2 = cms.double(999999999.0),
            Quality_1 = cms.double(20.0),
            Quality_2 = cms.double(15.0),
            Quality_3 = cms.double(7.0)
        ),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        MuonTrackingRegionBuilder = cms.PSet(
            DeltaEta = cms.double(0.2),
            DeltaPhi = cms.double(0.2),
            DeltaR = cms.double(0.2),
            DeltaZ = cms.double(15.9),
            EtaR_UpperLimit_Par1 = cms.double(0.25),
            EtaR_UpperLimit_Par2 = cms.double(0.15),
            Eta_fixed = cms.bool(False),
            Eta_min = cms.double(0.1),
            MeasurementTrackerName = cms.InputTag(""),
            OnDemand = cms.int32(-1),
            PhiR_UpperLimit_Par1 = cms.double(0.6),
            PhiR_UpperLimit_Par2 = cms.double(0.2),
            Phi_fixed = cms.bool(False),
            Phi_min = cms.double(0.1),
            Pt_fixed = cms.bool(False),
            Pt_min = cms.double(1.5),
            Rescale_Dz = cms.double(3.0),
            Rescale_eta = cms.double(3.0),
            Rescale_phi = cms.double(3.0),
            UseVertex = cms.bool(False),
            Z_fixed = cms.bool(True),
            beamSpot = cms.InputTag("offlineBeamSpot"),
            input = cms.InputTag(""),
            maxRegions = cms.int32(1),
            precise = cms.bool(True),
            vertexCollection = cms.InputTag("")
        ),
        PCut = cms.double(2.5),
        PtCut = cms.double(1.0),
        RefitRPCHits = cms.bool(True),
        ScaleTECxFactor = cms.double(-1.0),
        ScaleTECyFactor = cms.double(-1.0),
        TrackTransformer = cms.PSet(
            DoPredictionsOnly = cms.bool(False),
            Fitter = cms.string('KFFitterForRefitInsideOut'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            Propagator = cms.string('SmartPropagatorAnyRK'),
            RefitDirection = cms.string('alongMomentum'),
            RefitRPCHits = cms.bool(True),
            Smoother = cms.string('KFSmootherForRefitInsideOut'),
            TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
        ),
        TrackerPropagator = cms.string('SteppingHelixPropagatorAny'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate')
    ),
    MuonCollectionLabel = cms.InputTag("standAloneMuons","UpdatedAtVtx"),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(True),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    ),
    TrackerCollectionLabel = cms.InputTag("hiGeneralAndRegitMuTracks")
)


process.remuIsoDepositCalByAssociatorTowers = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(
        'ecal',
        'hcal',
        'ho'
    ),
    inputTags = cms.VInputTag(cms.InputTag("remuons","ecal"), cms.InputTag("remuons","hcal"), cms.InputTag("remuons","ho"))
)


process.remuIsoDepositJets = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(''),
    inputTags = cms.VInputTag(cms.InputTag("remuons","jets"))
)


process.remuIsoDepositTk = cms.EDProducer("MuIsoDepositCopyProducer",
    depositNames = cms.vstring(''),
    inputTags = cms.VInputTag(cms.InputTag("remuons","tracker"))
)


process.remuonEcalDetIds = cms.EDProducer("InterestingEcalDetIdProducer",
    inputCollection = cms.InputTag("remuons")
)


process.remuonShowerInformation = cms.EDProducer("MuonShowerInformationProducer",
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    ShowerInformationFillerParameters = cms.PSet(
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        CSCSegmentLabel = cms.InputTag("cscSegments"),
        DT4DRecSegmentLabel = cms.InputTag("dt4DSegments"),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        ServiceParameters = cms.PSet(
            CSCLayers = cms.untracked.bool(True),
            GEMLayers = cms.untracked.bool(False),
            ME0Layers = cms.bool(False),
            Propagators = cms.untracked.vstring(
                'SteppingHelixPropagatorAny',
                'SteppingHelixPropagatorAlong',
                'SteppingHelixPropagatorOpposite',
                'SteppingHelixPropagatorL2Any',
                'SteppingHelixPropagatorL2Along',
                'SteppingHelixPropagatorL2Opposite',
                'SteppingHelixPropagatorAnyNoError',
                'SteppingHelixPropagatorAlongNoError',
                'SteppingHelixPropagatorOppositeNoError',
                'SteppingHelixPropagatorL2AnyNoError',
                'SteppingHelixPropagatorL2AlongNoError',
                'SteppingHelixPropagatorL2OppositeNoError',
                'PropagatorWithMaterial',
                'PropagatorWithMaterialOpposite',
                'SmartPropagator',
                'SmartPropagatorOpposite',
                'SmartPropagatorAnyOpposite',
                'SmartPropagatorAny',
                'SmartPropagatorRK',
                'SmartPropagatorAnyRK',
                'StraightLinePropagator'
            ),
            RPCLayers = cms.bool(True),
            UseMuonNavigation = cms.untracked.bool(True)
        ),
        TrackerRecHitBuilder = cms.string('WithTrackAngle')
    ),
    muonCollection = cms.InputTag("remuons"),
    trackCollection = cms.InputTag("generalTracks")
)


process.remuons = cms.EDProducer("MuonIdProducer",
    CaloExtractorPSet = cms.PSet(
        CenterConeOnCalIntersection = cms.bool(False),
        ComponentName = cms.string('CaloExtractorByAssociator'),
        DR_Max = cms.double(0.5),
        DR_Veto_E = cms.double(0.07),
        DR_Veto_H = cms.double(0.1),
        DR_Veto_HO = cms.double(0.1),
        DepositInstanceLabels = cms.vstring(
            'ecal',
            'hcal',
            'ho'
        ),
        DepositLabel = cms.untracked.string('Cal'),
        NoiseTow_EB = cms.double(0.04),
        NoiseTow_EE = cms.double(0.15),
        Noise_EB = cms.double(0.025),
        Noise_EE = cms.double(0.1),
        Noise_HB = cms.double(0.2),
        Noise_HE = cms.double(0.2),
        Noise_HO = cms.double(0.2),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold_E = cms.double(0.2),
        Threshold_H = cms.double(0.5),
        Threshold_HO = cms.double(0.5),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(1.0),
            dREcalPreselection = cms.double(1.0),
            dRHcal = cms.double(1.0),
            dRHcalPreselection = cms.double(1.0),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        ),
        UseRecHitsFlag = cms.bool(False)
    ),
    JetExtractorPSet = cms.PSet(
        ComponentName = cms.string('JetExtractor'),
        DR_Max = cms.double(1.0),
        DR_Veto = cms.double(0.1),
        ExcludeMuonVeto = cms.bool(True),
        JetCollectionLabel = cms.InputTag("iterativeConePu5CaloJets"),
        PrintTimeReport = cms.untracked.bool(False),
        PropagatorName = cms.string('SteppingHelixPropagatorAny'),
        ServiceParameters = cms.PSet(
            Propagators = cms.untracked.vstring('SteppingHelixPropagatorAny'),
            RPCLayers = cms.bool(False),
            UseMuonNavigation = cms.untracked.bool(False)
        ),
        Threshold = cms.double(5.0),
        TrackAssociatorParameters = cms.PSet(
            CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
            CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
            DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
            EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
            EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
            GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
            HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
            HORecHitCollectionLabel = cms.InputTag("horeco"),
            ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
            accountForTrajectoryChangeCalo = cms.bool(False),
            dREcal = cms.double(0.5),
            dREcalPreselection = cms.double(0.5),
            dRHcal = cms.double(0.5),
            dRHcalPreselection = cms.double(0.5),
            dRMuon = cms.double(9999.0),
            dRMuonPreselection = cms.double(0.2),
            dRPreshowerPreselection = cms.double(0.2),
            muonMaxDistanceSigmaX = cms.double(0.0),
            muonMaxDistanceSigmaY = cms.double(0.0),
            muonMaxDistanceX = cms.double(5.0),
            muonMaxDistanceY = cms.double(5.0),
            propagateAllDirections = cms.bool(True),
            trajectoryUncertaintyTolerance = cms.double(-1.0),
            truthMatch = cms.bool(False),
            useCalo = cms.bool(True),
            useEcal = cms.bool(False),
            useGEM = cms.bool(False),
            useHO = cms.bool(False),
            useHcal = cms.bool(False),
            useME0 = cms.bool(False),
            useMuon = cms.bool(False),
            usePreshower = cms.bool(False)
        )
    ),
    MuonCaloCompatibility = cms.PSet(
        MuonTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_muons_lowPt_3_1_norm.root'),
        PionTemplateFileName = cms.FileInPath('RecoMuon/MuonIdentification/data/MuID_templates_pions_lowPt_3_1_norm.root'),
        allSiPMHO = cms.bool(False),
        delta_eta = cms.double(0.02),
        delta_phi = cms.double(0.02)
    ),
    TimingFillerParameters = cms.PSet(
        CSCTimingParameters = cms.PSet(
            CSCStripError = cms.double(7.0),
            CSCStripTimeOffset = cms.double(0.0),
            CSCWireError = cms.double(8.6),
            CSCWireTimeOffset = cms.double(0.0),
            PruneCut = cms.double(9.0),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseStripTime = cms.bool(True),
            UseWireTime = cms.bool(True),
            debug = cms.bool(False)
        ),
        DTTimingParameters = cms.PSet(
            DTTimeOffset = cms.double(0.0),
            DoWireCorr = cms.bool(True),
            DropTheta = cms.bool(True),
            HitError = cms.double(2.8),
            HitsMin = cms.int32(3),
            PruneCut = cms.double(5.0),
            RequireBothProjections = cms.bool(False),
            ServiceParameters = cms.PSet(
                Propagators = cms.untracked.vstring(
                    'SteppingHelixPropagatorAny',
                    'PropagatorWithMaterial',
                    'PropagatorWithMaterialOpposite'
                ),
                RPCLayers = cms.bool(True)
            ),
            UseSegmentT0 = cms.bool(False),
            debug = cms.bool(False)
        ),
        EcalEnergyCut = cms.double(0.4),
        ErrorEB = cms.double(2.085),
        ErrorEE = cms.double(6.95),
        MatchParameters = cms.PSet(
            CSCsegments = cms.InputTag("cscSegments"),
            DTradius = cms.double(0.01),
            DTsegments = cms.InputTag("dt4DSegments"),
            RPChits = cms.InputTag("rpcRecHits"),
            TightMatchCSC = cms.bool(True),
            TightMatchDT = cms.bool(False)
        ),
        UseCSC = cms.bool(True),
        UseDT = cms.bool(True),
        UseECAL = cms.bool(False)
    ),
    TrackAssociatorParameters = cms.PSet(
        CSCSegmentCollectionLabel = cms.InputTag("cscSegments"),
        CaloTowerCollectionLabel = cms.InputTag("towerMaker"),
        DTRecSegment4DCollectionLabel = cms.InputTag("dt4DSegments"),
        EBRecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
        EERecHitCollectionLabel = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
        GEMSegmentCollectionLabel = cms.InputTag("gemSegments"),
        HBHERecHitCollectionLabel = cms.InputTag("hbhereco"),
        HORecHitCollectionLabel = cms.InputTag("horeco"),
        ME0SegmentCollectionLabel = cms.InputTag("me0Segments"),
        accountForTrajectoryChangeCalo = cms.bool(False),
        dREcal = cms.double(9999.0),
        dREcalPreselection = cms.double(0.05),
        dRHcal = cms.double(9999.0),
        dRHcalPreselection = cms.double(0.2),
        dRMuon = cms.double(9999.0),
        dRMuonPreselection = cms.double(0.2),
        dRPreshowerPreselection = cms.double(0.2),
        muonMaxDistanceSigmaX = cms.double(0.0),
        muonMaxDistanceSigmaY = cms.double(0.0),
        muonMaxDistanceX = cms.double(5.0),
        muonMaxDistanceY = cms.double(5.0),
        propagateAllDirections = cms.bool(True),
        trajectoryUncertaintyTolerance = cms.double(-1.0),
        truthMatch = cms.bool(False),
        useCalo = cms.bool(False),
        useEcal = cms.bool(True),
        useGEM = cms.bool(False),
        useHO = cms.bool(True),
        useHcal = cms.bool(True),
        useME0 = cms.bool(False),
        useMuon = cms.bool(True),
        usePreshower = cms.bool(False)
    ),
    TrackExtractorPSet = cms.PSet(
        BeamSpotLabel = cms.InputTag("offlineBeamSpot"),
        BeamlineOption = cms.string('BeamSpotFromEvent'),
        Chi2Ndof_Max = cms.double(1e+64),
        Chi2Prob_Min = cms.double(-1.0),
        ComponentName = cms.string('TrackExtractor'),
        DR_Max = cms.double(0.5),
        DR_Veto = cms.double(0.01),
        DepositLabel = cms.untracked.string(''),
        Diff_r = cms.double(0.1),
        Diff_z = cms.double(0.2),
        NHits_Min = cms.uint32(0),
        Pt_Min = cms.double(-1.0),
        inputTrackCollection = cms.InputTag("hiGeneralAndRegitMuTracks")
    ),
    TrackerKinkFinderParameters = cms.PSet(
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
        RefitDirection = cms.string('alongMomentum'),
        RefitRPCHits = cms.bool(True),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        diagonalOnly = cms.bool(False),
        usePosition = cms.bool(True)
    ),
    addExtraSoftMuons = cms.bool(False),
    arbitrateTrackerMuons = cms.bool(True),
    arbitrationCleanerOptions = cms.PSet(
        ClusterDPhi = cms.double(0.6),
        ClusterDTheta = cms.double(0.02),
        Clustering = cms.bool(True),
        ME1a = cms.bool(True),
        Overlap = cms.bool(True),
        OverlapDPhi = cms.double(0.0786),
        OverlapDTheta = cms.double(0.02)
    ),
    debugWithTruthMatching = cms.bool(False),
    ecalDepositName = cms.string('ecal'),
    fillCaloCompatibility = cms.bool(True),
    fillEnergy = cms.bool(True),
    fillGlobalTrackQuality = cms.bool(True),
    fillGlobalTrackRefits = cms.bool(True),
    fillIsolation = cms.bool(True),
    fillMatching = cms.bool(True),
    fillTrackerKink = cms.bool(True),
    globalTrackQualityInputTag = cms.InputTag("reglbTrackQual"),
    hcalDepositName = cms.string('hcal'),
    hoDepositName = cms.string('ho'),
    inputCollectionLabels = cms.VInputTag(
        "hiGeneralAndRegitMuTracks", "reglobalMuons", "standAloneMuons:UpdatedAtVtx", "retevMuons:firstHit", "retevMuons:picky",
        "retevMuons:dyt"
    ),
    inputCollectionTypes = cms.vstring(
        'inner tracks',
        'links',
        'outer tracks',
        'tev firstHit',
        'tev picky',
        'tev dyt'
    ),
    jetDepositName = cms.string('jets'),
    maxAbsDx = cms.double(3.0),
    maxAbsDy = cms.double(9999.0),
    maxAbsEta = cms.double(3.0),
    maxAbsPullX = cms.double(3.0),
    maxAbsPullY = cms.double(9999.0),
    minCaloCompatibility = cms.double(0.6),
    minNumberOfMatches = cms.int32(1),
    minP = cms.double(2.5),
    minPCaloMuon = cms.double(1000000000.0),
    minPt = cms.double(0.8),
    ptThresholdToFillCandidateP4WithGlobalFit = cms.double(200.0),
    runArbitrationCleaner = cms.bool(True),
    sigmaThresholdToFillCandidateP4WithGlobalFit = cms.double(2.0),
    trackDepositName = cms.string('tracker'),
    writeIsoDeposits = cms.bool(True)
)


process.retevMuons = cms.EDProducer("TevMuonProducer",
    MuonCollectionLabel = cms.InputTag("reglobalMuons"),
    RefitIndex = cms.vint32(1, 2, 3, 4),
    Refits = cms.vstring(
        'default',
        'firstHit',
        'picky',
        'dyt'
    ),
    RefitterParameters = cms.PSet(
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        Chi2CutCSC = cms.double(1.0),
        Chi2CutDT = cms.double(30.0),
        Chi2CutGEM = cms.double(1.0),
        Chi2CutME0 = cms.double(1.0),
        Chi2CutRPC = cms.double(1.0),
        Chi2ProbabilityCut = cms.double(30.0),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        DYTselector = cms.int32(1),
        DYTthrs = cms.vint32(10, 10),
        DYTupdator = cms.bool(True),
        DYTuseAPE = cms.bool(False),
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        GEMRecHitLabel = cms.InputTag("gemRecHits"),
        HitThreshold = cms.int32(1),
        ME0RecHitLabel = cms.InputTag("me0Segments"),
        MuonHitsOption = cms.int32(1),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        PropDirForCosmics = cms.bool(False),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        PtCut = cms.double(1.0),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        RefitDirection = cms.string('insideOut'),
        RefitFlag = cms.bool(True),
        RefitRPCHits = cms.bool(True),
        SkipStation = cms.int32(-1),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        TrackerSkipSection = cms.int32(-1),
        TrackerSkipSystem = cms.int32(-1)
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(True),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)


process.rpcRecHits = cms.EDProducer("RPCRecHitProducer",
    deadSource = cms.string('File'),
    deadvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCDeadVec.dat'),
    maskSource = cms.string('File'),
    maskvecfile = cms.FileInPath('RecoLocalMuon/RPCRecHit/data/RPCMaskVec.dat'),
    recAlgo = cms.string('RPCRecHitStandardAlgo'),
    recAlgoConfig = cms.PSet(

    ),
    rpcDigiLabel = cms.InputTag("muonRPCDigis")
)


process.scalersRawToDigi = cms.EDProducer("ScalersRawToDigi",
    scalersInputTag = cms.InputTag("rawDataRepacker")
)


process.seedingLayersEDProducer = cms.EDProducer("SeedingLayersEDProducer",
    BPix = cms.PSet(

    ),
    FPix = cms.PSet(

    ),
    MTEC = cms.PSet(

    ),
    MTIB = cms.PSet(

    ),
    MTID = cms.PSet(

    ),
    MTOB = cms.PSet(

    ),
    TEC = cms.PSet(

    ),
    TIB = cms.PSet(

    ),
    TID = cms.PSet(

    ),
    TOB = cms.PSet(

    ),
    layerList = cms.vstring()
)


process.selectDigi = cms.EDProducer("EcalDigiSelector",
    EcalEBDigiTag = cms.InputTag("ecalDigis","ebDigis"),
    EcalEBRecHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    EcalEEDigiTag = cms.InputTag("ecalDigis","eeDigis"),
    EcalEERecHitTag = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    barrelSuperClusterProducer = cms.InputTag("uncleanedHybridSuperClusters"),
    cluster_pt_thresh = cms.double(10.0),
    endcapSuperClusterProducer = cms.InputTag("correctedMulti5x5SuperClustersWithPreshower"),
    nclus_sel = cms.int32(2),
    selectedEcalEBDigiCollection = cms.string('selectedEcalEBDigiCollection'),
    selectedEcalEEDigiCollection = cms.string('selectedEcalEEDigiCollection'),
    single_cluster_thresh = cms.double(15.0)
)


process.siPixelClusterShapeCache = cms.EDProducer("SiPixelClusterShapeCacheProducer",
    onDemand = cms.bool(False),
    src = cms.InputTag("siPixelClusters")
)


process.siPixelClusterShapeCachePreSplitting = cms.EDProducer("SiPixelClusterShapeCacheProducer",
    onDemand = cms.bool(False),
    src = cms.InputTag("siPixelClustersPreSplitting")
)


process.siPixelClusters = cms.EDProducer("JetCoreClusterSplitter",
    centralMIPCharge = cms.double(26000),
    chargeFractionMin = cms.double(2.0),
    chargePerUnit = cms.double(2000),
    cores = cms.InputTag("hiJetsForCoreTrackingPreSplitting"),
    deltaRmax = cms.double(0.1),
    forceXError = cms.double(100),
    forceYError = cms.double(150),
    fractionalWidth = cms.double(0.4),
    pixelCPE = cms.string('PixelCPEGeneric'),
    pixelClusters = cms.InputTag("siPixelClustersPreSplitting"),
    ptMin = cms.double(100),
    verbose = cms.bool(False),
    vertices = cms.InputTag("hiSelectedVertexPreSplitting")
)


process.siPixelClustersPreSplitting = cms.EDProducer("SiPixelClusterProducer",
    ChannelThreshold = cms.int32(1000),
    ClusterThreshold = cms.int32(4000),
    ClusterThreshold_L1 = cms.int32(4000),
    MissCalibrate = cms.untracked.bool(True),
    SeedThreshold = cms.int32(1000),
    SplitClusters = cms.bool(False),
    VCaltoElectronGain = cms.int32(65),
    VCaltoElectronGain_L1 = cms.int32(65),
    VCaltoElectronOffset = cms.int32(-414),
    VCaltoElectronOffset_L1 = cms.int32(-414),
    maxNumberOfClusters = cms.int32(-1),
    payloadType = cms.string('Offline'),
    src = cms.InputTag("siPixelDigis")
)


process.siPixelDigis = cms.EDProducer("SiPixelRawToDigi",
    CablingMapLabel = cms.string(''),
    ErrorList = cms.vint32(29),
    IncludeErrors = cms.bool(True),
    InputLabel = cms.InputTag("rawDataRepacker"),
    Regions = cms.PSet(

    ),
    Timing = cms.untracked.bool(False),
    UsePhase1 = cms.bool(False),
    UsePilotBlade = cms.bool(False),
    UseQualityInfo = cms.bool(False),
    UserErrorList = cms.vint32(40)
)


process.siPixelRecHits = cms.EDProducer("SiPixelRecHitConverter",
    CPE = cms.string('PixelCPEGeneric'),
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("siPixelClusters")
)


process.siPixelRecHitsPreSplitting = cms.EDProducer("SiPixelRecHitConverter",
    CPE = cms.string('PixelCPEGeneric'),
    VerboseLevel = cms.untracked.int32(0),
    src = cms.InputTag("siPixelClustersPreSplitting")
)


process.siStripClusters = cms.EDProducer("SiStripClusterizer",
    Clusterizer = cms.PSet(
        Algorithm = cms.string('ThreeThresholdAlgorithm'),
        ChannelThreshold = cms.double(2.0),
        ClusterThreshold = cms.double(5.0),
        MaxAdjacentBad = cms.uint32(0),
        MaxSequentialBad = cms.uint32(1),
        MaxSequentialHoles = cms.uint32(0),
        QualityLabel = cms.string(''),
        RemoveApvShots = cms.bool(True),
        SeedThreshold = cms.double(3.0),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutNone')
        )
    ),
    DigiProducersList = cms.VInputTag(cms.InputTag("siStripDigis","ZeroSuppressed"), cms.InputTag("siStripZeroSuppression","VirginRaw"), cms.InputTag("siStripZeroSuppression","ProcessedRaw"), cms.InputTag("siStripZeroSuppression","ScopeMode"))
)


process.siStripDigis = cms.EDProducer("SiStripRawToDigiModule",
    AppendedBytes = cms.int32(0),
    DoAPVEmulatorCheck = cms.bool(False),
    DoAllCorruptBufferChecks = cms.bool(False),
    ErrorThreshold = cms.uint32(7174),
    LegacyUnpacker = cms.bool(False),
    MarkModulesOnMissingFeds = cms.bool(True),
    ProductLabel = cms.InputTag("rawDataRepacker"),
    TriggerFedId = cms.int32(0),
    UnpackBadChannels = cms.bool(False),
    UnpackCommonModeValues = cms.bool(False),
    UseDaqRegister = cms.bool(False),
    UseFedKey = cms.bool(False)
)


process.siStripMatchedRecHits = cms.EDProducer("SiStripRecHitConverter",
    ClusterProducer = cms.InputTag("siStripClusters"),
    MaskBadAPVFibers = cms.bool(False),
    Matcher = cms.ESInputTag("SiStripRecHitMatcherESProducer","StandardMatcher"),
    StripCPE = cms.ESInputTag("StripCPEfromTrackAngleESProducer","StripCPEfromTrackAngle"),
    VerbosityLevel = cms.untracked.int32(1),
    matchedRecHits = cms.string('matchedRecHit'),
    rphiRecHits = cms.string('rphiRecHit'),
    siStripQualityLabel = cms.ESInputTag(""),
    stereoRecHits = cms.string('stereoRecHit'),
    useSiStripQuality = cms.bool(False)
)


process.siStripZeroSuppression = cms.EDProducer("SiStripZeroSuppression",
    Algorithms = cms.PSet(
        APVInspectMode = cms.string('BaselineFollower'),
        APVRestoreMode = cms.string('BaselineFollower'),
        ApplyBaselineCleaner = cms.bool(True),
        ApplyBaselineRejection = cms.bool(True),
        CleaningSequence = cms.uint32(1),
        CommonModeNoiseSubtractionMode = cms.string('IteratedMedian'),
        CutToAvoidSignal = cms.double(2.0),
        DeltaCMThreshold = cms.uint32(20),
        Deviation = cms.uint32(25),
        ForceNoRestore = cms.bool(False),
        Fraction = cms.double(0.2),
        Iterations = cms.int32(3),
        MeanCM = cms.int32(0),
        PedestalSubtractionFedMode = cms.bool(False),
        SiStripFedZeroSuppressionMode = cms.uint32(4),
        TruncateInSuppressor = cms.bool(True),
        Use10bitsTruncation = cms.bool(False),
        consecThreshold = cms.uint32(5),
        discontinuityThreshold = cms.int32(12),
        distortionThreshold = cms.uint32(20),
        doAPVRestore = cms.bool(True),
        filteredBaselineDerivativeSumSquare = cms.double(30),
        filteredBaselineMax = cms.double(6),
        hitStripThreshold = cms.uint32(40),
        lastGradient = cms.int32(10),
        minStripsToFit = cms.uint32(4),
        nSaturatedStrip = cms.uint32(2),
        nSigmaNoiseDerTh = cms.uint32(4),
        nSmooth = cms.uint32(9),
        restoreThreshold = cms.double(0.5),
        sizeWindow = cms.int32(1),
        slopeX = cms.int32(3),
        slopeY = cms.int32(4),
        useCMMeanMap = cms.bool(False),
        useRealMeanCM = cms.bool(False),
        widthCluster = cms.int32(64)
    ),
    RawDigiProducersList = cms.VInputTag(cms.InputTag("siStripDigis","VirginRaw"), cms.InputTag("siStripDigis","ProcessedRaw"), cms.InputTag("siStripDigis","ScopeMode")),
    fixCM = cms.bool(False),
    produceBaselinePoints = cms.bool(False),
    produceCalculatedBaseline = cms.bool(False),
    produceHybridFormat = cms.bool(False),
    produceRawDigis = cms.bool(True),
    storeCM = cms.bool(True),
    storeInZScollBadAPV = cms.bool(True)
)


process.simEcalTriggerPrimitiveDigis = cms.EDProducer("EcalTrigPrimProducer",
    BarrelOnly = cms.bool(False),
    Debug = cms.bool(False),
    Famos = cms.bool(False),
    InstanceEB = cms.string(''),
    InstanceEE = cms.string(''),
    Label = cms.string('simEcalUnsuppressedDigis'),
    TcpOutput = cms.bool(False),
    binOfMaximum = cms.int32(6)
)


process.simPFProducer = cms.EDProducer("SimPFProducer",
    associators = cms.VInputTag(cms.InputTag("quickTrackAssociatorByHits")),
    caloParticlesSrc = cms.InputTag("mix","MergedCaloTruth"),
    gsfTrackSrc = cms.InputTag("electronGsfTracks"),
    muonSrc = cms.InputTag("muons1stStep"),
    neutralEMThreshold = cms.double(0.25),
    neutralHADThreshold = cms.double(0.25),
    pfRecTrackSrc = cms.InputTag("hgcalTrackCollection","TracksInHGCal"),
    simClusterTruthSrc = cms.InputTag("mix","MergedCaloTruth"),
    simClustersSrc = cms.InputTag("particleFlowClusterHGCal"),
    superClusterThreshold = cms.double(4.0),
    trackSrc = cms.InputTag("generalTracks"),
    trackingParticleSrc = cms.InputTag("mix","MergedTrackTruth")
)


process.standAloneMuons = cms.EDProducer("StandAloneMuonProducer",
    InputObjects = cms.InputTag("ancientMuonSeed"),
    MuonTrajectoryBuilder = cms.string('Exhaustive'),
    STATrajBuilderParameters = cms.PSet(
        BWFilterParameters = cms.PSet(
            BWSeedType = cms.string('fromGenerator'),
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            EnableCSCMeasurement = cms.bool(True),
            EnableDTMeasurement = cms.bool(True),
            EnableGEMMeasurement = cms.bool(False),
            EnableME0Measurement = cms.bool(False),
            EnableRPCMeasurement = cms.bool(True),
            FitDirection = cms.string('outsideIn'),
            GEMRecSegmentLabel = cms.InputTag("gemRecHits"),
            ME0RecSegmentLabel = cms.InputTag("me0Segments"),
            MaxChi2 = cms.double(100.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                ExcludeRPCFromFit = cms.bool(False),
                Granularity = cms.int32(0),
                MaxChi2 = cms.double(25.0),
                RescaleError = cms.bool(False),
                RescaleErrorFactor = cms.double(100.0),
                UseInvalidHits = cms.bool(True)
            ),
            NumberOfSigma = cms.double(3.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
        ),
        DoBackwardFilter = cms.bool(True),
        DoRefit = cms.bool(False),
        DoSeedRefit = cms.bool(False),
        FilterParameters = cms.PSet(
            CSCRecSegmentLabel = cms.InputTag("cscSegments"),
            DTRecSegmentLabel = cms.InputTag("dt4DSegments"),
            EnableCSCMeasurement = cms.bool(True),
            EnableDTMeasurement = cms.bool(True),
            EnableGEMMeasurement = cms.bool(False),
            EnableME0Measurement = cms.bool(False),
            EnableRPCMeasurement = cms.bool(True),
            FitDirection = cms.string('insideOut'),
            GEMRecSegmentLabel = cms.InputTag("gemRecHits"),
            ME0RecSegmentLabel = cms.InputTag("me0Segments"),
            MaxChi2 = cms.double(1000.0),
            MuonTrajectoryUpdatorParameters = cms.PSet(
                ExcludeRPCFromFit = cms.bool(False),
                Granularity = cms.int32(0),
                MaxChi2 = cms.double(25.0),
                RescaleError = cms.bool(False),
                RescaleErrorFactor = cms.double(100.0),
                UseInvalidHits = cms.bool(True)
            ),
            NumberOfSigma = cms.double(3.0),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RPCRecSegmentLabel = cms.InputTag("rpcRecHits")
        ),
        NavigationType = cms.string('Standard'),
        RefitterParameters = cms.PSet(
            FitterName = cms.string('KFFitterSmootherSTA'),
            ForceAllIterations = cms.bool(False),
            MaxFractionOfLostHits = cms.double(0.05),
            NumberOfIterations = cms.uint32(3),
            RescaleError = cms.double(100.0)
        ),
        SeedPosition = cms.string('in'),
        SeedPropagator = cms.string('SteppingHelixPropagatorAny'),
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('KFFitterSmootherSTA'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            NMinRecHits = cms.uint32(2),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RescaleError = cms.double(100.0),
            UseSubRecHits = cms.bool(False)
        )
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(False),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)


process.standAloneSETMuons = cms.EDProducer("StandAloneMuonProducer",
    InputObjects = cms.InputTag("SETMuonSeed"),
    MuonTrajectoryBuilder = cms.string('DirectMuonTrajectoryBuilder'),
    STATrajBuilderParameters = cms.PSet(
        SeedTransformerParameters = cms.PSet(
            Fitter = cms.string('KFFitterSmootherSTA'),
            MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
            NMinRecHits = cms.uint32(2),
            Propagator = cms.string('SteppingHelixPropagatorAny'),
            RescaleError = cms.double(1.0),
            UseSubRecHits = cms.bool(False)
        )
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(False),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(True),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)


process.tauRegionalPixelSeedGenerator = cms.EDProducer("SeedGeneratorFromRegionHitsEDProducer",
    OrderedHitsFactoryPSet = cms.PSet(
        ComponentName = cms.string('StandardHitPairGenerator'),
        SeedingLayers = cms.InputTag("PixelLayerPairs")
    ),
    RegionFactoryPSet = cms.PSet(
        ComponentName = cms.string('TauRegionalPixelSeedGenerator'),
        RegionPSet = cms.PSet(
            JetSrc = cms.InputTag("iterativeConePu5CaloJets"),
            deltaEtaRegion = cms.double(0.1),
            deltaPhiRegion = cms.double(0.1),
            howToUseMeasurementTracker = cms.string('ForSiStrips'),
            measurementTrackerName = cms.InputTag("MeasurementTrackerEvent"),
            originHalfLength = cms.double(0.2),
            originRadius = cms.double(0.2),
            originZPos = cms.double(0.0),
            precise = cms.bool(True),
            ptMin = cms.double(5.0),
            vertexSrc = cms.InputTag("hiSelectedPixelVertex")
        )
    ),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('none')
    ),
    TTRHBuilder = cms.string('WithTrackAngle')
)


process.tcdsDigis = cms.EDProducer("TcdsRawToDigi",
    InputLabel = cms.InputTag("rawDataRepacker")
)


process.tcdsRawToDigi = cms.EDProducer("TcdsRawToDigi",
    InputLabel = cms.InputTag("rawDataCollector")
)


process.tevMuons = cms.EDProducer("TevMuonProducer",
    MuonCollectionLabel = cms.InputTag("globalMuons"),
    RefitIndex = cms.vint32(1, 2, 3, 4),
    Refits = cms.vstring(
        'default',
        'firstHit',
        'picky',
        'dyt'
    ),
    RefitterParameters = cms.PSet(
        CSCRecSegmentLabel = cms.InputTag("csc2DRecHits"),
        Chi2CutCSC = cms.double(1.0),
        Chi2CutDT = cms.double(30.0),
        Chi2CutGEM = cms.double(1.0),
        Chi2CutME0 = cms.double(1.0),
        Chi2CutRPC = cms.double(1.0),
        Chi2ProbabilityCut = cms.double(30.0),
        DTRecSegmentLabel = cms.InputTag("dt1DRecHits"),
        DYTselector = cms.int32(1),
        DYTthrs = cms.vint32(10, 10),
        DYTupdator = cms.bool(True),
        DYTuseAPE = cms.bool(False),
        DoPredictionsOnly = cms.bool(False),
        Fitter = cms.string('KFFitterForRefitInsideOut'),
        GEMRecHitLabel = cms.InputTag("gemRecHits"),
        HitThreshold = cms.int32(1),
        ME0RecHitLabel = cms.InputTag("me0Segments"),
        MuonHitsOption = cms.int32(1),
        MuonRecHitBuilder = cms.string('MuonRecHitBuilder'),
        PropDirForCosmics = cms.bool(False),
        Propagator = cms.string('SmartPropagatorAnyRK'),
        PtCut = cms.double(1.0),
        RPCRecSegmentLabel = cms.InputTag("rpcRecHits"),
        RefitDirection = cms.string('insideOut'),
        RefitFlag = cms.bool(True),
        RefitRPCHits = cms.bool(True),
        SkipStation = cms.int32(-1),
        Smoother = cms.string('KFSmootherForRefitInsideOut'),
        TrackerRecHitBuilder = cms.string('WithAngleAndTemplate'),
        TrackerSkipSection = cms.int32(-1),
        TrackerSkipSystem = cms.int32(-1)
    ),
    ServiceParameters = cms.PSet(
        CSCLayers = cms.untracked.bool(True),
        GEMLayers = cms.untracked.bool(False),
        ME0Layers = cms.bool(False),
        Propagators = cms.untracked.vstring(
            'SteppingHelixPropagatorAny',
            'SteppingHelixPropagatorAlong',
            'SteppingHelixPropagatorOpposite',
            'SteppingHelixPropagatorL2Any',
            'SteppingHelixPropagatorL2Along',
            'SteppingHelixPropagatorL2Opposite',
            'SteppingHelixPropagatorAnyNoError',
            'SteppingHelixPropagatorAlongNoError',
            'SteppingHelixPropagatorOppositeNoError',
            'SteppingHelixPropagatorL2AnyNoError',
            'SteppingHelixPropagatorL2AlongNoError',
            'SteppingHelixPropagatorL2OppositeNoError',
            'PropagatorWithMaterial',
            'PropagatorWithMaterialOpposite',
            'SmartPropagator',
            'SmartPropagatorOpposite',
            'SmartPropagatorAnyOpposite',
            'SmartPropagatorAny',
            'SmartPropagatorRK',
            'SmartPropagatorAnyRK',
            'StraightLinePropagator'
        ),
        RPCLayers = cms.bool(True),
        UseMuonNavigation = cms.untracked.bool(True)
    ),
    TrackLoaderParameters = cms.PSet(
        DoSmoothing = cms.bool(True),
        MuonUpdatorAtVertexParameters = cms.PSet(
            BeamSpotPositionErrors = cms.vdouble(0.1, 0.1, 5.3),
            MaxChi2 = cms.double(1000000.0),
            Propagator = cms.string('SteppingHelixPropagatorOpposite')
        ),
        Smoother = cms.string('KFSmootherForMuonTrackLoader'),
        TTRHBuilder = cms.string('WithAngleAndTemplate'),
        VertexConstraint = cms.bool(False),
        beamSpot = cms.InputTag("offlineBeamSpot")
    )
)


process.tobTecStep = cms.EDProducer("ClassifierMerger",
    inputClassifiers = cms.vstring(
        'tobTecStepClassifier1',
        'tobTecStepClassifier2'
    )
)


process.tobTecStepClassifier1 = cms.EDProducer("TrackMVAClassifierDetached",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter6_13TeV')
    ),
    qualityCuts = cms.vdouble(-0.6, -0.45, -0.3),
    src = cms.InputTag("tobTecStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.tobTecStepClassifier2 = cms.EDProducer("TrackMVAClassifierPrompt",
    beamspot = cms.InputTag("offlineBeamSpot"),
    ignoreVertices = cms.bool(False),
    mva = cms.PSet(
        GBRForestFileName = cms.string(''),
        GBRForestLabel = cms.string('MVASelectorIter0_13TeV')
    ),
    qualityCuts = cms.vdouble(0.0, 0.0, 0.0),
    src = cms.InputTag("tobTecStepTracks"),
    vertices = cms.InputTag("firstStepPrimaryVertices")
)


process.tobTecStepClusters = cms.EDProducer("TrackClusterRemover",
    TrackQuality = cms.string('highPurity'),
    maxChi2 = cms.double(9.0),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    oldClusterRemovalInfo = cms.InputTag("pixelLessStepClusters"),
    overrideTrkQuals = cms.InputTag(""),
    pixelClusters = cms.InputTag("siPixelClusters"),
    stripClusters = cms.InputTag("siStripClusters"),
    trackClassifier = cms.InputTag("pixelLessStep","QualityMasks"),
    trajectories = cms.InputTag("pixelLessStepTracks")
)


process.tobTecStepHitDoubletsPair = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(1000000),
    produceIntermediateHitDoublets = cms.bool(False),
    produceSeedingHitSets = cms.bool(True),
    seedingLayers = cms.InputTag("tobTecStepSeedLayersPair"),
    trackingRegions = cms.InputTag("hiTobTecStepTrackingRegionsPair"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.tobTecStepHitDoubletsTripl = cms.EDProducer("HitPairEDProducer",
    clusterCheck = cms.InputTag(""),
    layerPairs = cms.vuint32(0),
    maxElement = cms.uint32(0),
    produceIntermediateHitDoublets = cms.bool(True),
    produceSeedingHitSets = cms.bool(False),
    seedingLayers = cms.InputTag("tobTecStepSeedLayersTripl"),
    trackingRegions = cms.InputTag("hiTobTecStepTrackingRegionsTripl"),
    trackingRegionsSeedingLayers = cms.InputTag("")
)


process.tobTecStepHitTripletsTripl = cms.EDProducer("MultiHitFromChi2EDProducer",
    ClusterShapeHitFilterName = cms.string('ClusterShapeHitFilter'),
    TTRHBuilder = cms.string('WithTrackAngle'),
    chi2VsPtCut = cms.bool(True),
    chi2_cuts = cms.vdouble(3, 4, 5, 5),
    detIdsToDebug = cms.vint32(0, 0, 0),
    doublets = cms.InputTag("tobTecStepHitDoubletsTripl"),
    extraHitRPhitolerance = cms.double(0),
    extraHitRZtolerance = cms.double(0),
    extraPhiKDBox = cms.double(0.01),
    extraRKDBox = cms.double(0.2),
    extraZKDBox = cms.double(0.2),
    fnSigmaRZ = cms.double(2),
    maxChi2 = cms.double(5),
    maxElement = cms.uint32(1000000),
    mightGet = cms.untracked.vstring('IntermediateHitDoublets_tobTecStepHitDoubletsTripl__reRECO'),
    phiPreFiltering = cms.double(0.3),
    pt_interv = cms.vdouble(0.4, 0.7, 1, 2),
    refitHits = cms.bool(True),
    useFixedPreFiltering = cms.bool(False)
)


process.tobTecStepMasks = cms.EDProducer("FastTrackerRecHitMaskProducer",
    TrackQuality = cms.string('highPurity'),
    minNumberOfLayersWithMeasBeforeFiltering = cms.int32(0),
    minNumberOfLayersWithMeasBeforeFiltering_ = cms.int32(0),
    oldHitRemovalInfo = cms.InputTag("pixelLessStepMasks"),
    recHits = cms.InputTag("fastTrackerRecHits"),
    trackClassifier = cms.InputTag("pixelLessStep","QualityMasks"),
    trackQuality = cms.string('hightPurity'),
    trajectories = cms.InputTag("pixelLessStepTracks")
)


process.tobTecStepSeedLayers = cms.EDProducer("SeedingLayersEDProducer",
    TEC = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTiny')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        maxRing = cms.int32(5),
        minRing = cms.int32(5),
        skipClusters = cms.InputTag("tobTecStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    TOB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTiny')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        skipClusters = cms.InputTag("tobTecStepClusters")
    ),
    layerList = cms.vstring(
        'TOB1+TOB2',
        'TOB1+TEC1_pos',
        'TOB1+TEC1_neg',
        'TEC1_pos+TEC2_pos',
        'TEC2_pos+TEC3_pos',
        'TEC3_pos+TEC4_pos',
        'TEC4_pos+TEC5_pos',
        'TEC5_pos+TEC6_pos',
        'TEC6_pos+TEC7_pos',
        'TEC1_neg+TEC2_neg',
        'TEC2_neg+TEC3_neg',
        'TEC3_neg+TEC4_neg',
        'TEC4_neg+TEC5_neg',
        'TEC5_neg+TEC6_neg',
        'TEC6_neg+TEC7_neg'
    )
)


process.tobTecStepSeedLayersPair = cms.EDProducer("SeedingLayersEDProducer",
    TEC = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        maxRing = cms.int32(5),
        minRing = cms.int32(5),
        skipClusters = cms.InputTag("hiTobTecStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    TOB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        skipClusters = cms.InputTag("hiTobTecStepClusters")
    ),
    layerList = cms.vstring(
        'TOB1+TEC1_pos',
        'TOB1+TEC1_neg',
        'TEC1_pos+TEC2_pos',
        'TEC1_neg+TEC2_neg',
        'TEC2_pos+TEC3_pos',
        'TEC2_neg+TEC3_neg',
        'TEC3_pos+TEC4_pos',
        'TEC3_neg+TEC4_neg',
        'TEC4_pos+TEC5_pos',
        'TEC4_neg+TEC5_neg',
        'TEC5_pos+TEC6_pos',
        'TEC5_neg+TEC6_neg',
        'TEC6_pos+TEC7_pos',
        'TEC6_neg+TEC7_neg'
    )
)


process.tobTecStepSeedLayersTripl = cms.EDProducer("SeedingLayersEDProducer",
    MTEC = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        maxRing = cms.int32(7),
        minRing = cms.int32(6),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
        skipClusters = cms.InputTag("hiTobTecStepClusters"),
        useRingSlector = cms.bool(True)
    ),
    MTOB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        rphiRecHits = cms.InputTag("siStripMatchedRecHits","rphiRecHit"),
        skipClusters = cms.InputTag("hiTobTecStepClusters")
    ),
    TOB = cms.PSet(
        TTRHBuilder = cms.string('WithTrackAngle'),
        clusterChargeCut = cms.PSet(
            refToPSet_ = cms.string('SiStripClusterChargeCutTight')
        ),
        matchedRecHits = cms.InputTag("siStripMatchedRecHits","matchedRecHit"),
        skipClusters = cms.InputTag("hiTobTecStepClusters")
    ),
    layerList = cms.vstring(
        'TOB1+TOB2+MTOB3',
        'TOB1+TOB2+MTOB4',
        'TOB1+TOB2+MTEC1_pos',
        'TOB1+TOB2+MTEC1_neg'
    )
)


process.tobTecStepSeeds = cms.EDProducer("SeedCombiner",
    seedCollections = cms.VInputTag(cms.InputTag("tobTecStepSeedsTripl"), cms.InputTag("tobTecStepSeedsPair"))
)


process.tobTecStepSeedsPair = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('CombinedSeedComparitor'),
        comparitors = cms.VPSet(
            cms.PSet(
                ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
                ClusterShapeHitFilterName = cms.string('tobTecStepClusterShapeHitFilter'),
                ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
                FilterAtHelixStage = cms.bool(True),
                FilterPixelHits = cms.bool(False),
                FilterStripHits = cms.bool(True)
            ),
            cms.PSet(
                ComponentName = cms.string('StripSubClusterShapeSeedFilter'),
                FilterAtHelixStage = cms.bool(False),
                label = cms.untracked.string('Seeds'),
                maxNSat = cms.uint32(3),
                maxTrimmedSizeDiffNeg = cms.double(1.0),
                maxTrimmedSizeDiffPos = cms.double(0.7),
                seedCutMIPs = cms.double(0.35),
                seedCutSN = cms.double(7.0),
                subclusterCutMIPs = cms.double(0.45),
                subclusterCutSN = cms.double(12.0),
                subclusterWindow = cms.double(0.7),
                trimMaxADC = cms.double(30.0),
                trimMaxFracNeigh = cms.double(0.25),
                trimMaxFracTotal = cms.double(0.15)
            )
        ),
        mode = cms.string('and')
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring('RegionsSeedingHitSets_tobTecStepHitDoubletsPair__reRECO'),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("tobTecStepHitDoubletsPair")
)


process.tobTecStepSeedsTripl = cms.EDProducer("SeedCreatorFromRegionConsecutiveHitsEDProducer",
    MinOneOverPtError = cms.double(1),
    OriginTransverseErrorMultiplier = cms.double(1),
    SeedComparitorPSet = cms.PSet(
        ComponentName = cms.string('CombinedSeedComparitor'),
        comparitors = cms.VPSet(
            cms.PSet(
                ClusterShapeCacheSrc = cms.InputTag("siPixelClusterShapeCache"),
                ClusterShapeHitFilterName = cms.string('tobTecStepClusterShapeHitFilter'),
                ComponentName = cms.string('PixelClusterShapeSeedComparitor'),
                FilterAtHelixStage = cms.bool(True),
                FilterPixelHits = cms.bool(False),
                FilterStripHits = cms.bool(True)
            ),
            cms.PSet(
                ComponentName = cms.string('StripSubClusterShapeSeedFilter'),
                FilterAtHelixStage = cms.bool(False),
                label = cms.untracked.string('Seeds'),
                maxNSat = cms.uint32(3),
                maxTrimmedSizeDiffNeg = cms.double(1.0),
                maxTrimmedSizeDiffPos = cms.double(0.7),
                seedCutMIPs = cms.double(0.35),
                seedCutSN = cms.double(7.0),
                subclusterCutMIPs = cms.double(0.45),
                subclusterCutSN = cms.double(12.0),
                subclusterWindow = cms.double(0.7),
                trimMaxADC = cms.double(30.0),
                trimMaxFracNeigh = cms.double(0.25),
                trimMaxFracTotal = cms.double(0.15)
            )
        ),
        mode = cms.string('and')
    ),
    SeedMomentumForBOFF = cms.double(5),
    TTRHBuilder = cms.string('WithTrackAngle'),
    forceKinematicWithRegionDirection = cms.bool(False),
    magneticField = cms.string('ParabolicMf'),
    mightGet = cms.untracked.vstring(
        'RegionsSeedingHitSets_tobTecStepHitTripletsTripl__reRECO',
        'BaseTrackerRecHitsOwned_tobTecStepHitTripletsTripl__reRECO'
    ),
    propagator = cms.string('PropagatorWithMaterialParabolicMf'),
    seedingHitSets = cms.InputTag("tobTecStepHitTripletsTripl")
)


process.tobTecStepTrackCandidates = cms.EDProducer("CkfTrackCandidateMaker",
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    RedundantSeedCleaner = cms.string('CachingSeedCleanerBySharedInput'),
    SimpleMagneticField = cms.string(''),
    TrajectoryBuilder = cms.string('GroupedCkfTrajectoryBuilder'),
    TrajectoryBuilderPSet = cms.PSet(
        refToPSet_ = cms.string('tobTecStepTrajectoryBuilder')
    ),
    TrajectoryCleaner = cms.string('tobTecStepTrajectoryCleanerBySharedHits'),
    TransientInitialStateEstimatorParameters = cms.PSet(
        numberMeasurementsForFit = cms.int32(4),
        propagatorAlongTISE = cms.string('PropagatorWithMaterial'),
        propagatorOppositeTISE = cms.string('PropagatorWithMaterialOpposite')
    ),
    cleanTrajectoryAfterInOut = cms.bool(True),
    clustersToSkip = cms.InputTag("hiTobTecStepClusters"),
    doSeedingRegionRebuilding = cms.bool(True),
    maxNSeeds = cms.uint32(500000),
    maxSeedsBeforeCleaning = cms.uint32(5000),
    numHitsForSeedCleaner = cms.int32(50),
    onlyPixelHitsForSeedCleaner = cms.bool(True),
    reverseTrajectories = cms.bool(False),
    src = cms.InputTag("tobTecStepSeeds"),
    useHitsSplitting = cms.bool(True)
)


process.tobTecStepTrackingRegionsPair = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(0),
        originHalfLength = cms.double(30.0),
        originRadius = cms.double(6.0),
        precise = cms.bool(True),
        ptMin = cms.double(0.6),
        useMultipleScattering = cms.bool(False)
    )
)


process.tobTecStepTrackingRegionsTripl = cms.EDProducer("GlobalTrackingRegionFromBeamSpotEDProducer",
    RegionPSet = cms.PSet(
        beamSpot = cms.InputTag("offlineBeamSpot"),
        nSigmaZ = cms.double(0),
        originHalfLength = cms.double(20.0),
        originRadius = cms.double(3.5),
        precise = cms.bool(True),
        ptMin = cms.double(0.55),
        useMultipleScattering = cms.bool(False)
    )
)


process.tobTecStepTracks = cms.EDProducer("TrackProducer",
    AlgorithmName = cms.string('tobTecStep'),
    Fitter = cms.string('tobTecFlexibleKFFittingSmoother'),
    GeometricInnerState = cms.bool(False),
    MeasurementTracker = cms.string(''),
    MeasurementTrackerEvent = cms.InputTag("MeasurementTrackerEvent"),
    NavigationSchool = cms.string('SimpleNavigationSchool'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    SimpleMagneticField = cms.string(''),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    TrajectoryInEvent = cms.bool(False),
    alias = cms.untracked.string('ctfWithMaterialTracks'),
    beamSpot = cms.InputTag("offlineBeamSpot"),
    clusterRemovalInfo = cms.InputTag(""),
    src = cms.InputTag("tobTecStepTrackCandidates"),
    useHitsSplitting = cms.bool(False),
    useSimpleMF = cms.bool(False)
)


process.totemRPRawToDigi = cms.EDProducer("TotemVFATRawToDigi",
    RawToDigi = cms.PSet(
        BC_fraction = cms.untracked.double(0.6),
        BC_min = cms.untracked.uint32(10),
        EC_fraction = cms.untracked.double(0.6),
        EC_min = cms.untracked.uint32(10),
        printErrorSummary = cms.untracked.uint32(0),
        printUnknownFrameSummary = cms.untracked.uint32(0),
        testBCMostFrequent = cms.uint32(2),
        testCRC = cms.uint32(2),
        testECMostFrequent = cms.uint32(2),
        testFootprint = cms.uint32(2),
        testID = cms.uint32(2),
        verbosity = cms.untracked.uint32(0)
    ),
    RawUnpacking = cms.PSet(
        verbosity = cms.untracked.uint32(0)
    ),
    fedIds = cms.vuint32(),
    rawDataTag = cms.InputTag("rawDataCollector"),
    subSystem = cms.string('TrackingStrip')
)


process.totemTimingRawToDigi = cms.EDProducer("TotemVFATRawToDigi",
    RawToDigi = cms.PSet(
        printErrorSummary = cms.untracked.uint32(0),
        printUnknownFrameSummary = cms.untracked.uint32(0),
        testBCMostFrequent = cms.uint32(0),
        testCRC = cms.uint32(0),
        testECMostFrequent = cms.uint32(0),
        testFootprint = cms.uint32(0),
        testID = cms.uint32(0),
        verbosity = cms.untracked.uint32(0)
    ),
    RawUnpacking = cms.PSet(
        verbosity = cms.untracked.uint32(0)
    ),
    fedIds = cms.vuint32(),
    rawDataTag = cms.InputTag("rawDataCollector"),
    subSystem = cms.string('TotemTiming')
)


process.totemTriggerRawToDigi = cms.EDProducer("TotemTriggerRawToDigi",
    fedId = cms.uint32(0),
    rawDataTag = cms.InputTag("rawDataCollector")
)


process.towerMaker = cms.EDProducer("CaloTowersCreator",
    AllowMissingInputs = cms.bool(False),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBSumThreshold = cms.double(0.2),
    EBThreshold = cms.double(0.07),
    EBWeight = cms.double(1.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EESumThreshold = cms.double(0.45),
    EEThreshold = cms.double(0.3),
    EEWeight = cms.double(1.0),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring(
        'kTime',
        'kWeird',
        'kBad'
    ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    EcutTower = cms.double(-1000.0),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HBThreshold = cms.double(0.7),
    HBThreshold1 = cms.double(0.7),
    HBThreshold2 = cms.double(0.7),
    HBWeight = cms.double(1.0),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDThreshold = cms.double(0.8),
    HEDThreshold1 = cms.double(0.8),
    HEDWeight = cms.double(1.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HESThreshold = cms.double(0.8),
    HESThreshold1 = cms.double(0.8),
    HESWeight = cms.double(1.0),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Threshold = cms.double(0.5),
    HF1Weight = cms.double(1.0),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF2Threshold = cms.double(0.85),
    HF2Weight = cms.double(1.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HOThreshold0 = cms.double(1.1),
    HOThresholdMinus1 = cms.double(3.5),
    HOThresholdMinus2 = cms.double(3.5),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HOWeight = cms.double(1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HcalPhase = cms.int32(0),
    HcalThreshold = cms.double(-1000.0),
    MomConstrMethod = cms.int32(1),
    MomEBDepth = cms.double(0.3),
    MomEEDepth = cms.double(0.0),
    MomHBDepth = cms.double(0.2),
    MomHEDepth = cms.double(0.4),
    UseEcalRecoveredHits = cms.bool(False),
    UseEtEBTreshold = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    UseHO = cms.bool(False),
    UseHcalRecoveredHits = cms.bool(True),
    UseRejectedHitsOnly = cms.bool(False),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    UseSymEBTreshold = cms.bool(True),
    UseSymEETreshold = cms.bool(True),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    hbheInput = cms.InputTag("hbhereco"),
    hfInput = cms.InputTag("hfreco"),
    hoInput = cms.InputTag("horeco"),
    missingHcalRescaleFactorForEcal = cms.double(0)
)


process.towerMakerWithHO = cms.EDProducer("CaloTowersCreator",
    AllowMissingInputs = cms.bool(False),
    EBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EBSumThreshold = cms.double(0.2),
    EBThreshold = cms.double(0.07),
    EBWeight = cms.double(1.0),
    EBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EEGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    EESumThreshold = cms.double(0.45),
    EEThreshold = cms.double(0.3),
    EEWeight = cms.double(1.0),
    EEWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    EcalRecHitSeveritiesToBeExcluded = cms.vstring(
        'kTime',
        'kWeird',
        'kBad'
    ),
    EcalSeveritiesToBeUsedInBadTowers = cms.vstring(),
    EcutTower = cms.double(-1000.0),
    HBGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HBThreshold = cms.double(0.7),
    HBThreshold1 = cms.double(0.7),
    HBThreshold2 = cms.double(0.7),
    HBWeight = cms.double(1.0),
    HBWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HEDGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HEDThreshold = cms.double(0.8),
    HEDThreshold1 = cms.double(0.8),
    HEDWeight = cms.double(1.0),
    HEDWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HESGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HESThreshold = cms.double(0.8),
    HESThreshold1 = cms.double(0.8),
    HESWeight = cms.double(1.0),
    HESWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF1Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF1Threshold = cms.double(0.5),
    HF1Weight = cms.double(1.0),
    HF1Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HF2Grid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HF2Threshold = cms.double(0.85),
    HF2Weight = cms.double(1.0),
    HF2Weights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HOGrid = cms.vdouble(-1.0, 1.0, 10.0, 100.0, 1000.0),
    HOThreshold0 = cms.double(1.1),
    HOThresholdMinus1 = cms.double(3.5),
    HOThresholdMinus2 = cms.double(3.5),
    HOThresholdPlus1 = cms.double(3.5),
    HOThresholdPlus2 = cms.double(3.5),
    HOWeight = cms.double(1.0),
    HOWeights = cms.vdouble(1.0, 1.0, 1.0, 1.0, 1.0),
    HcalAcceptSeverityLevel = cms.uint32(9),
    HcalAcceptSeverityLevelForRejectedHit = cms.uint32(9999),
    HcalPhase = cms.int32(0),
    HcalThreshold = cms.double(-1000.0),
    MomConstrMethod = cms.int32(1),
    MomEBDepth = cms.double(0.3),
    MomEEDepth = cms.double(0.0),
    MomHBDepth = cms.double(0.2),
    MomHEDepth = cms.double(0.4),
    UseEcalRecoveredHits = cms.bool(False),
    UseEtEBTreshold = cms.bool(False),
    UseEtEETreshold = cms.bool(False),
    UseHO = cms.bool(True),
    UseHcalRecoveredHits = cms.bool(True),
    UseRejectedHitsOnly = cms.bool(False),
    UseRejectedRecoveredEcalHits = cms.bool(False),
    UseRejectedRecoveredHcalHits = cms.bool(True),
    UseSymEBTreshold = cms.bool(True),
    UseSymEETreshold = cms.bool(True),
    ecalInputs = cms.VInputTag(cms.InputTag("ecalRecHit","EcalRecHitsEB"), cms.InputTag("ecalRecHit","EcalRecHitsEE")),
    hbheInput = cms.InputTag("hbhereco"),
    hfInput = cms.InputTag("hfreco"),
    hoInput = cms.InputTag("horeco"),
    missingHcalRescaleFactorForEcal = cms.double(0)
)


process.tpClusterProducer = cms.EDProducer("ClusterTPAssociationProducer",
    phase2OTClusterSrc = cms.InputTag("siPhase2Clusters"),
    phase2OTSimLinkSrc = cms.InputTag("simSiPixelDigis","Tracker"),
    pixelClusterSrc = cms.InputTag("siPixelClusters"),
    pixelSimLinkSrc = cms.InputTag("simSiPixelDigis"),
    simTrackSrc = cms.InputTag("g4SimHits"),
    stripClusterSrc = cms.InputTag("siStripClusters"),
    stripSimLinkSrc = cms.InputTag("simSiStripDigis"),
    trackingParticleSrc = cms.InputTag("mix","MergedTrackTruth")
)


process.trackExtrapolator = cms.EDProducer("TrackExtrapolator",
    trackQuality = cms.string('goodIterative'),
    trackSrc = cms.InputTag("hiGeneralTracks")
)


process.trackListMerger = cms.EDProducer("TrackListMerger",
    Epsilon = cms.double(-0.001),
    FoundHitBonus = cms.double(5.0),
    LostHitPenalty = cms.double(5.0),
    MaxNormalizedChisq = cms.double(1000.0),
    MinFound = cms.int32(3),
    MinPT = cms.double(0.05),
    ShareFrac = cms.double(0.19),
    TrackProducers = cms.VInputTag(cms.InputTag(""), cms.InputTag("")),
    allowFirstHitShare = cms.bool(True),
    copyExtras = cms.untracked.bool(False),
    copyMVA = cms.bool(True),
    hasSelector = cms.vint32(0, 0),
    indivShareFrac = cms.vdouble(1.0, 1.0),
    newQuality = cms.string('confirmed'),
    selectedTrackQuals = cms.VInputTag(cms.InputTag(""), cms.InputTag("")),
    setsToMerge = cms.VPSet(
        cms.PSet(
            pQual = cms.bool(False),
            tLists = cms.vint32(0, 1)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(2, 3, 4, 5)
        ),
        cms.PSet(
            pQual = cms.bool(True),
            tLists = cms.vint32(
                0, 1, 2, 3, 4,
                5
            )
        )
    ),
    trackAlgoPriorityOrder = cms.string('trackAlgoPriorityOrder'),
    writeOnlyTrkQuals = cms.bool(False)
)


process.trackRefsForJets = cms.EDProducer("ChargedRefCandidateProducer",
    particleType = cms.string('pi+'),
    src = cms.InputTag("trackWithVertexRefSelector")
)


process.trackTimeValueMapProducer = cms.EDProducer("TrackTimeValueMapProducer",
    associators = cms.VInputTag(cms.InputTag("quickTrackAssociatorByHits")),
    etaMax = cms.double(3.0),
    etaMaxForPtThreshold = cms.double(1.5),
    etaMin = cms.double(-1.0),
    pMin = cms.double(0.7),
    pileupSummaryInfo = cms.InputTag("addPileupInfo"),
    ptMin = cms.double(0.7),
    resolutionModels = cms.VPSet(
        cms.PSet(
            modelName = cms.string('ConfigurableFlatResolutionModel'),
            resolutionInNs = cms.double(0.03)
        ),
        cms.PSet(
            modelName = cms.string('PerfectResolutionModel')
        )
    ),
    trackSrc = cms.InputTag("generalTracks"),
    trackingParticleSrc = cms.InputTag("mix","MergedTrackTruth"),
    trackingVertexSrc = cms.InputTag("mix","MergedTrackTruth")
)


process.trackerDrivenElectronSeeds = cms.EDProducer("GoodSeedProducer",
    ApplyIsolation = cms.bool(False),
    ClusterThreshold = cms.double(0.5),
    EOverPLead_minValue = cms.double(0.95),
    EcalStripSumE_deltaEta = cms.double(0.03),
    EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
    EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
    EcalStripSumE_minClusEnergy = cms.double(0.1),
    EtaMap = cms.string('RecoParticleFlow/PFBlockProducer/data/resmap_ECAL_eta.dat'),
    Fitter = cms.string('GsfTrajectoryFitter_forPreId'),
    HOverPLead_maxValue = cms.double(0.05),
    HcalWindow = cms.double(0.184),
    MaxEOverP = cms.double(3.0),
    MaxEta = cms.double(2.4),
    MaxPt = cms.double(50.0),
    MinEOverP = cms.double(0.3),
    MinPt = cms.double(2.0),
    Min_dr = cms.double(0.2),
    NHitsInSeed = cms.int32(3),
    PFEcalClusterLabel = cms.InputTag("particleFlowClusterECAL"),
    PFHcalClusterLabel = cms.InputTag("particleFlowClusterHCAL"),
    PFPSClusterLabel = cms.InputTag("particleFlowClusterPS"),
    PSThresholdFile = cms.string('RecoParticleFlow/PFTracking/data/PSThreshold.dat'),
    PhiMap = cms.string('RecoParticleFlow/PFBlockProducer/data/resmap_ECAL_phi.dat'),
    PreCkfLabel = cms.string('SeedsForCkf'),
    PreGsfLabel = cms.string('SeedsForGsf'),
    PreIdLabel = cms.string('preid'),
    ProducePreId = cms.untracked.bool(True),
    PtThresholdSavePreId = cms.untracked.double(1.0),
    Smoother = cms.string('GsfTrajectorySmoother_forPreId'),
    TMVAMethod = cms.string('BDT'),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    ThresholdFile = cms.string('RecoParticleFlow/PFTracking/data/Threshold.dat'),
    TkColList = cms.VInputTag(cms.InputTag("generalTracks")),
    TrackQuality = cms.string('highPurity'),
    UsePreShower = cms.bool(False),
    UseQuality = cms.bool(True),
    UseTMVA = cms.untracked.bool(True),
    Weights1 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat1.xml'),
    Weights2 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat2.xml'),
    Weights3 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat3.xml'),
    Weights4 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat4.xml'),
    Weights5 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat5.xml'),
    Weights6 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat6.xml'),
    Weights7 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat7.xml'),
    Weights8 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat8.xml'),
    Weights9 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat9.xml')
)


process.trackerDrivenElectronSeedsTmp = cms.EDProducer("GoodSeedProducer",
    ApplyIsolation = cms.bool(False),
    ClusterThreshold = cms.double(0.5),
    EOverPLead_minValue = cms.double(0.95),
    EcalStripSumE_deltaEta = cms.double(0.03),
    EcalStripSumE_deltaPhiOverQ_maxValue = cms.double(0.5),
    EcalStripSumE_deltaPhiOverQ_minValue = cms.double(-0.1),
    EcalStripSumE_minClusEnergy = cms.double(0.1),
    EtaMap = cms.string('RecoParticleFlow/PFBlockProducer/data/resmap_ECAL_eta.dat'),
    Fitter = cms.string('GsfTrajectoryFitter_forPreId'),
    HOverPLead_maxValue = cms.double(0.05),
    HcalWindow = cms.double(0.184),
    MaxEOverP = cms.double(3.0),
    MaxEta = cms.double(2.4),
    MaxPt = cms.double(50.0),
    MinEOverP = cms.double(0.3),
    MinPt = cms.double(2.0),
    Min_dr = cms.double(0.2),
    NHitsInSeed = cms.int32(3),
    PFEcalClusterLabel = cms.InputTag("particleFlowClusterECAL"),
    PFHcalClusterLabel = cms.InputTag("particleFlowClusterHCAL"),
    PFPSClusterLabel = cms.InputTag("particleFlowClusterPS"),
    PSThresholdFile = cms.string('RecoParticleFlow/PFTracking/data/PSThreshold.dat'),
    PhiMap = cms.string('RecoParticleFlow/PFBlockProducer/data/resmap_ECAL_phi.dat'),
    PreCkfLabel = cms.string('SeedsForCkf'),
    PreGsfLabel = cms.string('SeedsForGsf'),
    PreIdLabel = cms.string('preid'),
    ProducePreId = cms.untracked.bool(True),
    PtThresholdSavePreId = cms.untracked.double(1.0),
    Smoother = cms.string('GsfTrajectorySmoother_forPreId'),
    TMVAMethod = cms.string('BDT'),
    TTRHBuilder = cms.string('WithAngleAndTemplate'),
    ThresholdFile = cms.string('RecoParticleFlow/PFTracking/data/Threshold.dat'),
    TkColList = cms.VInputTag(cms.InputTag("generalTracksBeforeMixing")),
    TrackQuality = cms.string('highPurity'),
    UsePreShower = cms.bool(False),
    UseQuality = cms.bool(True),
    UseTMVA = cms.untracked.bool(True),
    Weights1 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat1.xml'),
    Weights2 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat2.xml'),
    Weights3 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat3.xml'),
    Weights4 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat4.xml'),
    Weights5 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat5.xml'),
    Weights6 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat6.xml'),
    Weights7 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat7.xml'),
    Weights8 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat8.xml'),
    Weights9 = cms.string('RecoParticleFlow/PFTracking/data/MVA_BDTTrackDrivenSeed_cat9.xml')
)


process.uncleanedHybridSuperClusters = cms.EDProducer("HybridClusterProducer",
    HybridBarrelSeedThr = cms.double(1.0),
    RecHitFlagToBeExcluded = cms.vstring(
        'kFaultyHardware',
        'kTowerRecovered',
        'kDead'
    ),
    RecHitSeverityToBeExcluded = cms.vstring(),
    basicclusterCollection = cms.string('hybridBarrelBasicClusters'),
    clustershapecollection = cms.string(''),
    dynamicEThresh = cms.bool(False),
    dynamicPhiRoad = cms.bool(False),
    eThreshA = cms.double(0.003),
    eThreshB = cms.double(0.1),
    eseed = cms.double(0.35),
    ethresh = cms.double(0.1),
    ewing = cms.double(0.0),
    excludeFlagged = cms.bool(False),
    posCalcParameters = cms.PSet(
        LogWeighted = cms.bool(True),
        T0_barl = cms.double(7.4),
        T0_endc = cms.double(3.1),
        T0_endcPresh = cms.double(1.2),
        W0 = cms.double(4.2),
        X0 = cms.double(0.89)
    ),
    recHitsCollection = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    shapeAssociation = cms.string('hybridShapeAssoc'),
    step = cms.int32(17),
    superclusterCollection = cms.string(''),
    useEtForXi = cms.bool(True),
    xi = cms.double(0.0)
)


process.uncleanedOnlyCorrectedHybridSuperClusters = cms.EDProducer("EgammaSCCorrectionMaker",
    applyCrackCorrection = cms.bool(True),
    applyEnergyCorrection = cms.bool(True),
    applyLocalContCorrection = cms.bool(True),
    corectedSuperClusterCollection = cms.string(''),
    crackCorrectorName = cms.string('EcalClusterCrackCorrection'),
    energyCorrectorName = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    etThresh = cms.double(0.0),
    hyb_fCorrPset = cms.PSet(
        brLinearHighThr = cms.double(8.0),
        brLinearLowThr = cms.double(1.1),
        fBremVec = cms.vdouble(-0.04382, 0.1169, 0.9267, -0.0009413, 1.419),
        fEtEtaVec = cms.vdouble(
            0, 1.00121, -0.63672, 0, 0,
            0, 0.5655, 6.457, 0.5081, 8.0,
            1.023, -0.00181
        )
    ),
    localContCorrectorName = cms.string('EcalBasicClusterLocalContCorrection'),
    modeEB = cms.int32(0),
    modeEE = cms.int32(0),
    rawSuperClusterProducer = cms.InputTag("hybridSuperClusters","uncleanOnlyHybridSuperClusters"),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEB"),
    sigmaElectronicNoise = cms.double(0.03),
    superClusterAlgo = cms.string('Hybrid')
)


process.uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower = cms.EDProducer("EgammaSCCorrectionMaker",
    VerbosityLevel = cms.string('ERROR'),
    applyCrackCorrection = cms.bool(True),
    applyEnergyCorrection = cms.bool(True),
    applyLocalContCorrection = cms.bool(False),
    corectedSuperClusterCollection = cms.string(''),
    crackCorrectorName = cms.string('EcalClusterCrackCorrection'),
    energyCorrectorName = cms.string('EcalClusterEnergyCorrectionObjectSpecific'),
    etThresh = cms.double(0.0),
    fix_fCorrPset = cms.PSet(
        brLinearHighThr = cms.double(6.0),
        brLinearLowThr = cms.double(0.9),
        fBremVec = cms.vdouble(-0.05228, 0.08738, 0.9508, 0.002677, 1.221),
        fEtEtaVec = cms.vdouble(
            1, -0.4386, -32.38, 0.6372, 15.67,
            -0.0928, -2.462, 1.138, 20.93
        )
    ),
    localContCorrectorName = cms.string('EcalBasicClusterLocalContCorrection'),
    modeEB = cms.int32(0),
    modeEE = cms.int32(0),
    rawSuperClusterProducer = cms.InputTag("uncleanedOnlyMulti5x5SuperClustersWithPreshower"),
    recHitProducer = cms.InputTag("ecalRecHit","EcalRecHitsEE"),
    sigmaElectronicNoise = cms.double(0.15),
    superClusterAlgo = cms.string('Multi5x5')
)


process.uncleanedOnlyMulti5x5SuperClustersWithPreshower = cms.EDProducer("PreshowerPhiClusterProducer",
    assocSClusterCollection = cms.string(''),
    endcapSClusterProducer = cms.InputTag("multi5x5SuperClusters","uncleanOnlyMulti5x5EndcapSuperClusters"),
    esPhiClusterDeltaEta = cms.double(0.15),
    esPhiClusterDeltaPhi = cms.double(0.12),
    esStripEnergyCut = cms.double(0.0),
    etThresh = cms.double(0.0),
    preshClusterCollectionX = cms.string('preshowerXClusters'),
    preshClusterCollectionY = cms.string('preshowerYClusters'),
    preshRecHitProducer = cms.InputTag("ecalPreshowerRecHit","EcalRecHitsES")
)


process.zdcreco = cms.EDProducer("ZdcHitReconstructor",
    AuxTSvec = cms.vint32(4, 5, 6, 7),
    Subdetector = cms.string('ZDC'),
    correctForPhaseContainment = cms.bool(False),
    correctForTimeslew = cms.bool(False),
    correctTiming = cms.bool(True),
    correctionPhaseNS = cms.double(0.0),
    digiLabelQIE10ZDC = cms.InputTag("hcalDigis","ZDC"),
    digiLabelcastor = cms.InputTag("castorDigis"),
    digiLabelhcal = cms.InputTag("hcalDigis"),
    dropZSmarkedPassed = cms.bool(True),
    lowGainFrac = cms.double(8.15),
    lowGainOffset = cms.int32(1),
    recoMethod = cms.int32(2),
    saturationParameters = cms.PSet(
        maxADCvalue = cms.int32(127)
    ),
    setHSCPFlags = cms.bool(True),
    setNoiseFlags = cms.bool(True),
    setSaturationFlags = cms.bool(True),
    setTimingTrustFlags = cms.bool(False)
)


process.akPu4CaloJetsSelected = cms.EDFilter("LargestEtCaloJetSelector",
    filter = cms.bool(False),
    maxNumber = cms.uint32(4),
    src = cms.InputTag("akPu4CaloJetsCorrected")
)


process.electronsWithPresel = cms.EDFilter("GsfElectronSelector",
    cut = cms.string('pt > 5 && ecalDrivenSeed && passingCutBasedPreselection'),
    src = cms.InputTag("ecalDrivenGsfElectrons")
)


process.goodOfflinePrimaryVertices = cms.EDFilter("VertexSelector",
    cut = cms.string('!isFake && ndof >= 4.0 && abs(z) <= 24.0 && abs(position.Rho) <= 2.0'),
    filter = cms.bool(False),
    src = cms.InputTag("offlinePrimaryVertices")
)


process.hiAkPu4CaloJetsSelectedPreSplitting = cms.EDFilter("LargestEtCaloJetSelector",
    filter = cms.bool(False),
    maxNumber = cms.uint32(4),
    src = cms.InputTag("hiAkPu4CaloJetsCorrectedPreSplitting")
)


process.hiBestAdaptiveVertex = cms.EDFilter("HIBestVertexSelection",
    maxNumber = cms.uint32(1),
    src = cms.InputTag("hiPixelAdaptiveVertex")
)


process.hiBestAdaptiveVertexPreSplitting = cms.EDFilter("HIBestVertexSelection",
    maxNumber = cms.uint32(1),
    src = cms.InputTag("hiPixelAdaptiveVertexPreSplitting")
)


process.hiBestOfflinePrimaryVertex = cms.EDFilter("HIBestVertexSelection",
    maxNumber = cms.uint32(1),
    src = cms.InputTag("hiOfflinePrimaryVertices")
)


process.hiFirstStepGoodPrimaryVertices = cms.EDFilter("PrimaryVertexObjectFilter",
    filterParams = cms.PSet(
        maxRho = cms.double(2.0),
        maxZ = cms.double(15.0),
        minNdof = cms.double(25.0)
    ),
    src = cms.InputTag("hiSelectedPixelVertex")
)


process.hiJetsForCoreTracking = cms.EDFilter("CandPtrSelector",
    cut = cms.string('pt > 100 && abs(eta) < 2.4'),
    src = cms.InputTag("akPu4CaloJetsSelected")
)


process.hiJetsForCoreTrackingPreSplitting = cms.EDFilter("CandPtrSelector",
    cut = cms.string('pt > 30 && abs(eta) < 2.5'),
    src = cms.InputTag("hiAkPu4CaloJetsSelectedPreSplitting")
)


process.hiSelectedProtoTracks = cms.EDFilter("HIProtoTrackSelection",
    VertexCollection = cms.InputTag("hiPixelMedianVertex"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    maxD0Significance = cms.double(5.0),
    minZCut = cms.double(0.2),
    nSigmaZ = cms.double(5.0),
    ptMin = cms.double(0.0),
    src = cms.InputTag("hiPixel3ProtoTracks")
)


process.hiSelectedProtoTracksPreSplitting = cms.EDFilter("HIProtoTrackSelection",
    VertexCollection = cms.InputTag("hiPixelMedianVertexPreSplitting"),
    beamSpotLabel = cms.InputTag("offlineBeamSpot"),
    maxD0Significance = cms.double(5.0),
    minZCut = cms.double(0.2),
    nSigmaZ = cms.double(5.0),
    ptMin = cms.double(0.0),
    src = cms.InputTag("hiPixel3ProtoTracksPreSplitting")
)


process.pfAllChargedHadrons = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212
    ),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllChargedParticles = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212, 11, -11, 13,
        -13
    ),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllElectrons = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(11, -11),
    src = cms.InputTag("pfNoMuon")
)


process.pfAllMuons = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(-13, 13),
    src = cms.InputTag("pfNoPileUp")
)


process.pfAllNeutralHadrons = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllNeutralHadronsAndPhotons = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(22, 111, 130, 310, 2112),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfAllPhotons = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(22),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfNoPileUpCandidates = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212, 22, 111, 130,
        310, 2112
    ),
    src = cms.InputTag("pfNoPileUpIso")
)


process.pfPileUpAllChargedParticles = cms.EDFilter("PFCandidateFwdPtrCollectionPdgIdFilter",
    makeClones = cms.bool(True),
    pdgId = cms.vint32(
        211, -211, 321, -321, 999211,
        2212, -2212, 11, -11, 13,
        -13
    ),
    src = cms.InputTag("pfPileUpIso")
)


process.pfSelectedElectrons = cms.EDFilter("GenericPFCandidateSelector",
    cut = cms.string('abs(pdgId())==11'),
    src = cms.InputTag("particleFlowTmp")
)


process.pfSelectedPhotons = cms.EDFilter("GenericPFCandidateSelector",
    cut = cms.string('pdgId()==22 && mva_nothing_gamma>0'),
    src = cms.InputTag("particleFlowTmp")
)


process.MEtoMEComparitor = cms.EDAnalyzer("MEtoMEComparitor",
    Diffgoodness = cms.double(0.1),
    KSgoodness = cms.double(0.9),
    MEtoEDMLabel = cms.string('MEtoEDMConverter'),
    OverAllgoodness = cms.double(0.9),
    autoProcess = cms.bool(True),
    dirDepth = cms.uint32(1),
    lumiInstance = cms.string('MEtoEDMConverterLumi'),
    processNew = cms.string('RERECO'),
    processRef = cms.string('HLT'),
    runInstance = cms.string('MEtoEDMConverterRun')
)


process.RECOoutput = cms.OutputModule("PoolOutputModule",
    dataset = cms.untracked.PSet(
        dataTier = cms.untracked.string('RECO'),
        filterName = cms.untracked.string('')
    ),
    fileName = cms.untracked.string('step4_RAW2DIGI_L1Reco_RECO_RF.root'),
    outputCommands = cms.untracked.vstring( (
        'drop *',
        'keep DetIdedmEDCollection_siStripDigis_*_*',
        'keep DetIdedmEDCollection_siPixelDigis_*_*',
        'keep PixelFEDChanneledmNewDetSetVector_siPixelDigis_*_*',
        'keep *_siPixelClusters_*_*',
        'keep *_siStripClusters_*_*',
        'keep ClusterSummary_clusterSummaryProducer_*_*',
        'keep *_dt1DRecHits_*_*',
        'keep *_dt4DSegments_*_*',
        'keep *_dt1DCosmicRecHits_*_*',
        'keep *_dt4DCosmicSegments_*_*',
        'keep *_csc2DRecHits_*_*',
        'keep *_cscSegments_*_*',
        'keep *_rpcRecHits_*_*',
        'keep *_hbhereco_*_*',
        'keep *_hbheprereco_*_*',
        'keep *_hfprereco_*_*',
        'keep *_hfreco_*_*',
        'keep *_horeco_*_*',
        'keep HBHERecHitsSorted_hbherecoMB_*_*',
        'keep HORecHitsSorted_horecoMB_*_*',
        'keep HFRecHitsSorted_hfrecoMB_*_*',
        'keep ZDCDataFramesSorted_hcalDigis_*_*',
        'keep ZDCDataFramesSorted_castorDigis_*_*',
        'keep QIE10DataFrameHcalDataFrameContainer_hcalDigis_ZDC_*',
        'keep ZDCRecHitsSorted_zdcreco_*_*',
        'keep *_reducedHcalRecHits_*_*',
        'keep *_castorreco_*_*',
        'keep HcalUnpackerReport_castorDigis_*_*',
        'keep HcalUnpackerReport_hcalDigiAlCaMB_*_*',
        'keep HcalUnpackerReport_hcalDigis_*_*',
        'keep *_ecalPreshowerRecHit_*_*',
        'keep *_ecalRecHit_*_*',
        'keep *_ecalCompactTrigPrim_*_*',
        'keep *_ecalTPSkim_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep *_selectDigi_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEE_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsEB_*_*',
        'keep EcalRecHitsSorted_reducedEcalRecHitsES_*_*',
        'keep *_hybridSuperClusters_*_*',
        'keep recoSuperClusters_correctedHybridSuperClusters_*_*',
        'keep *_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClusters_*_*',
        'keep recoSuperClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperClusters_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusters_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoPreshowerClusterShapes_multi5x5PreshowerClusterShape_*_*',
        'keep *_particleFlowSuperClusterECAL_*_*',
        'keep *_particleFlowSuperClusterOOTECAL_*_*',
        'drop recoClusterShapes_*_*_*',
        'drop recoBasicClustersToOnerecoClusterShapesAssociation_*_*_*',
        'drop recoBasicClusters_multi5x5BasicClusters_multi5x5BarrelBasicClusters_*',
        'drop recoSuperClusters_multi5x5SuperClusters_multi5x5BarrelSuperClusters_*',
        'keep *_CkfElectronCandidates_*_*',
        'keep *_GsfGlobalElectronTest_*_*',
        'keep *_electronMergedSeeds_*_*',
        'keep recoGsfTracks_electronGsfTracks_*_*',
        'keep recoGsfTrackExtras_electronGsfTracks_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep TrackingRecHitsOwned_electronGsfTracks_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTrackExtras_generalTracks_*_*',
        'keep TrackingRecHitsOwned_generalTracks_*_*',
        'keep *_generalTracks_MVAValues_*',
        'keep *_generalTracks_MVAVals_*',
        'keep TrackingRecHitsOwned_extraFromSeeds_*_*',
        'keep uints_extraFromSeeds_*_*',
        'keep recoTracks_beamhaloTracks_*_*',
        'keep recoTrackExtras_beamhaloTracks_*_*',
        'keep TrackingRecHitsOwned_beamhaloTracks_*_*',
        'keep recoTracks_conversionStepTracks_*_*',
        'keep recoTrackExtras_conversionStepTracks_*_*',
        'keep TrackingRecHitsOwned_conversionStepTracks_*_*',
        'keep *_ctfPixelLess_*_*',
        'keep *_dedxTruncated40_*_*',
        'keep *_dedxHitInfo_*_*',
        'keep *_dedxHarmonic2_*_*',
        'keep *_dedxPixelHarmonic2_*_*',
        'keep *_trackExtrapolator_*_*',
        'keep recoTracks_cosmicDCTracks_*_*',
        'keep recoTrackExtras_cosmicDCTracks_*_*',
        'keep TrackingRecHitsOwned_cosmicDCTracks_*_*',
        'keep *_ak4CaloJets_*_*',
        'keep *_ak4PFJets_*_*',
        'keep *_ak4PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHS_*_*',
        'keep *_ak8PFJetsCHSSoftDrop_*_*',
        'keep *_cmsTopTagPFJetsCHS_*_*',
        'keep *_JetPlusTrackZSPCorJetAntiKt4_*_*',
        'keep *_ak4TrackJets_*_*',
        'keep recoRecoChargedRefCandidates_trackRefsForJets_*_*',
        'keep *_caloTowers_*_*',
        'keep *_towerMaker_*_*',
        'keep *_CastorTowerReco_*_*',
        'keep *_ak4JetTracksAssociatorAtVertex_*_*',
        'keep *_ak4JetTracksAssociatorAtVertexPF_*_*',
        'keep *_ak4JetTracksAssociatorAtCaloFace_*_*',
        'keep *_ak4JetTracksAssociatorExplicit_*_*',
        'keep *_ak4JetExtender_*_*',
        'keep *_ak4JetID_*_*',
        'keep *_ak5CastorJets_*_*',
        'keep *_ak5CastorJetID_*_*',
        'keep *_ak7CastorJets_*_*',
        'keep *_ak7CastorJetID_*_*',
        'keep *_fixedGridRhoAll_*_*',
        'keep *_fixedGridRhoFastjetAll_*_*',
        'keep *_fixedGridRhoFastjetAllTmp_*_*',
        'keep *_fixedGridRhoFastjetAllCalo_*_*',
        'keep *_fixedGridRhoFastjetCentral_*_*',
        'keep *_fixedGridRhoFastjetCentralCalo_*_*',
        'keep *_fixedGridRhoFastjetCentralChargedPileUp_*_*',
        'keep *_fixedGridRhoFastjetCentralNeutral_*_*',
        'keep *_ak8PFJetsCHSSoftDropMass_*_*',
        'keep recoCaloMETs_caloMet_*_*',
        'keep recoCaloMETs_caloMetBE_*_*',
        'keep recoCaloMETs_caloMetBEFO_*_*',
        'keep recoCaloMETs_caloMetM_*_*',
        'keep recoPFMETs_pfMet_*_*',
        'keep recoPFMETs_pfChMet_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep recoMuonMETCorrectionDataedmValueMap_muonMETValueMapProducer_*_*',
        'keep recoHcalNoiseRBXs_hcalnoise_*_*',
        'keep HcalNoiseSummary_hcalnoise_*_*',
        'keep recoCSCHaloData_CSCHaloData_*_*',
        'keep recoEcalHaloData_EcalHaloData_*_*',
        'keep recoGlobalHaloData_GlobalHaloData_*_*',
        'keep recoHcalHaloData_HcalHaloData_*_*',
        'keep recoBeamHaloSummary_BeamHaloSummary_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_displacedMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_globalMuons_*_*',
        'keep TrackingRecHitsOwned_tevMuons_*_*',
        'keep *_CosmicMuonSeed_*_*',
        'keep recoTrackExtras_cosmicMuons_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons_*_*',
        'keep recoTrackExtras_cosmicMuons1Leg_*_*',
        'keep TrackingRecHitsOwned_cosmicMuons1Leg_*_*',
        'keep recoTracks_cosmicsVetoTracks_*_*',
        'keep *_muons_*_*',
        'keep *_particleFlow_muons_*',
        'drop *_muons_muons1stStep2muonsMap_*',
        'drop recoIsoDepositedmValueMap_muons_*_*',
        'drop doubleedmValueMap_muons_muPFIso*_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_globalMuons_*_*',
        'keep recoTrackExtras_globalMuons_*_*',
        'keep recoTracks_tevMuons_*_*',
        'keep recoTrackExtras_tevMuons_*_*',
        'keep recoTracks_generalTracks_*_*',
        'keep recoTracks_displacedTracks_*_*',
        'keep recoTracksToOnerecoTracksAssociation_tevMuons_*_*',
        'keep recoTracks_displacedGlobalMuons_*_*',
        'keep recoTrackExtras_displacedGlobalMuons_*_*',
        'keep TrackingRecHitsOwned_displacedGlobalMuons_*_*',
        'keep recoTracks_cosmicMuons_*_*',
        'keep recoMuons_muonsFromCosmics_*_*',
        'keep recoTracks_cosmicMuons1Leg_*_*',
        'keep recoMuons_muonsFromCosmics1Leg_*_*',
        'keep recoTracks_refittedStandAloneMuons_*_*',
        'keep recoTrackExtras_refittedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_refittedStandAloneMuons_*_*',
        'keep recoTracks_displacedStandAloneMuons__*',
        'keep recoTrackExtras_displacedStandAloneMuons_*_*',
        'keep TrackingRecHitsOwned_displacedStandAloneMuons_*_*',
        'keep *_muIsoDepositTk_*_*',
        'keep *_muIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muIsoDepositCalByAssociatorHits_*_*',
        'keep *_muIsoDepositJets_*_*',
        'keep *_muGlobalIsoDepositCtfTk_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorTowers_*_*',
        'keep *_muGlobalIsoDepositCalByAssociatorHits_*_*',
        'keep *_muGlobalIsoDepositJets_*_*',
        'keep *_softPFMuonsTagInfos_*_*',
        'keep *_softPFElectronsTagInfos_*_*',
        'keep *_softPFElectronBJetTags_*_*',
        'keep *_softPFMuonBJetTags_*_*',
        'keep *_pfImpactParameterTagInfos_*_*',
        'keep *_pfTrackCountingHighEffBJetTags_*_*',
        'keep *_pfJetProbabilityBJetTags_*_*',
        'keep *_pfJetBProbabilityBJetTags_*_*',
        'keep *_pfSecondaryVertexTagInfos_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderTagInfos_*_*',
        'keep *_pfSimpleSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfSimpleInclusiveSecondaryVertexHighEffBJetTags_*_*',
        'keep *_pfCombinedSecondaryVertexV2BJetTags_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTags_*_*',
        'keep *_pfGhostTrackVertexTagInfos_*_*',
        'keep *_pfGhostTrackBJetTags_*_*',
        'keep *_pfCombinedMVAV2BJetTags_*_*',
        'keep *_inclusiveCandidateSecondaryVertices_*_*',
        'keep *_inclusiveCandidateSecondaryVerticesCvsL_*_*',
        'keep *_pfInclusiveSecondaryVertexFinderCvsLTagInfos_*_*',
        'keep *_pfCombinedCvsLJetTags_*_*',
        'keep *_pfCombinedCvsBJetTags_*_*',
        'keep *_pfChargeBJetTags_*_*',
        'keep *_pfDeepCSVJetTags_*_*',
        'keep *_pfDeepCMVAJetTags_*_*',
        'keep recoRecoTauPiZeros_hpsPFTauProducer_pizeros_*',
        'keep recoPFTaus_hpsPFTauProducer_*_*',
        'keep *_hpsPFTauDiscriminationByDeadECALElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFinding_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingNewDMs_*_*',
        'keep *_hpsPFTauDiscriminationByDecayModeFindingOldDMs_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseChargedIsolation_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByLooseCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByLooseMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByMediumCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByRawCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3Hits_*_*',
        'keep *_hpsPFTauDiscriminationByTightCombinedIsolationDBSumPtCorr3HitsdR03_*_*',
        'keep *_hpsPFTauDiscriminationByTightMuonRejection3_*_*',
        'keep *_hpsPFTauDiscriminationByPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauNeutralIsoPtSum_*_*',
        'keep *_hpsPFTauPUcorrPtSum_*_*',
        'keep *_hpsPFTauChargedIsoPtSum_*_*',
        'keep *_hpsPFTauTransverseImpactParameters_*_*',
        'keep *_hpsPFTauFootprintCorrection_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeight_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalCone_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6rawElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VLooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6LooseElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6MediumElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6TightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByMVA6VTightElectronRejection_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWoldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWoldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWnewDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWnewDMwLT_*_*',
        'keep *_hpsPFTauChargedIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumdR03_*_*',
        'keep *_hpsPFTauNeutralIsoPtSumWeightdR03_*_*',
        'keep *_hpsPFTauFootprintCorrectiondR03_*_*',
        'keep *_hpsPFTauPhotonPtSumOutsideSignalConedR03_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1DBdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1DBdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByIsolationMVArun2v1PWdR03oldDMwLTraw_*_*',
        'keep *_hpsPFTauDiscriminationByVLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByLooseIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByMediumIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep *_hpsPFTauDiscriminationByVVTightIsolationMVArun2v1PWdR03oldDMwLT_*_*',
        'keep  *_offlinePrimaryVertices__*',
        'keep *_offlinePrimaryVerticesWithBS_*_*',
        'keep *_offlinePrimaryVerticesFromCosmicTracks_*_*',
        'keep *_nuclearInteractionMaker_*_*',
        'keep *_generalV0Candidates_*_*',
        'keep *_inclusiveSecondaryVertices_*_*',
        'keep recoGsfElectronCores_gsfElectronCores_*_*',
        'keep recoGsfElectronCores_gedGsfElectronCores_*_*',
        'keep recoGsfElectrons_gsfElectrons_*_*',
        'keep recoGsfElectrons_gedGsfElectrons_*_*',
        'keep recoGsfElectronCores_uncleanedOnlyGsfElectronCores_*_*',
        'keep recoGsfElectrons_uncleanedOnlyGsfElectrons_*_*',
        'keep floatedmValueMap_eidRobustLoose_*_*',
        'keep floatedmValueMap_eidRobustTight_*_*',
        'keep floatedmValueMap_eidRobustHighEnergy_*_*',
        'keep floatedmValueMap_eidLoose_*_*',
        'keep floatedmValueMap_eidTight_*_*',
        'keep *_egmGedGsfElectronPFIsolation_*_*',
        'drop *_egmGsfElectronIDs_*_*',
        'drop *_egmPhotonIDs_*_*',
        'keep *_gedPhotonCore_*_*',
        'keep *_gedPhotons_*_*',
        'keep *_particleBasedIsolation_*_*',
        'keep recoPhotons_mustachePhotons_*_*',
        'keep recoPhotonCores_mustachePhotonCore_*_*',
        'keep recoPhotons_ootPhotons_*_*',
        'keep recoPhotonCores_ootPhotonCore_*_*',
        'keep recoPhotons_photons_*_*',
        'keep recoPhotonCores_photonCore_*_*',
        'keep recoConversions_conversions_*_*',
        'keep recoConversions_mustacheConversions_*_*',
        'drop *_conversions_uncleanedConversions_*',
        'drop *_gedPhotonsTmp_valMapPFEgammaCandToPhoton_*',
        'keep recoConversions_allConversions_*_*',
        'keep recoConversions_allConversionsOldEG_*_*',
        'keep recoTracks_ckfOutInTracksFromConversions_*_*',
        'keep recoTracks_ckfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_ckfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_ckfInOutTracksFromConversions_*_*',
        'keep recoConversions_uncleanedOnlyAllConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTracks_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep recoTrackExtras_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfOutInTracksFromConversions_*_*',
        'keep TrackingRecHitsOwned_uncleanedOnlyCkfInOutTracksFromConversions_*_*',
        'keep *_PhotonIDProd_*_*',
        'keep *_PhotonIDProdGED_*_*',
        'keep recoRecoEcalCandidates_hfRecoEcalCandidate_*_*',
        'keep *_hfEMClusters_*_*',
        'keep *_gedGsfElectronCores_*_*',
        'keep *_gedGsfElectrons_*_*',
        'keep *_pixelTracks_*_*',
        'keep *_pixelVertices_*_*',
        'drop CaloTowersSorted_towerMakerPF_*_*',
        'keep recoPFRecHits_particleFlowClusterECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHCAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowClusterPS_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitECAL_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHBHE_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHF_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitHO_Cleaned_*',
        'keep recoPFRecHits_particleFlowRecHitPS_Cleaned_*',
        'keep recoPFClusters_particleFlowClusterECAL_*_*',
        'keep recoPFClusters_particleFlowClusterHCAL_*_*',
        'keep recoPFClusters_particleFlowClusterHO_*_*',
        'keep recoPFClusters_particleFlowClusterHF_*_*',
        'keep recoPFClusters_particleFlowClusterPS_*_*',
        'keep recoPFBlocks_particleFlowBlock_*_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoSuperClusters_particleFlowEGamma_*_*',
        'keep recoConversions_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlow_*_*',
        'keep recoPFCandidates_particleFlowTmp_electrons_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFCandidates_particleFlowTmp__*',
        'keep recoPFDisplacedVertexs_particleFlowDisplacedVertex_*_*',
        'keep *_pfElectronTranslator_*_*',
        'keep *_pfPhotonTranslator_*_*',
        'keep *_particleFlow_electrons_*',
        'keep *_particleFlow_photons_*',
        'keep *_particleFlow_muons_*',
        'keep *_trackerDrivenElectronSeeds_preid_*',
        'keep *_particleFlowPtrs_*_*',
        'keep *_particleFlowTmpPtrs_*_*',
        'keep *_chargedHadronPFTrackIsolation_*_*',
        'keep *_offlineBeamSpot_*_*',
        'keep L1GlobalTriggerReadoutRecord_gtDigis_*_*',
        'keep *_l1GtRecord_*_*',
        'keep *_l1GtTriggerMenuLite_*_*',
        'keep *_conditionsInEdm_*_*',
        'keep *_l1extraParticles_*_*',
        'keep *_l1L1GtObjectMap_*_*',
        'keep L1MuGMTReadoutCollection_gtDigis_*_*',
        'keep L1GctEmCand*_gctDigis_*_*',
        'keep L1GctJetCand*_gctDigis_*_*',
        'keep L1GctEtHad*_gctDigis_*_*',
        'keep L1GctEtMiss*_gctDigis_*_*',
        'keep L1GctEtTotal*_gctDigis_*_*',
        'keep L1GctHtMiss*_gctDigis_*_*',
        'keep L1GctJetCounts*_gctDigis_*_*',
        'keep L1GctHFRingEtSums*_gctDigis_*_*',
        'keep L1GctHFBitCounts*_gctDigis_*_*',
        'keep LumiDetails_lumiProducer_*_*',
        'keep LumiSummary_lumiProducer_*_*',
        'drop *_hlt*_*_*',
        'keep GlobalObjectMapRecord_hltGtStage2ObjectMap_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep triggerTriggerEvent_*_*_*',
        'keep *_hltFEDSelectorL1_*_*',
        'keep *_hltScoutingCaloPacker_*_*',
        'keep *_hltScoutingEgammaPacker_*_*',
        'keep *_hltScoutingMuonPackerCalo_*_*',
        'keep *_hltScoutingMuonPacker_*_*',
        'keep *_hltScoutingPFPacker_*_*',
        'keep *_hltScoutingPrimaryVertexPackerCaloMuon_*_*',
        'keep *_hltScoutingPrimaryVertexPacker_*_*',
        'keep *_hltScoutingTrackPacker_*_*',
        'keep edmTriggerResults_*_*_*',
        'keep L1AcceptBunchCrossings_scalersRawToDigi_*_*',
        'keep L1TriggerScalerss_scalersRawToDigi_*_*',
        'keep Level1TriggerScalerss_scalersRawToDigi_*_*',
        'keep LumiScalerss_scalersRawToDigi_*_*',
        'keep BeamSpotOnlines_scalersRawToDigi_*_*',
        'keep DcsStatuss_scalersRawToDigi_*_*',
        'keep DcsStatuss_hltScalersRawToDigi_*_*',
        'keep CTPPSRecord_onlineMetaDataDigis_*_*',
        'keep DCSRecord_onlineMetaDataDigis_*_*',
        'keep OnlineLuminosityRecord_onlineMetaDataDigis_*_*',
        'keep recoBeamSpot_onlineMetaDataDigis_*_*',
        'keep *_tcdsDigis_*_*',
        'keep *_logErrorHarvester_*_*',
        'keep *_pfIsolatedElectronsEI_*_*',
        'keep *_pfIsolatedMuonsEI_*_*',
        'keep recoPFJets_pfJetsEI_*_*',
        'keep *_pfCombinedInclusiveSecondaryVertexV2BJetTagsEI_*_*',
        'keep recoPFTaus_pfTausEI_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByDecayModeFinding_*_*',
        'keep recoPFTauDiscriminator_pfTausDiscriminationByIsolation_*_*',
        'keep recoPFMETs_pfMetEI_*_*',
        'keep *_hiGeneralTracks_*_*',
        'keep *_hiGeneralAndPixelTracks_*_*',
        'keep recoVertexs_hiPixelMedianVertex_*_*',
        'keep recoVertexs_hiPixelAdaptiveVertex_*_*',
        'keep recoVertexs_hiSelectedVertex_*_*',
        'keep recoVertexs_hiSelectedPixelVertex_*_*',
        'keep recoVertexs_hiPixelClusterVertex_*_*',
        'keep *_*_APVCM_*',
        'keep *_akPu3CaloJets_*_*',
        'keep *_akPu4CaloJets_*_*',
        'keep *_akPu5CaloJets_*_*',
        'keep *_iterativeConePu5CaloJets_*_*',
        'keep *_akPu3PFJets_*_*',
        'keep *_akPu4PFJets_*_*',
        'keep *_akPu5PFJets_*_*',
        'keep *_akCs3PFJets_*_*',
        'keep *_akCs4PFJets_*_*',
        'keep *_kt4PFJetsForRho_*_*',
        'keep *_*HiGenJets_*_*',
        'keep *_PFTowers_*_*',
        'keep *_hiFJRhoProducer_*_*',
        'keep recoSuperCluster_cleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedEndcapSuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_correctedHybridSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandBarrelSuperClusters_*_*',
        'keep recoSuperCluster_correctedIslandEndcapSuperClusters_*_*',
        'keep recoSuperCluster_correctedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_hybridSuperClusters_*_*',
        'keep recoSuperCluster_islandSuperClusters_*_*',
        'keep recoSuperCluster_mergedSuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClusters_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersCleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersUncleaned_*_*',
        'keep recoSuperCluster_multi5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_particleFlowEGamma_*_*',
        'keep recoSuperCluster_particleFlowSuperClusterECAL_*_*',
        'keep recoSuperCluster_uncleanedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedHybridSuperClusters_*_*',
        'keep recoSuperCluster_uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoSuperCluster_uncleanedOnlyMulti5x5SuperClustersWithPreshower_*_*',
        'keep recoCaloClusters_particleFlowEGamma_*_*',
        'keep recoCaloClusters_cleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_hybridSuperClusters_*_*',
        'keep recoCaloClusters_uncleanedHybridSuperClusters_*_*',
        'keep recoCaloClusters_islandBasicClusters_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersCleaned_*_*',
        'keep recoCaloClusters_multi5x5BasicClustersUncleaned_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep recoCaloClusters_particleFlowSuperClusterECAL_*_*',
        'keep recoCaloClusters_multi5x5SuperClusters_*_*',
        'keep EcalRecHitsSorted_ecalRecHit_*_*',
        'keep EcalRecHitsSorted_ecalPreshowerRecHit_*_*',
        'keep EBSrFlagsSorted_ecalDigis__*',
        'keep EESrFlagsSorted_ecalDigis__*',
        'keep floatedmValueMap_hiDetachedTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiDetachedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiGeneralTracks_MVAVals_*',
        'keep floatedmValueMap_hiInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepQual_MVAVals_*',
        'keep floatedmValueMap_hiLowPtTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiPixelPairStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuInitialStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuMixedTripletStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelLessStepSelector_MVAVals_*',
        'keep floatedmValueMap_hiRegitMuPixelPairStepSelector_MVAVals_*',
        'keep recoPFCandidates_particleFlowEGamma_*_*',
        'keep recoPFCandidates_particleFlowTmp_*_*',
        'drop recoPFClusters_*_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoGsfElectrons_ecalDrivenGsfElectrons_*_*',
        'keep recoGsfElectrons_electronsWithPresel_*_*',
        'keep recoGsfElectrons_gedGsfElectronsTmp_*_*',
        'keep recoGsfElectrons_mvaElectrons_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducer_*_*',
        'keep recoPhotons_gedPhotonsTmp_*_*',
        'keep recoHIPhotonIsolationedmValueMap_photonIsolationHIProducerGED_*_*',
        'keep recoElectronSeeds_ecalDrivenElectronSeeds_*_*',
        'keep recoTrackExtras_electronGsfTracks_*_*',
        'keep recoEvtPlanes_hiEvtPlane_*_*',
        'keep recoCentrality*_hiCentrality_*_*',
        'keep *_centralityBin_*_*',
        'keep recoClusterCompatibility*_hiClusterCompatibility_*_*',
        'keep *_MuonSeed_*_*',
        'keep *_ancientMuonSeed_*_*',
        'keep *_mergedStandAloneMuonSeeds_*_*',
        'keep TrackingRecHitsOwned_reglobalMuons_*_*',
        'keep TrackingRecHitsOwned_retevMuons_*_*',
        'keep recoCaloMuons_recalomuons_*_*',
        'keep *_remuons_*_*',
        'keep *_*_remuons_*',
        'keep recoTracks_standAloneMuons_*_*',
        'keep recoTrackExtras_standAloneMuons_*_*',
        'keep TrackingRecHitsOwned_standAloneMuons_*_*',
        'keep recoTracks_reglobalMuons_*_*',
        'keep recoTrackExtras_reglobalMuons_*_*',
        'keep recoTracks_retevMuons_*_*',
        'keep recoTrackExtras_retevMuons_*_*',
        'keep recoTracksToOnerecoTracksAssociation_retevMuons_*_*'
     ) ),
    splitLevel = cms.untracked.int32(0)
)


process.DBService = cms.Service("DBService")


process.DQMStore = cms.Service("DQMStore")


process.MessageLogger = cms.Service("MessageLogger",
    FrameworkJobReport = cms.untracked.PSet(
        FwkJob = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            optionalPSet = cms.untracked.bool(True)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        optionalPSet = cms.untracked.bool(True)
    ),
    categories = cms.untracked.vstring(
        'FwkJob',
        'FwkReport',
        'FwkSummary',
        'Root_NoDictionary'
    ),
    cerr = cms.untracked.PSet(
        FwkJob = cms.untracked.PSet(
            limit = cms.untracked.int32(0),
            optionalPSet = cms.untracked.bool(True)
        ),
        FwkReport = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            optionalPSet = cms.untracked.bool(True),
            reportEvery = cms.untracked.int32(1)
        ),
        FwkSummary = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000),
            optionalPSet = cms.untracked.bool(True),
            reportEvery = cms.untracked.int32(1)
        ),
        INFO = cms.untracked.PSet(
            limit = cms.untracked.int32(0)
        ),
        Root_NoDictionary = cms.untracked.PSet(
            limit = cms.untracked.int32(0),
            optionalPSet = cms.untracked.bool(True)
        ),
        default = cms.untracked.PSet(
            limit = cms.untracked.int32(10000000)
        ),
        noTimeStamps = cms.untracked.bool(False),
        optionalPSet = cms.untracked.bool(True),
        threshold = cms.untracked.string('INFO')
    ),
    cerr_stats = cms.untracked.PSet(
        optionalPSet = cms.untracked.bool(True),
        output = cms.untracked.string('cerr'),
        threshold = cms.untracked.string('WARNING')
    ),
    cout = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    debugModules = cms.untracked.vstring(),
    debugs = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    default = cms.untracked.PSet(

    ),
    destinations = cms.untracked.vstring(
        'warnings',
        'errors',
        'infos',
        'debugs',
        'cout',
        'cerr'
    ),
    errors = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    ),
    fwkJobReports = cms.untracked.vstring('FrameworkJobReport'),
    infos = cms.untracked.PSet(
        Root_NoDictionary = cms.untracked.PSet(
            limit = cms.untracked.int32(0),
            optionalPSet = cms.untracked.bool(True)
        ),
        optionalPSet = cms.untracked.bool(True),
        placeholder = cms.untracked.bool(True)
    ),
    statistics = cms.untracked.vstring('cerr_stats'),
    suppressDebug = cms.untracked.vstring(),
    suppressInfo = cms.untracked.vstring(),
    suppressWarning = cms.untracked.vstring('particleFlowDisplacedVertexCandidate'),
    warnings = cms.untracked.PSet(
        placeholder = cms.untracked.bool(True)
    )
)


process.RandomNumberGeneratorService = cms.Service("RandomNumberGeneratorService",
    CTPPSFastRecHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1357987)
    ),
    LHCTransport = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(87654321)
    ),
    MuonSimHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(987346)
    ),
    VtxSmeared = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(98765432)
    ),
    ecalPreshowerRecHit = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(6541321)
    ),
    ecalRecHit = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(654321)
    ),
    externalLHEProducer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(234567)
    ),
    famosPileUp = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    fastSimProducer = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(13579)
    ),
    fastTrackerRecHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(24680)
    ),
    g4SimHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(11)
    ),
    generator = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(123456789)
    ),
    hbhereco = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    hfreco = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    hiSignal = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(123456789)
    ),
    hiSignalG4SimHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(11)
    ),
    hiSignalLHCTransport = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(88776655)
    ),
    horeco = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(541321)
    ),
    l1ParamMuons = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(6453209)
    ),
    mix = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(12345)
    ),
    mixData = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(12345)
    ),
    mixGenPU = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    mixRecoTracks = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    mixSimCaloHits = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(918273)
    ),
    paramMuons = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(54525)
    ),
    saveFileName = cms.untracked.string(''),
    simBeamSpotFilter = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(87654321)
    ),
    simMuonCSCDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(11223344)
    ),
    simMuonDTDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simMuonRPCDigis = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    ),
    simSiStripDigiSimLink = cms.PSet(
        engineName = cms.untracked.string('MixMaxRng'),
        initialSeed = cms.untracked.uint32(1234567)
    )
)


process.AnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('AnalyticalPropagator'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum')
)


process.AnalyticalPropagatorParabolicMF = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('AnalyticalPropagatorParabolicMf'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf')
)


process.AnyDirectionAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('AnyDirectionAnalyticalPropagator'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('anyDirection')
)


process.CSCChannelMapperESProducer = cms.ESProducer("CSCChannelMapperESProducer",
    AlgoName = cms.string('CSCChannelMapperPostls1')
)


process.CSCGeometryESModule = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    debugV = cms.untracked.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useDDD = cms.bool(False),
    useGangedStripsInME1a = cms.bool(False),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.CSCIndexerESProducer = cms.ESProducer("CSCIndexerESProducer",
    AlgoName = cms.string('CSCIndexerPostls1')
)


process.CaloGeometryBuilder = cms.ESProducer("CaloGeometryBuilder",
    SelectedCalos = cms.vstring(
        'HCAL',
        'ZDC',
        'CASTOR',
        'EcalBarrel',
        'EcalEndcap',
        'EcalPreshower',
        'TOWER'
    )
)


process.CaloTopologyBuilder = cms.ESProducer("CaloTopologyBuilder")


process.CaloTowerConstituentsMapBuilder = cms.ESProducer("CaloTowerConstituentsMapBuilder",
    MapAuto = cms.untracked.bool(False),
    MapFile = cms.untracked.string('Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz'),
    SkipHE = cms.untracked.bool(False),
    appendToDataLabel = cms.string('')
)


process.CaloTowerGeometryFromDBEP = cms.ESProducer("CaloTowerGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.CaloTowerTopologyEP = cms.ESProducer("CaloTowerTopologyEP")


process.CastorDbProducer = cms.ESProducer("CastorDbProducer",
    appendToDataLabel = cms.string('')
)


process.CastorGeometryFromDBEP = cms.ESProducer("CastorGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.Chi2EstimatorForMuRefit = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('Chi2EstimatorForMuRefit'),
    MaxChi2 = cms.double(100000.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3)
)


process.Chi2EstimatorForMuonTrackLoader = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('Chi2EstimatorForMuonTrackLoader'),
    MaxChi2 = cms.double(100000.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3)
)


process.Chi2EstimatorForRefit = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('Chi2EstimatorForRefit'),
    MaxChi2 = cms.double(100000.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.Chi2MeasurementEstimator = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('Chi2'),
    MaxChi2 = cms.double(30),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3)
)


process.Chi2MeasurementEstimatorForP5 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('Chi2MeasurementEstimatorForP5'),
    MaxChi2 = cms.double(100.0),
    MaxDisplacement = cms.double(100),
    MaxSagitta = cms.double(-1),
    MinPtForHitRecoveryInGluedDet = cms.double(100000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(4.0)
)


process.CloseComponentsMerger5D = cms.ESProducer("CloseComponentsMergerESProducer5D",
    ComponentName = cms.string('CloseComponentsMerger5D'),
    DistanceMeasure = cms.string('KullbackLeiblerDistance5D'),
    MaxComponents = cms.int32(12)
)


process.CloseComponentsMerger_forPreId = cms.ESProducer("CloseComponentsMergerESProducer5D",
    ComponentName = cms.string('CloseComponentsMerger_forPreId'),
    DistanceMeasure = cms.string('KullbackLeiblerDistance5D'),
    MaxComponents = cms.int32(4)
)


process.ClusterShapeHitFilterESProducer = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('ClusterShapeHitFilter'),
    PixelShapeFile = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase0.par'),
    PixelShapeFileL1 = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase0.par'),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutNone')
    )
)


process.DTGeometryESModule = cms.ESProducer("DTGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDDD = cms.bool(False)
)


process.DummyDetLayerGeometry = cms.ESProducer("DetLayerGeometryESProducer",
    ComponentName = cms.string('DummyDetLayerGeometry')
)


process.EcalBarrelGeometryFromDBEP = cms.ESProducer("EcalBarrelGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalElectronicsMappingBuilder = cms.ESProducer("EcalElectronicsMappingBuilder")


process.EcalEndcapGeometryFromDBEP = cms.ESProducer("EcalEndcapGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalLaserCorrectionService = cms.ESProducer("EcalLaserCorrectionService")


process.EcalPreshowerGeometryFromDBEP = cms.ESProducer("EcalPreshowerGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.EcalTrigTowerConstituentsMapBuilder = cms.ESProducer("EcalTrigTowerConstituentsMapBuilder",
    MapFile = cms.untracked.string('Geometry/EcalMapping/data/EndCap_TTMap.txt')
)


process.ElectronChi2 = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('ElectronChi2'),
    MaxChi2 = cms.double(2000.0),
    MaxDisplacement = cms.double(100),
    MaxSagitta = cms.double(-1),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3)
)


process.ElectronMaterialEffects = cms.ESProducer("GsfMaterialEffectsESProducer",
    BetheHeitlerCorrection = cms.int32(2),
    BetheHeitlerParametrization = cms.string('BetheHeitler_cdfmom_nC6_O5.par'),
    ComponentName = cms.string('ElectronMaterialEffects'),
    EnergyLossUpdator = cms.string('GsfBetheHeitlerUpdator'),
    Mass = cms.double(0.000511),
    MultipleScatteringUpdator = cms.string('MultipleScatteringUpdator')
)


process.ElectronMaterialEffects_forPreId = cms.ESProducer("GsfMaterialEffectsESProducer",
    BetheHeitlerCorrection = cms.int32(2),
    BetheHeitlerParametrization = cms.string('BetheHeitler_cdfmom_nC3_O5.par'),
    ComponentName = cms.string('ElectronMaterialEffects_forPreId'),
    EnergyLossUpdator = cms.string('GsfBetheHeitlerUpdator'),
    Mass = cms.double(0.000511),
    MultipleScatteringUpdator = cms.string('MultipleScatteringUpdator')
)


process.EstimatorForSTA = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('Chi2STA'),
    MaxChi2 = cms.double(1000.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3)
)


process.FittingSmootherRKP5 = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(False),
    ComponentName = cms.string('FittingSmootherRKP5'),
    EstimateCut = cms.double(20.0),
    Fitter = cms.string('RKFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(4),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('RKSmoother'),
    appendToDataLabel = cms.string('')
)


process.FlexibleKFFittingSmoother = cms.ESProducer("FlexibleKFFittingSmootherESProducer",
    ComponentName = cms.string('FlexibleKFFittingSmoother'),
    appendToDataLabel = cms.string(''),
    looperFitter = cms.string('LooperFittingSmoother'),
    standardFitter = cms.string('KFFittingSmootherWithOutliersRejectionAndRK')
)


process.GlbMuKFFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('GlbMuKFFitter'),
    Estimator = cms.string('Chi2EstimatorForMuRefit'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.GlobalDetLayerGeometry = cms.ESProducer("GlobalDetLayerGeometryESProducer",
    ComponentName = cms.string('GlobalDetLayerGeometry')
)


process.GlobalTrackingGeometryESProducer = cms.ESProducer("GlobalTrackingGeometryESProducer")


process.GsfElectronFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('GsfElectronFittingSmoother'),
    EstimateCut = cms.double(-1),
    Fitter = cms.string('GsfTrajectoryFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('GsfTrajectorySmoother'),
    appendToDataLabel = cms.string('')
)


process.GsfTrajectoryFitter = cms.ESProducer("GsfTrajectoryFitterESProducer",
    ComponentName = cms.string('GsfTrajectoryFitter'),
    GeometricalPropagator = cms.string('fwdAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects'),
    Merger = cms.string('CloseComponentsMerger5D'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.GsfTrajectoryFitter_forPreId = cms.ESProducer("GsfTrajectoryFitterESProducer",
    ComponentName = cms.string('GsfTrajectoryFitter_forPreId'),
    GeometricalPropagator = cms.string('fwdAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects_forPreId'),
    Merger = cms.string('CloseComponentsMerger_forPreId'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.GsfTrajectorySmoother = cms.ESProducer("GsfTrajectorySmootherESProducer",
    ComponentName = cms.string('GsfTrajectorySmoother'),
    ErrorRescaling = cms.double(100.0),
    GeometricalPropagator = cms.string('bwdAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects'),
    Merger = cms.string('CloseComponentsMerger5D'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.GsfTrajectorySmoother_forPreId = cms.ESProducer("GsfTrajectorySmootherESProducer",
    ComponentName = cms.string('GsfTrajectorySmoother_forPreId'),
    ErrorRescaling = cms.double(100.0),
    GeometricalPropagator = cms.string('bwdAnalyticalPropagator'),
    MaterialEffectsUpdator = cms.string('ElectronMaterialEffects_forPreId'),
    Merger = cms.string('CloseComponentsMerger_forPreId'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry')
)


process.HcalAlignmentEP = cms.ESProducer("HcalAlignmentEP")


process.HcalGeometryFromDBEP = cms.ESProducer("HcalGeometryFromDBEP",
    applyAlignment = cms.bool(True)
)


process.KFFitterForRefitInsideOut = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('KFFitterForRefitInsideOut'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.KFFitterForRefitOutsideIn = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('KFFitterForRefitOutsideIn'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.KFFittingSmootheForSTA = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFitterSmootherSTA'),
    EstimateCut = cms.double(-1),
    Fitter = cms.string('KFFitterSTA'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('KFSmootherSTA'),
    appendToDataLabel = cms.string('')
)


process.KFFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmoother'),
    EstimateCut = cms.double(-1),
    Fitter = cms.string('KFFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('KFSmoother'),
    appendToDataLabel = cms.string('')
)


process.KFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('KFFittingSmootherWithOutliersRejectionAndRK'),
    EstimateCut = cms.double(20.0),
    Fitter = cms.string('RKFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(3),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('RKSmoother'),
    appendToDataLabel = cms.string('')
)


process.KFSmootherForMuonTrackLoader = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('KFSmootherForMuonTrackLoader'),
    Estimator = cms.string('Chi2EstimatorForMuonTrackLoader'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3)
)


process.KFSmootherForMuonTrackLoaderL3 = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('KFSmootherForMuonTrackLoaderL3'),
    Estimator = cms.string('Chi2EstimatorForMuonTrackLoader'),
    Propagator = cms.string('SmartPropagatorAnyOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3)
)


process.KFSmootherForRefitInsideOut = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('KFSmootherForRefitInsideOut'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Propagator = cms.string('SmartPropagatorAnyRK'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3)
)


process.KFSmootherForRefitOutsideIn = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('KFSmootherForRefitOutsideIn'),
    Estimator = cms.string('Chi2EstimatorForRefit'),
    Propagator = cms.string('SmartPropagatorAnyRKOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100.0),
    minHits = cms.int32(3)
)


process.KFSwitching1DUpdatorESProducer = cms.ESProducer("KFSwitching1DUpdatorESProducer",
    ComponentName = cms.string('KFSwitching1DUpdator'),
    doEndCap = cms.bool(False)
)


process.KFTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('KFFitter'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('PropagatorWithMaterial'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.KFTrajectoryFitterForSTA = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('KFFitterSTA'),
    Estimator = cms.string('Chi2STA'),
    Propagator = cms.string('SteppingHelixPropagatorAny'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.KFTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('KFSmoother'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('PropagatorWithMaterial'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100),
    minHits = cms.int32(3)
)


process.KFTrajectorySmootherForSTA = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('KFSmootherSTA'),
    Estimator = cms.string('Chi2STA'),
    Propagator = cms.string('SteppingHelixPropagatorOpposite'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100),
    minHits = cms.int32(3)
)


process.KFUpdatorESProducer = cms.ESProducer("KFUpdatorESProducer",
    ComponentName = cms.string('KFUpdator')
)


process.KullbackLeiblerDistance5D = cms.ESProducer("DistanceBetweenComponentsESProducer5D",
    ComponentName = cms.string('KullbackLeiblerDistance5D'),
    DistanceMeasure = cms.string('KullbackLeibler')
)


process.LooperFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('LooperFittingSmoother'),
    EstimateCut = cms.double(20.0),
    Fitter = cms.string('LooperFitter'),
    LogPixelProbabilityCut = cms.double(-14.0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(3),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('LooperSmoother'),
    appendToDataLabel = cms.string('')
)


process.LooperTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('LooperFitter'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.LooperTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('LooperSmoother'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(3)
)


process.MRHChi2MeasurementEstimator = cms.ESProducer("MRHChi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('MRHChi2'),
    MaxChi2 = cms.double(30.0),
    nSigma = cms.double(3.0)
)


process.MRHFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('MRHFittingSmoother'),
    EstimateCut = cms.double(-1),
    Fitter = cms.string('MRHFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('MRHSmoother'),
    appendToDataLabel = cms.string('')
)


process.MRHTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('MRHFitter'),
    Estimator = cms.string('MRHChi2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.MRHTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('MRHSmoother'),
    Estimator = cms.string('MRHChi2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100),
    minHits = cms.int32(3)
)


process.MaterialPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterial'),
    Mass = cms.double(0.139),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.MaterialPropagatorParabolicMF = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialParabolicMf'),
    Mass = cms.double(0.139),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.MeasurementTracker = cms.ESProducer("MeasurementTrackerESProducer",
    ComponentName = cms.string(''),
    DebugPixelModuleQualityDB = cms.untracked.bool(False),
    DebugPixelROCQualityDB = cms.untracked.bool(False),
    DebugStripAPVFiberQualityDB = cms.untracked.bool(False),
    DebugStripModuleQualityDB = cms.untracked.bool(False),
    DebugStripStripQualityDB = cms.untracked.bool(False),
    HitMatcher = cms.string('StandardMatcher'),
    MaskBadAPVFibers = cms.bool(True),
    PixelCPE = cms.string('PixelCPEGeneric'),
    SiStripQualityLabel = cms.string(''),
    StripCPE = cms.string('StripCPEfromTrackAngle'),
    UsePixelModuleQualityDB = cms.bool(True),
    UsePixelROCQualityDB = cms.bool(True),
    UseStripAPVFiberQualityDB = cms.bool(True),
    UseStripModuleQualityDB = cms.bool(True),
    UseStripStripQualityDB = cms.bool(True),
    badStripCuts = cms.PSet(
        TEC = cms.PSet(
            maxBad = cms.uint32(4),
            maxConsecutiveBad = cms.uint32(2)
        ),
        TIB = cms.PSet(
            maxBad = cms.uint32(4),
            maxConsecutiveBad = cms.uint32(2)
        ),
        TID = cms.PSet(
            maxBad = cms.uint32(4),
            maxConsecutiveBad = cms.uint32(2)
        ),
        TOB = cms.PSet(
            maxBad = cms.uint32(4),
            maxConsecutiveBad = cms.uint32(2)
        )
    )
)


process.MuonDetLayerGeometryESProducer = cms.ESProducer("MuonDetLayerGeometryESProducer")


process.MuonTransientTrackingRecHitBuilderESProducer = cms.ESProducer("MuonTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('MuonRecHitBuilder')
)


process.OppositeAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('AnalyticalPropagatorOpposite'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum')
)


process.OppositeAnalyticalPropagatorParabolicMF = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('AnalyticalPropagatorParabolicMfOpposite'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf')
)


process.OppositeMaterialPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialOpposite'),
    Mass = cms.double(0.139),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.OppositeMaterialPropagatorParabolicMF = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialParabolicMfOpposite'),
    Mass = cms.double(0.139),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string('ParabolicMf'),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.ParabolicParametrizedMagneticFieldProducer = cms.ESProducer("AutoParametrizedMagneticFieldProducer",
    label = cms.untracked.string('ParabolicMf'),
    valueOverride = cms.int32(-1),
    version = cms.string('Parabolic')
)


process.PixelCPEGenericESProducer = cms.ESProducer("PixelCPEGenericESProducer",
    Alpha2Order = cms.bool(True),
    ClusterProbComputationFlag = cms.int32(0),
    ComponentName = cms.string('PixelCPEGeneric'),
    DoCosmics = cms.bool(False),
    EdgeClusterErrorX = cms.double(50.0),
    EdgeClusterErrorY = cms.double(85.0),
    IrradiationBiasCorrection = cms.bool(False),
    LoadTemplatesFromDB = cms.bool(True),
    MagneticFieldRecord = cms.ESInputTag(""),
    PixelErrorParametrization = cms.string('NOTcmsim'),
    TruncatePixelCharge = cms.bool(True),
    UseErrorsFromTemplates = cms.bool(True),
    eff_charge_cut_highX = cms.double(1.0),
    eff_charge_cut_highY = cms.double(1.0),
    eff_charge_cut_lowX = cms.double(0.0),
    eff_charge_cut_lowY = cms.double(0.0),
    inflate_all_errors_no_trk_angle = cms.bool(False),
    inflate_errors = cms.bool(False),
    size_cutX = cms.double(3.0),
    size_cutY = cms.double(3.0),
    useLAAlignmentOffsets = cms.bool(False),
    useLAWidthFromDB = cms.bool(True)
)


process.PropagatorWithMaterialForLoopers = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialForLoopers'),
    Mass = cms.double(0.1396),
    MaxDPhi = cms.double(4.0),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1),
    useOldAnalPropLogic = cms.bool(False),
    useRungeKutta = cms.bool(False)
)


process.PropagatorWithMaterialForLoopersOpposite = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('PropagatorWithMaterialForLoopersOpposite'),
    Mass = cms.double(0.1396),
    MaxDPhi = cms.double(4.0),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1),
    useOldAnalPropLogic = cms.bool(False),
    useRungeKutta = cms.bool(False)
)


process.RK1DFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('RK1DFittingSmoother'),
    EstimateCut = cms.double(-1),
    Fitter = cms.string('RK1DFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('RK1DSmoother'),
    appendToDataLabel = cms.string('')
)


process.RK1DTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('RK1DFitter'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFSwitching1DUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.RK1DTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('RK1DSmoother'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFSwitching1DUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100),
    minHits = cms.int32(3)
)


process.RKFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('RKFittingSmoother'),
    EstimateCut = cms.double(-1),
    Fitter = cms.string('RKFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(5),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('RKSmoother'),
    appendToDataLabel = cms.string('')
)


process.RKOutliers1DFittingSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('RKOutliers1DFittingSmoother'),
    EstimateCut = cms.double(20.0),
    Fitter = cms.string('RK1DFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(3),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('RK1DSmoother'),
    appendToDataLabel = cms.string('')
)


process.RKTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('RKFitter'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(3)
)


process.RKTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('RKSmoother'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(100),
    minHits = cms.int32(3)
)


process.RPCGeometryESModule = cms.ESProducer("RPCGeometryESModule",
    compatibiltyWith11 = cms.untracked.bool(True),
    useDDD = cms.untracked.bool(False)
)


process.RungeKuttaTrackerPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('RungeKuttaTrackerPropagator'),
    Mass = cms.double(0.105),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(True)
)


process.RungeKuttaTrackerPropagatorOpposite = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('RungeKuttaTrackerPropagatorOpposite'),
    Mass = cms.double(0.105),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(True)
)


process.SiStripRecHitMatcherESProducer = cms.ESProducer("SiStripRecHitMatcherESProducer",
    ComponentName = cms.string('StandardMatcher'),
    NSigmaInside = cms.double(3.0),
    PreFilter = cms.bool(False)
)


process.SmartPropagator = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('SmartPropagator'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorAlong'),
    PropagationDirection = cms.string('alongMomentum'),
    TrackerPropagator = cms.string('PropagatorWithMaterial')
)


process.SmartPropagatorAny = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('SmartPropagatorAny'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('alongMomentum'),
    TrackerPropagator = cms.string('PropagatorWithMaterial')
)


process.SmartPropagatorAnyOpposite = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('SmartPropagatorAnyOpposite'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    TrackerPropagator = cms.string('PropagatorWithMaterialOpposite')
)


process.SmartPropagatorAnyRK = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('SmartPropagatorAnyRK'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('alongMomentum'),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagator')
)


process.SmartPropagatorAnyRKOpposite = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('SmartPropagatorAnyRKOpposite'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorAny'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagatorOpposite')
)


process.SmartPropagatorOpposite = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('SmartPropagatorOpposite'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    TrackerPropagator = cms.string('PropagatorWithMaterialOpposite')
)


process.SmartPropagatorRK = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('SmartPropagatorRK'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorAlong'),
    PropagationDirection = cms.string('alongMomentum'),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagator')
)


process.SmartPropagatorRKOpposite = cms.ESProducer("SmartPropagatorESProducer",
    ComponentName = cms.string('SmartPropagatorRKOpposite'),
    Epsilon = cms.double(5.0),
    MuonPropagator = cms.string('SteppingHelixPropagatorOpposite'),
    PropagationDirection = cms.string('oppositeToMomentum'),
    TrackerPropagator = cms.string('RungeKuttaTrackerPropagatorOpposite')
)


process.SteppingHelixPropagatorAlong = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAlong'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('alongMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.SteppingHelixPropagatorAlongNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAlongNoError'),
    NoErrorPropagation = cms.bool(True),
    PropagationDirection = cms.string('alongMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.SteppingHelixPropagatorAny = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAny'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('anyDirection'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.SteppingHelixPropagatorAnyNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorAnyNoError'),
    NoErrorPropagation = cms.bool(True),
    PropagationDirection = cms.string('anyDirection'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.SteppingHelixPropagatorL2Along = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorL2Along'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('alongMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(True)
)


process.SteppingHelixPropagatorL2AlongNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorL2AlongNoError'),
    NoErrorPropagation = cms.bool(True),
    PropagationDirection = cms.string('alongMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(True)
)


process.SteppingHelixPropagatorL2Any = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorL2Any'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('anyDirection'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(True)
)


process.SteppingHelixPropagatorL2AnyNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorL2AnyNoError'),
    NoErrorPropagation = cms.bool(True),
    PropagationDirection = cms.string('anyDirection'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(True)
)


process.SteppingHelixPropagatorL2Opposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorL2Opposite'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(True)
)


process.SteppingHelixPropagatorL2OppositeNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorL2OppositeNoError'),
    NoErrorPropagation = cms.bool(True),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(True)
)


process.SteppingHelixPropagatorOpposite = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorOpposite'),
    NoErrorPropagation = cms.bool(False),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.SteppingHelixPropagatorOppositeNoError = cms.ESProducer("SteppingHelixPropagatorESProducer",
    ApplyRadX0Correction = cms.bool(True),
    AssumeNoMaterial = cms.bool(False),
    ComponentName = cms.string('SteppingHelixPropagatorOppositeNoError'),
    NoErrorPropagation = cms.bool(True),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SetVBFPointer = cms.bool(False),
    VBFName = cms.string('VolumeBasedMagneticField'),
    debug = cms.bool(False),
    endcapShiftInZNeg = cms.double(0.0),
    endcapShiftInZPos = cms.double(0.0),
    returnTangentPlane = cms.bool(True),
    sendLogWarning = cms.bool(False),
    useEndcapShiftsInZ = cms.bool(False),
    useInTeslaFromMagField = cms.bool(False),
    useIsYokeFlag = cms.bool(True),
    useMagVolumes = cms.bool(True),
    useMatVolumes = cms.bool(True),
    useTuningForL2Speed = cms.bool(False)
)


process.StraightLinePropagator = cms.ESProducer("StraightLinePropagatorESProducer",
    ComponentName = cms.string('StraightLinePropagator'),
    PropagationDirection = cms.string('alongMomentum')
)


process.StripCPEESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('SimpleStripCPE'),
    ComponentType = cms.string('SimpleStripCPE'),
    parameters = cms.PSet(

    )
)


process.StripCPEfromTrackAngleESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('StripCPEfromTrackAngle'),
    ComponentType = cms.string('StripCPEfromTrackAngle'),
    parameters = cms.PSet(
        mLC_P0 = cms.double(-0.326),
        mLC_P1 = cms.double(0.618),
        mLC_P2 = cms.double(0.3),
        mTEC_P0 = cms.double(-1.885),
        mTEC_P1 = cms.double(0.471),
        mTIB_P0 = cms.double(-0.742),
        mTIB_P1 = cms.double(0.202),
        mTID_P0 = cms.double(-1.427),
        mTID_P1 = cms.double(0.433),
        mTOB_P0 = cms.double(-1.026),
        mTOB_P1 = cms.double(0.253),
        maxChgOneMIP = cms.double(6000.0),
        useLegacyError = cms.bool(False)
    )
)


process.TTRHBuilderAngleAndTemplate = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('WithAngleAndTemplate'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('PixelCPETemplateReco'),
    StripCPE = cms.string('StripCPEfromTrackAngle')
)


process.TrackerRecoGeometryESProducer = cms.ESProducer("TrackerRecoGeometryESProducer")


process.TransientTrackBuilderESProducer = cms.ESProducer("TransientTrackBuilderESProducer",
    ComponentName = cms.string('TransientTrackBuilder')
)


process.VolumeBasedMagneticFieldESProducer = cms.ESProducer("VolumeBasedMagneticFieldESProducerFromDB",
    debugBuilder = cms.untracked.bool(False),
    label = cms.untracked.string(''),
    valueOverride = cms.int32(-1)
)


process.ZdcGeometryFromDBEP = cms.ESProducer("ZdcGeometryFromDBEP",
    applyAlignment = cms.bool(False)
)


process.ak10PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK10PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak10PFCHSL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak10PFCHSL1Fastjet',
        'ak10PFCHSL2Relative',
        'ak10PFCHSL3Absolute',
        'ak10PFCHSResidual'
    )
)


process.ak10PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak10PFCHSL1Offset',
        'ak10PFCHSL2Relative',
        'ak10PFCHSL3Absolute',
        'ak10PFCHSResidual'
    )
)


process.ak10PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK10PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak10PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak10PFCHSL2Relative',
        'ak10PFCHSL3Absolute'
    )
)


process.ak10PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak10PFCHSL2Relative',
        'ak10PFCHSL3Absolute',
        'ak10PFCHSResidual'
    )
)


process.ak10PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK10PFchs'),
    level = cms.string('L2Relative')
)


process.ak10PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK10PFchs'),
    level = cms.string('L3Absolute')
)


process.ak10PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK10PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak10PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK10PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak10PFL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak10PFL1Fastjet',
        'ak10PFL2Relative',
        'ak10PFL3Absolute',
        'ak10PFResidual'
    )
)


process.ak10PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak10PFL1Offset',
        'ak10PFL2Relative',
        'ak10PFL3Absolute',
        'ak10PFResidual'
    )
)


process.ak10PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK10PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak10PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak10PFL2Relative',
        'ak10PFL3Absolute'
    )
)


process.ak10PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak10PFL2Relative',
        'ak10PFL3Absolute',
        'ak10PFResidual'
    )
)


process.ak10PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK10PF'),
    level = cms.string('L2Relative')
)


process.ak10PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK10PF'),
    level = cms.string('L3Absolute')
)


process.ak10PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK10PF'),
    level = cms.string('L2L3Residual')
)


process.ak1PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK1PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak1PFCHSL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak1PFCHSL1Fastjet',
        'ak1PFCHSL2Relative',
        'ak1PFCHSL3Absolute',
        'ak1PFCHSResidual'
    )
)


process.ak1PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak1PFCHSL1Offset',
        'ak1PFCHSL2Relative',
        'ak1PFCHSL3Absolute',
        'ak1PFCHSResidual'
    )
)


process.ak1PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK1PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak1PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak1PFCHSL2Relative',
        'ak1PFCHSL3Absolute'
    )
)


process.ak1PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak1PFCHSL2Relative',
        'ak1PFCHSL3Absolute',
        'ak1PFCHSResidual'
    )
)


process.ak1PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK1PFchs'),
    level = cms.string('L2Relative')
)


process.ak1PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK1PFchs'),
    level = cms.string('L3Absolute')
)


process.ak1PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK1PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak1PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK1PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak1PFL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak1PFL1Fastjet',
        'ak1PFL2Relative',
        'ak1PFL3Absolute',
        'ak1PFResidual'
    )
)


process.ak1PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak1PFL1Offset',
        'ak1PFL2Relative',
        'ak1PFL3Absolute',
        'ak1PFResidual'
    )
)


process.ak1PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK1PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak1PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak1PFL2Relative',
        'ak1PFL3Absolute'
    )
)


process.ak1PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak1PFL2Relative',
        'ak1PFL3Absolute',
        'ak1PFResidual'
    )
)


process.ak1PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK1PF'),
    level = cms.string('L2Relative')
)


process.ak1PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK1PF'),
    level = cms.string('L3Absolute')
)


process.ak1PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK1PF'),
    level = cms.string('L2L3Residual')
)


process.ak2PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK2PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak2PFCHSL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak2PFCHSL1Fastjet',
        'ak2PFCHSL2Relative',
        'ak2PFCHSL3Absolute',
        'ak2PFCHSResidual'
    )
)


process.ak2PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak2PFCHSL1Offset',
        'ak2PFCHSL2Relative',
        'ak2PFCHSL3Absolute',
        'ak2PFCHSResidual'
    )
)


process.ak2PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK2PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak2PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak2PFCHSL2Relative',
        'ak2PFCHSL3Absolute'
    )
)


process.ak2PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak2PFCHSL2Relative',
        'ak2PFCHSL3Absolute',
        'ak2PFCHSResidual'
    )
)


process.ak2PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK2PFchs'),
    level = cms.string('L2Relative')
)


process.ak2PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK2PFchs'),
    level = cms.string('L3Absolute')
)


process.ak2PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK2PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak2PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK2PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak2PFL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak2PFL1Fastjet',
        'ak2PFL2Relative',
        'ak2PFL3Absolute',
        'ak2PFResidual'
    )
)


process.ak2PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak2PFL1Offset',
        'ak2PFL2Relative',
        'ak2PFL3Absolute',
        'ak2PFResidual'
    )
)


process.ak2PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK2PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak2PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak2PFL2Relative',
        'ak2PFL3Absolute'
    )
)


process.ak2PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak2PFL2Relative',
        'ak2PFL3Absolute',
        'ak2PFResidual'
    )
)


process.ak2PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK2PF'),
    level = cms.string('L2Relative')
)


process.ak2PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK2PF'),
    level = cms.string('L3Absolute')
)


process.ak2PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK2PF'),
    level = cms.string('L2L3Residual')
)


process.ak3PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK3PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak3PFCHSL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak3PFCHSL1Fastjet',
        'ak3PFCHSL2Relative',
        'ak3PFCHSL3Absolute',
        'ak3PFCHSResidual'
    )
)


process.ak3PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak3PFCHSL1Offset',
        'ak3PFCHSL2Relative',
        'ak3PFCHSL3Absolute',
        'ak3PFCHSResidual'
    )
)


process.ak3PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK3PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak3PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak3PFCHSL2Relative',
        'ak3PFCHSL3Absolute'
    )
)


process.ak3PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak3PFCHSL2Relative',
        'ak3PFCHSL3Absolute',
        'ak3PFCHSResidual'
    )
)


process.ak3PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK3PFchs'),
    level = cms.string('L2Relative')
)


process.ak3PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK3PFchs'),
    level = cms.string('L3Absolute')
)


process.ak3PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK3PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak3PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK3PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak3PFL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak3PFL1Fastjet',
        'ak3PFL2Relative',
        'ak3PFL3Absolute',
        'ak3PFResidual'
    )
)


process.ak3PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak3PFL1Offset',
        'ak3PFL2Relative',
        'ak3PFL3Absolute',
        'ak3PFResidual'
    )
)


process.ak3PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK3PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak3PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak3PFL2Relative',
        'ak3PFL3Absolute'
    )
)


process.ak3PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak3PFL2Relative',
        'ak3PFL3Absolute',
        'ak3PFResidual'
    )
)


process.ak3PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK3PF'),
    level = cms.string('L2Relative')
)


process.ak3PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK3PF'),
    level = cms.string('L3Absolute')
)


process.ak3PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK3PF'),
    level = cms.string('L2L3Residual')
)


process.ak4CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Fastjet',
        'ak4CaloL2Relative',
        'ak4CaloL3Absolute'
    )
)


process.ak4CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Fastjet',
        'ak4CaloL2Relative',
        'ak4CaloL3Absolute',
        'ak4CaloL6SLB'
    )
)


process.ak4CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Fastjet',
        'ak4CaloL2Relative',
        'ak4CaloL3Absolute',
        'ak4CaloResidual'
    )
)


process.ak4CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAllCalo")
)


process.ak4CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Offset',
        'ak4CaloL2Relative',
        'ak4CaloL3Absolute'
    )
)


process.ak4CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Offset',
        'ak4CaloL2Relative',
        'ak4CaloL3Absolute',
        'ak4CaloResidual'
    )
)


process.ak4CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak4CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL2Relative',
        'ak4CaloL3Absolute'
    )
)


process.ak4CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL2Relative',
        'ak4CaloL3Absolute',
        'ak4CaloL6SLB'
    )
)


process.ak4CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL2Relative',
        'ak4CaloL3Absolute',
        'ak4CaloResidual'
    )
)


process.ak4CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2Relative')
)


process.ak4CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L3Absolute')
)


process.ak4CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("ak4CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak4CaloJetsSoftMuonTagInfos")
)


process.ak4CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5Calo'),
    level = cms.string('L2L3Residual')
)


process.ak4JPTL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4L1JPTFastjet',
        'ak4JPTL2Relative',
        'ak4JPTL3Absolute'
    )
)


process.ak4JPTL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4L1JPTFastjet',
        'ak4JPTL2Relative',
        'ak4JPTL3Absolute',
        'ak4JPTResidual'
    )
)


process.ak4JPTL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4L1JPTOffset',
        'ak4JPTL2Relative',
        'ak4JPTL3Absolute'
    )
)


process.ak4JPTL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4L1JPTOffset',
        'ak4JPTL2Relative',
        'ak4JPTL3Absolute',
        'ak4JPTResidual'
    )
)


process.ak4JPTL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak4JPTL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4L1JPTOffset',
        'ak4JPTL2Relative',
        'ak4JPTL3Absolute'
    )
)


process.ak4JPTL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4L1JPTOffset',
        'ak4JPTL2Relative',
        'ak4JPTL3Absolute',
        'ak4JPTResidual'
    )
)


process.ak4JPTL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L2Relative')
)


process.ak4JPTL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L3Absolute')
)


process.ak4JPTResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L2L3Residual')
)


process.ak4L1JPTFastjet = cms.ESProducer("L1JPTOffsetCorrectionESProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L1JPTOffset'),
    offsetService = cms.string('ak4CaloL1Fastjet')
)


process.ak4L1JPTOffset = cms.ESProducer("L1JPTOffsetCorrectionESProducer",
    algorithm = cms.string('AK4JPT'),
    level = cms.string('L1JPTOffset'),
    offsetService = cms.string('ak4CaloL1Offset')
)


process.ak4PFCHSL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFCHSL1Fastjet',
        'ak4PFCHSL2Relative',
        'ak4PFCHSL3Absolute'
    )
)


process.ak4PFCHSL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFCHSL1Fastjet',
        'ak4PFCHSL2Relative',
        'ak4PFCHSL3Absolute',
        'ak4PFCHSResidual'
    )
)


process.ak4PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak4PFCHSL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFCHSL1Offset',
        'ak4PFCHSL2Relative',
        'ak4PFCHSL3Absolute'
    )
)


process.ak4PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFCHSL1Offset',
        'ak4PFCHSL2Relative',
        'ak4PFCHSL3Absolute',
        'ak4PFCHSResidual'
    )
)


process.ak4PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak4PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFCHSL2Relative',
        'ak4PFCHSL3Absolute'
    )
)


process.ak4PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFCHSL2Relative',
        'ak4PFCHSL3Absolute',
        'ak4PFCHSResidual'
    )
)


process.ak4PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L2Relative')
)


process.ak4PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L3Absolute')
)


process.ak4PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK4PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak4PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'ak4PFL2Relative',
        'ak4PFL3Absolute'
    )
)


process.ak4PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'ak4PFL2Relative',
        'ak4PFL3Absolute',
        'ak4PFL6SLB'
    )
)


process.ak4PFL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'ak4PFL2Relative',
        'ak4PFL3Absolute',
        'ak4PFResidual'
    )
)


process.ak4PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak4PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Offset',
        'ak4PFL2Relative',
        'ak4PFL3Absolute'
    )
)


process.ak4PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Offset',
        'ak4PFL2Relative',
        'ak4PFL3Absolute',
        'ak4PFResidual'
    )
)


process.ak4PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak4PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL2Relative',
        'ak4PFL3Absolute'
    )
)


process.ak4PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL2Relative',
        'ak4PFL3Absolute',
        'ak4PFL6SLB'
    )
)


process.ak4PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL2Relative',
        'ak4PFL3Absolute',
        'ak4PFResidual'
    )
)


process.ak4PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L2Relative')
)


process.ak4PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L3Absolute')
)


process.ak4PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("ak4PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak4PFJetsSoftMuonTagInfos")
)


process.ak4PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK4PF'),
    level = cms.string('L2L3Residual')
)


process.ak4TrackL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Fastjet',
        'ak4TrackL2Relative',
        'ak4TrackL3Absolute'
    )
)


process.ak4TrackL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4TrackL2Relative',
        'ak4TrackL3Absolute'
    )
)


process.ak4TrackL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5TRK'),
    level = cms.string('L2Relative')
)


process.ak4TrackL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5TRK'),
    level = cms.string('L3Absolute')
)


process.ak5PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK5PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak5PFCHSL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak5PFCHSL1Fastjet',
        'ak5PFCHSL2Relative',
        'ak5PFCHSL3Absolute',
        'ak5PFCHSResidual'
    )
)


process.ak5PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak5PFCHSL1Offset',
        'ak5PFCHSL2Relative',
        'ak5PFCHSL3Absolute',
        'ak5PFCHSResidual'
    )
)


process.ak5PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK5PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak5PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak5PFCHSL2Relative',
        'ak5PFCHSL3Absolute'
    )
)


process.ak5PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak5PFCHSL2Relative',
        'ak5PFCHSL3Absolute',
        'ak5PFCHSResidual'
    )
)


process.ak5PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PFchs'),
    level = cms.string('L2Relative')
)


process.ak5PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PFchs'),
    level = cms.string('L3Absolute')
)


process.ak5PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak5PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak5PFL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak5PFL1Fastjet',
        'ak5PFL2Relative',
        'ak5PFL3Absolute',
        'ak5PFResidual'
    )
)


process.ak5PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak5PFL1Offset',
        'ak5PFL2Relative',
        'ak5PFL3Absolute',
        'ak5PFResidual'
    )
)


process.ak5PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak5PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak5PFL2Relative',
        'ak5PFL3Absolute'
    )
)


process.ak5PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak5PFL2Relative',
        'ak5PFL3Absolute',
        'ak5PFResidual'
    )
)


process.ak5PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2Relative')
)


process.ak5PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L3Absolute')
)


process.ak5PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK5PF'),
    level = cms.string('L2L3Residual')
)


process.ak6PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK6PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak6PFCHSL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak6PFCHSL1Fastjet',
        'ak6PFCHSL2Relative',
        'ak6PFCHSL3Absolute',
        'ak6PFCHSResidual'
    )
)


process.ak6PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak6PFCHSL1Offset',
        'ak6PFCHSL2Relative',
        'ak6PFCHSL3Absolute',
        'ak6PFCHSResidual'
    )
)


process.ak6PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK6PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak6PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak6PFCHSL2Relative',
        'ak6PFCHSL3Absolute'
    )
)


process.ak6PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak6PFCHSL2Relative',
        'ak6PFCHSL3Absolute',
        'ak6PFCHSResidual'
    )
)


process.ak6PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK6PFchs'),
    level = cms.string('L2Relative')
)


process.ak6PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK6PFchs'),
    level = cms.string('L3Absolute')
)


process.ak6PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK6PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak6PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK6PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak6PFL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak6PFL1Fastjet',
        'ak6PFL2Relative',
        'ak6PFL3Absolute',
        'ak6PFResidual'
    )
)


process.ak6PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak6PFL1Offset',
        'ak6PFL2Relative',
        'ak6PFL3Absolute',
        'ak6PFResidual'
    )
)


process.ak6PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK6PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak6PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak6PFL2Relative',
        'ak6PFL3Absolute'
    )
)


process.ak6PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak6PFL2Relative',
        'ak6PFL3Absolute',
        'ak6PFResidual'
    )
)


process.ak6PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK6PF'),
    level = cms.string('L2Relative')
)


process.ak6PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK6PF'),
    level = cms.string('L3Absolute')
)


process.ak6PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK6PF'),
    level = cms.string('L2L3Residual')
)


process.ak7CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Fastjet',
        'ak7CaloL2Relative',
        'ak7CaloL3Absolute'
    )
)


process.ak7CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7CaloL1Offset',
        'ak7CaloL2Relative',
        'ak7CaloL3Absolute',
        'ak7CaloL6SLB'
    )
)


process.ak7CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7CaloL1Fastjet',
        'ak7CaloL2Relative',
        'ak7CaloL3Absolute',
        'ak7CaloResidual'
    )
)


process.ak7CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAllCalo")
)


process.ak7CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7CaloL1Offset',
        'ak7CaloL2Relative',
        'ak7CaloL3Absolute'
    )
)


process.ak7CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7CaloL1Offset',
        'ak7CaloL2Relative',
        'ak7CaloL3Absolute',
        'ak7CaloResidual'
    )
)


process.ak7CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak7CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7CaloL2Relative',
        'ak7CaloL3Absolute'
    )
)


process.ak7CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7CaloL2Relative',
        'ak7CaloL3Absolute',
        'ak7CaloL6SLB'
    )
)


process.ak7CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7CaloL2Relative',
        'ak7CaloL3Absolute',
        'ak7CaloResidual'
    )
)


process.ak7CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L2Relative')
)


process.ak7CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L3Absolute')
)


process.ak7CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("ak7CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak7CaloJetsSoftMuonTagInfos")
)


process.ak7CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7Calo'),
    level = cms.string('L2L3Residual')
)


process.ak7JPTL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7L1JPTFastjet',
        'ak7JPTL2Relative',
        'ak7JPTL3Absolute'
    )
)


process.ak7JPTL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7L1JPTFastjet',
        'ak7JPTL2Relative',
        'ak7JPTL3Absolute',
        'ak7JPTResidual'
    )
)


process.ak7JPTL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7L1JPTOffset',
        'ak7JPTL2Relative',
        'ak7JPTL3Absolute'
    )
)


process.ak7JPTL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7L1JPTOffset',
        'ak7JPTL2Relative',
        'ak7JPTL3Absolute',
        'ak7JPTResidual'
    )
)


process.ak7JPTL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7L1JPTOffset',
        'ak7JPTL2Relative',
        'ak7JPTL3Absolute'
    )
)


process.ak7L1JPTFastjet = cms.ESProducer("L1JPTOffsetCorrectionESProducer",
    algorithm = cms.string('AK7JPT'),
    level = cms.string('L1JPTOffset'),
    offsetService = cms.string('ak7CaloL1Fastjet')
)


process.ak7L1JPTOffset = cms.ESProducer("L1JPTOffsetCorrectionESProducer",
    algorithm = cms.string('AK7JPT'),
    level = cms.string('L1JPTOffset'),
    offsetService = cms.string('ak7CaloL1Offset')
)


process.ak7PFCHSL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFCHSL1Fastjet',
        'ak7PFCHSL2Relative',
        'ak7PFCHSL3Absolute'
    )
)


process.ak7PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK7PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak7PFCHSL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFCHSL1Fastjet',
        'ak7PFCHSL2Relative',
        'ak7PFCHSL3Absolute',
        'ak7PFCHSResidual'
    )
)


process.ak7PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFCHSL1Offset',
        'ak7PFCHSL2Relative',
        'ak7PFCHSL3Absolute',
        'ak7PFCHSResidual'
    )
)


process.ak7PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK7PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak7PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFCHSL2Relative',
        'ak7PFCHSL3Absolute'
    )
)


process.ak7PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFCHSL2Relative',
        'ak7PFCHSL3Absolute',
        'ak7PFCHSResidual'
    )
)


process.ak7PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7PFchs'),
    level = cms.string('L2Relative')
)


process.ak7PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7PFchs'),
    level = cms.string('L3Absolute')
)


process.ak7PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak7PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'ak7PFL2Relative',
        'ak7PFL3Absolute'
    )
)


process.ak7PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'ak7PFL2Relative',
        'ak7PFL3Absolute',
        'ak7PFL6SLB'
    )
)


process.ak7PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK7PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak7PFL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFL1Fastjet',
        'ak7PFL2Relative',
        'ak7PFL3Absolute',
        'ak7PFResidual'
    )
)


process.ak7PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFL1Offset',
        'ak7PFL2Relative',
        'ak7PFL3Absolute'
    )
)


process.ak7PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFL1Offset',
        'ak7PFL2Relative',
        'ak7PFL3Absolute',
        'ak7PFResidual'
    )
)


process.ak7PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK7PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak7PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFL2Relative',
        'ak7PFL3Absolute'
    )
)


process.ak7PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFL2Relative',
        'ak7PFL3Absolute',
        'ak7PFL6SLB'
    )
)


process.ak7PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak7PFL2Relative',
        'ak7PFL3Absolute',
        'ak7PFResidual'
    )
)


process.ak7PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7PF'),
    level = cms.string('L2Relative')
)


process.ak7PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7PF'),
    level = cms.string('L3Absolute')
)


process.ak7PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("ak7PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ak7PFJetsSoftMuonTagInfos")
)


process.ak7PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK7PF'),
    level = cms.string('L2L3Residual')
)


process.ak8PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK8PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak8PFCHSL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak8PFCHSL1Fastjet',
        'ak8PFCHSL2Relative',
        'ak8PFCHSL3Absolute',
        'ak8PFCHSResidual'
    )
)


process.ak8PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak8PFCHSL1Offset',
        'ak8PFCHSL2Relative',
        'ak8PFCHSL3Absolute',
        'ak8PFCHSResidual'
    )
)


process.ak8PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK8PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak8PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak8PFCHSL2Relative',
        'ak8PFCHSL3Absolute'
    )
)


process.ak8PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak8PFCHSL2Relative',
        'ak8PFCHSL3Absolute',
        'ak8PFCHSResidual'
    )
)


process.ak8PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK8PFchs'),
    level = cms.string('L2Relative')
)


process.ak8PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK8PFchs'),
    level = cms.string('L3Absolute')
)


process.ak8PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK8PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak8PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK8PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak8PFL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak8PFL1Fastjet',
        'ak8PFL2Relative',
        'ak8PFL3Absolute',
        'ak8PFResidual'
    )
)


process.ak8PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak8PFL1Offset',
        'ak8PFL2Relative',
        'ak8PFL3Absolute',
        'ak8PFResidual'
    )
)


process.ak8PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK8PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak8PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak8PFL2Relative',
        'ak8PFL3Absolute'
    )
)


process.ak8PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak8PFL2Relative',
        'ak8PFL3Absolute',
        'ak8PFResidual'
    )
)


process.ak8PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK8PF'),
    level = cms.string('L2Relative')
)


process.ak8PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK8PF'),
    level = cms.string('L3Absolute')
)


process.ak8PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK8PF'),
    level = cms.string('L2L3Residual')
)


process.ak9PFCHSL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK9PFchs'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak9PFCHSL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak9PFCHSL1Fastjet',
        'ak9PFCHSL2Relative',
        'ak9PFCHSL3Absolute',
        'ak9PFCHSResidual'
    )
)


process.ak9PFCHSL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak9PFCHSL1Offset',
        'ak9PFCHSL2Relative',
        'ak9PFCHSL3Absolute',
        'ak9PFCHSResidual'
    )
)


process.ak9PFCHSL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK9PFchs'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak9PFCHSL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak9PFCHSL2Relative',
        'ak9PFCHSL3Absolute'
    )
)


process.ak9PFCHSL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak9PFCHSL2Relative',
        'ak9PFCHSL3Absolute',
        'ak9PFCHSResidual'
    )
)


process.ak9PFCHSL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK9PFchs'),
    level = cms.string('L2Relative')
)


process.ak9PFCHSL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK9PFchs'),
    level = cms.string('L3Absolute')
)


process.ak9PFCHSResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK9PFchs'),
    level = cms.string('L2L3Residual')
)


process.ak9PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('AK9PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ak9PFL1FastjetL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak9PFL1Fastjet',
        'ak9PFL2Relative',
        'ak9PFL3Absolute',
        'ak9PFResidual'
    )
)


process.ak9PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak9PFL1Offset',
        'ak9PFL2Relative',
        'ak9PFL3Absolute',
        'ak9PFResidual'
    )
)


process.ak9PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('AK9PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ak9PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak9PFL2Relative',
        'ak9PFL3Absolute'
    )
)


process.ak9PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak9PFL2Relative',
        'ak9PFL3Absolute',
        'ak9PFResidual'
    )
)


process.ak9PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK9PF'),
    level = cms.string('L2Relative')
)


process.ak9PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK9PF'),
    level = cms.string('L3Absolute')
)


process.ak9PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('AK9PF'),
    level = cms.string('L2L3Residual')
)


process.beamHaloNavigationSchoolESProducer = cms.ESProducer("NavigationSchoolESProducer",
    ComponentName = cms.string('BeamHaloNavigationSchool'),
    SimpleMagneticField = cms.string('')
)


process.bwdAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('bwdAnalyticalPropagator'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum')
)


process.bwdGsfElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('bwdGsfElectronPropagator'),
    Mass = cms.double(0.000511),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.caloDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('CaloDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.cosmicsNavigationSchoolESProducer = cms.ESProducer("SkippingLayerCosmicNavigationSchoolESProducer",
    ComponentName = cms.string('CosmicNavigationSchool'),
    allSelf = cms.bool(True),
    noPXB = cms.bool(False),
    noPXF = cms.bool(False),
    noTEC = cms.bool(False),
    noTIB = cms.bool(False),
    noTID = cms.bool(False),
    noTOB = cms.bool(False),
    selfSearch = cms.bool(True)
)


process.detachedQuadStepChi2Est = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('detachedQuadStepChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3),
    pTChargeCutThreshold = cms.double(-1)
)


process.detachedQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('detachedQuadStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.13)
)


process.detachedTripletStepChi2Est = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('detachedTripletStepChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1)
)


process.detachedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('detachedTripletStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.13)
)


process.duplicateDisplaceTrackCandidatesChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('duplicateDisplacedTrackCandidatesChi2Est'),
    MaxChi2 = cms.double(100),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3)
)


process.duplicateTrackCandidatesChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('duplicateTrackCandidatesChi2Est'),
    MaxChi2 = cms.double(100),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3)
)


process.ecalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('EcalDetIdAssociator'),
    etaBinSize = cms.double(0.02),
    nEta = cms.int32(300),
    nPhi = cms.int32(360)
)


process.ecalNextToDeadChannelESProducer = cms.ESProducer("EcalNextToDeadChannelESProducer",
    channelStatusThresholdForDead = cms.int32(12)
)


process.ecalSeverityLevel = cms.ESProducer("EcalSeverityLevelESProducer",
    dbstatusMask = cms.PSet(
        kBad = cms.vstring(
            'kNonRespondingIsolated',
            'kDeadVFE',
            'kDeadFE',
            'kNoDataNoTP'
        ),
        kGood = cms.vstring('kOk'),
        kProblematic = cms.vstring(
            'kDAC',
            'kNoLaser',
            'kNoisy',
            'kNNoisy',
            'kNNNoisy',
            'kNNNNoisy',
            'kNNNNNoisy',
            'kFixedG6',
            'kFixedG1',
            'kFixedG0'
        ),
        kRecovered = cms.vstring(),
        kTime = cms.vstring(),
        kWeird = cms.vstring()
    ),
    flagMask = cms.PSet(
        kBad = cms.vstring(
            'kFaultyHardware',
            'kDead',
            'kKilled'
        ),
        kGood = cms.vstring('kGood'),
        kProblematic = cms.vstring(
            'kPoorReco',
            'kPoorCalib',
            'kNoisy',
            'kSaturated'
        ),
        kRecovered = cms.vstring(
            'kLeadingEdgeRecovered',
            'kTowerRecovered'
        ),
        kTime = cms.vstring('kOutOfTime'),
        kWeird = cms.vstring(
            'kWeird',
            'kDiWeird'
        )
    ),
    timeThresh = cms.double(2.0)
)


process.electronTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('electronTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(0.0),
    ValidHitBonus = cms.double(1000.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.19)
)


process.fakeForIdealAlignment = cms.ESProducer("FakeAlignmentProducer",
    appendToDataLabel = cms.string('fakeForIdeal')
)


process.fwdAnalyticalPropagator = cms.ESProducer("AnalyticalPropagatorESProducer",
    ComponentName = cms.string('fwdAnalyticalPropagator'),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum')
)


process.fwdGsfElectronPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('fwdGsfElectronPropagator'),
    Mass = cms.double(0.000511),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(-1.0),
    useRungeKutta = cms.bool(False)
)


process.hcalDDDRecConstants = cms.ESProducer("HcalDDDRecConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalDDDSimConstants = cms.ESProducer("HcalDDDSimConstantsESModule",
    appendToDataLabel = cms.string('')
)


process.hcalDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HcalDetIdAssociator'),
    etaBinSize = cms.double(0.087),
    hcalRegion = cms.int32(2),
    nEta = cms.int32(70),
    nPhi = cms.int32(72)
)


process.hcalOOTPileupESProducer = cms.ESProducer("OOTPileupDBCompatibilityESProducer")


process.hcalRecAlgos = cms.ESProducer("HcalRecAlgoESProducer",
    DropChannelStatusBits = cms.vstring(
        'HcalCellMask',
        'HcalCellOff',
        'HcalCellDead'
    ),
    RecoveredRecHitBits = cms.vstring(
        'TimingAddedBit',
        'TimingSubtractedBit'
    ),
    SeverityLevels = cms.VPSet(
        cms.PSet(
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(0),
            RecHitFlags = cms.vstring('')
        ),
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellCaloTowerProb'),
            Level = cms.int32(1),
            RecHitFlags = cms.vstring('')
        ),
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellExcludeFromHBHENoiseSummary'),
            Level = cms.int32(5),
            RecHitFlags = cms.vstring(
                'HSCP_R1R2',
                'HSCP_FracLeader',
                'HSCP_OuterEnergy',
                'HSCP_ExpFit',
                'ADCSaturationBit',
                'HBHEIsolatedNoise',
                'AddedSimHcalNoise'
            )
        ),
        cms.PSet(
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(8),
            RecHitFlags = cms.vstring(
                'HBHEHpdHitMultiplicity',
                'HBHEPulseShape',
                'HOBit',
                'HFDigiTime',
                'HFInTimeWindow',
                'ZDCBit',
                'CalibrationBit',
                'TimingErrorBit',
                'HBHEFlatNoise',
                'HBHESpikeNoise',
                'HBHETriangleNoise',
                'HBHETS4TS5Noise',
                'HBHENegativeNoise',
                'HBHEOOTPU'
            )
        ),
        cms.PSet(
            ChannelStatus = cms.vstring(''),
            Level = cms.int32(11),
            RecHitFlags = cms.vstring(
                'HFLongShort',
                'HFPET',
                'HFS8S1Ratio'
            )
        ),
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellCaloTowerMask'),
            Level = cms.int32(12),
            RecHitFlags = cms.vstring('')
        ),
        cms.PSet(
            ChannelStatus = cms.vstring('HcalCellHot'),
            Level = cms.int32(15),
            RecHitFlags = cms.vstring('')
        ),
        cms.PSet(
            ChannelStatus = cms.vstring(
                'HcalCellOff',
                'HcalCellDead'
            ),
            Level = cms.int32(20),
            RecHitFlags = cms.vstring('')
        )
    ),
    appendToDataLabel = cms.string(''),
    phase = cms.uint32(0)
)


process.hcalTopologyIdeal = cms.ESProducer("HcalTopologyIdealEP",
    Exclude = cms.untracked.string(''),
    MergePosition = cms.untracked.bool(False),
    appendToDataLabel = cms.string('')
)


process.hcal_db_producer = cms.ESProducer("HcalDbProducer",
    dump = cms.untracked.vstring(''),
    file = cms.untracked.string('')
)


process.hiDetachedQuadStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hiDetachedQuadStepChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hiDetachedTripletStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hiDetachedTripletStepChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hiHighPtTripletStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hiHighPtTripletStepChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hiJetCoreRegionalStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hiJetCoreRegionalStepChi2Est'),
    MaxChi2 = cms.double(30.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hiLowPtQuadStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hiLowPtQuadStepChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hiLowPtTripletStepChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hiLowPtTripletStepChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.hiPixelPairChi2Est = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hiPixelPairChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.highPtTripletStepChi2Est = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('highPtTripletStepChi2Est'),
    MaxChi2 = cms.double(30),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    nSigma = cms.double(3),
    pTChargeCutThreshold = cms.double(15.0)
)


process.highPtTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('highPtTripletStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.16)
)


process.hitCollectorForOutInMuonSeeds = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('hitCollectorForOutInMuonSeeds'),
    MaxChi2 = cms.double(100.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(4.0)
)


process.hoDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('HODetIdAssociator'),
    etaBinSize = cms.double(0.087),
    nEta = cms.int32(30),
    nPhi = cms.int32(72)
)


process.ic5CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Fastjet',
        'ic5CaloL2Relative',
        'ic5CaloL3Absolute'
    )
)


process.ic5CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5CaloL1Offset',
        'ic5CaloL2Relative',
        'ic5CaloL3Absolute',
        'ic5CaloL6SLB'
    )
)


process.ic5CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5CaloL1Fastjet',
        'ic5CaloL2Relative',
        'ic5CaloL3Absolute',
        'ic5CaloResidual'
    )
)


process.ic5CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAllCalo")
)


process.ic5CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5CaloL1Offset',
        'ic5CaloL2Relative',
        'ic5CaloL3Absolute'
    )
)


process.ic5CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5CaloL1Offset',
        'ic5CaloL2Relative',
        'ic5CaloL3Absolute',
        'ic5CaloResidual'
    )
)


process.ic5CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ic5CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5CaloL2Relative',
        'ic5CaloL3Absolute'
    )
)


process.ic5CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5CaloL2Relative',
        'ic5CaloL3Absolute',
        'ic5CaloL6SLB'
    )
)


process.ic5CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5CaloL2Relative',
        'ic5CaloL3Absolute',
        'ic5CaloResidual'
    )
)


process.ic5CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L2Relative')
)


process.ic5CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L3Absolute')
)


process.ic5CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("ic5CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ic5CaloJetsSoftMuonTagInfos")
)


process.ic5CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5Calo'),
    level = cms.string('L2L3Residual')
)


process.ic5PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'ic5PFL2Relative',
        'ic5PFL3Absolute'
    )
)


process.ic5PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'ic5PFL2Relative',
        'ic5PFL3Absolute',
        'ic5PFL6SLB'
    )
)


process.ic5PFL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5PFL1Fastjet',
        'ic5PFL2Relative',
        'ic5PFL3Absolute',
        'ic5PFResidual'
    )
)


process.ic5PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('IC5PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.ic5PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5PFL1Offset',
        'ic5PFL2Relative',
        'ic5PFL3Absolute'
    )
)


process.ic5PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5PFL1Offset',
        'ic5PFL2Relative',
        'ic5PFL3Absolute',
        'ic5PFResidual'
    )
)


process.ic5PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('IC5PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.ic5PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5PFL2Relative',
        'ic5PFL3Absolute'
    )
)


process.ic5PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5PFL2Relative',
        'ic5PFL3Absolute',
        'ic5PFL6SLB'
    )
)


process.ic5PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ic5PFL2Relative',
        'ic5PFL3Absolute',
        'ic5PFResidual'
    )
)


process.ic5PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5PF'),
    level = cms.string('L2Relative')
)


process.ic5PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5PF'),
    level = cms.string('L3Absolute')
)


process.ic5PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("ic5PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("ic5PFJetsSoftMuonTagInfos")
)


process.ic5PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('IC5PF'),
    level = cms.string('L2L3Residual')
)


process.idealForDigiCSCGeometry = cms.ESProducer("CSCGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    debugV = cms.untracked.bool(False),
    useCentreTIOffsets = cms.bool(False),
    useDDD = cms.bool(False),
    useGangedStripsInME1a = cms.bool(False),
    useOnlyWiresInME1a = cms.bool(False),
    useRealWireGeometry = cms.bool(True)
)


process.idealForDigiDTGeometry = cms.ESProducer("DTGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.idealForDigiTrackerGeometry = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string('fakeForIdeal'),
    appendToDataLabel = cms.string('idealForDigi'),
    applyAlignment = cms.bool(False),
    fromDDD = cms.bool(False)
)


process.initialStepChi2Est = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('initialStepChi2Est'),
    MaxChi2 = cms.double(30.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(15.0)
)


process.kt4CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Fastjet',
        'kt4CaloL2Relative',
        'kt4CaloL3Absolute'
    )
)


process.kt4CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4CaloL1Offset',
        'kt4CaloL2Relative',
        'kt4CaloL3Absolute',
        'kt4CaloL6SLB'
    )
)


process.kt4CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4CaloL1Fastjet',
        'kt4CaloL2Relative',
        'kt4CaloL3Absolute',
        'kt4CaloResidual'
    )
)


process.kt4CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAllCalo")
)


process.kt4CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4CaloL1Offset',
        'kt4CaloL2Relative',
        'kt4CaloL3Absolute'
    )
)


process.kt4CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4CaloL1Offset',
        'kt4CaloL2Relative',
        'kt4CaloL3Absolute',
        'kt4CaloResidual'
    )
)


process.kt4CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.kt4CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4CaloL2Relative',
        'kt4CaloL3Absolute'
    )
)


process.kt4CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4CaloL2Relative',
        'kt4CaloL3Absolute',
        'kt4CaloL6SLB'
    )
)


process.kt4CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4CaloL2Relative',
        'kt4CaloL3Absolute',
        'kt4CaloResidual'
    )
)


process.kt4CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L2Relative')
)


process.kt4CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L3Absolute')
)


process.kt4CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("kt4CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("kt4CaloJetsSoftMuonTagInfos")
)


process.kt4CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4Calo'),
    level = cms.string('L2L3Residual')
)


process.kt4PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'kt4PFL2Relative',
        'kt4PFL3Absolute'
    )
)


process.kt4PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'kt4PFL2Relative',
        'kt4PFL3Absolute',
        'kt4PFL6SLB'
    )
)


process.kt4PFL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4PFL1Fastjet',
        'kt4PFL2Relative',
        'kt4PFL3Absolute',
        'kt4PFResidual'
    )
)


process.kt4PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('KT4PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.kt4PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4PFL1Offset',
        'kt4PFL2Relative',
        'kt4PFL3Absolute'
    )
)


process.kt4PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4PFL1Offset',
        'kt4PFL2Relative',
        'kt4PFL3Absolute',
        'kt4PFResidual'
    )
)


process.kt4PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('KT4PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.kt4PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4PFL2Relative',
        'kt4PFL3Absolute'
    )
)


process.kt4PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4PFL2Relative',
        'kt4PFL3Absolute',
        'kt4PFL6SLB'
    )
)


process.kt4PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt4PFL2Relative',
        'kt4PFL3Absolute',
        'kt4PFResidual'
    )
)


process.kt4PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4PF'),
    level = cms.string('L2Relative')
)


process.kt4PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4PF'),
    level = cms.string('L3Absolute')
)


process.kt4PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("kt4PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("kt4PFJetsSoftMuonTagInfos")
)


process.kt4PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT4PF'),
    level = cms.string('L2L3Residual')
)


process.kt6CaloL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4CaloL1Fastjet',
        'kt6CaloL2Relative',
        'kt6CaloL3Absolute'
    )
)


process.kt6CaloL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6CaloL1Offset',
        'kt6CaloL2Relative',
        'kt6CaloL3Absolute',
        'kt6CaloL6SLB'
    )
)


process.kt6CaloL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6CaloL1Fastjet',
        'kt6CaloL2Relative',
        'kt6CaloL3Absolute',
        'kt6CaloResidual'
    )
)


process.kt6CaloL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAllCalo")
)


process.kt6CaloL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6CaloL1Offset',
        'kt6CaloL2Relative',
        'kt6CaloL3Absolute'
    )
)


process.kt6CaloL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6CaloL1Offset',
        'kt6CaloL2Relative',
        'kt6CaloL3Absolute',
        'kt6CaloResidual'
    )
)


process.kt6CaloL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.kt6CaloL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6CaloL2Relative',
        'kt6CaloL3Absolute'
    )
)


process.kt6CaloL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6CaloL2Relative',
        'kt6CaloL3Absolute',
        'kt6CaloL6SLB'
    )
)


process.kt6CaloL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6CaloL2Relative',
        'kt6CaloL3Absolute',
        'kt6CaloResidual'
    )
)


process.kt6CaloL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L2Relative')
)


process.kt6CaloL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L3Absolute')
)


process.kt6CaloL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(True),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("kt6CaloJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("kt6CaloJetsSoftMuonTagInfos")
)


process.kt6CaloResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6Calo'),
    level = cms.string('L2L3Residual')
)


process.kt6PFL1FastL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'kt6PFL2Relative',
        'kt6PFL3Absolute'
    )
)


process.kt6PFL1FastL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'ak4PFL1Fastjet',
        'kt6PFL2Relative',
        'kt6PFL3Absolute',
        'kt6PFL6SLB'
    )
)


process.kt6PFL1FastL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6PFL1Fastjet',
        'kt6PFL2Relative',
        'kt6PFL3Absolute',
        'kt6PFResidual'
    )
)


process.kt6PFL1Fastjet = cms.ESProducer("L1FastjetCorrectionESProducer",
    algorithm = cms.string('KT6PF'),
    level = cms.string('L1FastJet'),
    srcRho = cms.InputTag("fixedGridRhoFastjetAll")
)


process.kt6PFL1L2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6PFL1Offset',
        'kt6PFL2Relative',
        'kt6PFL3Absolute'
    )
)


process.kt6PFL1L2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6PFL1Offset',
        'kt6PFL2Relative',
        'kt6PFL3Absolute',
        'kt6PFResidual'
    )
)


process.kt6PFL1Offset = cms.ESProducer("L1OffsetCorrectionESProducer",
    algorithm = cms.string('KT6PF'),
    level = cms.string('L1Offset'),
    minVtxNdof = cms.int32(4),
    vertexCollection = cms.string('offlinePrimaryVertices')
)


process.kt6PFL2L3 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6PFL2Relative',
        'kt6PFL3Absolute'
    )
)


process.kt6PFL2L3L6 = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6PFL2Relative',
        'kt6PFL3Absolute',
        'kt6PFL6SLB'
    )
)


process.kt6PFL2L3Residual = cms.ESProducer("JetCorrectionESChain",
    correctors = cms.vstring(
        'kt6PFL2Relative',
        'kt6PFL3Absolute',
        'kt6PFResidual'
    )
)


process.kt6PFL2Relative = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6PF'),
    level = cms.string('L2Relative')
)


process.kt6PFL3Absolute = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6PF'),
    level = cms.string('L3Absolute')
)


process.kt6PFL6SLB = cms.ESProducer("L6SLBCorrectionESProducer",
    addMuonToJet = cms.bool(False),
    algorithm = cms.string(''),
    level = cms.string('L6SLB'),
    srcBTagInfoElectron = cms.InputTag("kt6PFJetsSoftElectronTagInfos"),
    srcBTagInfoMuon = cms.InputTag("kt6PFJetsSoftMuonTagInfos")
)


process.kt6PFResidual = cms.ESProducer("LXXXCorrectionESProducer",
    algorithm = cms.string('KT6PF'),
    level = cms.string('L2L3Residual')
)


process.lowPtQuadStepChi2Est = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('lowPtQuadStepChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3),
    pTChargeCutThreshold = cms.double(-1)
)


process.lowPtQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('lowPtQuadStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.16)
)


process.mixedTripletStepChi2Est = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('mixedTripletStepChi2Est'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1)
)


process.mixedTripletStepClusterShapeHitFilter = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('mixedTripletStepClusterShapeHitFilter'),
    PixelShapeFile = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase0.par'),
    PixelShapeFileL1 = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase0.par'),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    )
)


process.mixedTripletStepPropagator = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('mixedTripletStepPropagator'),
    Mass = cms.double(0.139),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('alongMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(0.4),
    useRungeKutta = cms.bool(False)
)


process.mixedTripletStepPropagatorOpposite = cms.ESProducer("PropagatorWithMaterialESProducer",
    ComponentName = cms.string('mixedTripletStepPropagatorOpposite'),
    Mass = cms.double(0.139),
    MaxDPhi = cms.double(1.6),
    PropagationDirection = cms.string('oppositeToMomentum'),
    SimpleMagneticField = cms.string(''),
    ptMin = cms.double(0.4),
    useRungeKutta = cms.bool(False)
)


process.mixedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('mixedTripletStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.11)
)


process.muonDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('MuonDetIdAssociator'),
    etaBinSize = cms.double(0.125),
    includeBadChambers = cms.bool(True),
    includeGEM = cms.bool(False),
    includeME0 = cms.bool(False),
    nEta = cms.int32(48),
    nPhi = cms.int32(48)
)


process.muonSeededFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(False),
    ComponentName = cms.string('muonSeededFittingSmootherWithOutliersRejectionAndRK'),
    EstimateCut = cms.double(50.0),
    Fitter = cms.string('RKFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(3),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('RKSmoother'),
    appendToDataLabel = cms.string('')
)


process.muonSeededMeasurementEstimatorForInOut = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('muonSeededMeasurementEstimatorForInOut'),
    MaxChi2 = cms.double(80.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(4.0)
)


process.muonSeededMeasurementEstimatorForOutIn = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('muonSeededMeasurementEstimatorForOutIn'),
    MaxChi2 = cms.double(30.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(-1.0),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.muonSeededMeasurementEstimatorForOutInDisplaced = cms.ESProducer("Chi2MeasurementEstimatorESProducer",
    ComponentName = cms.string('muonSeededMeasurementEstimatorForOutInDisplaced'),
    MaxChi2 = cms.double(30.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    nSigma = cms.double(3.0)
)


process.muonSeededTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('muonSeededTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(1.0),
    ValidHitBonus = cms.double(1000.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.1)
)


process.myTTRHBuilderWithoutAngle4MixedPairs = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('TTRHBuilderWithoutAngle4MixedPairs'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('PixelCPEGeneric'),
    StripCPE = cms.string('Fake')
)


process.myTTRHBuilderWithoutAngle4MixedTriplets = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('TTRHBuilderWithoutAngle4MixedTriplets'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('PixelCPEGeneric'),
    StripCPE = cms.string('Fake')
)


process.myTTRHBuilderWithoutAngle4PixelPairs = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('TTRHBuilderWithoutAngle4PixelPairs'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('PixelCPEGeneric'),
    StripCPE = cms.string('Fake')
)


process.myTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('TTRHBuilderWithoutAngle4PixelTriplets'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('PixelCPEGeneric'),
    StripCPE = cms.string('Fake')
)


process.navigationSchoolESProducer = cms.ESProducer("NavigationSchoolESProducer",
    ComponentName = cms.string('SimpleNavigationSchool'),
    SimpleMagneticField = cms.string('')
)


process.pixelLessStepChi2Est = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('pixelLessStepChi2Est'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1)
)


process.pixelLessStepClusterShapeHitFilter = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('pixelLessStepClusterShapeHitFilter'),
    PixelShapeFile = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase0.par'),
    PixelShapeFileL1 = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase0.par'),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    ),
    doStripShapeCut = cms.bool(False)
)


process.pixelLessStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('pixelLessStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.11)
)


process.pixelPairStepChi2Est = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('pixelPairStepChi2Est'),
    MaxChi2 = cms.double(9.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutLoose')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(15.0)
)


process.pixelPairStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('pixelPairStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.095)
)


process.pixelTrackCleanerBySharedHits = cms.ESProducer("PixelTrackCleanerBySharedHitsESProducer",
    ComponentName = cms.string('pixelTrackCleanerBySharedHits'),
    appendToDataLabel = cms.string(''),
    useQuadrupletAlgo = cms.bool(False)
)


process.preshowerDetIdAssociator = cms.ESProducer("DetIdAssociatorESProducer",
    ComponentName = cms.string('PreshowerDetIdAssociator'),
    etaBinSize = cms.double(0.1),
    nEta = cms.int32(60),
    nPhi = cms.int32(30)
)


process.siPixel2DTemplateDBObjectESProducer = cms.ESProducer("SiPixel2DTemplateDBObjectESProducer")


process.siPixelQualityESProducer = cms.ESProducer("SiPixelQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(
        cms.PSet(
            record = cms.string('SiPixelQualityFromDbRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiPixelDetVOffRcd'),
            tag = cms.string('')
        )
    )
)


process.siPixelTemplateDBObjectESProducer = cms.ESProducer("SiPixelTemplateDBObjectESProducer")


process.siStripBackPlaneCorrectionDepESProducer = cms.ESProducer("SiStripBackPlaneCorrectionDepESProducer",
    BackPlaneCorrectionDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    BackPlaneCorrectionPeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripBackPlaneCorrectionRcd')
    ),
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    )
)


process.siStripGainESProducer = cms.ESProducer("SiStripGainESProducer",
    APVGain = cms.VPSet(
        cms.PSet(
            Label = cms.untracked.string(''),
            NormalizationFactor = cms.untracked.double(1.0),
            Record = cms.string('SiStripApvGainRcd')
        ),
        cms.PSet(
            Label = cms.untracked.string(''),
            NormalizationFactor = cms.untracked.double(1.0),
            Record = cms.string('SiStripApvGain2Rcd')
        )
    ),
    AutomaticNormalization = cms.bool(False),
    appendToDataLabel = cms.string(''),
    printDebug = cms.untracked.bool(False)
)


process.siStripLorentzAngleDepESProducer = cms.ESProducer("SiStripLorentzAngleDepESProducer",
    LatencyRecord = cms.PSet(
        label = cms.untracked.string(''),
        record = cms.string('SiStripLatencyRcd')
    ),
    LorentzAngleDeconvMode = cms.PSet(
        label = cms.untracked.string('deconvolution'),
        record = cms.string('SiStripLorentzAngleRcd')
    ),
    LorentzAnglePeakMode = cms.PSet(
        label = cms.untracked.string('peak'),
        record = cms.string('SiStripLorentzAngleRcd')
    )
)


process.siStripQualityESProducer = cms.ESProducer("SiStripQualityESProducer",
    ListOfRecordToMerge = cms.VPSet(
        cms.PSet(
            record = cms.string('SiStripDetVOffRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripDetCablingRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('RunInfoRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadChannelRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadFiberRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadModuleRcd'),
            tag = cms.string('')
        ),
        cms.PSet(
            record = cms.string('SiStripBadStripRcd'),
            tag = cms.string('')
        )
    ),
    PrintDebugOutput = cms.bool(False),
    ReduceGranularity = cms.bool(False),
    ThresholdForReducedGranularity = cms.double(0.3),
    UseEmptyRunInfo = cms.bool(False),
    appendToDataLabel = cms.string('')
)


process.sistripconn = cms.ESProducer("SiStripConnectivity")


process.stripCPEESProducer = cms.ESProducer("StripCPEESProducer",
    ComponentName = cms.string('stripCPE'),
    ComponentType = cms.string('SimpleStripCPE'),
    parameters = cms.PSet(

    )
)


process.templates = cms.ESProducer("PixelCPETemplateRecoESProducer",
    Alpha2Order = cms.bool(True),
    ClusterProbComputationFlag = cms.int32(0),
    ComponentName = cms.string('PixelCPETemplateReco'),
    DoCosmics = cms.bool(False),
    DoLorentz = cms.bool(True),
    LoadTemplatesFromDB = cms.bool(True),
    UseClusterSplitter = cms.bool(False),
    speed = cms.int32(-2)
)


process.templates2 = cms.ESProducer("PixelCPEClusterRepairESProducer",
    Alpha2Order = cms.bool(True),
    ClusterProbComputationFlag = cms.int32(0),
    ComponentName = cms.string('PixelCPEClusterRepair'),
    DoCosmics = cms.bool(False),
    DoLorentz = cms.bool(True),
    LoadTemplatesFromDB = cms.bool(True),
    UseClusterSplitter = cms.bool(False),
    speed = cms.int32(-2)
)


process.tobTecFlexibleKFFittingSmoother = cms.ESProducer("FlexibleKFFittingSmootherESProducer",
    ComponentName = cms.string('tobTecFlexibleKFFittingSmoother'),
    appendToDataLabel = cms.string(''),
    looperFitter = cms.string('tobTecStepFitterSmootherForLoopers'),
    standardFitter = cms.string('tobTecStepFitterSmoother')
)


process.tobTecStepChi2Est = cms.ESProducer("Chi2ChargeMeasurementEstimatorESProducer",
    ComponentName = cms.string('tobTecStepChi2Est'),
    MaxChi2 = cms.double(16.0),
    MaxDisplacement = cms.double(0.5),
    MaxSagitta = cms.double(2),
    MinPtForHitRecoveryInGluedDet = cms.double(1000000000000),
    MinimalTolerance = cms.double(0.5),
    appendToDataLabel = cms.string(''),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    ),
    nSigma = cms.double(3.0),
    pTChargeCutThreshold = cms.double(-1)
)


process.tobTecStepClusterShapeHitFilter = cms.ESProducer("ClusterShapeHitFilterESProducer",
    ComponentName = cms.string('tobTecStepClusterShapeHitFilter'),
    PixelShapeFile = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase0.par'),
    PixelShapeFileL1 = cms.string('RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase0.par'),
    clusterChargeCut = cms.PSet(
        refToPSet_ = cms.string('SiStripClusterChargeCutTight')
    ),
    doStripShapeCut = cms.bool(False)
)


process.tobTecStepFitterSmoother = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('tobTecStepFitterSmoother'),
    EstimateCut = cms.double(30),
    Fitter = cms.string('tobTecStepRKFitter'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(7),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('tobTecStepRKSmoother'),
    appendToDataLabel = cms.string('')
)


process.tobTecStepFitterSmootherForLoopers = cms.ESProducer("KFFittingSmootherESProducer",
    BreakTrajWith2ConsecutiveMissing = cms.bool(True),
    ComponentName = cms.string('tobTecStepFitterSmootherForLoopers'),
    EstimateCut = cms.double(30),
    Fitter = cms.string('tobTecStepRKFitterForLoopers'),
    LogPixelProbabilityCut = cms.double(0),
    MaxFractionOutliers = cms.double(0.3),
    MaxNumberOfOutliers = cms.int32(3),
    MinDof = cms.int32(2),
    MinNumberOfHits = cms.int32(7),
    NoInvalidHitsBeginEnd = cms.bool(True),
    NoOutliersBeginEnd = cms.bool(False),
    RejectTracks = cms.bool(True),
    Smoother = cms.string('tobTecStepRKSmootherForLoopers'),
    appendToDataLabel = cms.string('')
)


process.tobTecStepRKTrajectoryFitter = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('tobTecStepRKFitter'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(7)
)


process.tobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer("KFTrajectoryFitterESProducer",
    ComponentName = cms.string('tobTecStepRKFitterForLoopers'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    minHits = cms.int32(7)
)


process.tobTecStepRKTrajectorySmoother = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('tobTecStepRKSmoother'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('RungeKuttaTrackerPropagator'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(7)
)


process.tobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer("KFTrajectorySmootherESProducer",
    ComponentName = cms.string('tobTecStepRKSmootherForLoopers'),
    Estimator = cms.string('Chi2'),
    Propagator = cms.string('PropagatorWithMaterialForLoopers'),
    RecoGeometry = cms.string('GlobalDetLayerGeometry'),
    Updator = cms.string('KFUpdator'),
    appendToDataLabel = cms.string(''),
    errorRescaling = cms.double(10.0),
    minHits = cms.int32(7)
)


process.tobTecStepTrajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('tobTecStepTrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.09)
)


process.trackAlgoPriorityOrder = cms.ESProducer("TrackAlgoPriorityOrderESProducer",
    ComponentName = cms.string('trackAlgoPriorityOrder'),
    algoOrder = cms.vstring(
        'initialStep',
        'detachedTripletStep',
        'lowPtTripletStep',
        'pixelPairStep',
        'mixedTripletStep',
        'pixelLessStep',
        'tobTecStep',
        'jetCoreRegionalStep',
        'muonSeededStepInOut',
        'muonSeededStepOutIn'
    ),
    appendToDataLabel = cms.string('')
)


process.trackCleaner = cms.ESProducer("TrackCleanerESProducer",
    ComponentName = cms.string('trackCleaner'),
    appendToDataLabel = cms.string('')
)


process.trackerGeometryDB = cms.ESProducer("TrackerDigiGeometryESModule",
    alignmentsLabel = cms.string(''),
    appendToDataLabel = cms.string(''),
    applyAlignment = cms.bool(True),
    fromDDD = cms.bool(False)
)


process.trackerNumberingGeometryDB = cms.ESProducer("TrackerGeometricDetESModule",
    appendToDataLabel = cms.string(''),
    fromDDD = cms.bool(False)
)


process.trackerTopology = cms.ESProducer("TrackerTopologyEP",
    appendToDataLabel = cms.string('')
)


process.trajectoryCleanerBySharedHits = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('TrajectoryCleanerBySharedHits'),
    ComponentType = cms.string('TrajectoryCleanerBySharedHits'),
    MissingHitPenalty = cms.double(20.0),
    ValidHitBonus = cms.double(5.0),
    allowSharedFirstHit = cms.bool(True),
    fractionShared = cms.double(0.19)
)


process.trajectoryCleanerBySharedSeeds = cms.ESProducer("TrajectoryCleanerESProducer",
    ComponentName = cms.string('TrajectoryCleanerBySharedSeeds'),
    ComponentType = cms.string('TrajectoryCleanerBySharedSeeds')
)


process.ttrhbwor = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('WithoutRefit'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('Fake'),
    PixelCPE = cms.string('Fake'),
    StripCPE = cms.string('Fake')
)


process.ttrhbwr = cms.ESProducer("TkTransientTrackingRecHitBuilderESProducer",
    ComponentName = cms.string('WithTrackAngle'),
    ComputeCoarseLocalPositionFromDisk = cms.bool(False),
    Matcher = cms.string('StandardMatcher'),
    PixelCPE = cms.string('PixelCPEGeneric'),
    StripCPE = cms.string('StripCPEfromTrackAngle')
)


process.CSCChannelMapperESSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('CSCChannelMapperRecord')
)


process.CSCIndexerESSource = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('CSCIndexerRecord')
)


process.GlobalTag = cms.ESSource("PoolDBESSource",
    DBParameters = cms.PSet(
        authenticationPath = cms.untracked.string(''),
        authenticationSystem = cms.untracked.int32(0),
        messageLevel = cms.untracked.int32(0),
        security = cms.untracked.string('')
    ),
    DumpStat = cms.untracked.bool(False),
    ReconnectEachRun = cms.untracked.bool(False),
    RefreshAlways = cms.untracked.bool(False),
    RefreshEachRun = cms.untracked.bool(False),
    RefreshOpenIOVs = cms.untracked.bool(False),
    connect = cms.string('frontier://FrontierProd/CMS_CONDITIONS'),
    globaltag = cms.string('103X_dataRun2_v2'),
    pfnPostfix = cms.untracked.string(''),
    pfnPrefix = cms.untracked.string(''),
    snapshotTime = cms.string(''),
    toGet = cms.VPSet()
)


process.HcalTimeSlewEP = cms.ESSource("HcalTimeSlewEP",
    appendToDataLabel = cms.string('HBHE'),
    timeSlewParametersM2 = cms.VPSet(
        cms.PSet(
            slope = cms.double(-3.178648),
            tmax = cms.double(16.0),
            tzero = cms.double(23.960177)
        ),
        cms.PSet(
            slope = cms.double(-1.556668),
            tmax = cms.double(10.0),
            tzero = cms.double(13.307784)
        ),
        cms.PSet(
            slope = cms.double(-1.075824),
            tmax = cms.double(6.25),
            tzero = cms.double(9.109694)
        )
    ),
    timeSlewParametersM3 = cms.VPSet(
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(12.2999),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-2.19142),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(0.0),
            tspar2_siPM = cms.double(0.0)
        ),
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(15.5),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-3.2),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(32.0),
            tspar2_siPM = cms.double(0.0)
        ),
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(12.2999),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-2.19142),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(0.0),
            tspar2_siPM = cms.double(0.0)
        ),
        cms.PSet(
            cap = cms.double(6.0),
            tspar0 = cms.double(12.2999),
            tspar0_siPM = cms.double(0.0),
            tspar1 = cms.double(-2.19142),
            tspar1_siPM = cms.double(0.0),
            tspar2 = cms.double(0.0),
            tspar2_siPM = cms.double(0.0)
        )
    )
)


process.HepPDTESSource = cms.ESSource("HepPDTESSource",
    pdtFileName = cms.FileInPath('SimGeneral/HepPDTESSource/data/pythiaparticle.tbl')
)


process.eegeom = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalMappingRcd')
)


process.es_hardcode = cms.ESSource("HcalHardcodeCalibrations",
    GainWidthsForTrigPrims = cms.bool(False),
    HBRecalibration = cms.bool(False),
    HBmeanenergies = cms.FileInPath('CalibCalorimetry/HcalPlugins/data/meanenergiesHB.txt'),
    HBreCalibCutoff = cms.double(20.0),
    HERecalibration = cms.bool(False),
    HEmeanenergies = cms.FileInPath('CalibCalorimetry/HcalPlugins/data/meanenergiesHE.txt'),
    HEreCalibCutoff = cms.double(20.0),
    HFRecalParameterBlock = cms.PSet(
        HFdepthOneParameterA = cms.vdouble(
            0.004123, 0.00602, 0.008201, 0.010489, 0.013379,
            0.016997, 0.021464, 0.027371, 0.034195, 0.044807,
            0.058939, 0.125497
        ),
        HFdepthOneParameterB = cms.vdouble(
            -4e-06, -2e-06, 0.0, 4e-06, 1.5e-05,
            2.6e-05, 6.3e-05, 8.4e-05, 0.00016, 0.000107,
            0.000425, 0.000209
        ),
        HFdepthTwoParameterA = cms.vdouble(
            0.002861, 0.004168, 0.0064, 0.008388, 0.011601,
            0.014425, 0.018633, 0.023232, 0.028274, 0.035447,
            0.051579, 0.086593
        ),
        HFdepthTwoParameterB = cms.vdouble(
            -2e-06, -0.0, -7e-06, -6e-06, -2e-06,
            1e-06, 1.9e-05, 3.1e-05, 6.7e-05, 1.2e-05,
            0.000157, -3e-06
        )
    ),
    HFRecalibration = cms.bool(False),
    SiPMCharacteristics = cms.VPSet(
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(36000)
        ),
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(2500)
        ),
        cms.PSet(
            crosstalk = cms.double(0.17),
            nonlin1 = cms.double(1.00985),
            nonlin2 = cms.double(7.84089e-06),
            nonlin3 = cms.double(2.86282e-10),
            pixels = cms.int32(27370)
        ),
        cms.PSet(
            crosstalk = cms.double(0.196),
            nonlin1 = cms.double(1.00546),
            nonlin2 = cms.double(6.40239e-06),
            nonlin3 = cms.double(1.27011e-10),
            pixels = cms.int32(38018)
        ),
        cms.PSet(
            crosstalk = cms.double(0.17),
            nonlin1 = cms.double(1.00985),
            nonlin2 = cms.double(7.84089e-06),
            nonlin3 = cms.double(2.86282e-10),
            pixels = cms.int32(27370)
        ),
        cms.PSet(
            crosstalk = cms.double(0.196),
            nonlin1 = cms.double(1.00546),
            nonlin2 = cms.double(6.40239e-06),
            nonlin3 = cms.double(1.27011e-10),
            pixels = cms.int32(38018)
        ),
        cms.PSet(
            crosstalk = cms.double(0.0),
            nonlin1 = cms.double(1.0),
            nonlin2 = cms.double(0.0),
            nonlin3 = cms.double(0.0),
            pixels = cms.int32(0)
        )
    ),
    hb = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.19),
        gainWidth = cms.vdouble(0.0),
        mcShape = cms.int32(125),
        pedestal = cms.double(3.285),
        pedestalWidth = cms.double(0.809),
        photoelectronsToAnalog = cms.double(0.3305),
        qieOffset = cms.vdouble(-0.49, 1.8, 7.2, 37.9),
        qieSlope = cms.vdouble(0.912, 0.917, 0.922, 0.923),
        qieType = cms.int32(0),
        recoShape = cms.int32(105),
        zsThreshold = cms.int32(8)
    ),
    hbUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.01, 0.015),
        doRadiationDamage = cms.bool(True),
        gain = cms.vdouble(0.0006252),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(206),
        pedestal = cms.double(17.3),
        pedestalWidth = cms.double(1.5),
        photoelectronsToAnalog = cms.double(40.0),
        qieOffset = cms.vdouble(0.0, 0.0, 0.0, 0.0),
        qieSlope = cms.vdouble(0.05376, 0.05376, 0.05376, 0.05376),
        qieType = cms.int32(2),
        radiationDamage = cms.PSet(
            depVsNeutrons = cms.vdouble(5.543e-10, 8.012e-10),
            depVsTemp = cms.double(0.0631),
            intlumiOffset = cms.double(150),
            intlumiToNeutrons = cms.double(367000000.0),
            temperatureBase = cms.double(20),
            temperatureNew = cms.double(-5)
        ),
        recoShape = cms.int32(206),
        zsThreshold = cms.int32(16)
    ),
    he = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.23),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(125),
        pedestal = cms.double(3.163),
        pedestalWidth = cms.double(0.9698),
        photoelectronsToAnalog = cms.double(0.3305),
        qieOffset = cms.vdouble(-0.38, 2.0, 7.6, 39.6),
        qieSlope = cms.vdouble(0.912, 0.916, 0.92, 0.922),
        qieType = cms.int32(0),
        recoShape = cms.int32(105),
        zsThreshold = cms.int32(9)
    ),
    heUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.01, 0.015),
        doRadiationDamage = cms.bool(True),
        gain = cms.vdouble(0.0006252),
        gainWidth = cms.vdouble(0),
        mcShape = cms.int32(206),
        pedestal = cms.double(17.3),
        pedestalWidth = cms.double(1.5),
        photoelectronsToAnalog = cms.double(40.0),
        qieOffset = cms.vdouble(0.0, 0.0, 0.0, 0.0),
        qieSlope = cms.vdouble(0.05376, 0.05376, 0.05376, 0.05376),
        qieType = cms.int32(2),
        radiationDamage = cms.PSet(
            depVsNeutrons = cms.vdouble(5.543e-10, 8.012e-10),
            depVsTemp = cms.double(0.0631),
            intlumiOffset = cms.double(75),
            intlumiToNeutrons = cms.double(29200000.0),
            temperatureBase = cms.double(20),
            temperatureNew = cms.double(5)
        ),
        recoShape = cms.int32(206),
        zsThreshold = cms.int32(16)
    ),
    hf = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.14, 0.135),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(301),
        pedestal = cms.double(9.354),
        pedestalWidth = cms.double(2.516),
        photoelectronsToAnalog = cms.double(0.0),
        qieOffset = cms.vdouble(-0.87, 1.4, 7.8, -29.6),
        qieSlope = cms.vdouble(0.359, 0.358, 0.36, 0.367),
        qieType = cms.int32(0),
        recoShape = cms.int32(301),
        zsThreshold = cms.int32(-9999)
    ),
    hfUpgrade = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.14, 0.135),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(301),
        pedestal = cms.double(13.33),
        pedestalWidth = cms.double(3.33),
        photoelectronsToAnalog = cms.double(0.0),
        qieOffset = cms.vdouble(0.0697, -0.7405, 12.38, -671.9),
        qieSlope = cms.vdouble(0.297, 0.298, 0.298, 0.313),
        qieType = cms.int32(1),
        recoShape = cms.int32(301),
        zsThreshold = cms.int32(-9999)
    ),
    ho = cms.PSet(
        darkCurrent = cms.vdouble(0.0),
        doRadiationDamage = cms.bool(False),
        gain = cms.vdouble(0.006, 0.0087),
        gainWidth = cms.vdouble(0.0, 0.0),
        mcShape = cms.int32(201),
        pedestal = cms.double(12.06),
        pedestalWidth = cms.double(0.6285),
        photoelectronsToAnalog = cms.double(4.0),
        qieOffset = cms.vdouble(-0.44, 1.4, 7.1, 38.5),
        qieSlope = cms.vdouble(0.907, 0.915, 0.92, 0.921),
        qieType = cms.int32(0),
        recoShape = cms.int32(201),
        zsThreshold = cms.int32(24)
    ),
    iLumi = cms.double(-1.0),
    killHE = cms.bool(False),
    testHEPlan1 = cms.bool(False),
    testHFQIE10 = cms.bool(False),
    toGet = cms.untracked.vstring('GainWidths'),
    useHBUpgrade = cms.bool(False),
    useHEUpgrade = cms.bool(False),
    useHFUpgrade = cms.bool(False),
    useHOUpgrade = cms.bool(True),
    useIeta18depth1 = cms.bool(True),
    useLayer0Weight = cms.bool(False)
)


process.essourceEcalNextToDead = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalNextToDeadChannelRcd')
)


process.essourceEcalSev = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalSeverityLevelAlgoRcd')
)


process.essourceSev = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('HcalSeverityLevelComputerRcd')
)


process.totemDAQMappingESSourceXML_TimingDiamond = cms.ESSource("TotemDAQMappingESSourceXML",
    configuration = cms.VPSet(
        cms.PSet(
            mappingFileNames = cms.vstring(),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(1, 0, 1, 283819, 0, 0)
        ),
        cms.PSet(
            mappingFileNames = cms.vstring('CondFormats/CTPPSReadoutObjects/xml/mapping_timing_diamond.xml'),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(283820, 0, 1, 292520, 0, 0)
        ),
        cms.PSet(
            mappingFileNames = cms.vstring('CondFormats/CTPPSReadoutObjects/xml/mapping_timing_diamond_2017.xml'),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(292521, 0, 1, 310000, 0, 0)
        ),
        cms.PSet(
            mappingFileNames = cms.vstring('CondFormats/CTPPSReadoutObjects/xml/mapping_timing_diamond_2018.xml'),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(310001, 0, 1, 999999999, 0, 0)
        )
    ),
    subSystem = cms.untracked.string('TimingDiamond'),
    verbosity = cms.untracked.uint32(0)
)


process.totemDAQMappingESSourceXML_TotemTiming = cms.ESSource("TotemDAQMappingESSourceXML",
    configuration = cms.VPSet(
        cms.PSet(
            mappingFileNames = cms.vstring(),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(1, 0, 1, 310000, 0, 0)
        ),
        cms.PSet(
            mappingFileNames = cms.vstring('CondFormats/CTPPSReadoutObjects/xml/mapping_totem_timing_2018.xml'),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(310001, 0, 1, 999999999, 0, 0)
        )
    ),
    subSystem = cms.untracked.string('TotemTiming'),
    verbosity = cms.untracked.uint32(10)
)


process.totemDAQMappingESSourceXML_TrackingStrip = cms.ESSource("TotemDAQMappingESSourceXML",
    configuration = cms.VPSet(
        cms.PSet(
            mappingFileNames = cms.vstring('CondFormats/CTPPSReadoutObjects/xml/mapping_tracking_strip_2016_to_fill_5288.xml'),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(1, 0, 1, 280385, 0, 0)
        ),
        cms.PSet(
            mappingFileNames = cms.vstring(),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(280386, 0, 1, 281600, 0, 0)
        ),
        cms.PSet(
            mappingFileNames = cms.vstring('CondFormats/CTPPSReadoutObjects/xml/mapping_tracking_strip_2016_from_fill_5330.xml'),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(281601, 0, 1, 290872, 0, 0)
        ),
        cms.PSet(
            mappingFileNames = cms.vstring('CondFormats/CTPPSReadoutObjects/xml/mapping_tracking_strip_2017.xml'),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(290873, 0, 1, 311625, 0, 0)
        ),
        cms.PSet(
            mappingFileNames = cms.vstring('CondFormats/CTPPSReadoutObjects/xml/mapping_tracking_strip_2018.xml'),
            maskFileNames = cms.vstring(),
            validityRange = cms.EventRange(311626, 0, 1, 999999999, 0, 0)
        )
    ),
    subSystem = cms.untracked.string('TrackingStrip'),
    verbosity = cms.untracked.uint32(0)
)


process.tpparams12 = cms.ESSource("EmptyESSource",
    firstValid = cms.vuint32(1),
    iovIsRunNotTime = cms.bool(True),
    recordName = cms.string('EcalTPGPhysicsConstRcd')
)


process.prefer("es_hardcode")

process.electronPFIsolationDepositsTask = cms.Task(process.elPFIsoDepositCharged, process.elPFIsoDepositChargedAll, process.elPFIsoDepositGamma, process.elPFIsoDepositNeutral, process.elPFIsoDepositPU)


process.electronEDIsolationDepositsTask = cms.Task(process.elEDIsoDepositCharged, process.elEDIsoDepositChargedAll, process.elEDIsoDepositGamma, process.elEDIsoDepositNeutral, process.elEDIsoDepositPU)


process.pfClusteringHBHEHFTask = cms.Task(process.particleFlowClusterHBHE, process.particleFlowClusterHCAL, process.particleFlowClusterHF, process.particleFlowRecHitHBHE, process.particleFlowRecHitHF)


process.gsfElectronTask = cms.Task(process.ecalDrivenGsfElectronCores, process.ecalDrivenGsfElectrons, process.gsfElectronCores, process.gsfElectrons)


process.ootPhotonTask = cms.Task(process.ootPhotonCore, process.ootPhotons, process.ootPhotonsTmp, process.particleFlowClusterOOTECAL, process.particleFlowClusterOOTECALUncorrected, process.particleFlowRecHitOOTECAL, process.particleFlowSuperClusterOOTECAL)


process.DetachedQuadStepTask = cms.Task(process.detachedQuadStep, process.detachedQuadStepClusters, process.detachedQuadStepHitDoublets, process.detachedQuadStepHitQuadruplets, process.detachedQuadStepSeedLayers, process.detachedQuadStepSeeds, process.detachedQuadStepTrackCandidates, process.detachedQuadStepTrackingRegions, process.detachedQuadStepTracks)


process.muonSeededStepExtraDisplacedTask = cms.Task(cms.TaskPlaceholder("muonSeededStepExtraInOutTask"), process.muonSeededTracksOutInDisplacedClassifier)


process.patAlgosToolsTask = cms.Task()


process.muonSeededStepExtraInOutTask = cms.Task(process.muonSeededTracksInOutClassifier)


process.pfClusteringHOTask = cms.Task(process.particleFlowClusterHO, process.particleFlowRecHitHO)


process.particleFlowClusterECALTask = cms.Task(process.particleFlowClusterECAL)


process.muontracking_with_SET_Task = cms.Task(process.SETMuonSeed, process.globalSETMuons, process.standAloneSETMuons)


process.caloTowersRecTask = cms.Task(process.towerMaker, process.towerMakerWithHO)


process.HighPtTripletStepTask = cms.Task(process.highPtTripletStep, process.highPtTripletStepClusters, process.highPtTripletStepHitDoublets, process.highPtTripletStepHitTriplets, process.highPtTripletStepSeedLayers, process.highPtTripletStepSeeds, process.highPtTripletStepTrackCandidates, process.highPtTripletStepTrackingRegions, process.highPtTripletStepTracks)


process.pfClusterIsolationTask = cms.Task(process.electronEcalPFClusterIsolationProducer, process.electronHcalPFClusterIsolationProducer, process.ootPhotonEcalPFClusterIsolationProducer, process.ootPhotonHcalPFClusterIsolationProducer, process.photonEcalPFClusterIsolationProducer, process.photonHcalPFClusterIsolationProducer)


process.particleFlowTrackWithDisplacedVertexTask = cms.Task(process.particleFlowDisplacedVertex, process.particleFlowDisplacedVertexCandidate, process.pfConversions, process.pfDisplacedTrackerVertex, process.pfTrack, process.pfTrackElec, process.pfV0)


process.displacedTracksTask = cms.Task(process.displacedTracks, process.duplicateDisplacedTrackCandidates, process.duplicateDisplacedTrackClassifier, process.mergedDuplicateDisplacedTracks)


process.pfNoPileUpTask = cms.Task(process.pfNoPileUp, process.pfPileUp)


process.electronPFIsolationValuesTask = cms.Task(process.elPFIsoValueCharged03, process.elPFIsoValueCharged04, process.elPFIsoValueChargedAll03, process.elPFIsoValueChargedAll04, process.elPFIsoValueGamma03, process.elPFIsoValueGamma04, process.elPFIsoValueNeutral03, process.elPFIsoValueNeutral04, process.elPFIsoValuePU03, process.elPFIsoValuePU04)


process.hybridClusteringTask = cms.Task(process.cleanedHybridSuperClusters, process.correctedHybridSuperClusters, process.hybridSuperClusters, process.uncleanedHybridSuperClusters, process.uncleanedOnlyCorrectedHybridSuperClusters)


process.muonSeededStepDebugDisplacedTask = cms.Task(cms.TaskPlaceholder("muonSeededStepDebugInOutTask"), process.muonSeededSeedsOutInDisplacedAsTracks, process.muonSeededTrackCandidatesOutInDisplacedAsTracks)


process.PixelLessStepTask = cms.Task(process.pixelLessStep, process.pixelLessStepClassifier1, process.pixelLessStepClassifier2, process.pixelLessStepClusters, process.pixelLessStepHitDoublets, process.pixelLessStepHitTriplets, process.pixelLessStepSeedLayers, process.pixelLessStepSeeds, process.pixelLessStepTrackCandidates, process.pixelLessStepTrackingRegions, process.pixelLessStepTracks)


process.seldigisTask = cms.Task(process.selectDigi)


process.gedElectronPFIsolationDepositsTask = cms.Task(process.gedElPFIsoDepositCharged, process.gedElPFIsoDepositChargedAll, process.gedElPFIsoDepositGamma, process.gedElPFIsoDepositNeutral, process.gedElPFIsoDepositPU)


process.generalTracksTask = cms.Task(process.duplicateTrackCandidates, process.duplicateTrackClassifier, process.generalTracks, process.mergedDuplicateTracks)


process.cosmicsMuonIdTask = cms.Task(process.cosmicsVeto, process.cosmicsVetoSeeds, process.cosmicsVetoTrackCandidates, process.cosmicsVetoTracks, process.cosmicsVetoTracksRaw)


process.muonreco_with_SET_Task = cms.Task(process.muontracking_with_SET_Task)


process.gsfEcalDrivenElectronTask = cms.Task(process.ecalDrivenGsfElectronCores, process.ecalDrivenGsfElectrons)


process.muonSeededStepDebugInOutTask = cms.Task(process.muonSeededSeedsInOutAsTracks, process.muonSeededTrackCandidatesInOutAsTracks)


process.muonIdProducerTask = cms.Task(process.glbTrackQual, process.muonEcalDetIds, process.muonShowerInformation, process.muons1stStep)


process.caloJetsForTrkTask = cms.Task(process.ak4CaloJetsForTrk, process.caloTowerForTrk)


process.electronEDIsolationValuesTask = cms.Task(process.elEDIsoValueCharged03, process.elEDIsoValueCharged04, process.elEDIsoValueChargedAll03, process.elEDIsoValueChargedAll04, process.elEDIsoValueGamma03, process.elEDIsoValueGamma04, process.elEDIsoValueNeutral03, process.elEDIsoValueNeutral04, process.elEDIsoValuePU03, process.elEDIsoValuePU04)


process.muonSeededStepCoreDisplacedTask = cms.Task(cms.TaskPlaceholder("muonSeededStepCoreInOutTask"), process.muonSeededSeedsOutInDisplaced, process.muonSeededTrackCandidatesOutInDisplaced, process.muonSeededTracksOutInDisplaced)


process.DetachedTripletStepTask = cms.Task(process.detachedTripletStep, process.detachedTripletStepClassifier1, process.detachedTripletStepClassifier2, process.detachedTripletStepClusters, process.detachedTripletStepHitDoublets, process.detachedTripletStepHitTriplets, process.detachedTripletStepSeedLayers, process.detachedTripletStepSeeds, process.detachedTripletStepTrackCandidates, process.detachedTripletStepTrackingRegions, process.detachedTripletStepTracks)


process.electronSeedsTask = cms.Task(process.ecalDrivenElectronSeeds, process.electronMergedSeeds, process.trackerDrivenElectronSeeds)


process.pfSortByTypeTask = cms.Task(process.pfAllChargedHadrons, process.pfAllChargedParticles, process.pfAllNeutralHadrons, process.pfAllNeutralHadronsAndPhotons, process.pfAllPhotons, process.pfPileUpAllChargedParticles)


process.pfClusteringECALTask = cms.Task(process.particleFlowClusterECALTask, process.particleFlowClusterECALUncorrected, process.particleFlowRecHitECAL)


process.TobTecStepTask = cms.Task(process.tobTecStep, process.tobTecStepClassifier1, process.tobTecStepClassifier2, process.tobTecStepClusters, process.tobTecStepHitDoubletsPair, process.tobTecStepHitDoubletsTripl, process.tobTecStepHitTripletsTripl, process.tobTecStepSeedLayersPair, process.tobTecStepSeedLayersTripl, process.tobTecStepSeeds, process.tobTecStepSeedsPair, process.tobTecStepSeedsTripl, process.tobTecStepTrackCandidates, process.tobTecStepTrackingRegionsPair, process.tobTecStepTrackingRegionsTripl, process.tobTecStepTracks)


process.muonSeededStepCoreOutInTask = cms.Task(process.muonSeededSeedsOutIn, process.muonSeededTrackCandidatesOutIn, process.muonSeededTracksOutIn)


process.muIsoDeposits_ParamGlobalMuonsTask = cms.Task(process.muParamGlobalIsoDepositCalByAssociatorTowers, process.muParamGlobalIsoDepositJets, process.muParamGlobalIsoDepositTk)


process.pfNoPileUpIsoTask = cms.Task(process.pfNoPileUpIso, process.pfPileUpIso)


process.MixedTripletStepTask = cms.Task(process.chargeCut2069Clusters, process.mixedTripletStep, process.mixedTripletStepClassifier1, process.mixedTripletStepClassifier2, process.mixedTripletStepClusters, process.mixedTripletStepHitDoubletsA, process.mixedTripletStepHitDoubletsB, process.mixedTripletStepHitTripletsA, process.mixedTripletStepHitTripletsB, process.mixedTripletStepSeedLayersA, process.mixedTripletStepSeedLayersB, process.mixedTripletStepSeeds, process.mixedTripletStepSeedsA, process.mixedTripletStepSeedsB, process.mixedTripletStepTrackCandidates, process.mixedTripletStepTrackingRegionsA, process.mixedTripletStepTrackingRegionsB, process.mixedTripletStepTracks)


process.multi5x5PreshowerClusteringTask = cms.Task(process.correctedMulti5x5SuperClustersWithPreshower, process.multi5x5PreshowerClusterShape, process.uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower, process.uncleanedOnlyMulti5x5SuperClustersWithPreshower)


process.gedElectronPFIsolationValuesTask = cms.Task(process.gedElPFIsoValueCharged03, process.gedElPFIsoValueChargedAll03, process.gedElPFIsoValueGamma03, process.gedElPFIsoValueNeutral03, process.gedElPFIsoValuePU03)


process.hfEMClusteringTask = cms.Task(process.hfEMClusters, process.hfRecoEcalCandidate)


process.muIsoDeposits_ParamGlobalMuonsOldTask = cms.Task(process.muParamGlobalIsoDepositCalEcal, process.muParamGlobalIsoDepositCalHcal, process.muParamGlobalIsoDepositGsTk)


process.pfClusteringPSTask = cms.Task(process.particleFlowClusterPS, process.particleFlowRecHitPS)


process.muIsoDeposits_muonsTask = cms.Task(process.muIsoDepositCalByAssociatorTowers, process.muIsoDepositJets, process.muIsoDepositTk)


process.interestingEgammaIsoDetIdsTask = cms.Task(process.interestingGamIsoDetIdEB, process.interestingGamIsoDetIdEE, process.interestingGedEgammaIsoESDetId, process.interestingGedEgammaIsoHCALDetId, process.interestingGedEleIsoDetIdEB, process.interestingGedEleIsoDetIdEE, process.interestingGedGamIsoDetIdEB, process.interestingGedGamIsoDetIdEE, process.interestingOotEgammaIsoESDetId, process.interestingOotEgammaIsoHCALDetId, process.interestingOotGamIsoDetIdEB, process.interestingOotGamIsoDetIdEE)


process.CastorFullRecoTask = cms.Task(process.CastorTowerReco, process.ak5CastorJetID, process.ak5CastorJets, process.ak7CastorJetID, process.ak7CastorJets)


process.multi5x5ClusteringTask = cms.Task(process.multi5x5BasicClustersCleaned, process.multi5x5BasicClustersUncleaned, process.multi5x5SuperClusters, process.multi5x5SuperClustersCleaned, process.multi5x5SuperClustersUncleaned, process.multi5x5SuperClustersWithPreshower)


process.pfNoPileUpJMETask = cms.Task(process.goodOfflinePrimaryVertices, process.pfNoPileUpJME, process.pfPileUpJME)


process.particleFlowClusterTask = cms.Task(process.particleFlowBadHcalPseudoCluster, process.pfClusteringECALTask, process.pfClusteringHBHEHFTask, process.pfClusteringHOTask, process.pfClusteringPSTask)


process.eIdTask = cms.Task(process.eidLoose, process.eidRobustHighEnergy, process.eidRobustLoose, process.eidRobustTight, process.eidTight)


process.muonSelectionTypeTask = cms.Task(process.muidAllArbitrated, process.muidGMStaChiCompatibility, process.muidGMTkChiCompatibility, process.muidGMTkKinkTight, process.muidGlobalMuonPromptTight, process.muidRPCMuLoose, process.muidTM2DCompatibilityLoose, process.muidTM2DCompatibilityTight, process.muidTMLastStationAngLoose, process.muidTMLastStationAngTight, process.muidTMLastStationLoose, process.muidTMLastStationOptimizedLowPtLoose, process.muidTMLastStationOptimizedLowPtTight, process.muidTMLastStationTight, process.muidTMOneStationAngLoose, process.muidTMOneStationAngTight, process.muidTMOneStationLoose, process.muidTMOneStationTight, process.muidTrackerMuonArbitrated)


process.standAloneMuonSeedsTask = cms.Task(process.ancientMuonSeed)


process.muonSeededStepCoreInOutTask = cms.Task(process.muonSeededSeedsInOut, process.muonSeededTrackCandidatesInOut, process.muonSeededTracksInOut)


process.PixelPairStepTask = cms.Task(process.pixelPairStep, process.pixelPairStepClusters, process.pixelPairStepHitDoublets, process.pixelPairStepSeedLayers, process.pixelPairStepSeeds, process.pixelPairStepTrackCandidates, process.pixelPairStepTrackingRegions, process.pixelPairStepTracks)


process.LowPtQuadStepTask = cms.Task(process.lowPtQuadStep, process.lowPtQuadStepClusters, process.lowPtQuadStepHitDoublets, process.lowPtQuadStepHitQuadruplets, process.lowPtQuadStepSeedLayers, process.lowPtQuadStepSeeds, process.lowPtQuadStepTrackCandidates, process.lowPtQuadStepTrackingRegions, process.lowPtQuadStepTracks)


process.InitialStepTask = cms.Task(process.caloJetsForTrkTask, process.firstStepPrimaryVertices, process.firstStepPrimaryVerticesUnsorted, process.initialStep, process.initialStepClassifier1, process.initialStepClassifier2, process.initialStepClassifier3, process.initialStepHitDoublets, process.initialStepHitTriplets, process.initialStepSeedLayers, process.initialStepSeeds, process.initialStepTrackCandidates, process.initialStepTrackRefsForJets, process.initialStepTrackingRegions, process.initialStepTracks)


process.reducedEcalRecHitsTask = cms.Task(process.interestingEcalDetIdEB, process.interestingEcalDetIdEBU, process.interestingEcalDetIdEE, process.interestingEcalDetIdOOTPFEB, process.interestingEcalDetIdOOTPFEE, process.interestingEcalDetIdOOTPFES, process.interestingEcalDetIdPFEB, process.interestingEcalDetIdPFEE, process.interestingEcalDetIdPFES, process.interestingEcalDetIdRefinedEB, process.interestingEcalDetIdRefinedEE, process.interestingEcalDetIdRefinedES, process.interestingTrackEcalDetIds, process.reducedEcalRecHitsEB, process.reducedEcalRecHitsEE, process.reducedEcalRecHitsES, process.seldigisTask)


process.muonreco_with_standAloneSET_Task = cms.Task(process.SETMuonSeed, process.standAloneSETMuons)


process.reducedEcalRecHitsSequenceEcalOnlyTask = cms.Task(process.interestingEcalDetIdEB, process.interestingEcalDetIdEBU, process.interestingEcalDetIdEE, process.reducedEcalRecHitsEB, process.reducedEcalRecHitsEE, process.seldigisTask)


process.pfParticleSelectionTask = cms.Task(process.pfNoPileUpIsoTask, process.pfNoPileUpTask, process.pfSortByTypeTask)


process.egmIsolationTask = cms.Task(process.egmGedGsfElectronPFNoPileUpIsolation, process.egmGedGsfElectronPFPileUpIsolation, process.pfClusterIsolationTask, process.pfNoPileUpCandidates, process.pfParticleSelectionTask)


process.muIsolation_ParamGlobalMuonsTask = cms.Task(process.muIsoDeposits_ParamGlobalMuonsTask)


process.muonSeededStepCoreTask = cms.Task(process.muonSeededStepCoreInOutTask, process.muonSeededStepCoreOutInTask)


process.electronGsfTrackingTask = cms.Task(process.electronCkfTrackCandidates, process.electronGsfTracks, process.electronSeedsTask)


process.muonSeededStepDisplacedTask = cms.Task(process.earlyDisplacedMuons, process.muonSeededStepCoreDisplacedTask, process.muonSeededStepExtraDisplacedTask)


process.muIsolation_muonsTask = cms.Task(process.muIsoDeposits_muonsTask)


process.muonSeededStepDebugTask = cms.Task(process.muonSeededSeedsOutInAsTracks, process.muonSeededStepDebugInOutTask, process.muonSeededTrackCandidatesOutInAsTracks)


process.electronGsfTrackingWithTimingTask = cms.Task(process.electronCkfTrackCandidates, process.electronGsfTracks, process.electronSeedsTask, process.gsfTrackTimeValueMapProducer)


process.pfBasedElectronIsoTask = cms.Task(process.electronPFIsolationDepositsTask, process.electronPFIsolationValuesTask, process.pfParticleSelectionTask)


process.standalonemuontrackingTask = cms.Task(process.displacedMuonSeeds, process.displacedStandAloneMuons, process.refittedStandAloneMuons, process.standAloneMuonSeedsTask, process.standAloneMuons)


process.iterDisplcedTrackingTask = cms.Task(process.displacedTracksTask, process.muonSeededStepDisplacedTask, process.preDuplicateMergingDisplacedTracks)


process.gedElectronPFIsoTask = cms.Task(process.gedElectronPFIsolationDepositsTask, process.gedElectronPFIsolationValuesTask, process.gedGsfElectrons, process.pfParticleSelectionTask)


process.muonSeededStepExtraTask = cms.Task(process.muonSeededStepExtraInOutTask, process.muonSeededTracksOutInClassifier)


process.muIsolation_ParamGlobalMuonsOldTask = cms.Task(process.muIsoDeposits_ParamGlobalMuonsOldTask)


process.edBasedElectronIsoTask = cms.Task(process.electronEDIsolationDepositsTask, process.electronEDIsolationValuesTask, process.pfParticleSelectionTask)


process.muonreco_plus_isolation_PbPbTask = cms.Task(process.glbTrackQual, process.globalMuons, process.hiMuons1stStep, process.muonEcalDetIds, process.muonSeededStepCoreInOutTask, process.muonSeededStepExtraInOutTask, process.muonShowerInformation, process.tevMuons)


process.displacedGlobalMuonTrackingTask = cms.Task(process.displacedGlobalMuons, process.iterDisplcedTrackingTask)


process.muonSeededStepTask = cms.Task(process.earlyMuons, process.muonSeededStepCoreTask, process.muonSeededStepExtraTask)


process.electronIsoTask = cms.Task(process.edBasedElectronIsoTask, process.pfBasedElectronIsoTask)


process.muIsolationTask = cms.Task(process.muIsolation_muonsTask)


process.gsfElectronMergingTask = cms.Task(process.electronIsoTask, process.gsfElectronCores, process.gsfElectrons)


process.globalmuontrackingTask = cms.Task(process.displacedGlobalMuonTrackingTask, process.globalMuons, process.tevMuons)


process.muontrackingTask = cms.Task(process.globalmuontrackingTask, process.standalonemuontrackingTask)


process.muonGlobalRecoTask = cms.Task(process.globalmuontrackingTask, process.muIsolationTask, process.muonIdProducerTask, process.muonSelectionTypeTask)


process.muonrecoTask = cms.Task(process.muonIdProducerTask, process.muontrackingTask)


process.muonreco_plus_isolationTask = cms.Task(process.muIsolationTask, process.muonrecoTask)


process.pfNoPileUpJMESequence = cms.Sequence(process.pfNoPileUpJMETask)


process.hiDetachedTripletStep_Phase1 = cms.Sequence(process.hiDetachedTripletStepClusters+process.hiDetachedTripletStepSeedLayers+process.hiDetachedTripletStepTrackingRegions+process.hiDetachedTripletStepTracksHitDoubletsCA+process.hiDetachedTripletStepTracksHitTripletsCA+process.pixelFitterByHelixProjections+process.hiDetachedTripletStepPixelTracksFilter+process.hiDetachedTripletStepPixelTracks+process.hiDetachedTripletStepSeeds+process.hiDetachedTripletStepTrackCandidates+process.hiDetachedTripletStepTracks+process.hiDetachedTripletStepSelector+process.hiDetachedTripletStepQual)


process.islandClusteringSequence = cms.Sequence(process.islandBasicClusters+process.islandSuperClusters+process.correctedIslandBarrelSuperClusters+process.correctedIslandEndcapSuperClusters)


process.cosmicsMuonIdSequence = cms.Sequence(process.cosmicsMuonIdTask)


process.hcalLocalRecoSequence = cms.Sequence(process.hbheprereco+process.hfreco+process.horeco+process.zdcreco)


process.HighPtTripletStep = cms.Sequence(process.HighPtTripletStepTask)


process.PixelLessStep = cms.Sequence(process.PixelLessStepTask)


process.pfBasedElectronIsoSequence = cms.Sequence(process.pfBasedElectronIsoTask)


process.csclocalreco = cms.Sequence(process.csc2DRecHits+process.cscSegments)


process.hcalLocalRecoSequenceNZS = cms.Sequence(process.hbherecoMB+process.hfrecoMB+process.horecoMB)


process.photonSequence = cms.Sequence(process.photonCore+process.photons)


process.photonIDSequenceGED = cms.Sequence(process.PhotonIDProdGED)


process.hiTobTecStep = cms.Sequence(process.hiTobTecStepClusters+process.tobTecStepSeedLayersTripl+process.hiTobTecStepTrackingRegionsTripl+process.tobTecStepHitDoubletsTripl+process.tobTecStepHitTripletsTripl+process.tobTecStepSeedsTripl+process.tobTecStepSeedLayersPair+process.hiTobTecStepTrackingRegionsPair+process.tobTecStepHitDoubletsPair+process.tobTecStepSeedsPair+process.tobTecStepSeeds+process.tobTecStepTrackCandidates+process.hiTobTecStepTracks+process.hiTobTecStepSelector+process.hiTobTecStepQual)


process.dtlocalreco = cms.Sequence(process.dt1DRecHits+process.dt4DSegments+process.dt1DCosmicRecHits+process.dt4DCosmicSegments)


process.globalmuontracking = cms.Sequence(process.globalmuontrackingTask)


process.muonSeededStepExtraDisplaced = cms.Sequence(process.muonSeededStepExtraDisplacedTask)


process.ecalUncalibRecHitSequence = cms.Sequence(process.ecalMultiFitUncalibRecHit+process.ecalDetIdToBeRecovered)


process.muonRecoPbPb = cms.Sequence(process.muonreco_plus_isolation_PbPbTask)


process.hiPhotonCleaningSequence = cms.Sequence(process.hiSpikeCleanedSC+process.cleanPhotonCore+process.cleanPhotons)


process.pfClusteringECAL = cms.Sequence(process.pfClusteringECALTask)


process.pixeltrackerlocalreco = cms.Sequence(process.siPixelClustersPreSplitting+process.siPixelRecHitsPreSplitting)


process.muonreco = cms.Sequence(process.muonrecoTask)


process.striptrackerlocalreco = cms.Sequence(process.siStripZeroSuppression+process.siStripClusters+process.siStripMatchedRecHits)


process.muonSeededStepCoreOutIn = cms.Sequence(process.muonSeededStepCoreOutInTask)


process.RawToDigi_pixelOnly = cms.Sequence(process.siPixelDigis)


process.PixelPairStep = cms.Sequence(process.PixelPairStepTask)


process.bestHiVertex = cms.Sequence(process.hiBestAdaptiveVertex+process.hiSelectedPixelVertex)


process.pfClusteringHGCal = cms.Sequence(process.particleFlowRecHitHGC)


process.muonlocalreco = cms.Sequence(process.dtlocalreco+process.csclocalreco+process.rpcRecHits)


process.hiRegitMuonDetachedTripletStep = cms.Sequence(process.hiRegitMuDetachedTripletStepClusters+process.hiRegitMuDetachedTripletStepSeedLayers+process.hiRegitMuDetachedTripletStepTrackingRegions+process.hiRegitMuDetachedTripletStepHitDoublets+process.hiRegitMuDetachedTripletStepHitTriplets+process.hiRegitMuDetachedTripletStepSeeds+process.hiRegitMuDetachedTripletStepTrackCandidates+process.hiRegitMuDetachedTripletStepTracks+process.hiRegitMuDetachedTripletStepSelector)


process.standAloneMuonSeeds = cms.Sequence(process.standAloneMuonSeedsTask)


process.hiPhotonSequence = cms.Sequence(process.photonSequence+process.photonIsolationHIProducer)


process.hiEgammaSequence = cms.Sequence(process.hiPhotonSequence)


process.multi5x5PreshowerClusteringSequence = cms.Sequence(process.multi5x5PreshowerClusteringTask)


process.pfSortByTypeSequence = cms.Sequence(process.pfSortByTypeTask)


process.hiTracksWithQuality = cms.Sequence(process.hiInitialStepSelector)


process.LowPtQuadStep = cms.Sequence(process.LowPtQuadStepTask)


process.dtlocalreco_with_2DSegments = cms.Sequence(process.dt1DRecHits+process.dt2DSegments+process.dt4DSegments+process.dt1DCosmicRecHits+process.dt2DCosmicSegments+process.dt4DCosmicSegments)


process.particleFlowTrackWithV0 = cms.Sequence(process.pfTrack+process.pfTrackElec+process.pfV0)


process.hiRegitMuonPixelPairStep = cms.Sequence(process.hiRegitMuPixelPairStepClusters+process.hiRegitMuPixelPairStepSeedLayers+process.hiRegitMuPixelPairStepTrackingRegions+process.hiRegitMuPixelPairStepHitDoublets+process.hiRegitMuPixelPairStepSeeds+process.hiRegitMuPixelPairStepTrackCandidates+process.hiRegitMuPixelPairStepTracks+process.hiRegitMuPixelPairStepSelector)


process.muonSeededStepCore = cms.Sequence(process.muonSeededStepCoreTask)


process.CastorFullReco = cms.Sequence(process.CastorFullRecoTask)


process.remuonIdProducerSequence = cms.Sequence(process.reglbTrackQual+process.remuons+process.remuonEcalDetIds+process.remuonShowerInformation)


process.electronGsfTrackingHi = cms.Sequence(process.ecalDrivenElectronSeeds+process.electronCkfTrackCandidates+process.electronGsfTracks)


process.particleFlowClusterWithoutHOTask = cms.Sequence(process.particleFlowBadHcalPseudoCluster, process.pfClusteringECALTask, process.pfClusteringHBHEHFTask, process.pfClusteringPSTask)


process.endOfProcess = cms.Sequence(process.MEtoEDMConverter)


process.TobTecStep = cms.Sequence(process.TobTecStepTask)


process.muonSeededStepCoreInOut = cms.Sequence(process.muonSeededStepCoreInOutTask)


process.hiHighPtTripletStep = cms.Sequence(process.hiHighPtTripletStepClusters+process.hiHighPtTripletStepSeedLayers+process.hiHighPtTripletStepTrackingRegions+process.hiHighPtTripletStepTracksHitDoubletsCA+process.hiHighPtTripletStepTracksHitTripletsCA+process.pixelFitterByHelixProjections+process.hiHighPtTripletStepPixelTracksFilter+process.hiHighPtTripletStepPixelTracks+process.hiHighPtTripletStepSeeds+process.hiHighPtTripletStepTrackCandidates+process.hiHighPtTripletStepTracks+process.hiHighPtTripletStepSelector+process.hiHighPtTripletStepQual)


process.muonlocalreco_with_2DSegments = cms.Sequence(process.dtlocalreco_with_2DSegments+process.csclocalreco+process.rpcRecHits)


process.photonIDSequence = cms.Sequence(process.PhotonIDProd)


process.muonSelectionTypeSequence = cms.Sequence(process.muonSelectionTypeTask)


process.muonreco_plus_isolation_PbPb = cms.Sequence(process.muonreco_plus_isolation_PbPbTask)


process.gedElectronPFIsoSequence = cms.Sequence(process.gedElectronPFIsoTask)


process.pfNoPileUpSequence = cms.Sequence(process.pfNoPileUpTask)


process.pfClusteringHO = cms.Sequence(process.pfClusteringHOTask)


process.electronGsfTracking = cms.Sequence(process.electronGsfTrackingTask)


process.muonRecoHighLevelPbPb = cms.Sequence(process.muons)


process.particleFlowTrackWithDisplacedVertex = cms.Sequence(process.particleFlowTrackWithDisplacedVertexTask)


process.muonSeededStep = cms.Sequence(process.muonSeededStepTask)


process.hiRegitMuonSeededStepExtra = cms.Sequence(process.hiRegitMuonSeededTracksInOutSelector+process.hiRegitMuonSeededTracksOutInSelector)


process.endOfProcess_withComparison = cms.Sequence(process.MEtoEDMConverter+process.MEtoMEComparitor)


process.MixedTripletStep = cms.Sequence(process.MixedTripletStepTask)


process.gsfElectronSequence = cms.Sequence(process.gsfElectronTask)


process.electronIsoSequence = cms.Sequence(process.electronIsoTask)


process.gedElectronPFIsolationDepositsSequence = cms.Sequence(process.gedElectronPFIsolationDepositsTask)


process.me0LocalReco = cms.Sequence(process.me0RecHits+process.me0Segments)


process.seldigis = cms.Sequence(process.seldigisTask)


process.eIdSequence = cms.Sequence(process.eIdTask)


process.hiPixel3ProtoTracksSequence = cms.Sequence(process.hiTrackingRegionFromClusterVtx+process.hiPixel3ProtoTracksHitDoublets+process.hiPixel3ProtoTracksHitTriplets+process.pixelFitterByHelixProjections+process.hiProtoTrackFilter+process.hiPixel3ProtoTracks)


process.L1Reco = cms.Sequence(process.l1extraParticles)


process.L1Reco_L1Extra_L1GtRecord = cms.Sequence()


process.muonSeededStepDebugDisplaced = cms.Sequence(process.muonSeededStepDebugDisplacedTask)


process.hiMixedTripletStep = cms.Sequence(process.hiMixedTripletStepClusters+process.mixedTripletStepSeedLayersA+process.hiMixedTripletStepTrackingRegionsA+process.mixedTripletStepHitDoubletsA+process.mixedTripletStepHitTripletsA+process.mixedTripletStepSeedsA+process.mixedTripletStepSeedLayersB+process.hiMixedTripletStepTrackingRegionsB+process.mixedTripletStepHitDoubletsB+process.mixedTripletStepHitTripletsB+process.mixedTripletStepSeedsB+process.mixedTripletStepSeeds+process.mixedTripletStepTrackCandidates+process.hiMixedTripletStepTracks+process.hiMixedTripletStepSelector+process.hiMixedTripletStepQual)


process.gedPhotonSequence = cms.Sequence(process.gedPhotons)


process.reducedHcalRecHitsSequence = cms.Sequence(process.reducedHcalRecHits)


process.muIsolation_muons = cms.Sequence(process.muIsolation_muonsTask)


process.InitialStep = cms.Sequence(process.InitialStepTask)


process.preshowerClusteringSequence = cms.Sequence(process.correctedEndcapSuperClustersWithPreshower+process.preshowerClusterShape)


process.gedPhotonSequenceTmp = cms.Sequence(process.gedPhotonCore+process.gedPhotonsTmp)


process.particleFlowSuperClusteringSequence = cms.Sequence(process.particleFlowSuperClusterECAL)


process.muonreco_with_SET = cms.Sequence(process.muonreco_with_SET_Task)


process.electronPFIsolationValuesSequence = cms.Sequence(process.electronPFIsolationValuesTask)


process.muIsolation_ParamGlobalMuons = cms.Sequence(process.muIsolation_ParamGlobalMuonsTask)


process.particleBasedIsolationSequence = cms.Sequence(process.particleBasedIsolation)


process.displacedGlobalMuonTracking = cms.Sequence(process.displacedGlobalMuonTrackingTask)


process.interestingEgammaIsoDetIds = cms.Sequence(process.interestingEgammaIsoDetIdsTask)


process.hiDetachedTripletStep = cms.Sequence(process.hiDetachedTripletStepClusters+process.hiDetachedTripletStepSeedLayers+process.hiDetachedTripletStepTrackingRegions+process.hiDetachedTripletStepTracksHitDoublets+process.hiDetachedTripletStepTracksHitTriplets+process.pixelFitterByHelixProjections+process.hiDetachedTripletStepPixelTracksFilter+process.hiDetachedTripletStepPixelTracks+process.hiDetachedTripletStepSeeds+process.hiDetachedTripletStepTrackCandidates+process.hiDetachedTripletStepTracks+process.hiDetachedTripletStepSelector+process.hiDetachedTripletStepQual)


process.hiLowPtTripletStep_Phase1 = cms.Sequence(process.hiLowPtTripletStepClusters+process.hiLowPtTripletStepSeedLayers+process.hiLowPtTripletStepTrackingRegions+process.hiLowPtTripletStepTracksHitDoubletsCA+process.hiLowPtTripletStepTracksHitTripletsCA+process.pixelFitterByHelixProjections+process.hiLowPtTripletStepPixelTracksFilter+process.hiLowPtTripletStepPixelTracks+process.hiLowPtTripletStepSeeds+process.hiLowPtTripletStepTrackCandidates+process.hiLowPtTripletStepTracks+process.hiLowPtTripletStepSelector+process.hiLowPtTripletStepQual)


process.pfTrackingGlobalReco = cms.Sequence(process.particleFlowTrackWithDisplacedVertex)


process.electronEDIsolationDepositsSequence = cms.Sequence(process.electronEDIsolationDepositsTask)


process.caloTowersRec = cms.Sequence(process.caloTowersRecTask)


process.standalonemuontracking = cms.Sequence(process.standalonemuontrackingTask)


process.particleFlowTrack = cms.Sequence(process.pfTrack+process.pfTrackElec)


process.hiPixelPairStep_Phase1 = cms.Sequence(process.hiPixelPairClusters+process.hiPixelPairSeedLayers+process.hiPixelPairStepTrackingRegionPhase1+process.hiPixelPairStepHitDoubletsPhase1+process.hiPixelPairStepSeedsPhase1+process.hiPixelPairTrackCandidates+process.hiPixelPairGlobalPrimTracks+process.hiPixelPairStepSelector)


process.egmIsolationSequence = cms.Sequence(process.egmIsolationTask)


process.pfClusteringPS = cms.Sequence(process.pfClusteringPSTask)


process.generalTracksSequence = cms.Sequence(process.generalTracksTask)


process.pfClusteringHBHEHF = cms.Sequence(process.pfClusteringHBHEHFTask)


process.hiRecoJets = cms.Sequence(process.caloTowersRec+process.caloTowers+process.iterativeConePu5CaloJets+process.akPu3CaloJets+process.akPu4CaloJets+process.akPu5CaloJets)


process.hiPixel3PrimTracksSequence = cms.Sequence(process.hiTrackingRegionWithVertex+process.hiPixel3PrimTracksHitDoublets+process.hiPixel3PrimTracksHitTriplets+process.pixelFitterByHelixProjections+process.hiFilter+process.hiPixel3PrimTracks)


process.electronSeeds = cms.Sequence(process.electronSeedsTask)


process.gemLocalReco = cms.Sequence(process.gemRecHits+process.gemSegments)


process.muontracking_with_SET = cms.Sequence(process.muontracking_with_SET_Task)


process.pfNoPileUpIsoSequence = cms.Sequence(process.pfNoPileUpIsoTask)


process.hfEMClusteringSequence = cms.Sequence(process.hfEMClusteringTask)


process.ootPhotonSequence = cms.Sequence(process.ootPhotonTask)


process.hiRegitMuonInitialStep = cms.Sequence(process.hiRegitMuInitialStepSeedLayers+process.hiRegitMuInitialStepTrackingRegions+process.hiRegitMuInitialStepHitDoublets+process.hiRegitMuInitialStepHitTriplets+process.hiRegitMuInitialStepSeeds+process.hiRegitMuInitialStepTrackCandidates+process.hiRegitMuInitialStepTracks+process.hiRegitMuInitialStepSelector)


process.L1TRawToDigi_Stage1 = cms.Sequence(process.csctfDigis+process.dttfDigis+process.gtDigis+process.caloStage1Digis+process.caloStage1FinalDigis+process.caloStage1LegacyFormatDigis+process.gctDigis)


process.muonSeededStepCoreDisplaced = cms.Sequence(process.muonSeededStepCoreDisplacedTask)


process.muonreco_plus_isolation = cms.Sequence(process.muonreco_plus_isolationTask)


process.gsfEcalDrivenElectronSequence = cms.Sequence(process.gsfEcalDrivenElectronTask)


process.DetachedTripletStep = cms.Sequence(process.DetachedTripletStepTask)


process.gedElectronPFIsolationValuesSequence = cms.Sequence(process.gedElectronPFIsolationValuesTask)


process.pfClusterIsolationSequence = cms.Sequence(process.pfClusterIsolationTask)


process.particleFlowTrackWithNuclear = cms.Sequence(process.pfTrack+process.pfTrackElec+process.pfNuclear)


process.hiLowPtQuadStep = cms.Sequence(process.hiLowPtQuadStepClusters+process.hiLowPtQuadStepSeedLayers+process.hiLowPtQuadStepTrackingRegions+process.hiLowPtQuadStepTracksHitDoubletsCA+process.hiLowPtQuadStepTracksHitQuadrupletsCA+process.pixelFitterByHelixProjections+process.hiLowPtQuadStepPixelTracksFilter+process.hiLowPtQuadStepPixelTracks+process.hiLowPtQuadStepSeeds+process.hiLowPtQuadStepTrackCandidates+process.hiLowPtQuadStepTracks+process.hiLowPtQuadStepSelector+process.hiLowPtQuadStepQual)


process.hiRegitMuonMixedTripletStep = cms.Sequence(process.hiRegitMuMixedTripletStepClusters+process.hiRegitMuMixedTripletStepSeedLayersA+process.hiRegitMuMixedTripletStepTrackingRegionsA+process.hiRegitMuMixedTripletStepHitDoubletsA+process.hiRegitMuMixedTripletStepHitTripletsA+process.hiRegitMuMixedTripletStepSeedsA+process.hiRegitMuMixedTripletStepSeedLayersB+process.hiRegitMuMixedTripletStepTrackingRegionsB+process.hiRegitMuMixedTripletStepHitDoubletsB+process.hiRegitMuMixedTripletStepHitTripletsB+process.hiRegitMuMixedTripletStepSeedsB+process.hiRegitMuMixedTripletStepSeeds+process.hiRegitMuMixedTripletStepTrackCandidates+process.hiRegitMuMixedTripletStepTracks+process.hiRegitMuMixedTripletStepSelector)


process.muonSeededStepExtraInOut = cms.Sequence(process.muonSeededStepExtraInOutTask)


process.edBasedElectronIsoSequence = cms.Sequence(process.edBasedElectronIsoTask)


process.hiRegitMuonPixelLessStep = cms.Sequence(process.hiRegitMuPixelLessStepClusters+process.hiRegitMuPixelLessStepSeedLayers+process.hiRegitMuPixelLessStepTrackingRegions+process.hiRegitMuPixelLessStepHitDoublets+process.hiRegitMuPixelLessStepHitTriplets+process.hiRegitMuPixelLessStepSeeds+process.hiRegitMuPixelLessStepTrackCandidates+process.hiRegitMuPixelLessStepTracks+process.hiRegitMuPixelLessStepSelector)


process.multi5x5ClusteringSequence = cms.Sequence(process.multi5x5ClusteringTask)


process.hiConformalPixelTracksSequencePhase1 = cms.Sequence(process.hiConformalPixelTracksPhase1TrackingRegions+process.hiConformalPixelTracksPhase1SeedLayers+process.hiConformalPixelTracksPhase1HitDoubletsCA+process.hiConformalPixelTracksPhase1HitQuadrupletsCA+process.pixelFitterByConformalMappingAndLine+process.hiConformalPixelTracksPhase1Filter+process.hiConformalPixelTracks)


process.electronGsfTrackingWithTiming = cms.Sequence(process.electronGsfTrackingWithTimingTask)


process.photonPFIsolationDepositsSequence = cms.Sequence(process.phPFIsoDepositCharged+process.phPFIsoDepositChargedAll+process.phPFIsoDepositGamma+process.phPFIsoDepositNeutral+process.phPFIsoDepositPU)


process.hiDetachedQuadStep = cms.Sequence(process.hiDetachedQuadStepClusters+process.hiDetachedQuadStepSeedLayers+process.hiDetachedQuadStepTrackingRegions+process.hiDetachedQuadStepTracksHitDoubletsCA+process.hiDetachedQuadStepTracksHitQuadrupletsCA+process.pixelFitterByHelixProjections+process.hiDetachedQuadStepPixelTracksFilter+process.hiDetachedQuadStepPixelTracks+process.hiDetachedQuadStepSeeds+process.hiDetachedQuadStepTrackCandidates+process.hiDetachedQuadStepTracks+process.hiDetachedQuadStepSelector+process.hiDetachedQuadStepQual)


process.muIsolation_ParamGlobalMuonsOld = cms.Sequence(process.muIsolation_ParamGlobalMuonsOldTask)


process.reducedEcalRecHitsSequenceEcalOnly = cms.Sequence(process.reducedEcalRecHitsSequenceEcalOnlyTask)


process.L1Reco_L1Extra = cms.Sequence()


process.muonSeededStepDebugInOut = cms.Sequence(process.muonSeededStepDebugInOutTask)


process.pfParticleSelectionSequence = cms.Sequence(process.pfParticleSelectionTask)


process.particleFlowCluster = cms.Sequence(process.particleFlowClusterTask)


process.muonIdProducerSequence = cms.Sequence(process.muonIdProducerTask)


process.pfGsfElectronMVASelectionSequence = cms.Sequence(cms.ignore(process.electronsWithPresel)+process.mvaElectrons)


process.hiConformalPixelTracksSequence = cms.Sequence(process.hiTrackingRegionWithVertex+process.hiConformalPixelTracksHitDoublets+process.hiConformalPixelTracksHitTriplets+process.pixelFitterByConformalMappingAndLine+process.hiConformalPixelFilter+process.hiConformalPixelTracks)


process.muonrecoComplete = cms.Sequence(process.muonSelectionTypeTask, process.muonreco_plus_isolationTask)


process.gedGsfElectronSequenceTmp = cms.Sequence(process.gedGsfElectronCores+process.gedGsfElectronsTmp)


process.trackerlocalreco = cms.Sequence(process.pixeltrackerlocalreco+process.striptrackerlocalreco+process.clusterSummaryProducer)


process.particleFlowClusterECALSequence = cms.Sequence(process.particleFlowClusterECALTask)


process.bestFinalHiVertex = cms.Sequence(process.hiOfflinePrimaryVertices+process.hiBestOfflinePrimaryVertex+process.hiSelectedVertex)


process.hiParticleFlowLocalReco = cms.Sequence(process.particleFlowCluster)


process.muonSeededStepDebug = cms.Sequence(process.muonSeededStepDebugTask)


process.remuIsoDeposits_muons = cms.Sequence(process.remuIsoDepositTk+process.remuIsoDepositCalByAssociatorTowers+process.remuIsoDepositJets)


process.hiLowPtTripletStep = cms.Sequence(process.hiLowPtTripletStepClusters+process.hiLowPtTripletStepSeedLayers+process.hiLowPtTripletStepTrackingRegions+process.hiLowPtTripletStepTracksHitDoublets+process.hiLowPtTripletStepTracksHitTriplets+process.pixelFitterByHelixProjections+process.hiLowPtTripletStepPixelTracksFilter+process.hiLowPtTripletStepPixelTracks+process.hiLowPtTripletStepSeeds+process.hiLowPtTripletStepTrackCandidates+process.hiLowPtTripletStepTracks+process.hiLowPtTripletStepSelector+process.hiLowPtTripletStepQual)


process.hcalGlobalRecoSequence = cms.Sequence(process.hbhereco)


process.electronEDIsolationValuesSequence = cms.Sequence(process.electronEDIsolationValuesTask)


process.muIsoDeposits_muons = cms.Sequence(process.muIsoDeposits_muonsTask)


process.caloJetsForTrk = cms.Sequence(process.caloJetsForTrkTask)


process.hiPixel3PrimTracksSequence_Phase1 = cms.Sequence(process.hiTrackingRegionWithVertex+process.hiPixelLayerQuadruplets+process.hiPixel3PrimTracksHitDoubletsCA+process.hiPixel3PrimTracksHitQuadrupletsCA+process.pixelFitterByHelixProjections+process.hiFilter+process.hiPixel3PrimTracks)


process.muIsoDeposits_ParamGlobalMuons = cms.Sequence(process.muIsoDeposits_ParamGlobalMuonsTask)


process.muonreco_with_standAloneSET = cms.Sequence(process.muonreco_with_standAloneSET_Task)


process.muonSeededStepExtra = cms.Sequence(process.muonSeededStepExtraTask)


process.iterDisplcedTracking = cms.Sequence(process.iterDisplcedTrackingTask)


process.muonGlobalReco = cms.Sequence(process.muonGlobalRecoTask)


process.hiPixelVertices = cms.Sequence(process.hiPixelClusterVertex+process.PixelLayerTriplets+process.hiPixel3ProtoTracksSequence+process.hiPixelMedianVertex+process.hiSelectedProtoTracks+process.hiPixelAdaptiveVertex+process.bestHiVertex)


process.hiPixelPairStep = cms.Sequence(process.hiPixelPairClusters+process.hiPixelPairSeedLayers+process.hiPixelPairSeeds+process.hiPixelPairTrackCandidates+process.hiPixelPairGlobalPrimTracks+process.hiPixelPairStepSelector)


process.muonSeededStepDisplaced = cms.Sequence(process.muonSeededStepDisplacedTask)


process.reducedEcalRecHitsSequence = cms.Sequence(process.reducedEcalRecHitsTask)


process.hiCaloJetsForTrk = cms.Sequence(process.hiCaloTowerForTrk+process.akPu4CaloJetsForTrk+process.akPu4CaloJetsCorrected+process.akPu4CaloJetsSelected)


process.gsfElectronMergingSequence = cms.Sequence(process.gsfElectronMergingTask)


process.hiRecoPFJets = cms.Sequence(process.PFTowers+process.akPu3PFJets+process.akPu4PFJets+process.akPu5PFJets+process.kt4PFJetsForRho+process.hiFJRhoProducer+process.akCs3PFJets+process.akCs4PFJets)


process.DetachedQuadStep = cms.Sequence(process.DetachedQuadStepTask)


process.hybridClusteringSequence = cms.Sequence(process.hybridClusteringTask)


process.ctppsRawToDigi = cms.Sequence(process.totemTriggerRawToDigi+process.totemRPRawToDigi+process.ctppsDiamondRawToDigi+process.totemTimingRawToDigi+process.ctppsPixelDigis)


process.particleFlowTmpSeq = cms.Sequence(process.particleFlowTmp)


process.muIsolation = cms.Sequence(process.muIsolationTask)


process.bestHiVertexPreSplitting = cms.Sequence(process.hiBestAdaptiveVertexPreSplitting+process.hiSelectedVertexPreSplitting)


process.ecalRecHitSequence = cms.Sequence(process.ecalRecHit+process.ecalCompactTrigPrim+process.ecalTPSkim+process.ecalPreshowerRecHit)


process.displacedTracksSequence = cms.Sequence(process.displacedTracksTask)


process.electronPFIsolationDepositsSequence = cms.Sequence(process.electronPFIsolationDepositsTask)


process.hiRegitMuonSeededStepCore = cms.Sequence(process.hiRegitMuonSeededSeedsInOut+process.hiRegitMuonSeededTrackCandidatesInOut+process.hiRegitMuonSeededTracksInOut+process.hiRegitMuonSeededSeedsOutIn+process.hiRegitMuonSeededTrackCandidatesOutIn+process.hiRegitMuonSeededTracksOutIn)


process.particleFlowClusterWithoutHO = cms.Sequence(process.particleFlowClusterWithoutHOTask)


process.hiPixelLessStep = cms.Sequence(process.hiPixelLessStepClusters+process.pixelLessStepSeedLayers+process.hiPixelLessStepTrackingRegions+process.pixelLessStepHitDoublets+process.pixelLessStepHitTriplets+process.pixelLessStepSeeds+process.pixelLessStepTrackCandidates+process.hiPixelLessStepTracks+process.hiPixelLessStepSelector+process.hiPixelLessStepQual)


process.muIsoDeposits_ParamGlobalMuonsOld = cms.Sequence(process.muIsoDeposits_ParamGlobalMuonsOldTask)


process.hiElectronSequence = cms.Sequence(process.electronGsfTrackingHi+process.pfTrack+process.pfTrackElec+process.gsfEcalDrivenElectronSequence)


process.L1TRawToDigi = cms.Sequence(process.L1TRawToDigi_Stage1)


process.particleFlowEGammaFinal = cms.Sequence(process.particleBasedIsolationTmp+process.pfNoPileUpIsoSequence+cms.ignore(process.pfNoPileUpCandidates)+cms.ignore(process.pfPileUpAllChargedParticles)+process.egmPhotonIsolationCITK+process.egmElectronIsolationCITK+process.egmElectronIsolationPileUpCITK+process.gedPhotonSequence+process.gedElectronPFIsoSequence)


process.hiPrimSeeds = cms.Sequence(process.PixelLayerTriplets+process.hiPixel3PrimTracksSequence+process.hiPixelTrackSeeds)


process.hiRegitMuonSeededStep = cms.Sequence(process.hiEarlyGeneralTracks+process.hiEarlyMuons+process.hiRegitMuonSeededStepCore+process.hiRegitMuonSeededStepExtra)


process.hiPixelVerticesPreSplitting = cms.Sequence(process.hiPixelClusterVertexPreSplitting+process.PixelLayerTripletsPreSplitting+process.hiPixel3ProtoTracksTrackingRegionsPreSplitting+process.hiPixel3PRotoTracksHitDoubletsPreSplitting+process.hiPixel3ProtoTracksHitTripletsPreSplitting+process.hiProtoTrackFilterPreSplitting+process.pixelFitterByHelixProjections+process.hiPixel3ProtoTracksPreSplitting+process.hiPixelMedianVertexPreSplitting+process.hiSelectedProtoTracksPreSplitting+process.hiPixelAdaptiveVertexPreSplitting+process.bestHiVertexPreSplitting)


process.RawToDigi = cms.Sequence(process.L1TRawToDigi+process.siPixelDigis+process.siStripDigis+process.ecalDigis+process.ecalPreshowerDigis+process.hcalDigis+process.muonCSCDigis+process.muonDTDigis+process.muonRPCDigis+process.castorDigis+process.scalersRawToDigi+process.tcdsDigis+process.onlineMetaDataDigis)


process.muonReco = cms.Sequence(process.trackerlocalreco+process.MeasurementTrackerEventPreSplitting+process.siPixelClusterShapeCachePreSplitting+process.muonlocalreco)


process.particleFlowLinks = cms.Sequence(process.particleFlow+process.particleFlowPtrs+process.chargedHadronPFTrackIsolation+process.particleBasedIsolationSequence)


process.hiRegitMuTracking = cms.Sequence(process.hiRegitMuClusterCheck+process.hiRegitMuonInitialStep+process.hiRegitMuonPixelPairStep+process.hiRegitMuonMixedTripletStep+process.hiRegitMuonPixelLessStep+process.hiRegitMuonDetachedTripletStep+process.hiRegitMuonSeededStep)


process.hiRegitMuTrackingAndSta = cms.Sequence(process.standalonemuontracking+process.hiRegitMuTracking)


process.pfBasedElectronPhotonIsoSequence = cms.Sequence(process.pfParticleSelectionSequence+process.pfSelectedElectrons+process.pfSelectedPhotons+process.photonPFIsolationDepositsSequence+process.phPFIsoValueCharged03PFId+process.phPFIsoValueChargedAll03PFId+process.phPFIsoValueGamma03PFId+process.phPFIsoValueNeutral03PFId+process.phPFIsoValuePU03PFId+process.phPFIsoValueCharged04PFId+process.phPFIsoValueChargedAll04PFId+process.phPFIsoValueGamma04PFId+process.phPFIsoValueNeutral04PFId+process.phPFIsoValuePU04PFId)


process.hiEcalClusteringSequence = cms.Sequence(process.islandClusteringSequence+process.hybridClusteringSequence+process.multi5x5ClusteringSequence+process.multi5x5PreshowerClusteringSequence+process.preshowerClusteringSequence+process.particleFlowSuperClusteringSequence)


process.remuIsolation_muons = cms.Sequence(process.remuIsoDeposits_muons)


process.RawToDigi_noTk = cms.Sequence(process.L1TRawToDigi+process.ecalDigis+process.ecalPreshowerDigis+process.hcalDigis+process.muonCSCDigis+process.muonDTDigis+process.muonRPCDigis+process.castorDigis+process.scalersRawToDigi+process.tcdsDigis+process.onlineMetaDataDigis)


process.ecalLocalRecoSequence = cms.Sequence(process.ecalUncalibRecHitSequence+process.ecalRecHitSequence)


process.hiJetCoreRegionalStep = cms.Sequence(process.hiCaloJetsForTrk+process.hiJetsForCoreTracking+process.hiFirstStepGoodPrimaryVertices+process.hiJetCoreRegionalStepSeedLayers+process.hiJetCoreRegionalStepSeeds+process.hiJetCoreRegionalStepTrackCandidates+process.hiJetCoreRegionalStepTracks+process.hiJetCoreRegionalStepSelector)


process.reducedRecHits = cms.Sequence(process.reducedEcalRecHitsSequence+process.reducedHcalRecHitsSequence)


process.hiRecoAllJets = cms.Sequence(process.caloTowersRec+process.caloTowers+process.iterativeConePu5CaloJets+process.ak1CaloJets+process.ak2CaloJets+process.ak3CaloJets+process.ak4CaloJets+process.ak5CaloJets+process.ak6CaloJets+process.ak7CaloJets+process.akPu1CaloJets+process.akPu2CaloJets+process.akPu3CaloJets+process.akPu4CaloJets+process.akPu5CaloJets+process.akPu6CaloJets+process.akPu7CaloJets+process.ktPu4CaloJets+process.ktPu6CaloJets)


process.egammaHighLevelRecoPostPF = cms.Sequence(process.interestingEgammaIsoDetIds+process.egmIsolationSequence+process.photonIDSequence+process.photonIDSequenceGED+process.eIdSequence+process.hfEMClusteringSequence)


process.hiEcalClusters = cms.Sequence(process.hiEcalClusteringSequence)


process.hiMergedConformalPixelTracking = cms.Sequence(process.hiConformalPixelTracksSequence+process.hiPixelOnlyStepSelector+process.hiHighPtStepSelector+process.hiGeneralAndPixelTracks)


process.caloReco = cms.Sequence(process.ecalLocalRecoSequence+process.hcalLocalRecoSequence)


process.particleFlowEGammaFull = cms.Sequence(process.particleFlowEGamma+process.gedGsfElectronSequenceTmp+process.gedPhotonSequenceTmp+process.ootPhotonSequence)


process.hiParticleFlowReco = cms.Sequence(process.pfGsfElectronMVASelectionSequence+process.particleFlowBlock+process.particleFlowEGammaFull+process.photonIsolationHIProducerGED+process.particleFlowTmpSeq+process.fixedGridRhoFastjetAllTmp+process.particleFlowTmpPtrs+process.particleFlowEGammaFinal+process.pfParticleSelectionSequence)


process.localReco = cms.Sequence(process.bunchSpacingProducer+process.offlineBeamSpot+process.muonReco+process.caloReco+process.castorreco)


process.pfPhotonTranslatorSequence = cms.Sequence(process.pfBasedElectronPhotonIsoSequence+process.pfPhotonTranslator+process.pfPhotonInterestingEcalDetIdEB+process.pfPhotonInterestingEcalDetIdEE)


process.remuIsolation = cms.Sequence(process.remuIsolation_muons)


process.hiInitialJetCoreClusterSplitting = cms.Sequence(process.hiPixelVerticesPreSplitting+process.hiCaloTowerForTrkPreSplitting+process.hiAkPu4CaloJetsForTrkPreSplitting+process.hiAkPu4CaloJetsCorrectedPreSplitting+process.hiAkPu4CaloJetsSelectedPreSplitting+process.hiJetsForCoreTrackingPreSplitting+process.siPixelClusters+process.siPixelRecHits+process.MeasurementTrackerEvent+process.siPixelClusterShapeCache)


process.caloRecoNZS = cms.Sequence(process.caloReco+process.hcalLocalRecoSequenceNZS)


process.hiBasicTracking = cms.Sequence(process.hiPixelVertices+process.hiPrimSeeds+process.hiPrimTrackCandidates+process.hiGlobalPrimTracks+process.hiTracksWithQuality)


process.particleFlowReco = cms.Sequence(process.particleFlowTrackWithDisplacedVertex+process.pfGsfElectronMVASelectionSequence+process.particleFlowBlock+process.particleFlowEGammaFull+(process.particleFlowTmp)+process.fixedGridRhoFastjetAllTmp+process.particleFlowTmpPtrs+process.particleFlowEGammaFinal+process.pfParticleSelectionSequence)


process.hiTracking_noRegitMu_wSplitting = cms.Sequence(process.hiInitialJetCoreClusterSplitting+process.hiBasicTracking+process.hiDetachedTripletStep+process.hiLowPtTripletStep+process.hiPixelPairStep)


process.hiTracking_noRegitMu = cms.Sequence(process.hiBasicTracking+process.hiDetachedTripletStep+process.hiLowPtTripletStep+process.hiPixelPairStep)


process.muontracking_re = cms.Sequence(process.hiRegitMuTracking+process.reglobalMuons)


process.muontracking = cms.Sequence(process.standAloneMuonSeeds+process.standAloneMuons+process.hiRegitMuTracking+process.reglobalMuons)


process.reMuonTrackRecoPbPb = cms.Sequence(process.muontracking_re)


process.hiTracking = cms.Sequence(process.hiTracking_noRegitMu+process.hiRegitMuTrackingAndSta+process.hiGeneralTracks+process.bestFinalHiVertex+process.trackExtrapolator)


process.pfElectronTranslatorSequence = cms.Sequence(process.pfBasedElectronPhotonIsoSequence+process.pfElectronTranslator+process.pfElectronInterestingEcalDetIdEB+process.pfElectronInterestingEcalDetIdEE)


process.hiTracking_noRegitMu_wSplitting_Phase1 = cms.Sequence(process.hiInitialJetCoreClusterSplitting+process.hiBasicTracking+process.hiLowPtQuadStep+process.hiHighPtTripletStep+process.hiDetachedQuadStep+process.hiDetachedTripletStep+process.hiLowPtTripletStep+process.hiPixelPairStep+process.hiMixedTripletStep+process.hiPixelLessStep+process.hiTobTecStep)


process.muontracking_with_TeVRefinement_re = cms.Sequence(process.muontracking_re+process.retevMuons)


process.hiTracking_wSplitting = cms.Sequence(process.hiTracking_noRegitMu_wSplitting+process.hiJetCoreRegionalStep+process.hiRegitMuTrackingAndSta+process.hiGeneralTracks+process.bestFinalHiVertex+process.trackExtrapolator)


process.muonrecowith_TeVRefinemen_re = cms.Sequence(process.muontracking_with_TeVRefinement_re+process.remuonIdProducerSequence)


process.localReco_HcalNZS = cms.Sequence(process.bunchSpacingProducer+process.offlineBeamSpot+process.muonReco+process.caloRecoNZS)


process.muonreco_plus_isolation_re = cms.Sequence(process.muonrecowith_TeVRefinemen_re+process.remuIsolation)


process.regionalMuonRecoPbPb = cms.Sequence(process.muonreco_plus_isolation_re)


process.hiTracking_wSplitting_Phase1 = cms.Sequence(process.hiTracking_noRegitMu_wSplitting_Phase1+process.hiJetCoreRegionalStep+process.hiRegitMuTrackingAndSta+process.hiGeneralTracks+process.bestFinalHiVertex+process.trackExtrapolator)


process.hiTracking_wConformalPixel = cms.Sequence(process.hiTracking+process.hiMergedConformalPixelTracking)


process.globalRecoPbPb_wConformalPixel = cms.Sequence(process.hiTracking_wConformalPixel+process.hiParticleFlowLocalReco+process.hiEcalClusters+process.hiRecoJets+process.muonRecoPbPb+process.hiElectronSequence+process.hiEgammaSequence+process.hiParticleFlowReco+process.egammaHighLevelRecoPostPF+process.hiCentrality+process.hiClusterCompatibility+process.hiEvtPlane+process.hcalnoise+process.muonRecoHighLevelPbPb+process.particleFlowLinks+process.hiRecoPFJets+process.reducedRecHits)


process.muonreco_re = cms.Sequence(process.muontracking_re+process.remuonIdProducerSequence)


process.globalRecoPbPb = cms.Sequence(process.hiTracking_wSplitting+process.hcalGlobalRecoSequence+process.hiParticleFlowLocalReco+process.hiEcalClusters+process.hiRecoJets+process.muonRecoPbPb+process.hiElectronSequence+process.hiEgammaSequence+process.hiParticleFlowReco+process.egammaHighLevelRecoPostPF+process.hiCentrality+process.hiClusterCompatibility+process.hiEvtPlane+process.hcalnoise+process.muonRecoHighLevelPbPb+process.particleFlowLinks+process.hiRecoPFJets+process.reducedRecHits)


process.reconstruct_PbPb = cms.Sequence(process.localReco+process.CastorFullReco+process.globalRecoPbPb)


process.globalRecoPbPb_wPhase1 = cms.Sequence(process.hiTracking_wSplitting_Phase1+process.hcalGlobalRecoSequence+process.hiParticleFlowLocalReco+process.hiEcalClusters+process.hiRecoJets+process.muonRecoPbPb+process.hiElectronSequence+process.hiEgammaSequence+process.hiParticleFlowReco+process.egammaHighLevelRecoPostPF+process.hiCentrality+process.hiClusterCompatibility+process.hiEvtPlane+process.hcalnoise+process.muonRecoHighLevelPbPb+process.particleFlowLinks+process.hiRecoPFJets+process.reducedRecHits)


process.reconstructionHeavyIons = cms.Sequence(process.reconstruct_PbPb)


process.reconstructionHeavyIons_HcalNZS = cms.Sequence(process.localReco_HcalNZS+process.globalRecoPbPb)


process.reconstructionHeavyIons_withRegitMu = cms.Sequence(process.reconstructionHeavyIons+process.regionalMuonRecoPbPb)


process.raw2digi_step = cms.Path(cms.Task(process.caloStage1Digis, process.caloStage1FinalDigis, process.caloStage1LegacyFormatDigis, process.castorDigis, process.csctfDigis, process.dttfDigis, process.ecalDigis, process.ecalPreshowerDigis, process.gctDigis, process.gtDigis, process.hcalDigis, process.muonCSCDigis, process.muonDTDigis, process.muonRPCDigis, process.onlineMetaDataDigis, process.scalersRawToDigi, process.siPixelDigis, process.siStripDigis, process.tcdsDigis))


process.reconstruction_step = cms.Path(process.hiSelectedProtoTracksPreSplitting+process.hiBestAdaptiveVertexPreSplitting+process.hiAkPu4CaloJetsSelectedPreSplitting+process.hiJetsForCoreTrackingPreSplitting+process.hiSelectedProtoTracks+process.hiBestAdaptiveVertex+process.akPu4CaloJetsSelected+process.hiJetsForCoreTracking+process.hiFirstStepGoodPrimaryVertices+process.hiBestOfflinePrimaryVertex, cms.Task(process.CastorTowerReco, process.ak5CastorJetID, process.ak5CastorJets, process.ak7CastorJetID, process.ak7CastorJets, process.ancientMuonSeed, process.cleanedHybridSuperClusters, process.correctedHybridSuperClusters, process.correctedMulti5x5SuperClustersWithPreshower, process.displacedMuonSeeds, process.displacedStandAloneMuons, process.ecalDrivenGsfElectronCores, process.ecalDrivenGsfElectrons, process.egmGedGsfElectronPFNoPileUpIsolation, process.egmGedGsfElectronPFPileUpIsolation, process.eidLoose, process.eidRobustHighEnergy, process.eidRobustLoose, process.eidRobustTight, process.eidTight, process.electronEcalPFClusterIsolationProducer, process.electronHcalPFClusterIsolationProducer, process.gedElPFIsoDepositCharged, process.gedElPFIsoDepositChargedAll, process.gedElPFIsoDepositGamma, process.gedElPFIsoDepositNeutral, process.gedElPFIsoDepositPU, process.gedElPFIsoValueCharged03, process.gedElPFIsoValueChargedAll03, process.gedElPFIsoValueGamma03, process.gedElPFIsoValueNeutral03, process.gedElPFIsoValuePU03, process.gedGsfElectrons, process.glbTrackQual, process.globalMuons, process.hfEMClusters, process.hfRecoEcalCandidate, process.hiMuons1stStep, process.hybridSuperClusters, process.interestingEcalDetIdEB, process.interestingEcalDetIdEBU, process.interestingEcalDetIdEE, process.interestingEcalDetIdOOTPFEB, process.interestingEcalDetIdOOTPFEE, process.interestingEcalDetIdOOTPFES, process.interestingEcalDetIdPFEB, process.interestingEcalDetIdPFEE, process.interestingEcalDetIdPFES, process.interestingEcalDetIdRefinedEB, process.interestingEcalDetIdRefinedEE, process.interestingEcalDetIdRefinedES, process.interestingGamIsoDetIdEB, process.interestingGamIsoDetIdEE, process.interestingGedEgammaIsoESDetId, process.interestingGedEgammaIsoHCALDetId, process.interestingGedEleIsoDetIdEB, process.interestingGedEleIsoDetIdEE, process.interestingGedGamIsoDetIdEB, process.interestingGedGamIsoDetIdEE, process.interestingOotEgammaIsoESDetId, process.interestingOotEgammaIsoHCALDetId, process.interestingOotGamIsoDetIdEB, process.interestingOotGamIsoDetIdEE, process.interestingTrackEcalDetIds, process.multi5x5BasicClustersCleaned, process.multi5x5BasicClustersUncleaned, process.multi5x5PreshowerClusterShape, process.multi5x5SuperClusters, process.multi5x5SuperClustersCleaned, process.multi5x5SuperClustersUncleaned, process.multi5x5SuperClustersWithPreshower, process.muonEcalDetIds, process.muonSeededSeedsInOut, process.muonSeededTrackCandidatesInOut, process.muonSeededTracksInOut, process.muonSeededTracksInOutClassifier, process.muonShowerInformation, process.ootPhotonCore, process.ootPhotonEcalPFClusterIsolationProducer, process.ootPhotonHcalPFClusterIsolationProducer, process.ootPhotons, process.ootPhotonsTmp, process.particleFlowBadHcalPseudoCluster, process.particleFlowClusterECAL, process.particleFlowClusterECALUncorrected, process.particleFlowClusterHBHE, process.particleFlowClusterHCAL, process.particleFlowClusterHF, process.particleFlowClusterHO, process.particleFlowClusterOOTECAL, process.particleFlowClusterOOTECALUncorrected, process.particleFlowClusterPS, process.particleFlowRecHitECAL, process.particleFlowRecHitHBHE, process.particleFlowRecHitHF, process.particleFlowRecHitHO, process.particleFlowRecHitOOTECAL, process.particleFlowRecHitPS, process.particleFlowSuperClusterOOTECAL, process.pfAllChargedHadrons, process.pfAllChargedParticles, process.pfAllNeutralHadrons, process.pfAllNeutralHadronsAndPhotons, process.pfAllPhotons, process.pfNoPileUp, process.pfNoPileUpCandidates, process.pfNoPileUpIso, process.pfPileUp, process.pfPileUpAllChargedParticles, process.pfPileUpIso, process.photonEcalPFClusterIsolationProducer, process.photonHcalPFClusterIsolationProducer, process.reducedEcalRecHitsEB, process.reducedEcalRecHitsEE, process.reducedEcalRecHitsES, process.refittedStandAloneMuons, process.selectDigi, process.standAloneMuons, process.tevMuons, process.towerMaker, process.towerMakerWithHO, process.uncleanedHybridSuperClusters, process.uncleanedOnlyCorrectedHybridSuperClusters, process.uncleanedOnlyCorrectedMulti5x5SuperClustersWithPreshower, process.uncleanedOnlyMulti5x5SuperClustersWithPreshower), cms.Task(process.MeasurementTrackerEvent, process.MeasurementTrackerEventPreSplitting, process.PFTowers, process.PhotonIDProd, process.PhotonIDProdGED, process.PixelLayerTriplets, process.PixelLayerTripletsPreSplitting, process.akCs3PFJets, process.akCs4PFJets, process.akPu3CaloJets, process.akPu3PFJets, process.akPu4CaloJets, process.akPu4CaloJetsCorrected, process.akPu4CaloJetsForTrk, process.akPu4PFJets, process.akPu5CaloJets, process.akPu5PFJets, process.bunchSpacingProducer, process.caloTowers, process.castorreco, process.chargedHadronPFTrackIsolation, process.clusterSummaryProducer, process.correctedEndcapSuperClustersWithPreshower, process.correctedIslandBarrelSuperClusters, process.correctedIslandEndcapSuperClusters, process.csc2DRecHits, process.cscSegments, process.dt1DCosmicRecHits, process.dt1DRecHits, process.dt4DCosmicSegments, process.dt4DSegments, process.ecalCompactTrigPrim, process.ecalDetIdToBeRecovered, process.ecalDrivenElectronSeeds, process.ecalMultiFitUncalibRecHit, process.ecalPreshowerRecHit, process.ecalRecHit, process.ecalTPSkim, process.egmElectronIsolationCITK, process.egmElectronIsolationPileUpCITK, process.egmPhotonIsolationCITK, process.electronCkfTrackCandidates, process.electronGsfTracks, process.electronsWithPresel, process.fixedGridRhoFastjetAllTmp, process.gedGsfElectronCores, process.gedGsfElectronsTmp, process.gedPhotonCore, process.gedPhotons, process.gedPhotonsTmp, process.hbheprereco, process.hbhereco, process.hcalnoise, process.hfreco, process.hiAkPu4CaloJetsCorrectedPreSplitting, process.hiAkPu4CaloJetsForTrkPreSplitting, process.hiCaloTowerForTrk, process.hiCaloTowerForTrkPreSplitting, process.hiCentrality, process.hiClusterCompatibility, process.hiDetachedTripletStepClusters, process.hiDetachedTripletStepPixelTracks, process.hiDetachedTripletStepPixelTracksFilter, process.hiDetachedTripletStepQual, process.hiDetachedTripletStepSeedLayers, process.hiDetachedTripletStepSeeds, process.hiDetachedTripletStepSelector, process.hiDetachedTripletStepTrackCandidates, process.hiDetachedTripletStepTrackingRegions, process.hiDetachedTripletStepTracks, process.hiDetachedTripletStepTracksHitDoublets, process.hiDetachedTripletStepTracksHitTriplets, process.hiEarlyGeneralTracks, process.hiEarlyMuons, process.hiEvtPlane, process.hiFJRhoProducer, process.hiFilter, process.hiGeneralTracks, process.hiGlobalPrimTracks, process.hiInitialStepSelector, process.hiJetCoreRegionalStepSeedLayers, process.hiJetCoreRegionalStepSeeds, process.hiJetCoreRegionalStepSelector, process.hiJetCoreRegionalStepTrackCandidates, process.hiJetCoreRegionalStepTracks, process.hiLowPtTripletStepClusters, process.hiLowPtTripletStepPixelTracks, process.hiLowPtTripletStepPixelTracksFilter, process.hiLowPtTripletStepQual, process.hiLowPtTripletStepSeedLayers, process.hiLowPtTripletStepSeeds, process.hiLowPtTripletStepSelector, process.hiLowPtTripletStepTrackCandidates, process.hiLowPtTripletStepTrackingRegions, process.hiLowPtTripletStepTracks, process.hiLowPtTripletStepTracksHitDoublets, process.hiLowPtTripletStepTracksHitTriplets, process.hiOfflinePrimaryVertices, process.hiPixel3PRotoTracksHitDoubletsPreSplitting, process.hiPixel3PrimTracks, process.hiPixel3PrimTracksHitDoublets, process.hiPixel3PrimTracksHitTriplets, process.hiPixel3ProtoTracks, process.hiPixel3ProtoTracksHitDoublets, process.hiPixel3ProtoTracksHitTriplets, process.hiPixel3ProtoTracksHitTripletsPreSplitting, process.hiPixel3ProtoTracksPreSplitting, process.hiPixel3ProtoTracksTrackingRegionsPreSplitting, process.hiPixelAdaptiveVertex, process.hiPixelAdaptiveVertexPreSplitting, process.hiPixelClusterVertex, process.hiPixelClusterVertexPreSplitting, process.hiPixelMedianVertex, process.hiPixelMedianVertexPreSplitting, process.hiPixelPairClusters, process.hiPixelPairGlobalPrimTracks, process.hiPixelPairSeedLayers, process.hiPixelPairSeeds, process.hiPixelPairStepSelector, process.hiPixelPairTrackCandidates, process.hiPixelTrackSeeds, process.hiPrimTrackCandidates, process.hiProtoTrackFilter, process.hiProtoTrackFilterPreSplitting, process.hiRegitMuClusterCheck, process.hiRegitMuDetachedTripletStepClusters, process.hiRegitMuDetachedTripletStepHitDoublets, process.hiRegitMuDetachedTripletStepHitTriplets, process.hiRegitMuDetachedTripletStepSeedLayers, process.hiRegitMuDetachedTripletStepSeeds, process.hiRegitMuDetachedTripletStepSelector, process.hiRegitMuDetachedTripletStepTrackCandidates, process.hiRegitMuDetachedTripletStepTrackingRegions, process.hiRegitMuDetachedTripletStepTracks, process.hiRegitMuInitialStepHitDoublets, process.hiRegitMuInitialStepHitTriplets, process.hiRegitMuInitialStepSeedLayers, process.hiRegitMuInitialStepSeeds, process.hiRegitMuInitialStepSelector, process.hiRegitMuInitialStepTrackCandidates, process.hiRegitMuInitialStepTrackingRegions, process.hiRegitMuInitialStepTracks, process.hiRegitMuMixedTripletStepClusters, process.hiRegitMuMixedTripletStepHitDoubletsA, process.hiRegitMuMixedTripletStepHitDoubletsB, process.hiRegitMuMixedTripletStepHitTripletsA, process.hiRegitMuMixedTripletStepHitTripletsB, process.hiRegitMuMixedTripletStepSeedLayersA, process.hiRegitMuMixedTripletStepSeedLayersB, process.hiRegitMuMixedTripletStepSeeds, process.hiRegitMuMixedTripletStepSeedsA, process.hiRegitMuMixedTripletStepSeedsB, process.hiRegitMuMixedTripletStepSelector, process.hiRegitMuMixedTripletStepTrackCandidates, process.hiRegitMuMixedTripletStepTrackingRegionsA, process.hiRegitMuMixedTripletStepTrackingRegionsB, process.hiRegitMuMixedTripletStepTracks, process.hiRegitMuPixelLessStepClusters, process.hiRegitMuPixelLessStepHitDoublets, process.hiRegitMuPixelLessStepHitTriplets, process.hiRegitMuPixelLessStepSeedLayers, process.hiRegitMuPixelLessStepSeeds, process.hiRegitMuPixelLessStepSelector, process.hiRegitMuPixelLessStepTrackCandidates, process.hiRegitMuPixelLessStepTrackingRegions, process.hiRegitMuPixelLessStepTracks, process.hiRegitMuPixelPairStepClusters, process.hiRegitMuPixelPairStepHitDoublets, process.hiRegitMuPixelPairStepSeedLayers, process.hiRegitMuPixelPairStepSeeds, process.hiRegitMuPixelPairStepSelector, process.hiRegitMuPixelPairStepTrackCandidates, process.hiRegitMuPixelPairStepTrackingRegions, process.hiRegitMuPixelPairStepTracks, process.hiRegitMuonSeededSeedsInOut, process.hiRegitMuonSeededSeedsOutIn, process.hiRegitMuonSeededTrackCandidatesInOut, process.hiRegitMuonSeededTrackCandidatesOutIn, process.hiRegitMuonSeededTracksInOut, process.hiRegitMuonSeededTracksInOutSelector, process.hiRegitMuonSeededTracksOutIn, process.hiRegitMuonSeededTracksOutInSelector, process.hiSelectedPixelVertex, process.hiSelectedVertex, process.hiSelectedVertexPreSplitting, process.hiTrackingRegionFromClusterVtx, process.hiTrackingRegionWithVertex, process.horeco, process.islandBasicClusters, process.islandSuperClusters, process.iterativeConePu5CaloJets, process.kt4PFJetsForRho, process.muons, process.mvaElectrons, process.offlineBeamSpot, process.particleBasedIsolation, process.particleBasedIsolationTmp, process.particleFlow, process.particleFlowBlock, process.particleFlowEGamma, process.particleFlowPtrs, process.particleFlowSuperClusterECAL, process.particleFlowTmp, process.particleFlowTmpPtrs, process.pfNoPileUpCandidates, process.pfPileUpAllChargedParticles, process.pfTrack, process.pfTrackElec, process.photonCore, process.photonIsolationHIProducer, process.photonIsolationHIProducerGED, process.photons, process.pixelFitterByHelixProjections, process.preshowerClusterShape, process.reducedHcalRecHits, process.rpcRecHits, process.siPixelClusterShapeCache, process.siPixelClusterShapeCachePreSplitting, process.siPixelClusters, process.siPixelClustersPreSplitting, process.siPixelRecHits, process.siPixelRecHitsPreSplitting, process.siStripClusters, process.siStripMatchedRecHits, process.siStripZeroSuppression, process.trackExtrapolator, process.zdcreco))


process.L1Reco_step = cms.Path(cms.Task(process.l1extraParticles))


process.endjob_step = cms.EndPath(cms.Task(process.MEtoEDMConverter))


process.RECOoutput_step = cms.EndPath(process.RECOoutput)


process.schedule = cms.Schedule(*[ process.raw2digi_step, process.L1Reco_step, process.reconstruction_step, process.endjob_step, process.RECOoutput_step ], tasks=[process.patAlgosToolsTask])

from FWCore.ParameterSet.MassReplace import massReplaceInputTag
process = massReplaceInputTag(process, "rawDataCollector", "hltFEDSelector", False, True)
process = massReplaceInputTag(process, "rawDataRepacker", "hltFEDSelector", False, True)
