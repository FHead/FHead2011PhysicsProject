# This file is automatically generated by hltGetConfiguration.
# /dev/CMSSW_10_3_0/HLT/V51 (CMSSW_10_3_0)

import FWCore.ParameterSet.Config as cms


HLTConfigVersion = cms.PSet(
  tableName = cms.string('/dev/CMSSW_10_3_0/HLT/V51')
)

transferSystem = cms.PSet( 
  destinations = cms.vstring( 'Tier0',
    'DQM',
    'ECAL',
    'EventDisplay',
    'Lustre',
    'None' ),
  transferModes = cms.vstring( 'default',
    'test',
    'emulator' ),
  streamA = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'Lustre' )
  ),
  streamCalibration = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamDQM = cms.PSet( 
    default = cms.vstring( 'DQM' ),
    test = cms.vstring( 'DQM',
      'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamDQMCalibration = cms.PSet( 
    default = cms.vstring( 'DQM' ),
    test = cms.vstring( 'DQM',
      'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamEcalCalibration = cms.PSet( 
    default = cms.vstring( 'ECAL' ),
    test = cms.vstring( 'ECAL' ),
    emulator = cms.vstring( 'None' )
  ),
  streamEventDisplay = cms.PSet( 
    default = cms.vstring( 'EventDisplay',
      'Tier0' ),
    test = cms.vstring( 'EventDisplay',
      'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamExpressCosmics = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'Lustre' )
  ),
  streamNanoDST = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamRPCMON = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  streamTrackerCalibration = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'None' )
  ),
  default = cms.PSet( 
    default = cms.vstring( 'Tier0' ),
    test = cms.vstring( 'Lustre' ),
    emulator = cms.vstring( 'Lustre' ),
    streamLookArea = cms.PSet(  )
  ),
  streamLookArea = cms.PSet( 
    default = cms.vstring( 'DQM' ),
    test = cms.vstring( 'DQM',
      'Lustre' ),
    emulator = cms.vstring( 'None' )
  )
)
HLTPSetInitialCkfTrajectoryFilterForHI = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 999 )
)
HLTIter0PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTIter4PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltIter4ESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter4PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.untracked.int32( 4 ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTPSetTobTecStepInOutTrajectoryFilterBase = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 )
)
HLTIter0GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  doSeedingRegionRebuilding = cms.bool( False ),
  useHitsSplitting = cms.bool( False ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  cleanTrajectoryAfterInOut = cms.bool( False ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTSiStripClusterChargeCutTiny = cms.PSet(  value = cms.double( 800.0 ) )
HLTPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTIter4PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 0 )
)
HLTPSetTrajectoryBuilderForElectrons = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 90.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "hltESPBwdElectronPropagator" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryFilterForElectrons" ) ),
  propagatorAlong = cms.string( "hltESPFwdElectronPropagator" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTPSetPvClusterComparerForIT = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 1.0 )
)
HLTPSetMixedStepTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetInitialCkfTrajectoryBuilderForHI = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialCkfTrajectoryFilterForHI" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForHI" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTPSetMuonCkfTrajectoryBuilder = cms.PSet( 
  rescaleErrorIfFail = cms.double( 1.0 ),
  ComponentType = cms.string( "MuonCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  updator = cms.string( "hltESPKFUpdator" ),
  deltaEta = cms.double( -1.0 ),
  useSeedLayer = cms.bool( False ),
  deltaPhi = cms.double( -1.0 )
)
HLTIter0HighPtTkMuPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetPvClusterComparerForBTag = cms.PSet( 
  track_chi2_max = cms.double( 20.0 ),
  track_pt_max = cms.double( 20.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 0.1 )
)
HLTSeedFromConsecutiveHitsTripletOnlyCreator = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "ParabolicMf" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsTripletOnlyCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
HLTIter2GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  doSeedingRegionRebuilding = cms.bool( False ),
  useHitsSplitting = cms.bool( False ),
  maxCand = cms.int32( 2 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  useSameTrajFilter = cms.bool( True ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  cleanTrajectoryAfterInOut = cms.bool( False ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( False ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTIter3PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltIter3ESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter3PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTSiStripClusterChargeCutTight = cms.PSet(  value = cms.double( 1945.0 ) )
HLTPSetCkf3HitTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetDetachedStepTrajectoryFilterBase = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 2 ),
  minPt = cms.double( 0.075 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetMuonTrackingRegionBuilder8356 = cms.PSet( 
  Rescale_Dz = cms.double( 3.0 ),
  Pt_fixed = cms.bool( False ),
  Eta_fixed = cms.bool( False ),
  Eta_min = cms.double( 0.1 ),
  DeltaZ = cms.double( 15.9 ),
  maxRegions = cms.int32( 2 ),
  EtaR_UpperLimit_Par1 = cms.double( 0.25 ),
  UseVertex = cms.bool( False ),
  Z_fixed = cms.bool( True ),
  PhiR_UpperLimit_Par1 = cms.double( 0.6 ),
  PhiR_UpperLimit_Par2 = cms.double( 0.2 ),
  Rescale_phi = cms.double( 3.0 ),
  DeltaEta = cms.double( 0.2 ),
  precise = cms.bool( True ),
  OnDemand = cms.int32( -1 ),
  EtaR_UpperLimit_Par2 = cms.double( 0.15 ),
  MeasurementTrackerName = cms.InputTag( "hltESPMeasurementTracker" ),
  vertexCollection = cms.InputTag( "pixelVertices" ),
  Pt_min = cms.double( 1.5 ),
  beamSpot = cms.InputTag( "hltOnlineBeamSpot" ),
  Phi_fixed = cms.bool( False ),
  DeltaR = cms.double( 0.2 ),
  input = cms.InputTag( 'hltL2Muons','UpdatedAtVtx' ),
  DeltaPhi = cms.double( 0.2 ),
  Phi_min = cms.double( 0.1 ),
  Rescale_eta = cms.double( 3.0 )
)
HLTPSetDetachedCkfTrajectoryFilterForHI = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 0.701 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTIter3PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 0 )
)
HLTPSetJetCoreStepTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTIter2PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetMuTrackJpsiTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuTrackJpsiTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTPSetTrajectoryBuilderForGsfElectrons = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 90.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "hltESPBwdElectronPropagator" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTrajectoryFilterForElectrons" ) ),
  propagatorAlong = cms.string( "hltESPFwdElectronPropagator" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  intermediateCleaning = cms.bool( False ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTSiStripClusterChargeCutNone = cms.PSet(  value = cms.double( -1.0 ) )
HLTPSetTobTecStepTrajectoryFilterBase = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 )
)
HLTPSetMuonCkfTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetbJetRegionalTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 8 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetDetachedStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedStepTrajectoryFilterBase" )    )
  )
)
HLTIter1PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetDetachedCkfTrajectoryFilterForHIGlobalPt8 = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 8.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 0.701 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetMixedStepTrajectoryBuilder = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedStepTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeTightMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedStepTrajectoryFilter" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetMixedStepTrajectoryFilterBase = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.05 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 )
)
HLTPSetCkfTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTSeedFromProtoTracks = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBuilderPixelOnly" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "ParabolicMf" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
HLTPSetInitialStepTrajectoryFilterBase = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 2 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTIter2PSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltIter2ESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTPSetMuTrackJpsiTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 10.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 8 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTSeedFromConsecutiveHitsCreatorIT = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "ParabolicMf" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
HLTPSetTrajectoryFilterL3 = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.5 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 1000000000 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetDetachedStepTrajectoryBuilder = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedStepTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedStepTrajectoryFilter" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetPixelPairCkfTrajectoryFilterForHIGlobalPt8 = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 8.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 100 )
)
HLTIter0PSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 4 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTIter2HighPtTkMuPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 3 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetMuTrackJpsiEffTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 9 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetPixelPairCkfTrajectoryBuilderForHIGlobalPt8 = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairCkfTrajectoryFilterForHIGlobalPt8" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForHI" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9ForHI" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairCkfTrajectoryFilterForHIGlobalPt8" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetPixelPairStepTrajectoryFilterBase = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 2 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetLowPtStepTrajectoryFilter = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 1 ),
  minPt = cms.double( 0.075 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTSeedFromConsecutiveHitsCreator = cms.PSet( 
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  SeedMomentumForBOFF = cms.double( 5.0 ),
  propagator = cms.string( "PropagatorWithMaterial" ),
  forceKinematicWithRegionDirection = cms.bool( False ),
  magneticField = cms.string( "" ),
  OriginTransverseErrorMultiplier = cms.double( 1.0 ),
  ComponentName = cms.string( "SeedFromConsecutiveHitsCreator" ),
  MinOneOverPtError = cms.double( 1.0 )
)
HLTPSetPixelPairCkfTrajectoryBuilderForHI = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairCkfTrajectoryFilterForHI" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForHI" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9ForHI" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairCkfTrajectoryFilterForHI" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetDetachedCkfTrajectoryBuilderForHI = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 0.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedCkfTrajectoryFilterForHI" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForHI" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedCkfTrajectoryFilterForHI" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTIter1PSetTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltIter1ESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTPSetDetachedCkfTrajectoryBuilderForHIGlobalPt8 = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 0.0 ),
  maxPtForLooperReconstruction = cms.double( 0.0 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedCkfTrajectoryFilterForHIGlobalPt8" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForHI" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedCkfTrajectoryFilterForHIGlobalPt8" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTSiStripClusterChargeCutForHI = cms.PSet(  value = cms.double( 2069.0 ) )
HLTPSetLowPtStepTrajectoryBuilder = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtStepTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtStepTrajectoryFilter" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetMuTrackJpsiEffTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuTrackJpsiEffTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 1 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTPSetTrajectoryFilterForElectrons = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( -1 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetJetCoreStepTrajectoryBuilder = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 50 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilter" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetPvClusterComparer = cms.PSet( 
  track_chi2_max = cms.double( 9999999.0 ),
  track_pt_max = cms.double( 10.0 ),
  track_prob_min = cms.double( -1.0 ),
  track_pt_min = cms.double( 2.5 )
)
HLTIter0HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0HighPtTkMuPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTPSetPixelLessStepTrajectoryFilterBase = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.05 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 )
)
HLTIter1GroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltIter1ESPMeasurementTracker" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter1PSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 5.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetMuonCkfTrajectoryBuilderSeedHit = cms.PSet( 
  rescaleErrorIfFail = cms.double( 1.0 ),
  ComponentType = cms.string( "MuonCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMuonCkfTrajectoryFilter" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( False ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  updator = cms.string( "hltESPKFUpdator" ),
  deltaEta = cms.double( -1.0 ),
  useSeedLayer = cms.bool( True ),
  deltaPhi = cms.double( -1.0 )
)
HLTPSetPixelPairCkfTrajectoryFilterForHI = cms.PSet( 
  minimumNumberOfHits = cms.int32( 6 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 1.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 100 )
)
HLTPSetInitialStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 3 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetInitialStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 3 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.2 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) )
)
HLTPSetLowPtQuadStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 4 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetLowPtQuadStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 3 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.075 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) )
)
HLTPSetHighPtTripletStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 3 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetHighPtTripletStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 3 ),
  seedPairPenalty = cms.int32( 5 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.2 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) )
)
HLTPSetLowPtTripletStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 4 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetLowPtTripletStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 3 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.075 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) )
)
HLTPSetDetachedQuadStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedQuadStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedQuadStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 3 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetDetachedQuadStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 3 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.075 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) )
)
HLTPSetDetachedTripletStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedTripletStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedTripletStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 3 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetDetachedTripletStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 3 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.075 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) )
)
HLTPSetMixedTripletStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 2 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetMixedTripletStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 3 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
)
HLTPSetPixelLessStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( True ),
  maxCand = cms.int32( 2 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( False ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetPixelLessStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 4 ),
  seedPairPenalty = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 0 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
)
HLTPSetTobTecStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 5 ),
  seedPairPenalty = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 0 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
)
HLTPSetTobTecStepInOutTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 4 ),
  seedPairPenalty = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 0 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) )
)
HLTPSetTobTecStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilter" ) ),
  useSameTrajFilter = cms.bool( False ),
  maxCand = cms.int32( 2 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( False ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetGroupedCkfTrajectoryBuilderIterL3ForOI = cms.PSet( 
  rescaleErrorIfFail = cms.double( 1.0 ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lockHits = cms.bool( True ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfTrajectoryFilterIterL3OI" ) ),
  maxCand = cms.int32( 5 ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  bestHitOnly = cms.bool( True ),
  deltaEta = cms.double( -1.0 ),
  useSeedLayer = cms.bool( False ),
  useSameTrajFilter = cms.bool( True ),
  MeasurementTrackerName = cms.string( "hltSiStripClusters" ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  lostHitPenalty = cms.double( 30.0 ),
  requireSeedHitsInRebuild = cms.bool( False ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfTrajectoryFilterIterL3OI" ) ),
  foundHitBonus = cms.double( 1000.0 ),
  propagatorProximity = cms.string( "SteppingHelixPropagatorAny" ),
  updator = cms.string( "hltESPKFUpdator" ),
  deltaPhi = cms.double( -1.0 )
)
HLTIter0IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTIter0IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 1.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterial" ),
  minNrOfHitsForRebuild = cms.int32( 2 ),
  maxCand = cms.int32( 5 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter0IterL3FromL1MuonGroupedCkfTrajectoryFilterIT" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTIter0IterL3MuonGroupedCkfTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTIter2HighPtTkMuPSetTrajectoryBuilderIT = cms.PSet( 
  ComponentType = cms.string( "CkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltIter2HighPtTkMuESPMeasurementTracker" ),
  lostHitPenalty = cms.double( 30.0 ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2HighPtTkMuPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  updator = cms.string( "hltESPKFUpdator" )
)
HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 3 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTIter2IterL3FromL1MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltIter2HighPtTkMuESPMeasurementTracker" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( False ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3FromL1MuonPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTIter2IterL3MuonPSetTrajectoryFilterIT = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.3 ),
  maxConsecLostHits = cms.int32( 3 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTIter2IterL3MuonPSetGroupedCkfTrajectoryBuilderIT = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "hltIter2HighPtTkMuESPMeasurementTracker" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( False ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTIter2IterL3MuonPSetTrajectoryFilterIT" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 1000.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetCkfTrajectoryFilterIterL3OI = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 3.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 10.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( -1 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 999.0 ),
  maxLostHits = cms.int32( 1 )
)
HLTPSetPixelPairStepTrajectoryFilter = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 4 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 0 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) )
)
HLTPSetPixelPairStepTrajectoryFilterInOut = cms.PSet( 
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  minimumNumberOfHits = cms.int32( 4 ),
  seedPairPenalty = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  minPt = cms.double( 0.1 ),
  nSigmaMinPt = cms.double( 5.0 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHits = cms.int32( 999 ),
  maxConsecLostHits = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedExtension = cms.int32( 1 ),
  strictSeedExtension = cms.bool( False ),
  pixelSeedExtension = cms.bool( False ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  maxCCCLostHits = cms.int32( 0 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) )
)
HLTPSetPixelPairStepTrajectoryBuilder = cms.PSet( 
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  bestHitOnly = cms.bool( True ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilter" ) ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterInOut" ) ),
  useSameTrajFilter = cms.bool( False ),
  maxCand = cms.int32( 3 ),
  intermediateCleaning = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  foundHitBonus = cms.double( 10.0 ),
  MeasurementTrackerName = cms.string( "" ),
  lockHits = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  updator = cms.string( "hltESPKFUpdator" ),
  alwaysUseInvalidHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  estimator = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 )
)
HLTPSetTobTecStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetTobTecStepInOutTrajectoryFilterPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetLowPtTripletStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.49 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetDetachedQuadStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetCkfBaseTrajectoryFilter_block = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetInitialStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( True ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 1 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetLowPtTripletStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtTripletStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetTobTecStepInOutTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 )
)
HLTPSetInitialStepTrajectoryFilterBasePreSplittingPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.2 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetDetachedTripletStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedTripletStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetHighPtTripletStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetHighPtTripletStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetDetachedTripletStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.9 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetInitialStepTrajectoryBuilderPreSplittingPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterPreSplittingPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetLowPtQuadStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.49 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetJetCoreStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetJetCoreStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 50 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetMixedTripletStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 0.4 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 1.4 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetJetCoreStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 5.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetInitialStepTrajectoryFilterPreSplittingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "CompositeTrajectoryFilter" ),
  filters = cms.VPSet( 
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterBasePreSplittingPPOnAA" )    ),
    cms.PSet(  refToPSet_ = cms.string( "HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA" )    )
  )
)
HLTPSetMixedTripletStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetMixedTripletStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialForMixedStep" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetHighPtTripletStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.7 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetLowPtQuadStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetLowPtQuadStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 4 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetPixelLessStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelLessStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 4 ),
  maxCand = cms.int32( 2 ),
  alwaysUseInvalidHits = cms.bool( False ),
  estimator = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTSiStripClusterChargeCutLoose = cms.PSet(  value = cms.double( 1620.0 ) )
HLTPSetDetachedQuadStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( True ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetDetachedQuadStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetCkfBaseTrajectoryFilter_block" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
HLTPSetInitialStepTrajectoryFilterShapePreSplittingPPOnAA = cms.PSet( 
  ComponentType = cms.string( "StripSubClusterShapeTrajectoryFilter" ),
  subclusterCutSN = cms.double( 12.0 ),
  trimMaxADC = cms.double( 30.0 ),
  seedCutMIPs = cms.double( 0.35 ),
  subclusterCutMIPs = cms.double( 0.45 ),
  subclusterWindow = cms.double( 0.7 ),
  maxNSat = cms.uint32( 3 ),
  trimMaxFracNeigh = cms.double( 0.25 ),
  maxTrimmedSizeDiffNeg = cms.double( 1.0 ),
  seedCutSN = cms.double( 7.0 ),
  layerMask = cms.PSet( 
    TOB = cms.bool( False ),
    TIB = cms.vuint32( 1, 2 ),
    TID = cms.vuint32( 1, 2 ),
    TEC = cms.bool( False )
  ),
  maxTrimmedSizeDiffPos = cms.double( 0.7 ),
  trimMaxFracTotal = cms.double( 0.15 )
)
HLTPSetInitialStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 3 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.6 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetTobTecStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 5 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 )
)
HLTPSetPixelLessStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 9999 ),
  minPt = cms.double( 2.0 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 1 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 0 )
)
HLTPSetPixelPairStepTrajectoryFilterPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 0 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetPixelPairStepTrajectoryFilterInOutPPOnAA = cms.PSet( 
  minimumNumberOfHits = cms.int32( 4 ),
  ComponentType = cms.string( "CkfBaseTrajectoryFilter" ),
  seedExtension = cms.int32( 1 ),
  chargeSignificance = cms.double( -1.0 ),
  pixelSeedExtension = cms.bool( False ),
  strictSeedExtension = cms.bool( False ),
  nSigmaMinPt = cms.double( 5.0 ),
  maxCCCLostHits = cms.int32( 0 ),
  minPt = cms.double( 0.1 ),
  maxConsecLostHits = cms.int32( 1 ),
  extraNumberOfHitsBeforeTheFirstLoop = cms.int32( 4 ),
  constantValueForLostHitsFractionFilter = cms.double( 2.0 ),
  seedPairPenalty = cms.int32( 0 ),
  maxNumberOfHits = cms.int32( 100 ),
  minNumberOfHitsForLoopers = cms.int32( 13 ),
  minGoodStripCharge = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  minNumberOfHitsPerLoop = cms.int32( 4 ),
  minHitsMinPt = cms.int32( 3 ),
  maxLostHitsFraction = cms.double( 0.1 ),
  maxLostHits = cms.int32( 999 )
)
HLTPSetPixelPairStepTrajectoryBuilderPPOnAA = cms.PSet( 
  useSameTrajFilter = cms.bool( False ),
  ComponentType = cms.string( "GroupedCkfTrajectoryBuilder" ),
  MeasurementTrackerName = cms.string( "" ),
  keepOriginalIfRebuildFails = cms.bool( False ),
  lostHitPenalty = cms.double( 30.0 ),
  lockHits = cms.bool( True ),
  requireSeedHitsInRebuild = cms.bool( True ),
  TTRHBuilder = cms.string( "hltESPTTRHBWithTrackAngle" ),
  maxDPhiForLooperReconstruction = cms.double( 2.0 ),
  maxPtForLooperReconstruction = cms.double( 0.7 ),
  propagatorOpposite = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  trajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterPPOnAA" ) ),
  propagatorAlong = cms.string( "PropagatorWithMaterialParabolicMf" ),
  minNrOfHitsForRebuild = cms.int32( 5 ),
  maxCand = cms.int32( 3 ),
  alwaysUseInvalidHits = cms.bool( True ),
  estimator = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  inOutTrajectoryFilter = cms.PSet(  refToPSet_ = cms.string( "HLTPSetPixelPairStepTrajectoryFilterInOutPPOnAA" ) ),
  intermediateCleaning = cms.bool( True ),
  foundHitBonus = cms.double( 10.0 ),
  updator = cms.string( "hltESPKFUpdator" ),
  bestHitOnly = cms.bool( True )
)
streams = cms.PSet( 
  ALCALUMIPIXELS = cms.vstring( 'AlCaLumiPixels' ),
  ALCALUMIPIXELSEXPRESS = cms.vstring( 'AlcaLumiPixelsExpress' ),
  ALCAP0 = cms.vstring( 'AlCaP0' ),
  ALCAPHISYM = cms.vstring( 'AlCaPhiSym' ),
  Calibration = cms.vstring( 'TestEnablesEcalHcal' ),
  DQM = cms.vstring( 'OnlineMonitor' ),
  DQMCalibration = cms.vstring( 'TestEnablesEcalHcalDQM' ),
  DQMEventDisplay = cms.vstring( 'EventDisplay' ),
  DQMOnlineBeamspot = cms.vstring( 'DQMOnlineBeamspot' ),
  EcalCalibration = cms.vstring( 'EcalLaser' ),
  Express = cms.vstring( 'ExpressPhysics' ),
  ExpressAlignment = cms.vstring( 'ExpressAlignment' ),
  ExpressCosmics = cms.vstring( 'ExpressCosmics' ),
  HIDQM = cms.vstring( 'HIOnlineMonitor' ),
  HIDQMEventDisplay = cms.vstring(  ),
  HIDQMOnlineBeamspot = cms.vstring( 'HIDQMOnlineBeamspot' ),
  HIExpress = cms.vstring( 'HIExpressPhysics' ),
  HIExpressAlignment = cms.vstring( 'HIExpressAlignment' ),
  HIHLTMonitor = cms.vstring(  ),
  HIPhysicsCommissioning = cms.vstring( 'HIHLTPhysics',
    'HIHcalNZS' ),
  HIPhysicsDoubleMuon = cms.vstring( 'HIDoubleMuon' ),
  HIPhysicsForward = cms.vstring( 'HICastor',
    'HIForward' ),
  HIPhysicsHardProbes = cms.vstring( 'HIHardProbes' ),
  HIPhysicsHardProbesLower = cms.vstring( 'HIHardProbesLower' ),
  HIPhysicsHardProbesPeripheral = cms.vstring( 'HIHardProbesPeripheral' ),
  HIPhysicsHeavyFlavor = cms.vstring( 'HIHeavyFlavor' ),
  HIPhysicsHighMultiplicty = cms.vstring( 'HIHighMultiplicityETTAsym' ),
  HIPhysicsLowMultiplicityReducedFormat = cms.vstring( 'HILowMultipicityReducedFormat' ),
  HIPhysicsMinimumBias0 = cms.vstring( 'HIMinimumBias0' ),
  HIPhysicsMinimumBias1 = cms.vstring( 'HIMinimumBias1' ),
  HIPhysicsMinimumBiasReducedFormat0 = cms.vstring( 'HIMinimumBiasReducedFormat0' ),
  HIPhysicsMinimumBiasReducedFormat1 = cms.vstring( 'HIMinimumBiasReducedFormat1' ),
  HIPhysicsMinimumBiasReducedFormat10 = cms.vstring( 'HIMinimumBiasReducedFormat10' ),
  HIPhysicsMinimumBiasReducedFormat11 = cms.vstring( 'HIMinimumBiasReducedFormat11' ),
  HIPhysicsMinimumBiasReducedFormat2 = cms.vstring( 'HIMinimumBiasReducedFormat2' ),
  HIPhysicsMinimumBiasReducedFormat3 = cms.vstring( 'HIMinimumBiasReducedFormat3' ),
  HIPhysicsMinimumBiasReducedFormat4 = cms.vstring( 'HIMinimumBiasReducedFormat4' ),
  HIPhysicsMinimumBiasReducedFormat5 = cms.vstring( 'HIMinimumBiasReducedFormat5' ),
  HIPhysicsMinimumBiasReducedFormat6 = cms.vstring( 'HIMinimumBiasReducedFormat6' ),
  HIPhysicsMinimumBiasReducedFormat7 = cms.vstring( 'HIMinimumBiasReducedFormat7' ),
  HIPhysicsMinimumBiasReducedFormat8 = cms.vstring( 'HIMinimumBiasReducedFormat8' ),
  HIPhysicsMinimumBiasReducedFormat9 = cms.vstring( 'HIMinimumBiasReducedFormat9' ),
  HIPhysicsSingleMuon = cms.vstring( 'HISingleMuon' ),
  HIVirginRaw = cms.vstring( 'HITrackerVriginRaw' ),
  HLTMonitor = cms.vstring( 'HLTMonitor' ),
  NanoDST = cms.vstring( 'L1Accept' ),
  ParkingBPH1 = cms.vstring( 'ParkingBPH1',
    'ParkingBPHPromptCSCS' ),
  ParkingBPH2 = cms.vstring( 'ParkingBPH2' ),
  ParkingBPH3 = cms.vstring( 'ParkingBPH3' ),
  ParkingBPH4 = cms.vstring( 'ParkingBPH4' ),
  ParkingBPH5 = cms.vstring( 'ParkingBPH5' ),
  Physics = cms.vstring(  ),
  PhysicsCommissioning = cms.vstring( 'Commissioning',
    'Cosmics',
    'HFvetoTOTEM',
    'HLTPhysics',
    'HcalNZS',
    'HighEGJet',
    'HighPtLowerPhotons',
    'HighPtPhoton30AndZ',
    'IsolatedBunch',
    'LowEGJet',
    'MinBiasTOTEM',
    'MinimumBias',
    'MonteCarlo',
    'NoBPTX',
    'ZeroBias',
    'ZeroBiasTOTEM' ),
  PhysicsEGamma = cms.vstring( 'EGamma' ),
  PhysicsEndOfFill = cms.vstring( 'EmptyBX',
    'FSQJet1',
    'FSQJet2',
    'HINCaloJets',
    'HINPFJets',
    'HighMultiplicityEOF',
    'L1MinimumBias' ),
  PhysicsForward = cms.vstring( 'ppForward' ),
  PhysicsHIZeroBias1 = cms.vstring( 'HIZeroBias1',
    'HIZeroBias2' ),
  PhysicsHIZeroBias2 = cms.vstring( 'HIZeroBias3',
    'HIZeroBias4' ),
  PhysicsHIZeroBias3 = cms.vstring( 'HIZeroBias5',
    'HIZeroBias6' ),
  PhysicsHIZeroBias4 = cms.vstring( 'HIZeroBias7',
    'HIZeroBias8' ),
  PhysicsHIZeroBias5 = cms.vstring( 'HIZeroBias10',
    'HIZeroBias9' ),
  PhysicsHIZeroBias6 = cms.vstring( 'HIZeroBias11',
    'HIZeroBias12' ),
  PhysicsHLTPhysics1 = cms.vstring( 'EphemeralHLTPhysics1',
    'EphemeralHLTPhysics2' ),
  PhysicsHLTPhysics2 = cms.vstring( 'EphemeralHLTPhysics3',
    'EphemeralHLTPhysics4' ),
  PhysicsHLTPhysics3 = cms.vstring( 'EphemeralHLTPhysics5',
    'EphemeralHLTPhysics6' ),
  PhysicsHLTPhysics4 = cms.vstring( 'EphemeralHLTPhysics7',
    'EphemeralHLTPhysics8' ),
  PhysicsHadronsTaus = cms.vstring( 'BTagMu',
    'DisplacedJet',
    'HeavyFlavor',
    'HighPtJet80',
    'HighPtLowerJets',
    'JetHT',
    'JetsTOTEM',
    'MET',
    'Tau' ),
  PhysicsMinimumBias0 = cms.vstring( 'MinimumBias0' ),
  PhysicsMinimumBias1 = cms.vstring( 'MinimumBias1' ),
  PhysicsMinimumBias2 = cms.vstring( 'MinimumBias2' ),
  PhysicsMinimumBias3 = cms.vstring( 'MinimumBias3' ),
  PhysicsMinimumBias4 = cms.vstring( 'MinimumBias4' ),
  PhysicsMinimumBias5 = cms.vstring( 'MinimumBias5' ),
  PhysicsMinimumBias6 = cms.vstring( 'MinimumBias6' ),
  PhysicsMinimumBias7 = cms.vstring( 'MinimumBias7' ),
  PhysicsMinimumBias8 = cms.vstring( 'MinimumBias8' ),
  PhysicsMinimumBias9 = cms.vstring( 'MinimumBias9' ),
  PhysicsMuons = cms.vstring( 'Charmonium',
    'DoubleMuon',
    'DoubleMuonLowMass',
    'MuOnia',
    'MuPlusX',
    'MuonEG',
    'MuonEGammaTOTEM',
    'SingleMuHighPt',
    'SingleMuLowPt',
    'SingleMuon' ),
  PhysicsRandomTOTEM1 = cms.vstring( 'RandomTOTEM1' ),
  PhysicsRandomTOTEM2 = cms.vstring( 'RandomTOTEM2' ),
  PhysicsRandomTOTEM3 = cms.vstring( 'RandomTOTEM3' ),
  PhysicsRandomTOTEM4 = cms.vstring( 'RandomTOTEM4' ),
  PhysicsScoutingMonitor = cms.vstring( 'ScoutingMonitor' ),
  PhysicsTOTEM1part0 = cms.vstring( 'TOTEM1part0' ),
  PhysicsTOTEM1part1 = cms.vstring( 'TOTEM1part1' ),
  PhysicsTOTEM1part2 = cms.vstring( 'TOTEM1part2' ),
  PhysicsTOTEM1part3 = cms.vstring( 'TOTEM1part3' ),
  PhysicsTOTEM2part0 = cms.vstring( 'TOTEM2part0' ),
  PhysicsTOTEM2part1 = cms.vstring( 'TOTEM2part1' ),
  PhysicsTOTEM2part2 = cms.vstring( 'TOTEM2part2' ),
  PhysicsTOTEM2part3 = cms.vstring( 'TOTEM2part3' ),
  PhysicsTOTEM3 = cms.vstring( 'TOTEM3' ),
  PhysicsTOTEM4part0 = cms.vstring( 'TOTEM4part0' ),
  PhysicsTOTEM4part1 = cms.vstring( 'TOTEM4part1' ),
  PhysicsTOTEM4part2 = cms.vstring( 'TOTEM4part2' ),
  PhysicsTOTEM4part3 = cms.vstring( 'TOTEM4part3' ),
  PhysicsTracks = cms.vstring( 'FullTrack',
    'HighMultiplicity',
    'SingleTrack' ),
  PhysicsZeroBias1 = cms.vstring( 'EphemeralZeroBias1',
    'EphemeralZeroBias2' ),
  PhysicsZeroBias2 = cms.vstring( 'EphemeralZeroBias3',
    'EphemeralZeroBias4' ),
  PhysicsZeroBias3 = cms.vstring( 'EphemeralZeroBias5',
    'EphemeralZeroBias6' ),
  PhysicsZeroBias4 = cms.vstring( 'EphemeralZeroBias7',
    'EphemeralZeroBias8' ),
  PhysicsZeroBiasTOTEM1 = cms.vstring( 'ZeroBiasTOTEM1' ),
  PhysicsZeroBiasTOTEM2 = cms.vstring( 'ZeroBiasTOTEM2' ),
  PhysicsZeroBiasTOTEM3 = cms.vstring( 'ZeroBiasTOTEM3' ),
  PhysicsZeroBiasTOTEM4 = cms.vstring( 'ZeroBiasTOTEM4' ),
  RPCMON = cms.vstring( 'RPCMonitor' ),
  ReleaseValidation = cms.vstring(  ),
  ScoutingCaloMuon = cms.vstring( 'ScoutingCaloCommissioning',
    'ScoutingCaloHT',
    'ScoutingCaloMuon' ),
  ScoutingPF = cms.vstring( 'ScoutingPFCommissioning',
    'ScoutingPFHT',
    'ScoutingPFMuon' )
)
datasets = cms.PSet( 
  AlCaLumiPixels = cms.vstring( 'AlCa_LumiPixels_Random_v4',
    'AlCa_LumiPixels_ZeroBias_v8' ),
  AlCaP0 = cms.vstring( 'AlCa_EcalEtaEBonlyForHI_v1',
    'AlCa_EcalEtaEBonly_v13',
    'AlCa_EcalEtaEEonlyForHI_v1',
    'AlCa_EcalEtaEEonly_v13',
    'AlCa_EcalPi0EBonlyForHI_v1',
    'AlCa_EcalPi0EBonly_v13',
    'AlCa_EcalPi0EEonlyForHI_v1',
    'AlCa_EcalPi0EEonly_v13',
    'AlCa_HIEcalEtaEBonly_v1',
    'AlCa_HIEcalEtaEEonly_v1',
    'AlCa_HIEcalPi0EBonly_v1',
    'AlCa_HIEcalPi0EEonly_v1' ),
  AlCaPhiSym = cms.vstring( 'AlCa_EcalPhiSymForHI_v1',
    'AlCa_EcalPhiSym_v9' ),
  AlcaLumiPixelsExpress = cms.vstring( 'AlCa_LumiPixels_Random_v4' ),
  BTagMu = cms.vstring( 'HLT_BTagMu_AK4DiJet110_Mu5_noalgo_v13',
    'HLT_BTagMu_AK4DiJet110_Mu5_v13',
    'HLT_BTagMu_AK4DiJet170_Mu5_noalgo_v12',
    'HLT_BTagMu_AK4DiJet170_Mu5_v12',
    'HLT_BTagMu_AK4DiJet20_Mu5_noalgo_v13',
    'HLT_BTagMu_AK4DiJet20_Mu5_v13',
    'HLT_BTagMu_AK4DiJet40_Mu5_noalgo_v13',
    'HLT_BTagMu_AK4DiJet40_Mu5_v13',
    'HLT_BTagMu_AK4DiJet70_Mu5_noalgo_v13',
    'HLT_BTagMu_AK4DiJet70_Mu5_v13',
    'HLT_BTagMu_AK4Jet300_Mu5_noalgo_v12',
    'HLT_BTagMu_AK4Jet300_Mu5_v12',
    'HLT_BTagMu_AK8DiJet170_Mu5_noalgo_v9',
    'HLT_BTagMu_AK8DiJet170_Mu5_v9',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_v2',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v2',
    'HLT_BTagMu_AK8Jet300_Mu5_noalgo_v12',
    'HLT_BTagMu_AK8Jet300_Mu5_v12' ),
  Charmonium = cms.vstring( 'HLT_Dimuon0_Jpsi3p5_Muon2_v5',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v7',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v7',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v7',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v7',
    'HLT_Dimuon0_Jpsi_NoVertexing_v8',
    'HLT_Dimuon0_Jpsi_v8',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v7',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v8',
    'HLT_Dimuon0_LowMass_L1_4R_v7',
    'HLT_Dimuon0_LowMass_L1_4_v8',
    'HLT_Dimuon0_LowMass_v8',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v7',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v6',
    'HLT_Dimuon18_PsiPrime_v14',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v7',
    'HLT_Dimuon25_Jpsi_noCorrL1_v6',
    'HLT_Dimuon25_Jpsi_v14',
    'HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_v5',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v6',
    'HLT_DoubleMu4_3_Bs_v14',
    'HLT_DoubleMu4_3_Jpsi_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v7',
    'HLT_DoubleMu4_JpsiTrk_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_Displaced_v7',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v7',
    'HLT_DoubleMu4_PsiPrimeTrk_Displaced_v15',
    'HLT_Mu30_TkMu0_Psi_v1',
    'HLT_Mu7p5_L2Mu2_Jpsi_v10',
    'HLT_Mu7p5_Track2_Jpsi_v11',
    'HLT_Mu7p5_Track3p5_Jpsi_v11',
    'HLT_Mu7p5_Track7_Jpsi_v11' ),
  Commissioning = cms.vstring( 'HLT_IsoTrackHB_v4',
    'HLT_IsoTrackHE_v4',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v2' ),
  Cosmics = cms.vstring( 'HLT_L1SingleMu3_v1',
    'HLT_L1SingleMu5_v1',
    'HLT_L1SingleMu7_v1',
    'HLT_L1SingleMuCosmics_v1',
    'HLT_L1SingleMuOpen_DT_v2',
    'HLT_L1SingleMuOpen_v2',
    'HLT_L2DoubleMu23_NoVertex_v2' ),
  DQMOnlineBeamspot = cms.vstring( 'HLT_HIHT80_Beamspot_ppRef5TeV_v3',
    'HLT_HT300_Beamspot_v11',
    'HLT_HT450_Beamspot_v11',
    'HLT_HT60_Beamspot_v1',
    'HLT_ZeroBias_Beamspot_v4' ),
  DisplacedJet = cms.vstring( 'HLT_HT400_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT425_v9',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT430_DisplacedDijet60_DisplacedTrack_v13',
    'HLT_HT500_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT550_DisplacedDijet60_Inclusive_v13',
    'HLT_HT650_DisplacedDijet60_Inclusive_v13' ),
  DoubleMuon = cms.vstring( 'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_v2',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v2',
    'HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_v2',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v2',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v2',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v2',
    'HLT_DoubleL2Mu50_v2',
    'HLT_DoubleMu33NoFiltersNoVtxDisplaced_v1',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v10',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v10',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v10',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v10',
    'HLT_DoubleMu40NoFiltersNoVtxDisplaced_v1',
    'HLT_DoubleMu43NoFiltersNoVtx_v4',
    'HLT_DoubleMu48NoFiltersNoVtx_v4',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v8',
    'HLT_HIL1DoubleMu0ForPPRef_v4',
    'HLT_HIL1DoubleMu10ForPPRef_v4',
    'HLT_HIL2DoubleMu0_NHitQForPPRef_v5',
    'HLT_HIL3DoubleMu0_OS_m2p5to4p5ForPPRef_v6',
    'HLT_HIL3DoubleMu0_OS_m7to14ForPPRef_v6',
    'HLT_L1DoubleMu0_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v14',
    'HLT_Mu17_TrkIsoVVL_v13',
    'HLT_Mu17_v13',
    'HLT_Mu18_Mu9_DZ_v4',
    'HLT_Mu18_Mu9_SameSign_DZ_v4',
    'HLT_Mu18_Mu9_SameSign_v4',
    'HLT_Mu18_Mu9_v4',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v3',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v3',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v3',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v3',
    'HLT_Mu19_TrkIsoVVL_v4',
    'HLT_Mu19_v4',
    'HLT_Mu20_Mu10_DZ_v4',
    'HLT_Mu20_Mu10_SameSign_DZ_v4',
    'HLT_Mu20_Mu10_SameSign_v4',
    'HLT_Mu20_Mu10_v4',
    'HLT_Mu23_Mu12_DZ_v4',
    'HLT_Mu23_Mu12_SameSign_DZ_v4',
    'HLT_Mu23_Mu12_SameSign_v4',
    'HLT_Mu23_Mu12_v4',
    'HLT_Mu37_TkMu27_v5',
    'HLT_Mu8_TrkIsoVVL_v12',
    'HLT_Mu8_v12',
    'HLT_TripleMu_10_5_5_DZ_v10',
    'HLT_TripleMu_12_10_5_v10',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v3',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v8',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v6',
    'HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_v12',
    'HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_v13' ),
  DoubleMuonLowMass = cms.vstring( 'HLT_Dimuon0_LowMass_L1_TM530_v6',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v4',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_v12',
    'HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_v15',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v4',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v4',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v4',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v4' ),
  EGamma = cms.vstring( 'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v4',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v13',
    'HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_v13',
    'HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_v15',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_v2',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_v2',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v13',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v13',
    'HLT_DoubleEle25_CaloIdL_MW_v4',
    'HLT_DoubleEle27_CaloIdL_MW_v4',
    'HLT_DoubleEle33_CaloIdL_MW_v17',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v20',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v20',
    'HLT_DoublePhoton33_CaloIdL_v6',
    'HLT_DoublePhoton70_v6',
    'HLT_DoublePhoton85_v14',
    'HLT_ECALHT800_v10',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v14',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v18',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v7',
    'HLT_Ele145_CaloIdVT_GsfTrkIdT_v8',
    'HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_v3',
    'HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_v3',
    'HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v8',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v16',
    'HLT_Ele15_IsoVVVL_PFHT450_v16',
    'HLT_Ele15_IsoVVVL_PFHT600_v20',
    'HLT_Ele15_WPLoose_Gsf_v3',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v9',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v16',
    'HLT_Ele17_WPLoose_Gsf_v3',
    'HLT_Ele200_CaloIdVT_GsfTrkIdT_v8',
    'HLT_Ele20_WPLoose_Gsf_v6',
    'HLT_Ele20_WPTight_Gsf_v6',
    'HLT_Ele20_eta2p1_WPLoose_Gsf_v6',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v18',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v18',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v19',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v19',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_v1',
    'HLT_Ele250_CaloIdVT_GsfTrkIdT_v13',
    'HLT_Ele27_Ele37_CaloIdL_MW_v4',
    'HLT_Ele27_WPTight_Gsf_v16',
    'HLT_Ele28_HighEta_SC20_Mass55_v13',
    'HLT_Ele28_WPTight_Gsf_v1',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v13',
    'HLT_Ele300_CaloIdVT_GsfTrkIdT_v13',
    'HLT_Ele30_WPTight_Gsf_v1',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v13',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v9',
    'HLT_Ele32_WPTight_Gsf_v15',
    'HLT_Ele35_WPTight_Gsf_L1EGMT_v5',
    'HLT_Ele35_WPTight_Gsf_v9',
    'HLT_Ele38_WPTight_Gsf_v9',
    'HLT_Ele40_WPTight_Gsf_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v18',
    'HLT_Ele50_IsoVVVL_PFHT450_v16',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v16',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v18',
    'HLT_Photon100EBHE10_v2',
    'HLT_Photon100EB_TightID_TightIso_v2',
    'HLT_Photon100EEHE10_v2',
    'HLT_Photon100EE_TightID_TightIso_v2',
    'HLT_Photon110EB_TightID_TightIso_v2',
    'HLT_Photon120EB_TightID_TightIso_v2',
    'HLT_Photon120_R9Id90_HE10_IsoM_v14',
    'HLT_Photon120_v13',
    'HLT_Photon150_v6',
    'HLT_Photon165_R9Id90_HE10_IsoM_v15',
    'HLT_Photon175_v14',
    'HLT_Photon200_v13',
    'HLT_Photon20_HoverELoose_v10',
    'HLT_Photon20_v2',
    'HLT_Photon25_v4',
    'HLT_Photon300_NoHE_v12',
    'HLT_Photon30_HoverELoose_v10',
    'HLT_Photon33_v5',
    'HLT_Photon40_HoverELoose_v10',
    'HLT_Photon50_HoverELoose_v10',
    'HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_v5',
    'HLT_Photon50_R9Id90_HE10_IsoM_v14',
    'HLT_Photon50_v13',
    'HLT_Photon60_HoverELoose_v10',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_v11',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_v5',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_v14',
    'HLT_Photon75_v13',
    'HLT_Photon90_CaloIdL_PFHT700_v16',
    'HLT_Photon90_R9Id90_HE10_IsoM_v14',
    'HLT_Photon90_v13',
    'HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_v3',
    'HLT_TriplePhoton_20_20_20_CaloIdLV2_v3',
    'HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_v4',
    'HLT_TriplePhoton_30_30_10_CaloIdLV2_v4',
    'HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_v4' ),
  EcalLaser = cms.vstring( 'HLT_EcalCalibration_v4' ),
  EmptyBX = cms.vstring( 'HLT_HIL1NotBptxOR_v2',
    'HLT_HIL1UnpairedBunchBptxMinus_v2',
    'HLT_HIL1UnpairedBunchBptxPlus_v2',
    'HLT_L1NotBptxOR_v3',
    'HLT_L1UnpairedBunchBptxMinus_v2',
    'HLT_L1UnpairedBunchBptxPlus_v2' ),
  EphemeralHLTPhysics1 = cms.vstring( 'HLT_Physics_part0_v7' ),
  EphemeralHLTPhysics2 = cms.vstring( 'HLT_Physics_part1_v7' ),
  EphemeralHLTPhysics3 = cms.vstring( 'HLT_Physics_part2_v7' ),
  EphemeralHLTPhysics4 = cms.vstring( 'HLT_Physics_part3_v7' ),
  EphemeralHLTPhysics5 = cms.vstring( 'HLT_Physics_part4_v7' ),
  EphemeralHLTPhysics6 = cms.vstring( 'HLT_Physics_part5_v7' ),
  EphemeralHLTPhysics7 = cms.vstring( 'HLT_Physics_part6_v7' ),
  EphemeralHLTPhysics8 = cms.vstring( 'HLT_Physics_part7_v7' ),
  EphemeralZeroBias1 = cms.vstring( 'HLT_ZeroBias_part0_v6' ),
  EphemeralZeroBias2 = cms.vstring( 'HLT_ZeroBias_part1_v6' ),
  EphemeralZeroBias3 = cms.vstring( 'HLT_ZeroBias_part2_v6' ),
  EphemeralZeroBias4 = cms.vstring( 'HLT_ZeroBias_part3_v6' ),
  EphemeralZeroBias5 = cms.vstring( 'HLT_ZeroBias_part4_v6' ),
  EphemeralZeroBias6 = cms.vstring( 'HLT_ZeroBias_part5_v6' ),
  EphemeralZeroBias7 = cms.vstring( 'HLT_ZeroBias_part6_v6' ),
  EphemeralZeroBias8 = cms.vstring( 'HLT_ZeroBias_part7_v6' ),
  EventDisplay = cms.vstring( 'HLT_AK4PFJet100_v19',
    'HLT_DoublePhoton85_v14',
    'HLT_L1SingleMu7_v1',
    'HLT_PFJet500_v21' ),
  ExpressAlignment = cms.vstring( 'HLT_HIHT80_Beamspot_ppRef5TeV_v3',
    'HLT_HT300_Beamspot_v11',
    'HLT_HT450_Beamspot_v11',
    'HLT_HT60_Beamspot_v1',
    'HLT_ZeroBias_Beamspot_v4' ),
  ExpressCosmics = cms.vstring( 'HLT_L1SingleMuCosmics_v1',
    'HLT_L1SingleMuOpen_DT_v2',
    'HLT_L1SingleMuOpen_v2',
    'HLT_Random_v3' ),
  ExpressPhysics = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v19',
    'HLT_HIL1DoubleMu0ForPPRef_v4',
    'HLT_IsoMu20_v15',
    'HLT_IsoMu24_v13',
    'HLT_IsoMu27_v16',
    'HLT_L1MinimumBiasHF1AND_v4',
    'HLT_L1RomanPot_part0_v1',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v15',
    'HLT_Physics_v7',
    'HLT_Random_v3',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part0_v1',
    'HLT_ZeroBias_Alignment_v1',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v5',
    'HLT_ZeroBias_IsolatedBunches_v5',
    'HLT_ZeroBias_v6' ),
  FSQJet1 = cms.vstring( 'HLT_DiPFJet15_NoCaloMatched_v16',
    'HLT_DiPFJet25_NoCaloMatched_v16' ),
  FSQJet2 = cms.vstring( 'HLT_DiPFJet15_FBEta3_NoCaloMatched_v17',
    'HLT_DiPFJet25_FBEta3_NoCaloMatched_v17',
    'HLT_DiPFJetAve15_HFJEC_v17',
    'HLT_DiPFJetAve25_HFJEC_v17',
    'HLT_DiPFJetAve35_HFJEC_v17' ),
  FullTrack = cms.vstring( 'HLT_FullTrack18ForPPRef_v11',
    'HLT_FullTrack24ForPPRef_v11',
    'HLT_FullTrack34ForPPRef_v11',
    'HLT_FullTrack45ForPPRef_v11',
    'HLT_FullTrack53ForPPRef_v11' ),
  HFvetoTOTEM = cms.vstring( 'HLT_L1HFveto_v1' ),
  HICastor = cms.vstring( 'HLT_HICastor_HighJet_BptxAND_v1',
    'HLT_HICastor_HighJet_MBHF1OR_BptxAND_v1',
    'HLT_HICastor_HighJet_NotMBHF2AND_v1',
    'HLT_HICastor_HighJet_NotMBHF2OR_v1',
    'HLT_HICastor_HighJet_v1',
    'HLT_HICastor_MediumJet_BptxAND_v1',
    'HLT_HICastor_MediumJet_MBHF1OR_BptxAND_v1',
    'HLT_HICastor_MediumJet_NotMBHF2AND_v1',
    'HLT_HICastor_MediumJet_NotMBHF2OR_v1',
    'HLT_HICastor_MediumJet_SingleEG5_MBHF1OR_BptxAND_v1',
    'HLT_HICastor_MediumJet_SingleMu0_MBHF1OR_BptxAND_v1',
    'HLT_HICastor_MediumJet_v1',
    'HLT_HICastor_Muon_BptxAND_v1',
    'HLT_HICastor_Muon_v1' ),
  HIDQMOnlineBeamspot = cms.vstring( 'HLT_HICentralityVeto_Beamspot_v1',
    'HLT_HICsAK4PFJet100Eta1p5_Beamspot_v1' ),
  HIDoubleMuon = cms.vstring( 'HLT_HIL1DoubleMu0_v1',
    'HLT_HIL1DoubleMu10_v1',
    'HLT_HIL1DoubleMuOpen_Centrality_30_100_v1',
    'HLT_HIL1DoubleMuOpen_Centrality_40_100_v1',
    'HLT_HIL1DoubleMuOpen_Centrality_50_100_v1',
    'HLT_HIL1DoubleMuOpen_OS_Centrality_30_100_v1',
    'HLT_HIL1DoubleMuOpen_OS_Centrality_40_100_v1',
    'HLT_HIL1DoubleMuOpen_OS_er1p6_v1',
    'HLT_HIL1DoubleMuOpen_er1p6_v1',
    'HLT_HIL1DoubleMuOpen_v1',
    'HLT_HIL2DoubleMuOpen_v1',
    'HLT_HIL2_L1DoubleMu10_v1',
    'HLT_HIL3DoubleMuOpen_JpsiPsi_v1',
    'HLT_HIL3DoubleMuOpen_M60120_v1',
    'HLT_HIL3DoubleMuOpen_Upsi_v1',
    'HLT_HIL3DoubleMuOpen_v1',
    'HLT_HIL3Mu0NHitQ10_L2Mu0_MAXdR3p5_M1to5_v1',
    'HLT_HIL3Mu0_L2Mu0_v1',
    'HLT_HIL3Mu2p5NHitQ10_L2Mu2_M7toinf_v1',
    'HLT_HIL3Mu2p5NHitQ10_L2Mu2_v1',
    'HLT_HIL3Mu2p5_L1DoubleMu0_v1',
    'HLT_HIL3Mu3NHitQ10_L1DoubleMuOpen_v1',
    'HLT_HIL3Mu3_L1DoubleMuOpen_OS_v1',
    'HLT_HIL3Mu3_L1TripleMuOpen_v1',
    'HLT_HIL3_L1DoubleMu10_v1' ),
  HIExpressAlignment = cms.vstring( 'HLT_HICentralityVeto_v1',
    'HLT_HICsAK4PFJet100Eta1p5_v1' ),
  HIExpressPhysics = cms.vstring( 'HLT_HICentralityVeto_v1',
    'HLT_HIL1DoubleMu0_v1',
    'HLT_HIL2Mu3_NHitQ15_v1',
    'HLT_HIPhysics_v1',
    'HLT_HIRandom_v1',
    'HLT_HIZeroBias_FirstCollisionAfterAbortGap_v1',
    'HLT_HIZeroBias_v1' ),
  HIForward = cms.vstring( 'HLT_HIUPC_DoubleEG2_BptxAND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleEG2_NotMBHF2AND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleEG2_NotMBHF2AND_SinglePixelTrack_v1',
    'HLT_HIUPC_DoubleEG2_NotMBHF2AND_v1',
    'HLT_HIUPC_DoubleEG2_NotMBHF2OR_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleEG2_NotMBHF2OR_SinglePixelTrack_v1',
    'HLT_HIUPC_DoubleEG2_NotMBHF2OR_v1',
    'HLT_HIUPC_DoubleEG5_BptxAND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleEG5_NotMBHF2AND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleEG5_NotMBHF2AND_SinglePixelTrack_v1',
    'HLT_HIUPC_DoubleEG5_NotMBHF2AND_v1',
    'HLT_HIUPC_DoubleEG5_NotMBHF2OR_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleEG5_NotMBHF2OR_SinglePixelTrack_v1',
    'HLT_HIUPC_DoubleEG5_NotMBHF2OR_v1',
    'HLT_HIUPC_DoubleMu0_BptxAND_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleMu0_NotMBHF2AND_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleMu0_NotMBHF2AND_v1',
    'HLT_HIUPC_DoubleMu0_NotMBHF2OR_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleMu0_NotMBHF2OR_v1',
    'HLT_HIUPC_DoubleMuOpen_BptxAND_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleMuOpen_NotMBHF2OR_MaxPixelTrack_v1',
    'HLT_HIUPC_DoubleMuOpen_NotMBHF2OR_v1',
    'HLT_HIUPC_ETT5_Asym50_NotMBHF2OR_SinglePixelTrack_v1',
    'HLT_HIUPC_ETT5_Asym50_NotMBHF2OR_v1',
    'HLT_HIUPC_Mu8_Mu13_MaxPixelTrack_v1',
    'HLT_HIUPC_Mu8_Mu13_v1',
    'HLT_HIUPC_NotMBHF2AND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_NotMBHF2AND_SinglePixelTrack_v1',
    'HLT_HIUPC_NotMBHF2AND_v1',
    'HLT_HIUPC_NotMBHF2OR_BptxAND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_NotMBHF2OR_BptxAND_SinglePixelTrack_v1',
    'HLT_HIUPC_SingleEG3_BptxAND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleEG3_NotMBHF2AND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleEG3_NotMBHF2AND_SinglePixelTrack_v1',
    'HLT_HIUPC_SingleEG3_NotMBHF2AND_v1',
    'HLT_HIUPC_SingleEG3_NotMBHF2OR_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleEG3_NotMBHF2OR_SinglePixelTrack_v1',
    'HLT_HIUPC_SingleEG3_NotMBHF2OR_v1',
    'HLT_HIUPC_SingleEG5_BptxAND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleEG5_NotMBHF2AND_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleEG5_NotMBHF2AND_SinglePixelTrack_v1',
    'HLT_HIUPC_SingleEG5_NotMBHF2AND_v1',
    'HLT_HIUPC_SingleEG5_NotMBHF2OR_SinglePixelTrack_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleEG5_NotMBHF2OR_SinglePixelTrack_v1',
    'HLT_HIUPC_SingleEG5_NotMBHF2OR_v1',
    'HLT_HIUPC_SingleMu0_BptxAND_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleMu0_NotMBHF2AND_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleMu0_NotMBHF2AND_v1',
    'HLT_HIUPC_SingleMu0_NotMBHF2OR_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleMu0_NotMBHF2OR_v1',
    'HLT_HIUPC_SingleMu3_BptxAND_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleMu3_NotMBHF2OR_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleMu3_NotMBHF2OR_v1',
    'HLT_HIUPC_SingleMuOpen_BptxAND_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleMuOpen_NotMBHF2AND_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleMuOpen_NotMBHF2AND_v1',
    'HLT_HIUPC_SingleMuOpen_NotMBHF2OR_MaxPixelTrack_v1',
    'HLT_HIUPC_SingleMuOpen_NotMBHF2OR_v1',
    'HLT_HIUPC_ZeroBias_SinglePixelTrack_v1',
    'HLT_HIZeroBias_v1' ),
  HIHLTPhysics = cms.vstring( 'HLT_HIPhysics_v1' ),
  HIHardProbes = cms.vstring( 'HLT_HICsAK4PFJet100Eta1p5_v1',
    'HLT_HICsAK4PFJet120Eta1p5_v1',
    'HLT_HICsAK4PFJet80Eta1p5_v1',
    'HLT_HIDoubleEle10GsfMass50_v1',
    'HLT_HIDoubleEle10Gsf_v1',
    'HLT_HIDoubleEle15GsfMass50_v1',
    'HLT_HIDoubleEle15Gsf_v1',
    'HLT_HIEle10Gsf_PuAK4CaloJet100Eta2p1_v1',
    'HLT_HIEle10Gsf_PuAK4CaloJet40Eta2p1_v1',
    'HLT_HIEle10Gsf_PuAK4CaloJet60Eta2p1_v1',
    'HLT_HIEle10Gsf_PuAK4CaloJet80Eta2p1_v1',
    'HLT_HIEle10Gsf_v1',
    'HLT_HIEle15Ele10GsfMass50_v1',
    'HLT_HIEle15Ele10Gsf_v1',
    'HLT_HIEle15Gsf_PuAK4CaloJet100Eta2p1_v1',
    'HLT_HIEle15Gsf_PuAK4CaloJet40Eta2p1_v1',
    'HLT_HIEle15Gsf_PuAK4CaloJet60Eta2p1_v1',
    'HLT_HIEle15Gsf_PuAK4CaloJet80Eta2p1_v1',
    'HLT_HIEle15Gsf_v1',
    'HLT_HIEle20Gsf_PuAK4CaloJet100Eta2p1_v1',
    'HLT_HIEle20Gsf_PuAK4CaloJet40Eta2p1_v1',
    'HLT_HIEle20Gsf_PuAK4CaloJet60Eta2p1_v1',
    'HLT_HIEle20Gsf_PuAK4CaloJet80Eta2p1_v1',
    'HLT_HIEle20Gsf_v1',
    'HLT_HIEle30Gsf_v1',
    'HLT_HIEle40Gsf_v1',
    'HLT_HIEle50Gsf_v1',
    'HLT_HIGEDPhoton30_EB_HECut_v1',
    'HLT_HIGEDPhoton30_EB_v1',
    'HLT_HIGEDPhoton30_HECut_v1',
    'HLT_HIGEDPhoton30_v1',
    'HLT_HIGEDPhoton40_EB_HECut_v1',
    'HLT_HIGEDPhoton40_EB_v1',
    'HLT_HIGEDPhoton40_HECut_v1',
    'HLT_HIGEDPhoton40_v1',
    'HLT_HIGEDPhoton50_EB_HECut_v1',
    'HLT_HIGEDPhoton50_EB_v1',
    'HLT_HIGEDPhoton50_HECut_v1',
    'HLT_HIGEDPhoton50_v1',
    'HLT_HIGEDPhoton60_EB_HECut_v1',
    'HLT_HIGEDPhoton60_EB_v1',
    'HLT_HIGEDPhoton60_HECut_v1',
    'HLT_HIGEDPhoton60_v1',
    'HLT_HIIslandPhoton30_Eta1p5_v1',
    'HLT_HIIslandPhoton30_Eta3p1_v1',
    'HLT_HIIslandPhoton40_Eta1p5_v1',
    'HLT_HIIslandPhoton40_Eta3p1_v1',
    'HLT_HIIslandPhoton50_Eta1p5_v1',
    'HLT_HIIslandPhoton50_Eta3p1_v1',
    'HLT_HIIslandPhoton60_Eta1p5_v1',
    'HLT_HIIslandPhoton60_Eta3p1_v1',
    'HLT_HIL1Mu3Eta2p5_Ele10Gsf_v1',
    'HLT_HIL1Mu3Eta2p5_Ele15Gsf_v1',
    'HLT_HIL1Mu3Eta2p5_Ele20Gsf_v1',
    'HLT_HIL1Mu5Eta2p5_Ele10Gsf_v1',
    'HLT_HIL1Mu5Eta2p5_Ele15Gsf_v1',
    'HLT_HIL1Mu5Eta2p5_Ele20Gsf_v1',
    'HLT_HIL1Mu7Eta2p5_Ele10Gsf_v1',
    'HLT_HIL1Mu7Eta2p5_Ele15Gsf_v1',
    'HLT_HIL1Mu7Eta2p5_Ele20Gsf_v1',
    'HLT_HIL3Mu3_EG10HECut_v1',
    'HLT_HIL3Mu3_EG15HECut_v1',
    'HLT_HIL3Mu3_EG20HECut_v1',
    'HLT_HIL3Mu3_EG30HECut_v1',
    'HLT_HIL3Mu5_EG10HECut_v1',
    'HLT_HIL3Mu5_EG15HECut_v1',
    'HLT_HIL3Mu5_EG20HECut_v1',
    'HLT_HIL3Mu5_EG30HECut_v1',
    'HLT_HIL3Mu7_EG10HECut_v1',
    'HLT_HIL3Mu7_EG15HECut_v1',
    'HLT_HIL3Mu7_EG20HECut_v1',
    'HLT_HIL3Mu7_EG30HECut_v1',
    'HLT_HIPuAK4CaloJet100Eta2p4_CSVv2WP0p75_v1',
    'HLT_HIPuAK4CaloJet100Eta2p4_DeepCSV0p4_v1',
    'HLT_HIPuAK4CaloJet100Eta5p1_v1',
    'HLT_HIPuAK4CaloJet100Fwd_v1',
    'HLT_HIPuAK4CaloJet100_35_Eta0p7_v1',
    'HLT_HIPuAK4CaloJet100_35_Eta1p1_v1',
    'HLT_HIPuAK4CaloJet120Eta5p1_v1',
    'HLT_HIPuAK4CaloJet120Fwd_v1',
    'HLT_HIPuAK4CaloJet60Eta2p4_CSVv2WP0p75_v1',
    'HLT_HIPuAK4CaloJet60Eta2p4_DeepCSV0p4_v1',
    'HLT_HIPuAK4CaloJet60Fwd_v1',
    'HLT_HIPuAK4CaloJet80Eta2p4_CSVv2WP0p75_v1',
    'HLT_HIPuAK4CaloJet80Eta2p4_DeepCSV0p4_v1',
    'HLT_HIPuAK4CaloJet80Eta5p1_v1',
    'HLT_HIPuAK4CaloJet80Fwd_v1',
    'HLT_HIPuAK4CaloJet80_35_Eta0p7_v1',
    'HLT_HIPuAK4CaloJet80_35_Eta1p1_v1',
    'HLT_HIPuAK4CaloJet80_45_45_Eta2p1_v1' ),
  HIHardProbesLower = cms.vstring( 'HLT_HICsAK4PFJet60Eta1p5_v1',
    'HLT_HIGEDPhoton10_EB_HECut_v1',
    'HLT_HIGEDPhoton10_EB_v1',
    'HLT_HIGEDPhoton10_HECut_v1',
    'HLT_HIGEDPhoton10_v1',
    'HLT_HIGEDPhoton20_EB_HECut_v1',
    'HLT_HIGEDPhoton20_EB_v1',
    'HLT_HIGEDPhoton20_HECut_v1',
    'HLT_HIGEDPhoton20_v1',
    'HLT_HIIslandPhoton10_Eta1p5_v1',
    'HLT_HIIslandPhoton10_Eta3p1_v1',
    'HLT_HIIslandPhoton20_Eta1p5_v1',
    'HLT_HIIslandPhoton20_Eta3p1_v1',
    'HLT_HIPuAK4CaloJet40Eta5p1_v1',
    'HLT_HIPuAK4CaloJet40Fwd_v1',
    'HLT_HIPuAK4CaloJet60Eta5p1_v1' ),
  HIHardProbesPeripheral = cms.vstring( 'HLT_HICsAK4PFJet100Eta1p5_Centrality_30_100_v1',
    'HLT_HICsAK4PFJet100Eta1p5_Centrality_50_100_v1',
    'HLT_HICsAK4PFJet60Eta1p5_Centrality_30_100_v1',
    'HLT_HICsAK4PFJet60Eta1p5_Centrality_50_100_v1',
    'HLT_HICsAK4PFJet80Eta1p5_Centrality_30_100_v1',
    'HLT_HICsAK4PFJet80Eta1p5_Centrality_50_100_v1',
    'HLT_HIGEDPhoton10_Cent30_100_v1',
    'HLT_HIGEDPhoton10_Cent50_100_v1',
    'HLT_HIGEDPhoton20_Cent30_100_v1',
    'HLT_HIGEDPhoton20_Cent50_100_v1',
    'HLT_HIGEDPhoton30_Cent30_100_v1',
    'HLT_HIGEDPhoton30_Cent50_100_v1',
    'HLT_HIGEDPhoton40_Cent30_100_v1',
    'HLT_HIGEDPhoton40_Cent50_100_v1',
    'HLT_HIIslandPhoton10_Eta3p1_Cent30_100_v1',
    'HLT_HIIslandPhoton10_Eta3p1_Cent50_100_v1',
    'HLT_HIIslandPhoton20_Eta3p1_Cent30_100_v1',
    'HLT_HIIslandPhoton20_Eta3p1_Cent50_100_v1',
    'HLT_HIIslandPhoton30_Eta3p1_Cent30_100_v1',
    'HLT_HIIslandPhoton30_Eta3p1_Cent50_100_v1',
    'HLT_HIIslandPhoton40_Eta3p1_Cent30_100_v1',
    'HLT_HIIslandPhoton40_Eta3p1_Cent50_100_v1',
    'HLT_HIPuAK4CaloJet100Eta5p1_Centrality_30_100_v1',
    'HLT_HIPuAK4CaloJet100Eta5p1_Centrality_50_100_v1',
    'HLT_HIPuAK4CaloJet40Eta5p1_Centrality_30_100_v1',
    'HLT_HIPuAK4CaloJet40Eta5p1_Centrality_50_100_v1',
    'HLT_HIPuAK4CaloJet60Eta5p1_Centrality_30_100_v1',
    'HLT_HIPuAK4CaloJet60Eta5p1_Centrality_50_100_v1',
    'HLT_HIPuAK4CaloJet80Eta5p1_Centrality_30_100_v1',
    'HLT_HIPuAK4CaloJet80Eta5p1_Centrality_50_100_v1' ),
  HIHcalNZS = cms.vstring( 'HLT_HIHcalNZS_v1',
    'HLT_HIHcalPhiSym_v1' ),
  HIHeavyFlavor = cms.vstring( 'HLT_HIDmesonPPTrackingGlobal_Dpt15_v1',
    'HLT_HIDmesonPPTrackingGlobal_Dpt20_v1',
    'HLT_HIDmesonPPTrackingGlobal_Dpt30_v1',
    'HLT_HIDmesonPPTrackingGlobal_Dpt40_v1',
    'HLT_HIDmesonPPTrackingGlobal_Dpt50_v1',
    'HLT_HIDmesonPPTrackingGlobal_Dpt60_v1',
    'HLT_HIDsPPTrackingGlobal_Dpt20_v1',
    'HLT_HIDsPPTrackingGlobal_Dpt30_v1',
    'HLT_HIDsPPTrackingGlobal_Dpt40_v1',
    'HLT_HIDsPPTrackingGlobal_Dpt50_v1',
    'HLT_HIDsPPTrackingGlobal_Dpt60_v1',
    'HLT_HIFullTracks2018_HighPt18_v1',
    'HLT_HIFullTracks2018_HighPt24_v1',
    'HLT_HIFullTracks2018_HighPt34_v1',
    'HLT_HIFullTracks2018_HighPt45_v1',
    'HLT_HILcPPTrackingGlobal_Dpt20_v1',
    'HLT_HILcPPTrackingGlobal_Dpt30_v1',
    'HLT_HILcPPTrackingGlobal_Dpt40_v1',
    'HLT_HILcPPTrackingGlobal_Dpt50_v1',
    'HLT_HILcPPTrackingGlobal_Dpt60_v1' ),
  HIHighMultiplicityETTAsym = cms.vstring( 'HLT_HIL1_ETT10_ETTAsym50_MinimumBiasHF1_OR_BptxAND_v1',
    'HLT_HIL1_ETT8_ETTAsym50_MinimumBiasHF1_OR_BptxAND_v1' ),
  HILowMultipicityReducedFormat = cms.vstring( 'HLT_HIFullTracks_Multiplicity020_HF1AND_v1',
    'HLT_HIFullTracks_Multiplicity020_HF1OR_v1',
    'HLT_HIFullTracks_Multiplicity020_HF2OR_v1',
    'HLT_HIFullTracks_Multiplicity020_v1',
    'HLT_HIFullTracks_Multiplicity2040_HF1AND_v1',
    'HLT_HIFullTracks_Multiplicity2040_HF1OR_v1',
    'HLT_HIFullTracks_Multiplicity2040_HF2OR_v1',
    'HLT_HIFullTracks_Multiplicity2040_v1',
    'HLT_HIFullTracks_Multiplicity4060_v1',
    'HLT_HIFullTracks_Multiplicity6080_v1',
    'HLT_HIFullTracks_Multiplicity80100_v1' ),
  HIMinimumBias0 = cms.vstring( 'HLT_HIMinimumBias_part0_v1' ),
  HIMinimumBias1 = cms.vstring( 'HLT_HIMinimumBias_part1_v1' ),
  HIMinimumBiasReducedFormat0 = cms.vstring( 'HLT_HIMinimumBias_part2_v1',
    'HLT_HIMinimumBias_part3_v1' ),
  HIMinimumBiasReducedFormat1 = cms.vstring( 'HLT_HIMinimumBias_part4_v1',
    'HLT_HIMinimumBias_part5_v1' ),
  HIMinimumBiasReducedFormat10 = cms.vstring( 'HLT_HIMinimumBias_part22_v1',
    'HLT_HIMinimumBias_part23_v1' ),
  HIMinimumBiasReducedFormat11 = cms.vstring( 'HLT_HIMinimumBias_part24_v1',
    'HLT_HIMinimumBias_part25_v1' ),
  HIMinimumBiasReducedFormat2 = cms.vstring( 'HLT_HIMinimumBias_part6_v1',
    'HLT_HIMinimumBias_part7_v1' ),
  HIMinimumBiasReducedFormat3 = cms.vstring( 'HLT_HIMinimumBias_part8_v1',
    'HLT_HIMinimumBias_part9_v1' ),
  HIMinimumBiasReducedFormat4 = cms.vstring( 'HLT_HIMinimumBias_part10_v1',
    'HLT_HIMinimumBias_part11_v1' ),
  HIMinimumBiasReducedFormat5 = cms.vstring( 'HLT_HIMinimumBias_part12_v1',
    'HLT_HIMinimumBias_part13_v1' ),
  HIMinimumBiasReducedFormat6 = cms.vstring( 'HLT_HIMinimumBias_part14_v1',
    'HLT_HIMinimumBias_part15_v1' ),
  HIMinimumBiasReducedFormat7 = cms.vstring( 'HLT_HIMinimumBias_part16_v1',
    'HLT_HIMinimumBias_part17_v1' ),
  HIMinimumBiasReducedFormat8 = cms.vstring( 'HLT_HIMinimumBias_part18_v1',
    'HLT_HIMinimumBias_part19_v1' ),
  HIMinimumBiasReducedFormat9 = cms.vstring( 'HLT_HIMinimumBias_part20_v1',
    'HLT_HIMinimumBias_part21_v1' ),
  HINCaloJets = cms.vstring( 'HLT_AK4CaloJet100_v10',
    'HLT_AK4CaloJet120_v9',
    'HLT_AK4CaloJet30_v11',
    'HLT_AK4CaloJet40_v10',
    'HLT_AK4CaloJet50_v10',
    'HLT_AK4CaloJet80_v10' ),
  HINPFJets = cms.vstring( 'HLT_AK4PFJet100_v19',
    'HLT_AK4PFJet120_v18',
    'HLT_AK4PFJet30_v19',
    'HLT_AK4PFJet50_v19',
    'HLT_AK4PFJet80_v19' ),
  HIOnlineMonitor = cms.vstring( 'HLT_HIHcalNZS_v1',
    'HLT_HIHcalPhiSym_v1',
    'HLT_HIPhysics_v1',
    'HLT_HIRandom_v1' ),
  HISingleMuon = cms.vstring( 'HLT_HIL1MuOpen_Centrality_70_100_v1',
    'HLT_HIL1MuOpen_Centrality_80_100_v1',
    'HLT_HIL2Mu3_NHitQ15_v1',
    'HLT_HIL2Mu5_NHitQ15_v1',
    'HLT_HIL2Mu7_NHitQ15_v1',
    'HLT_HIL3Mu12_v1',
    'HLT_HIL3Mu15_v1',
    'HLT_HIL3Mu20_v1',
    'HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_FilterDr_v1',
    'HLT_HIL3Mu3Eta2p5_PuAK4CaloJet100Eta2p1_v1',
    'HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_FilterDr_v1',
    'HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1',
    'HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_FilterDr_v1',
    'HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1',
    'HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_FilterDr_v1',
    'HLT_HIL3Mu3Eta2p5_PuAK4CaloJet80Eta2p1_v1',
    'HLT_HIL3Mu3_NHitQ10_v1',
    'HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_FilterDr_v1',
    'HLT_HIL3Mu5Eta2p5_PuAK4CaloJet100Eta2p1_v1',
    'HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_FilterDr_v1',
    'HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1',
    'HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_FilterDr_v1',
    'HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1',
    'HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_FilterDr_v1',
    'HLT_HIL3Mu5Eta2p5_PuAK4CaloJet80Eta2p1_v1',
    'HLT_HIL3Mu5_NHitQ10_v1',
    'HLT_HIL3Mu7_NHitQ10_v1' ),
  HITrackerVriginRaw = cms.vstring( 'HLT_HIPhysicsForZS_v1' ),
  HIZeroBias1 = cms.vstring( 'HLT_HIZeroBias_part0_v6' ),
  HIZeroBias10 = cms.vstring( 'HLT_HIZeroBias_part9_v6' ),
  HIZeroBias11 = cms.vstring( 'HLT_HIZeroBias_part10_v6' ),
  HIZeroBias12 = cms.vstring( 'HLT_HIZeroBias_part11_v6' ),
  HIZeroBias2 = cms.vstring( 'HLT_HIZeroBias_part1_v6' ),
  HIZeroBias3 = cms.vstring( 'HLT_HIZeroBias_part2_v6' ),
  HIZeroBias4 = cms.vstring( 'HLT_HIZeroBias_part3_v6' ),
  HIZeroBias5 = cms.vstring( 'HLT_HIZeroBias_part4_v6' ),
  HIZeroBias6 = cms.vstring( 'HLT_HIZeroBias_part5_v6' ),
  HIZeroBias7 = cms.vstring( 'HLT_HIZeroBias_part6_v6' ),
  HIZeroBias8 = cms.vstring( 'HLT_HIZeroBias_part7_v6' ),
  HIZeroBias9 = cms.vstring( 'HLT_HIZeroBias_part8_v6' ),
  HLTMonitor = cms.vstring( 'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v19',
    'HLT_Ele32_WPTight_Gsf_v15',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT550_DisplacedDijet60_Inclusive_v13',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v15',
    'HLT_PFHT510_v17',
    'HLT_PFJet260_v20',
    'HLT_PFJet320_v20',
    'HLT_PFMET130_PFMHT130_IDTight_v20',
    'HLT_PFMET140_PFMHT140_IDTight_v20' ),
  HLTPhysics = cms.vstring( 'HLT_L1FatEvents_v2',
    'HLT_Physics_v7' ),
  HcalNZS = cms.vstring( 'HLT_HcalNZS_v13',
    'HLT_HcalPhiSym_v15' ),
  HeavyFlavor = cms.vstring( 'HLT_DmesonPPTrackingGlobal_Dpt15ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt20ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt30ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt40ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt50ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt60ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt8ForPPRef_v11' ),
  HighEGJet = cms.vstring(  ),
  HighMultiplicity = cms.vstring( 'HLT_PixelTracks_Multiplicity110ForPPRef_v5',
    'HLT_PixelTracks_Multiplicity135ForPPRef_v5',
    'HLT_PixelTracks_Multiplicity160ForPPRef_v5',
    'HLT_PixelTracks_Multiplicity60ForPPRef_v5',
    'HLT_PixelTracks_Multiplicity85ForPPRef_v5' ),
  HighMultiplicityEOF = cms.vstring(  ),
  HighPtJet80 = cms.vstring( 'HLT_AK4CaloJet100_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet100_Jet35_Eta0p7ForPPRef_v9',
    'HLT_AK4CaloJet100_Jet35_Eta1p1ForPPRef_v9',
    'HLT_AK4CaloJet110_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet120_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet150ForPPRef_v9',
    'HLT_AK4CaloJet80_45_45_Eta2p1ForPPRef_v9',
    'HLT_AK4CaloJet80_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet80_Jet35_Eta0p7ForPPRef_v9',
    'HLT_AK4CaloJet80_Jet35_Eta1p1ForPPRef_v9',
    'HLT_AK4PFJet100_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet110_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet120_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet80_Eta5p1ForPPRef_v16' ),
  HighPtLowerJets = cms.vstring( 'HLT_AK4CaloJet40_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet60_Eta5p1ForPPRef_v9',
    'HLT_AK4PFJet40_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet60_Eta5p1ForPPRef_v16' ),
  HighPtLowerPhotons = cms.vstring( 'HLT_SinglePhoton10_Eta3p1ForPPRef_v8',
    'HLT_SinglePhoton15_Eta3p1ForPPRef_v9',
    'HLT_SinglePhoton20_Eta3p1ForPPRef_v9' ),
  HighPtPhoton30AndZ = cms.vstring( 'HLT_SinglePhoton30_Eta3p1ForPPRef_v9',
    'HLT_SinglePhoton40_Eta3p1ForPPRef_v8',
    'HLT_SinglePhoton50_Eta3p1ForPPRef_v8',
    'HLT_SinglePhoton60_Eta3p1ForPPRef_v8' ),
  IsolatedBunch = cms.vstring( 'HLT_HcalIsolatedbunch_v5' ),
  JetHT = cms.vstring( 'HLT_AK4PFBJetBCSV60_Eta2p1ForPPRef_v16',
    'HLT_AK4PFBJetBCSV80_Eta2p1ForPPRef_v16',
    'HLT_AK4PFBJetBSSV60_Eta2p1ForPPRef_v16',
    'HLT_AK4PFBJetBSSV80_Eta2p1ForPPRef_v16',
    'HLT_AK4PFDJet60_Eta2p1ForPPRef_v16',
    'HLT_AK4PFDJet80_Eta2p1ForPPRef_v16',
    'HLT_AK8PFHT750_TrimMass50_v12',
    'HLT_AK8PFHT800_TrimMass50_v12',
    'HLT_AK8PFHT850_TrimMass50_v11',
    'HLT_AK8PFHT900_TrimMass50_v11',
    'HLT_AK8PFJet140_v15',
    'HLT_AK8PFJet15_v3',
    'HLT_AK8PFJet200_v15',
    'HLT_AK8PFJet25_v3',
    'HLT_AK8PFJet260_v16',
    'HLT_AK8PFJet320_v16',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_v2',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_v2',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_v2',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_v2',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_v3',
    'HLT_AK8PFJet360_TrimMass30_v18',
    'HLT_AK8PFJet380_TrimMass30_v11',
    'HLT_AK8PFJet400_TrimMass30_v12',
    'HLT_AK8PFJet400_v16',
    'HLT_AK8PFJet40_v16',
    'HLT_AK8PFJet420_TrimMass30_v11',
    'HLT_AK8PFJet450_v16',
    'HLT_AK8PFJet500_v16',
    'HLT_AK8PFJet550_v11',
    'HLT_AK8PFJet60_v15',
    'HLT_AK8PFJet80_v15',
    'HLT_AK8PFJetFwd140_v14',
    'HLT_AK8PFJetFwd15_v3',
    'HLT_AK8PFJetFwd200_v14',
    'HLT_AK8PFJetFwd25_v3',
    'HLT_AK8PFJetFwd260_v15',
    'HLT_AK8PFJetFwd320_v15',
    'HLT_AK8PFJetFwd400_v15',
    'HLT_AK8PFJetFwd40_v15',
    'HLT_AK8PFJetFwd450_v15',
    'HLT_AK8PFJetFwd500_v15',
    'HLT_AK8PFJetFwd60_v14',
    'HLT_AK8PFJetFwd80_v14',
    'HLT_CaloJet500_NoJetID_v12',
    'HLT_CaloJet550_NoJetID_v7',
    'HLT_DiPFJetAve100_HFJEC_v16',
    'HLT_DiPFJetAve140_v13',
    'HLT_DiPFJetAve160_HFJEC_v16',
    'HLT_DiPFJetAve200_v13',
    'HLT_DiPFJetAve220_HFJEC_v16',
    'HLT_DiPFJetAve260_v14',
    'HLT_DiPFJetAve300_HFJEC_v16',
    'HLT_DiPFJetAve320_v14',
    'HLT_DiPFJetAve400_v14',
    'HLT_DiPFJetAve40_v14',
    'HLT_DiPFJetAve500_v14',
    'HLT_DiPFJetAve60_HFJEC_v15',
    'HLT_DiPFJetAve60_v14',
    'HLT_DiPFJetAve80_HFJEC_v16',
    'HLT_DiPFJetAve80_v13',
    'HLT_DoublePFJets100_CaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets200_CaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets350_CaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets40_CaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_PFHT1050_v18',
    'HLT_PFHT180_v17',
    'HLT_PFHT250_v17',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_v3',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v9',
    'HLT_PFHT350MinPFJet15_v9',
    'HLT_PFHT350_v19',
    'HLT_PFHT370_v17',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_v8',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_v8',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_v8',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_v8',
    'HLT_PFHT400_SixPFJet32_v8',
    'HLT_PFHT430_v17',
    'HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_v7',
    'HLT_PFHT450_SixPFJet36_v7',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v12',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v12',
    'HLT_PFHT510_v17',
    'HLT_PFHT590_v17',
    'HLT_PFHT680_v17',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v12',
    'HLT_PFHT700_PFMET95_PFMHT95_IDTight_v12',
    'HLT_PFHT780_v17',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v12',
    'HLT_PFHT800_PFMET85_PFMHT85_IDTight_v12',
    'HLT_PFHT890_v17',
    'HLT_PFJet140_v19',
    'HLT_PFJet15_v3',
    'HLT_PFJet200_v19',
    'HLT_PFJet25_v3',
    'HLT_PFJet260_v20',
    'HLT_PFJet320_v20',
    'HLT_PFJet400_v20',
    'HLT_PFJet40_v21',
    'HLT_PFJet450_v21',
    'HLT_PFJet500_v21',
    'HLT_PFJet550_v11',
    'HLT_PFJet60_v21',
    'HLT_PFJet80_v20',
    'HLT_PFJetFwd140_v18',
    'HLT_PFJetFwd15_v3',
    'HLT_PFJetFwd200_v18',
    'HLT_PFJetFwd25_v3',
    'HLT_PFJetFwd260_v19',
    'HLT_PFJetFwd320_v19',
    'HLT_PFJetFwd400_v19',
    'HLT_PFJetFwd40_v19',
    'HLT_PFJetFwd450_v19',
    'HLT_PFJetFwd500_v19',
    'HLT_PFJetFwd60_v19',
    'HLT_PFJetFwd80_v18',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v5',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v5',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v5',
    'HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8',
    'HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_v8',
    'HLT_QuadPFJet98_83_71_15_v5',
    'HLT_Rsq0p35_v15',
    'HLT_Rsq0p40_v15',
    'HLT_RsqMR300_Rsq0p09_MR200_4jet_v15',
    'HLT_RsqMR300_Rsq0p09_MR200_v15',
    'HLT_RsqMR320_Rsq0p09_MR200_4jet_v15',
    'HLT_RsqMR320_Rsq0p09_MR200_v15',
    'HLT_SingleJet30_Mu12_SinglePFJet40_v11' ),
  JetsTOTEM = cms.vstring( 'HLT_L1DoubleJetANDTotem_v1',
    'HLT_L1DoubleJet_gap_v1',
    'HLT_L1DoubleJet_v1' ),
  L1Accept = cms.vstring( 'DST_Physics_v7',
    'DST_ZeroBias_v2' ),
  L1MinimumBias = cms.vstring( 'HLT_L1MinimumBiasHF1AND_v4',
    'HLT_L1MinimumBiasHF1OR_v4',
    'HLT_L1MinimumBiasHF2AND_v4',
    'HLT_L1MinimumBiasHF2ORNoBptxGating_v5',
    'HLT_L1MinimumBiasHF2OR_v4',
    'HLT_L1MinimumBiasHF_OR_v3' ),
  LowEGJet = cms.vstring(  ),
  MET = cms.vstring( 'HLT_CaloMET100_HBHECleaned_v4',
    'HLT_CaloMET100_NotCleaned_v4',
    'HLT_CaloMET110_NotCleaned_v4',
    'HLT_CaloMET250_HBHECleaned_v4',
    'HLT_CaloMET250_NotCleaned_v4',
    'HLT_CaloMET300_HBHECleaned_v4',
    'HLT_CaloMET350_HBHECleaned_v4',
    'HLT_CaloMET70_HBHECleaned_v4',
    'HLT_CaloMET80_HBHECleaned_v4',
    'HLT_CaloMET80_NotCleaned_v4',
    'HLT_CaloMET90_HBHECleaned_v4',
    'HLT_CaloMET90_NotCleaned_v4',
    'HLT_CaloMHT90_v4',
    'HLT_DiJet110_35_Mjj650_PFMET110_v9',
    'HLT_DiJet110_35_Mjj650_PFMET120_v9',
    'HLT_DiJet110_35_Mjj650_PFMET130_v9',
    'HLT_L1ETMHadSeeds_v2',
    'HLT_MET105_IsoTrk50_v9',
    'HLT_MET120_IsoTrk50_v9',
    'HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_v20',
    'HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_v20',
    'HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_v19',
    'HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_v19',
    'HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET100_PFMHT100_IDTight_PFHT60_v9',
    'HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET110_PFMHT110_IDTight_v20',
    'HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v9',
    'HLT_PFMET120_PFMHT120_IDTight_v20',
    'HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET130_PFMHT130_IDTight_v20',
    'HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET140_PFMHT140_IDTight_v20',
    'HLT_PFMET200_HBHECleaned_v9',
    'HLT_PFMET200_HBHE_BeamHaloCleaned_v9',
    'HLT_PFMET200_NotCleaned_v9',
    'HLT_PFMET250_HBHECleaned_v9',
    'HLT_PFMET300_HBHECleaned_v9',
    'HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_v9',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_v20',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v9',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v20',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v19',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v19',
    'HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_v9',
    'HLT_PFMETTypeOne110_PFMHT110_IDTight_v12',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_v9',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_v12',
    'HLT_PFMETTypeOne130_PFMHT130_IDTight_v12',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v11',
    'HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_v9',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v9',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v9',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v9' ),
  MinBiasTOTEM = cms.vstring( 'HLT_L1TOTEM1_MinBias_v4' ),
  MinimumBias = cms.vstring( 'HLT_CaloJet10_NoJetID_v3',
    'HLT_CaloJet20_NoJetID_v3',
    'HLT_CaloJet50_NoJetID_v3',
    'HLT_L1DoubleJetC50_v2',
    'HLT_L1EXT_HCAL_LaserMon1_v1',
    'HLT_L1EXT_HCAL_LaserMon4_v1',
    'HLT_L1SingleEG10_v2',
    'HLT_L1SingleEG15_v2',
    'HLT_L1SingleEG18_v1',
    'HLT_L1SingleJet10erHE_v1',
    'HLT_L1SingleJet12erHE_v1',
    'HLT_L1SingleJet16_v1',
    'HLT_L1SingleJet200_v1',
    'HLT_L1SingleJet20_v1',
    'HLT_L1SingleJet35_v1',
    'HLT_L1SingleJet8erHE_v1' ),
  MinimumBias0 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part0_v1' ),
  MinimumBias1 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part1_v1' ),
  MinimumBias2 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part2_v1' ),
  MinimumBias3 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part3_v1' ),
  MinimumBias4 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part4_v1' ),
  MinimumBias5 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part5_v1' ),
  MinimumBias6 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part6_v1' ),
  MinimumBias7 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part7_v1' ),
  MinimumBias8 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part8_v1' ),
  MinimumBias9 = cms.vstring( 'HLT_L1MinimumBiasHF_OR_part9_v1' ),
  MonteCarlo = cms.vstring( 'MC_AK4CaloJetsFromPV_v8',
    'MC_AK4CaloJets_v9',
    'MC_AK4PFJets_v17',
    'MC_AK8CaloHT_v8',
    'MC_AK8PFHT_v16',
    'MC_AK8PFJets_v17',
    'MC_AK8TrimPFJets_v17',
    'MC_CaloBTagDeepCSV_v8',
    'MC_CaloHT_v8',
    'MC_CaloMET_JetIdCleaned_v9',
    'MC_CaloMET_v8',
    'MC_CaloMHT_v8',
    'MC_Diphoton10_10_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass10_v13',
    'MC_DoubleEle5_CaloIdL_MW_v15',
    'MC_DoubleGlbTrkMu_TrkIsoVVL_DZ_v12',
    'MC_DoubleMuNoFiltersNoVtx_v7',
    'MC_DoubleMu_TrkIsoVVL_DZ_v11',
    'MC_Ele15_Ele10_CaloIdL_TrackIdL_IsoVL_DZ_v15',
    'MC_Ele5_WPTight_Gsf_v8',
    'MC_IsoMu_v15',
    'MC_IsoTkMu15_v12',
    'MC_PFBTagDeepCSV_v10',
    'MC_PFHT_v16',
    'MC_PFMET_v17',
    'MC_PFMHT_v16',
    'MC_ReducedIterativeTracking_v12' ),
  MuOnia = cms.vstring( 'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v8',
    'HLT_Dimuon0_Upsilon_L1_4p5_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v7',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v9',
    'HLT_Dimuon0_Upsilon_L1_5M_v8',
    'HLT_Dimuon0_Upsilon_L1_5_v9',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v6',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v6',
    'HLT_Dimuon0_Upsilon_NoVertexing_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v2',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v7',
    'HLT_Dimuon24_Phi_noCorrL1_v6',
    'HLT_Dimuon24_Upsilon_noCorrL1_v6',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v4',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v4',
    'HLT_Mu20_TkMu0_Phi_v8',
    'HLT_Mu25_TkMu0_Onia_v8',
    'HLT_Mu25_TkMu0_Phi_v8',
    'HLT_Mu30_TkMu0_Upsilon_v1',
    'HLT_Mu7p5_L2Mu2_Upsilon_v10',
    'HLT_Mu7p5_Track2_Upsilon_v11',
    'HLT_Mu7p5_Track3p5_Upsilon_v11',
    'HLT_Mu7p5_Track7_Upsilon_v11',
    'HLT_Trimuon2_Upsilon5_Muon_NoL1Mass_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v5',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v3' ),
  MuPlusX = cms.vstring( 'HLT_HIL2Mu3Eta2p5_AK4CaloJet100Eta2p1ForPPRef_v11',
    'HLT_HIL2Mu3Eta2p5_AK4CaloJet40Eta2p1ForPPRef_v11',
    'HLT_HIL2Mu3Eta2p5_AK4CaloJet60Eta2p1ForPPRef_v11',
    'HLT_HIL2Mu3Eta2p5_AK4CaloJet80Eta2p1ForPPRef_v11' ),
  MuonEG = cms.vstring( 'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v17',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v17',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v17',
    'HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_v8',
    'HLT_DoubleMu20_7_Mass0to30_L1_DM4_v7',
    'HLT_DoubleMu20_7_Mass0to30_Photon23_v8',
    'HLT_Mu12_DoublePhoton20_v5',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v15',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v7',
    'HLT_Mu17_Photon30_IsoCaloId_v6',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v15',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v7',
    'HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_v10',
    'HLT_Mu27_Ele37_CaloIdL_MW_v5',
    'HLT_Mu37_Ele27_CaloIdL_MW_v5',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v1',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v1',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v5',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v5',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v18',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v18',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v19',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v19',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_v1',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v1',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_v1',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v1',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v13',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v11' ),
  MuonEGammaTOTEM = cms.vstring( 'HLT_L1DoubleMu_v1',
    'HLT_L1SingleMu_v1' ),
  NoBPTX = cms.vstring( 'HLT_CDC_L2cosmic_10_er1p0_v1',
    'HLT_CDC_L2cosmic_5p5_er1p0_v1',
    'HLT_L1BptxXOR_v1',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v5',
    'HLT_L2Mu10_NoVertex_NoBPTX_v6',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v5',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v4',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v6',
    'HLT_UncorrectedJetE30_NoBPTX_v6',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v6',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v6' ),
  OnlineMonitor = ( cms.vstring( 'HLT_AK4CaloJet100_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet100_Jet35_Eta0p7ForPPRef_v9',
    'HLT_AK4CaloJet100_Jet35_Eta1p1ForPPRef_v9',
    'HLT_AK4CaloJet100_v10',
    'HLT_AK4CaloJet110_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet120_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet120_v9',
    'HLT_AK4CaloJet150ForPPRef_v9',
    'HLT_AK4CaloJet30_v11',
    'HLT_AK4CaloJet40_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet40_v10',
    'HLT_AK4CaloJet50_v10',
    'HLT_AK4CaloJet60_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet80_45_45_Eta2p1ForPPRef_v9',
    'HLT_AK4CaloJet80_Eta5p1ForPPRef_v9',
    'HLT_AK4CaloJet80_Jet35_Eta0p7ForPPRef_v9',
    'HLT_AK4CaloJet80_Jet35_Eta1p1ForPPRef_v9',
    'HLT_AK4CaloJet80_v10',
    'HLT_AK4PFBJetBCSV60_Eta2p1ForPPRef_v16',
    'HLT_AK4PFBJetBCSV80_Eta2p1ForPPRef_v16',
    'HLT_AK4PFBJetBSSV60_Eta2p1ForPPRef_v16',
    'HLT_AK4PFBJetBSSV80_Eta2p1ForPPRef_v16',
    'HLT_AK4PFDJet60_Eta2p1ForPPRef_v16',
    'HLT_AK4PFDJet80_Eta2p1ForPPRef_v16',
    'HLT_AK4PFJet100_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet100_v19',
    'HLT_AK4PFJet110_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet120_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet120_v18',
    'HLT_AK4PFJet30_v19',
    'HLT_AK4PFJet40_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet50_v19',
    'HLT_AK4PFJet60_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet80_Eta5p1ForPPRef_v16',
    'HLT_AK4PFJet80_v19',
    'HLT_AK8PFHT750_TrimMass50_v12',
    'HLT_AK8PFHT800_TrimMass50_v12',
    'HLT_AK8PFHT850_TrimMass50_v11',
    'HLT_AK8PFHT900_TrimMass50_v11',
    'HLT_AK8PFJet140_v15',
    'HLT_AK8PFJet15_v3',
    'HLT_AK8PFJet200_v15',
    'HLT_AK8PFJet25_v3',
    'HLT_AK8PFJet260_v16',
    'HLT_AK8PFJet320_v16',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_v2',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_v2',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_v2',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_v2',
    'HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_v3',
    'HLT_AK8PFJet360_TrimMass30_v18',
    'HLT_AK8PFJet380_TrimMass30_v11',
    'HLT_AK8PFJet400_TrimMass30_v12',
    'HLT_AK8PFJet400_v16',
    'HLT_AK8PFJet40_v16',
    'HLT_AK8PFJet420_TrimMass30_v11',
    'HLT_AK8PFJet450_v16',
    'HLT_AK8PFJet500_v16',
    'HLT_AK8PFJet550_v11',
    'HLT_AK8PFJet60_v15',
    'HLT_AK8PFJet80_v15',
    'HLT_AK8PFJetFwd140_v14',
    'HLT_AK8PFJetFwd15_v3',
    'HLT_AK8PFJetFwd200_v14',
    'HLT_AK8PFJetFwd25_v3',
    'HLT_AK8PFJetFwd260_v15',
    'HLT_AK8PFJetFwd320_v15',
    'HLT_AK8PFJetFwd400_v15',
    'HLT_AK8PFJetFwd40_v15',
    'HLT_AK8PFJetFwd450_v15',
    'HLT_AK8PFJetFwd500_v15',
    'HLT_AK8PFJetFwd60_v14',
    'HLT_AK8PFJetFwd80_v14',
    'HLT_BTagMu_AK4DiJet110_Mu5_noalgo_v13',
    'HLT_BTagMu_AK4DiJet110_Mu5_v13',
    'HLT_BTagMu_AK4DiJet170_Mu5_noalgo_v12',
    'HLT_BTagMu_AK4DiJet170_Mu5_v12',
    'HLT_BTagMu_AK4DiJet20_Mu5_noalgo_v13',
    'HLT_BTagMu_AK4DiJet20_Mu5_v13',
    'HLT_BTagMu_AK4DiJet40_Mu5_noalgo_v13',
    'HLT_BTagMu_AK4DiJet40_Mu5_v13',
    'HLT_BTagMu_AK4DiJet70_Mu5_noalgo_v13',
    'HLT_BTagMu_AK4DiJet70_Mu5_v13',
    'HLT_BTagMu_AK4Jet300_Mu5_noalgo_v12',
    'HLT_BTagMu_AK4Jet300_Mu5_v12',
    'HLT_BTagMu_AK8DiJet170_Mu5_noalgo_v9',
    'HLT_BTagMu_AK8DiJet170_Mu5_v9',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_v2',
    'HLT_BTagMu_AK8Jet170_DoubleMu5_v2',
    'HLT_BTagMu_AK8Jet300_Mu5_noalgo_v12',
    'HLT_BTagMu_AK8Jet300_Mu5_v12',
    'HLT_CDC_L2cosmic_10_er1p0_v1',
    'HLT_CDC_L2cosmic_5p5_er1p0_v1',
    'HLT_CaloJet10_NoJetID_v3',
    'HLT_CaloJet20_NoJetID_v3',
    'HLT_CaloJet500_NoJetID_v12',
    'HLT_CaloJet50_NoJetID_v3',
    'HLT_CaloJet550_NoJetID_v7',
    'HLT_CaloMET100_HBHECleaned_v4',
    'HLT_CaloMET100_NotCleaned_v4',
    'HLT_CaloMET110_NotCleaned_v4',
    'HLT_CaloMET250_HBHECleaned_v4',
    'HLT_CaloMET250_NotCleaned_v4',
    'HLT_CaloMET300_HBHECleaned_v4',
    'HLT_CaloMET350_HBHECleaned_v4',
    'HLT_CaloMET70_HBHECleaned_v4',
    'HLT_CaloMET80_HBHECleaned_v4',
    'HLT_CaloMET80_NotCleaned_v4',
    'HLT_CaloMET90_HBHECleaned_v4',
    'HLT_CaloMET90_NotCleaned_v4',
    'HLT_CaloMHT90_v4',
    'HLT_DQMPixels_SingleMuOpen_v1',
    'HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v4',
    'HLT_DiJet110_35_Mjj650_PFMET110_v9',
    'HLT_DiJet110_35_Mjj650_PFMET120_v9',
    'HLT_DiJet110_35_Mjj650_PFMET130_v9',
    'HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v17',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v17',
    'HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v17',
    'HLT_DiPFJet15_FBEta3_NoCaloMatched_v17',
    'HLT_DiPFJet15_NoCaloMatched_v16',
    'HLT_DiPFJet25_FBEta3_NoCaloMatched_v17',
    'HLT_DiPFJet25_NoCaloMatched_v16',
    'HLT_DiPFJetAve100_HFJEC_v16',
    'HLT_DiPFJetAve140_v13',
    'HLT_DiPFJetAve15_HFJEC_v17',
    'HLT_DiPFJetAve160_HFJEC_v16',
    'HLT_DiPFJetAve200_v13',
    'HLT_DiPFJetAve220_HFJEC_v16',
    'HLT_DiPFJetAve25_HFJEC_v17',
    'HLT_DiPFJetAve260_v14',
    'HLT_DiPFJetAve300_HFJEC_v16',
    'HLT_DiPFJetAve320_v14',
    'HLT_DiPFJetAve35_HFJEC_v17',
    'HLT_DiPFJetAve400_v14',
    'HLT_DiPFJetAve40_v14',
    'HLT_DiPFJetAve500_v14',
    'HLT_DiPFJetAve60_HFJEC_v15',
    'HLT_DiPFJetAve60_v14',
    'HLT_DiPFJetAve80_HFJEC_v16',
    'HLT_DiPFJetAve80_v13',
    'HLT_DiSC30_18_EIso_AND_HE_Mass70_v13',
    'HLT_Dimuon0_Jpsi3p5_Muon2_v5',
    'HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v7',
    'HLT_Dimuon0_Jpsi_L1_NoOS_v7',
    'HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v7',
    'HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v7',
    'HLT_Dimuon0_Jpsi_NoVertexing_v8',
    'HLT_Dimuon0_Jpsi_v8',
    'HLT_Dimuon0_LowMass_L1_0er1p5R_v7',
    'HLT_Dimuon0_LowMass_L1_0er1p5_v8',
    'HLT_Dimuon0_LowMass_L1_4R_v7',
    'HLT_Dimuon0_LowMass_L1_4_v8',
    'HLT_Dimuon0_LowMass_L1_TM530_v6',
    'HLT_Dimuon0_LowMass_v8',
    'HLT_Dimuon0_Upsilon_L1_4p5NoOS_v8',
    'HLT_Dimuon0_Upsilon_L1_4p5_v9',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v7',
    'HLT_Dimuon0_Upsilon_L1_4p5er2p0_v9',
    'HLT_Dimuon0_Upsilon_L1_5M_v8',
    'HLT_Dimuon0_Upsilon_L1_5_v9',
    'HLT_Dimuon0_Upsilon_Muon_L1_TM0_v6',
    'HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v6',
    'HLT_Dimuon0_Upsilon_NoVertexing_v7',
    'HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v7',
    'HLT_Dimuon12_Upsilon_y1p4_v2',
    'HLT_Dimuon14_Phi_Barrel_Seagulls_v7',
    'HLT_Dimuon18_PsiPrime_noCorrL1_v6',
    'HLT_Dimuon18_PsiPrime_v14',
    'HLT_Dimuon20_Jpsi_Barrel_Seagulls_v7',
    'HLT_Dimuon24_Phi_noCorrL1_v6',
    'HLT_Dimuon24_Upsilon_noCorrL1_v6',
    'HLT_Dimuon25_Jpsi_noCorrL1_v6',
    'HLT_Dimuon25_Jpsi_v14',
    'HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_v13',
    'HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_v15',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_v2',
    'HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_v2',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v13',
    'HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v13',
    'HLT_DmesonPPTrackingGlobal_Dpt15ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt20ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt30ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt40ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt50ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt60ForPPRef_v11',
    'HLT_DmesonPPTrackingGlobal_Dpt8ForPPRef_v11',
    'HLT_DoubleEle25_CaloIdL_MW_v4',
    'HLT_DoubleEle27_CaloIdL_MW_v4',
    'HLT_DoubleEle33_CaloIdL_MW_v17',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v20',
    'HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v20',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_v2',
    'HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v2',
    'HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_v2',
    'HLT_DoubleL2Mu23NoVtx_2Cha_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_v2',
    'HLT_DoubleL2Mu25NoVtx_2Cha_v2',
    'HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v2',
    'HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v2',
    'HLT_DoubleL2Mu50_v2',
    'HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_v1',
    'HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_v1',
    'HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_v4',
    'HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_v1',
    'HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_v1',
    'HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_v8',
    'HLT_DoubleMu20_7_Mass0to30_L1_DM4_v7',
    'HLT_DoubleMu20_7_Mass0to30_Photon23_v8',
    'HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_v5',
    'HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v6',
    'HLT_DoubleMu33NoFiltersNoVtxDisplaced_v1',
    'HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v10',
    'HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v10',
    'HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v10',
    'HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v10',
    'HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v4',
    'HLT_DoubleMu3_TkMu_DsTau3Mu_v4',
    'HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v6',
    'HLT_DoubleMu3_Trk_Tau3mu_v12',
    'HLT_DoubleMu40NoFiltersNoVtxDisplaced_v1',
    'HLT_DoubleMu43NoFiltersNoVtx_v4',
    'HLT_DoubleMu48NoFiltersNoVtx_v4',
    'HLT_DoubleMu4_3_Bs_v14',
    'HLT_DoubleMu4_3_Jpsi_v2',
    'HLT_DoubleMu4_JpsiTrkTrk_Displaced_v7',
    'HLT_DoubleMu4_JpsiTrk_Displaced_v15',
    'HLT_DoubleMu4_Jpsi_Displaced_v7',
    'HLT_DoubleMu4_Jpsi_NoVertexing_v7',
    'HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_v15',
    'HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v8',
    'HLT_DoubleMu4_PsiPrimeTrk_Displaced_v15',
    'HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v4',
    'HLT_DoublePFJets100_CaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets200_CaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets350_CaloBTagDeepCSV_p71_v2',
    'HLT_DoublePFJets40_CaloBTagDeepCSV_p71_v2',
    'HLT_DoublePhoton33_CaloIdL_v6',
    'HLT_DoublePhoton70_v6',
    'HLT_DoublePhoton85_v14',
    'HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_v1',
    'HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_v1',
    'HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_v1',
    'HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_v1',
    'HLT_ECALHT800_v10',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v14',
    'HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v18',
    'HLT_Ele135_CaloIdVT_GsfTrkIdT_v7',
    'HLT_Ele145_CaloIdVT_GsfTrkIdT_v8')+cms.vstring( 'HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_v3',
    'HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_v3',
    'HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v8',
    'HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v16',
    'HLT_Ele15_IsoVVVL_PFHT450_v16',
    'HLT_Ele15_IsoVVVL_PFHT600_v20',
    'HLT_Ele15_WPLoose_Gsf_v3',
    'HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v9',
    'HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v16',
    'HLT_Ele17_WPLoose_Gsf_v3',
    'HLT_Ele200_CaloIdVT_GsfTrkIdT_v8',
    'HLT_Ele20_WPLoose_Gsf_v6',
    'HLT_Ele20_WPTight_Gsf_v6',
    'HLT_Ele20_eta2p1_WPLoose_Gsf_v6',
    'HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v18',
    'HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v18',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v19',
    'HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v19',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_v1',
    'HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_v1',
    'HLT_Ele250_CaloIdVT_GsfTrkIdT_v13',
    'HLT_Ele27_Ele37_CaloIdL_MW_v4',
    'HLT_Ele27_WPTight_Gsf_v16',
    'HLT_Ele28_HighEta_SC20_Mass55_v13',
    'HLT_Ele28_WPTight_Gsf_v1',
    'HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v13',
    'HLT_Ele300_CaloIdVT_GsfTrkIdT_v13',
    'HLT_Ele30_WPTight_Gsf_v1',
    'HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v13',
    'HLT_Ele32_WPTight_Gsf_L1DoubleEG_v9',
    'HLT_Ele32_WPTight_Gsf_v15',
    'HLT_Ele35_WPTight_Gsf_L1EGMT_v5',
    'HLT_Ele35_WPTight_Gsf_v9',
    'HLT_Ele38_WPTight_Gsf_v9',
    'HLT_Ele40_WPTight_Gsf_v9',
    'HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v18',
    'HLT_Ele50_IsoVVVL_PFHT450_v16',
    'HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v16',
    'HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v18',
    'HLT_FullTrack18ForPPRef_v11',
    'HLT_FullTrack24ForPPRef_v11',
    'HLT_FullTrack34ForPPRef_v11',
    'HLT_FullTrack45ForPPRef_v11',
    'HLT_FullTrack53ForPPRef_v11',
    'HLT_HIL1CastorMediumJetForPPRef_v4',
    'HLT_HIL1DoubleMu0ForPPRef_v4',
    'HLT_HIL1DoubleMu10ForPPRef_v4',
    'HLT_HIL1NotBptxOR_v2',
    'HLT_HIL1UnpairedBunchBptxMinus_v2',
    'HLT_HIL1UnpairedBunchBptxPlus_v2',
    'HLT_HIL2DoubleMu0_NHitQForPPRef_v5',
    'HLT_HIL2Mu15ForPPRef_v6',
    'HLT_HIL2Mu20ForPPRef_v6',
    'HLT_HIL2Mu3Eta2p5_AK4CaloJet100Eta2p1ForPPRef_v11',
    'HLT_HIL2Mu3Eta2p5_AK4CaloJet40Eta2p1ForPPRef_v11',
    'HLT_HIL2Mu3Eta2p5_AK4CaloJet60Eta2p1ForPPRef_v11',
    'HLT_HIL2Mu3Eta2p5_AK4CaloJet80Eta2p1ForPPRef_v11',
    'HLT_HIL2Mu3_NHitQ10ForPPRef_v6',
    'HLT_HIL2Mu5_NHitQ10ForPPRef_v6',
    'HLT_HIL2Mu7_NHitQ10ForPPRef_v6',
    'HLT_HIL3DoubleMu0_OS_m2p5to4p5ForPPRef_v6',
    'HLT_HIL3DoubleMu0_OS_m7to14ForPPRef_v6',
    'HLT_HIL3Mu15ForPPRef_v6',
    'HLT_HIL3Mu20ForPPRef_v6',
    'HLT_HIL3Mu3_NHitQ15ForPPRef_v6',
    'HLT_HIL3Mu5_NHitQ15ForPPRef_v6',
    'HLT_HIL3Mu7_NHitQ15ForPPRef_v6',
    'HLT_HIZeroBias_part0_v6',
    'HLT_HIZeroBias_part10_v6',
    'HLT_HIZeroBias_part11_v6',
    'HLT_HIZeroBias_part1_v6',
    'HLT_HIZeroBias_part2_v6',
    'HLT_HIZeroBias_part3_v6',
    'HLT_HIZeroBias_part4_v6',
    'HLT_HIZeroBias_part5_v6',
    'HLT_HIZeroBias_part6_v6',
    'HLT_HIZeroBias_part7_v6',
    'HLT_HIZeroBias_part8_v6',
    'HLT_HIZeroBias_part9_v6',
    'HLT_HT400_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT425_v9',
    'HLT_HT430_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT430_DisplacedDijet60_DisplacedTrack_v13',
    'HLT_HT500_DisplacedDijet40_DisplacedTrack_v13',
    'HLT_HT550_DisplacedDijet60_Inclusive_v13',
    'HLT_HT650_DisplacedDijet60_Inclusive_v13',
    'HLT_HcalIsolatedbunch_v5',
    'HLT_HcalNZS_v13',
    'HLT_HcalPhiSym_v15',
    'HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_v4',
    'HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v1',
    'HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_v1',
    'HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v1',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_v1',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v1',
    'HLT_IsoMu20_v15',
    'HLT_IsoMu24_TwoProngs35_v1',
    'HLT_IsoMu24_eta2p1_v15',
    'HLT_IsoMu24_v13',
    'HLT_IsoMu27_v16',
    'HLT_IsoMu30_v4',
    'HLT_IsoTrackHB_v4',
    'HLT_IsoTrackHE_v4',
    'HLT_L1BptxXOR_v1',
    'HLT_L1DoubleJetANDTotem_v1',
    'HLT_L1DoubleJetC50_v2',
    'HLT_L1DoubleJet_gap_v1',
    'HLT_L1DoubleJet_v1',
    'HLT_L1DoubleMu0_v1',
    'HLT_L1DoubleMu_v1',
    'HLT_L1ETMHadSeeds_v2',
    'HLT_L1EXT_HCAL_LaserMon1_v1',
    'HLT_L1EXT_HCAL_LaserMon4_v1',
    'HLT_L1FatEvents_v2',
    'HLT_L1HFveto_v1',
    'HLT_L1MinimumBiasHF0OR_v4',
    'HLT_L1MinimumBiasHF1AND_v4',
    'HLT_L1MinimumBiasHF1OR_v4',
    'HLT_L1MinimumBiasHF2AND_v4',
    'HLT_L1MinimumBiasHF2ORNoBptxGating_v5',
    'HLT_L1MinimumBiasHF2OR_v4',
    'HLT_L1MinimumBiasHF_OR_part0_v1',
    'HLT_L1MinimumBiasHF_OR_part1_v1',
    'HLT_L1MinimumBiasHF_OR_part2_v1',
    'HLT_L1MinimumBiasHF_OR_part3_v1',
    'HLT_L1MinimumBiasHF_OR_part4_v1',
    'HLT_L1MinimumBiasHF_OR_part5_v1',
    'HLT_L1MinimumBiasHF_OR_part6_v1',
    'HLT_L1MinimumBiasHF_OR_part7_v1',
    'HLT_L1MinimumBiasHF_OR_part8_v1',
    'HLT_L1MinimumBiasHF_OR_part9_v1',
    'HLT_L1MinimumBiasHF_OR_v3',
    'HLT_L1NotBptxOR_v3',
    'HLT_L1RomanPot_part0_v1',
    'HLT_L1RomanPot_part1_v1',
    'HLT_L1RomanPot_part2_v1',
    'HLT_L1RomanPot_part3_v1',
    'HLT_L1SingleEG10_v2',
    'HLT_L1SingleEG15_v2',
    'HLT_L1SingleEG18_v1',
    'HLT_L1SingleJet10erHE_v1',
    'HLT_L1SingleJet12erHE_v1',
    'HLT_L1SingleJet16_v1',
    'HLT_L1SingleJet200_v1',
    'HLT_L1SingleJet20_v1',
    'HLT_L1SingleJet35_v1',
    'HLT_L1SingleJet8erHE_v1',
    'HLT_L1SingleMu18_v3',
    'HLT_L1SingleMu25_v2',
    'HLT_L1SingleMu3_v1',
    'HLT_L1SingleMu5_v1',
    'HLT_L1SingleMu7_v1',
    'HLT_L1SingleMuCosmics_v1',
    'HLT_L1SingleMuOpen_DT_v2',
    'HLT_L1SingleMuOpen_v2',
    'HLT_L1SingleMu_v1',
    'HLT_L1TOTEM1_MinBias_v4',
    'HLT_L1TOTEM2_ZeroBias_v4',
    'HLT_L1TOTEM_3_v1',
    'HLT_L1UnpairedBunchBptxMinus_v2',
    'HLT_L1UnpairedBunchBptxPlus_v2',
    'HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v2',
    'HLT_L1_DoubleJet30_Mass_Min400_Mu10_v1',
    'HLT_L2DoubleMu23_NoVertex_v2',
    'HLT_L2Mu10_NoVertex_NoBPTX3BX_v5',
    'HLT_L2Mu10_NoVertex_NoBPTX_v6',
    'HLT_L2Mu10_v7',
    'HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v5',
    'HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v4',
    'HLT_L2Mu50_v2',
    'HLT_MET105_IsoTrk50_v9',
    'HLT_MET120_IsoTrk50_v9',
    'HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_v11',
    'HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_v12',
    'HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_v12',
    'HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_v12',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_v12',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_v8',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_v8',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_v8',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_v3',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_v12',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_v12',
    'HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_v20',
    'HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_v20',
    'HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_v19',
    'HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_v19',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v15',
    'HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2',
    'HLT_Mu12_DoublePhoton20_v5',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v15',
    'HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v7',
    'HLT_Mu12_v3',
    'HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v8',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v15',
    'HLT_Mu15_IsoVVVL_PFHT450_v15',
    'HLT_Mu15_IsoVVVL_PFHT600_v19',
    'HLT_Mu15_v3',
    'HLT_Mu17_Photon30_IsoCaloId_v6',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v5',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v15',
    'HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v14',
    'HLT_Mu17_TrkIsoVVL_v13',
    'HLT_Mu17_v13',
    'HLT_Mu18_Mu9_DZ_v4',
    'HLT_Mu18_Mu9_SameSign_DZ_v4',
    'HLT_Mu18_Mu9_SameSign_v4',
    'HLT_Mu18_Mu9_v4',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v3',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v3',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v3',
    'HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v3',
    'HLT_Mu19_TrkIsoVVL_v4',
    'HLT_Mu19_v4',
    'HLT_Mu20_Mu10_DZ_v4',
    'HLT_Mu20_Mu10_SameSign_DZ_v4',
    'HLT_Mu20_Mu10_SameSign_v4',
    'HLT_Mu20_Mu10_v4',
    'HLT_Mu20_TkMu0_Phi_v8',
    'HLT_Mu20_v12',
    'HLT_Mu23_Mu12_DZ_v4',
    'HLT_Mu23_Mu12_SameSign_DZ_v4',
    'HLT_Mu23_Mu12_SameSign_v4',
    'HLT_Mu23_Mu12_v4',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v15',
    'HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v7',
    'HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_v10',
    'HLT_Mu25_TkMu0_Onia_v8',
    'HLT_Mu25_TkMu0_Phi_v8',
    'HLT_Mu27_Ele37_CaloIdL_MW_v5',
    'HLT_Mu27_v13',
    'HLT_Mu30_TkMu0_Psi_v1',
    'HLT_Mu30_TkMu0_Upsilon_v1',
    'HLT_Mu37_Ele27_CaloIdL_MW_v5',
    'HLT_Mu37_TkMu27_v5',
    'HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v1',
    'HLT_Mu3_PFJet40_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v2')+cms.vstring( 'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v2',
    'HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v1',
    'HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v5',
    'HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v5',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v15',
    'HLT_Mu50_IsoVVVL_PFHT450_v15',
    'HLT_Mu50_v13',
    'HLT_Mu55_v3',
    'HLT_Mu7p5_L2Mu2_Jpsi_v10',
    'HLT_Mu7p5_L2Mu2_Upsilon_v10',
    'HLT_Mu7p5_Track2_Jpsi_v11',
    'HLT_Mu7p5_Track2_Upsilon_v11',
    'HLT_Mu7p5_Track3p5_Jpsi_v11',
    'HLT_Mu7p5_Track3p5_Upsilon_v11',
    'HLT_Mu7p5_Track7_Jpsi_v11',
    'HLT_Mu7p5_Track7_Upsilon_v11',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v18',
    'HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v18',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v19',
    'HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v19',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v16',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_v1',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v1',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_v1',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v1',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v13',
    'HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v11',
    'HLT_Mu8_TrkIsoVVL_v12',
    'HLT_Mu8_v12',
    'HLT_OldMu100_v3',
    'HLT_PFHT1050_v18',
    'HLT_PFHT180_v17',
    'HLT_PFHT250_v17',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_v3',
    'HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v9',
    'HLT_PFHT350MinPFJet15_v9',
    'HLT_PFHT350_v19',
    'HLT_PFHT370_v17',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_v8',
    'HLT_PFHT400_FivePFJet_100_100_60_30_30_v8',
    'HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_v8',
    'HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_v8',
    'HLT_PFHT400_SixPFJet32_v8',
    'HLT_PFHT430_v17',
    'HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_v7',
    'HLT_PFHT450_SixPFJet36_v7',
    'HLT_PFHT500_PFMET100_PFMHT100_IDTight_v12',
    'HLT_PFHT500_PFMET110_PFMHT110_IDTight_v12',
    'HLT_PFHT510_v17',
    'HLT_PFHT590_v17',
    'HLT_PFHT680_v17',
    'HLT_PFHT700_PFMET85_PFMHT85_IDTight_v12',
    'HLT_PFHT700_PFMET95_PFMHT95_IDTight_v12',
    'HLT_PFHT780_v17',
    'HLT_PFHT800_PFMET75_PFMHT75_IDTight_v12',
    'HLT_PFHT800_PFMET85_PFMHT85_IDTight_v12',
    'HLT_PFHT890_v17',
    'HLT_PFJet140_v19',
    'HLT_PFJet15_v3',
    'HLT_PFJet200_v19',
    'HLT_PFJet25_v3',
    'HLT_PFJet260_v20',
    'HLT_PFJet320_v20',
    'HLT_PFJet400_v20',
    'HLT_PFJet40_v21',
    'HLT_PFJet450_v21',
    'HLT_PFJet500_v21',
    'HLT_PFJet550_v11',
    'HLT_PFJet60_v21',
    'HLT_PFJet80_v20',
    'HLT_PFJetFwd140_v18',
    'HLT_PFJetFwd15_v3',
    'HLT_PFJetFwd200_v18',
    'HLT_PFJetFwd25_v3',
    'HLT_PFJetFwd260_v19',
    'HLT_PFJetFwd320_v19',
    'HLT_PFJetFwd400_v19',
    'HLT_PFJetFwd40_v19',
    'HLT_PFJetFwd450_v19',
    'HLT_PFJetFwd500_v19',
    'HLT_PFJetFwd60_v19',
    'HLT_PFJetFwd80_v18',
    'HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET100_PFMHT100_IDTight_PFHT60_v9',
    'HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET110_PFMHT110_IDTight_v20',
    'HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET120_PFMHT120_IDTight_PFHT60_v9',
    'HLT_PFMET120_PFMHT120_IDTight_v20',
    'HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET130_PFMHT130_IDTight_v20',
    'HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_v8',
    'HLT_PFMET140_PFMHT140_IDTight_v20',
    'HLT_PFMET200_HBHECleaned_v9',
    'HLT_PFMET200_HBHE_BeamHaloCleaned_v9',
    'HLT_PFMET200_NotCleaned_v9',
    'HLT_PFMET250_HBHECleaned_v9',
    'HLT_PFMET300_HBHECleaned_v9',
    'HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_v9',
    'HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_v20',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v9',
    'HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v20',
    'HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v19',
    'HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v19',
    'HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_v9',
    'HLT_PFMETTypeOne110_PFMHT110_IDTight_v12',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_v9',
    'HLT_PFMETTypeOne120_PFMHT120_IDTight_v12',
    'HLT_PFMETTypeOne130_PFMHT130_IDTight_v12',
    'HLT_PFMETTypeOne140_PFMHT140_IDTight_v11',
    'HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_v9',
    'HLT_Photon100EBHE10_v2',
    'HLT_Photon100EB_TightID_TightIso_v2',
    'HLT_Photon100EEHE10_v2',
    'HLT_Photon100EE_TightID_TightIso_v2',
    'HLT_Photon110EB_TightID_TightIso_v2',
    'HLT_Photon120EB_TightID_TightIso_v2',
    'HLT_Photon120_R9Id90_HE10_IsoM_v14',
    'HLT_Photon120_v13',
    'HLT_Photon150_v6',
    'HLT_Photon165_R9Id90_HE10_IsoM_v15',
    'HLT_Photon175_v14',
    'HLT_Photon200_v13',
    'HLT_Photon20_HoverELoose_v10',
    'HLT_Photon20_v2',
    'HLT_Photon22_v2',
    'HLT_Photon25_v4',
    'HLT_Photon300_NoHE_v12',
    'HLT_Photon30_HoverELoose_v10',
    'HLT_Photon33_v5',
    'HLT_Photon35_TwoProngs35_v1',
    'HLT_Photon40_HoverELoose_v10',
    'HLT_Photon50_HoverELoose_v10',
    'HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_v5',
    'HLT_Photon50_R9Id90_HE10_IsoM_v14',
    'HLT_Photon50_v13',
    'HLT_Photon60_HoverELoose_v10',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_v11',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_v5',
    'HLT_Photon60_R9Id90_CaloIdL_IsoL_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_v5',
    'HLT_Photon75_R9Id90_HE10_IsoM_v14',
    'HLT_Photon75_v13',
    'HLT_Photon90_CaloIdL_PFHT700_v16',
    'HLT_Photon90_R9Id90_HE10_IsoM_v14',
    'HLT_Photon90_v13',
    'HLT_Physics_v7',
    'HLT_PixelTracks_Multiplicity110ForPPRef_v5',
    'HLT_PixelTracks_Multiplicity135ForPPRef_v5',
    'HLT_PixelTracks_Multiplicity160ForPPRef_v5',
    'HLT_PixelTracks_Multiplicity60ForPPRef_v5',
    'HLT_PixelTracks_Multiplicity85ForPPRef_v5',
    'HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8',
    'HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_v8',
    'HLT_QuadPFJet103_88_75_15_v5',
    'HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8',
    'HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_v8',
    'HLT_QuadPFJet105_88_76_15_v5',
    'HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8',
    'HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_v8',
    'HLT_QuadPFJet111_90_80_15_v5',
    'HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8',
    'HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_v8',
    'HLT_QuadPFJet98_83_71_15_v5',
    'HLT_Random_TOTEM_part0_v1',
    'HLT_Random_TOTEM_part1_v1',
    'HLT_Random_TOTEM_part2_v1',
    'HLT_Random_TOTEM_part3_v1',
    'HLT_Random_v3',
    'HLT_Rsq0p35_v15',
    'HLT_Rsq0p40_v15',
    'HLT_RsqMR300_Rsq0p09_MR200_4jet_v15',
    'HLT_RsqMR300_Rsq0p09_MR200_v15',
    'HLT_RsqMR320_Rsq0p09_MR200_4jet_v15',
    'HLT_RsqMR320_Rsq0p09_MR200_v15',
    'HLT_SingleJet30_Mu12_SinglePFJet40_v11',
    'HLT_SinglePhoton10_Eta3p1ForPPRef_v8',
    'HLT_SinglePhoton15_Eta3p1ForPPRef_v9',
    'HLT_SinglePhoton20_Eta3p1ForPPRef_v9',
    'HLT_SinglePhoton30_Eta3p1ForPPRef_v9',
    'HLT_SinglePhoton40_Eta3p1ForPPRef_v8',
    'HLT_SinglePhoton50_Eta3p1ForPPRef_v8',
    'HLT_SinglePhoton60_Eta3p1ForPPRef_v8',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1')+cms.vstring( 'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part3_v1',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v4',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v4',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v4',
    'HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v4',
    'HLT_TkMu100_v2',
    'HLT_Trimuon2_Upsilon5_Muon_NoL1Mass_v6',
    'HLT_Trimuon5_3p5_2_Upsilon_Muon_v5',
    'HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v3',
    'HLT_TripleJet110_35_35_Mjj650_PFMET110_v9',
    'HLT_TripleJet110_35_35_Mjj650_PFMET120_v9',
    'HLT_TripleJet110_35_35_Mjj650_PFMET130_v9',
    'HLT_TripleMu_10_5_5_DZ_v10',
    'HLT_TripleMu_12_10_5_v10',
    'HLT_TripleMu_5_3_3_Mass3p8_DCA_v3',
    'HLT_TripleMu_5_3_3_Mass3p8_DZ_v8',
    'HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_v3',
    'HLT_TriplePhoton_20_20_20_CaloIdLV2_v3',
    'HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_v4',
    'HLT_TriplePhoton_30_30_10_CaloIdLV2_v4',
    'HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_v4',
    'HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v6',
    'HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_v12',
    'HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_v13',
    'HLT_UncorrectedJetE30_NoBPTX3BX_v6',
    'HLT_UncorrectedJetE30_NoBPTX_v6',
    'HLT_UncorrectedJetE60_NoBPTX3BX_v6',
    'HLT_UncorrectedJetE70_NoBPTX3BX_v6',
    'HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_v1',
    'HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_v1',
    'HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_v1',
    'HLT_ZeroBias_Alignment_v1',
    'HLT_ZeroBias_FirstBXAfterTrain_v3',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v5',
    'HLT_ZeroBias_FirstCollisionInTrain_v4',
    'HLT_ZeroBias_IsolatedBunches_v5',
    'HLT_ZeroBias_LastCollisionInTrain_v3',
    'HLT_ZeroBias_TOTEM_part0_v1',
    'HLT_ZeroBias_TOTEM_part1_v1',
    'HLT_ZeroBias_TOTEM_part2_v1',
    'HLT_ZeroBias_TOTEM_part3_v1',
    'HLT_ZeroBias_v6') ),
  ParkingBPH1 = cms.vstring( 'HLT_Mu12_IP6_part0_v2',
    'HLT_Mu7_IP4_part0_v2',
    'HLT_Mu8_IP3_part0_v3',
    'HLT_Mu8_IP5_part0_v2',
    'HLT_Mu8_IP6_part0_v2',
    'HLT_Mu9_IP0_part0_v2',
    'HLT_Mu9_IP3_part0_v2',
    'HLT_Mu9_IP4_part0_v2',
    'HLT_Mu9_IP5_part0_v2',
    'HLT_Mu9_IP6_part0_v3' ),
  ParkingBPH2 = cms.vstring( 'HLT_Mu12_IP6_part1_v2',
    'HLT_Mu7_IP4_part1_v2',
    'HLT_Mu8_IP3_part1_v3',
    'HLT_Mu8_IP5_part1_v2',
    'HLT_Mu8_IP6_part1_v2',
    'HLT_Mu9_IP4_part1_v2',
    'HLT_Mu9_IP5_part1_v2',
    'HLT_Mu9_IP6_part1_v3' ),
  ParkingBPH3 = cms.vstring( 'HLT_Mu12_IP6_part2_v2',
    'HLT_Mu7_IP4_part2_v2',
    'HLT_Mu8_IP3_part2_v3',
    'HLT_Mu8_IP5_part2_v2',
    'HLT_Mu8_IP6_part2_v2',
    'HLT_Mu9_IP4_part2_v2',
    'HLT_Mu9_IP5_part2_v2',
    'HLT_Mu9_IP6_part2_v3' ),
  ParkingBPH4 = cms.vstring( 'HLT_Mu12_IP6_part3_v2',
    'HLT_Mu7_IP4_part3_v2',
    'HLT_Mu8_IP3_part3_v3',
    'HLT_Mu8_IP5_part3_v2',
    'HLT_Mu8_IP6_part3_v2',
    'HLT_Mu9_IP4_part3_v2',
    'HLT_Mu9_IP5_part3_v2',
    'HLT_Mu9_IP6_part3_v3' ),
  ParkingBPH5 = cms.vstring( 'HLT_Mu12_IP6_part4_v2',
    'HLT_Mu7_IP4_part4_v2',
    'HLT_Mu8_IP3_part4_v3',
    'HLT_Mu8_IP5_part4_v2',
    'HLT_Mu8_IP6_part4_v2',
    'HLT_Mu9_IP4_part4_v2',
    'HLT_Mu9_IP5_part4_v2',
    'HLT_Mu9_IP6_part4_v3' ),
  ParkingBPHPromptCSCS = cms.vstring( 'HLT_Mu12_IP6_ToCSCS_v1',
    'HLT_Mu7_IP4_ToCSCS_v1',
    'HLT_Mu8_IP3_ToCSCS_v1',
    'HLT_Mu8_IP5_ToCSCS_v1',
    'HLT_Mu8_IP6_ToCSCS_v1',
    'HLT_Mu9_IP4_ToCSCS_v1',
    'HLT_Mu9_IP5_ToCSCS_v1',
    'HLT_Mu9_IP6_ToCSCS_v1' ),
  RPCMonitor = cms.vstring( 'AlCa_HIRPCMuonNormalisation_v1',
    'AlCa_RPCMuonNormalisationForHI_v1',
    'AlCa_RPCMuonNormalisation_v13' ),
  RandomTOTEM1 = cms.vstring( 'HLT_Random_TOTEM_part0_v1' ),
  RandomTOTEM2 = cms.vstring( 'HLT_Random_TOTEM_part1_v1' ),
  RandomTOTEM3 = cms.vstring( 'HLT_Random_TOTEM_part2_v1' ),
  RandomTOTEM4 = cms.vstring( 'HLT_Random_TOTEM_part3_v1' ),
  ScoutingCaloCommissioning = cms.vstring( 'DST_CaloJet40_CaloBTagScouting_v14',
    'DST_L1HTT_CaloBTagScouting_v14',
    'DST_ZeroBias_CaloScouting_PFScouting_v14' ),
  ScoutingCaloHT = cms.vstring( 'DST_HT250_CaloBTagScouting_v10',
    'DST_HT250_CaloScouting_v10' ),
  ScoutingCaloMuon = cms.vstring( 'DST_DoubleMu1_noVtx_CaloScouting_v2',
    'DST_DoubleMu3_noVtx_CaloScouting_Monitoring_v6',
    'DST_DoubleMu3_noVtx_CaloScouting_v6' ),
  ScoutingMonitor = cms.vstring( 'DST_CaloJet40_BTagScouting_v15',
    'DST_CaloJet40_CaloBTagScouting_v14',
    'DST_CaloJet40_CaloScouting_PFScouting_v15',
    'DST_DoubleMu1_noVtx_CaloScouting_v2',
    'DST_DoubleMu3_noVtx_CaloScouting_Monitoring_v6',
    'DST_DoubleMu3_noVtx_CaloScouting_v6',
    'DST_DoubleMu3_noVtx_Mass10_PFScouting_v3',
    'DST_HT250_CaloBTagScouting_v10',
    'DST_HT250_CaloScouting_v10',
    'DST_HT410_BTagScouting_v16',
    'DST_HT410_PFScouting_v16',
    'DST_L1DoubleMu_BTagScouting_v16',
    'DST_L1DoubleMu_CaloScouting_PFScouting_v15',
    'DST_L1HTT_BTagScouting_v15',
    'DST_L1HTT_CaloBTagScouting_v14',
    'DST_L1HTT_CaloScouting_PFScouting_v15',
    'DST_ZeroBias_BTagScouting_v15',
    'DST_ZeroBias_CaloScouting_PFScouting_v14',
    'HLT_Ele115_CaloIdVT_GsfTrkIdT_v14',
    'HLT_Ele35_WPTight_Gsf_v9',
    'HLT_IsoMu27_v16',
    'HLT_Mu50_v13',
    'HLT_PFHT1050_v18',
    'HLT_Photon200_v13' ),
  ScoutingPFCommissioning = cms.vstring( 'DST_CaloJet40_BTagScouting_v15',
    'DST_CaloJet40_CaloScouting_PFScouting_v15',
    'DST_L1DoubleMu_BTagScouting_v16',
    'DST_L1DoubleMu_CaloScouting_PFScouting_v15',
    'DST_L1HTT_BTagScouting_v15',
    'DST_L1HTT_CaloScouting_PFScouting_v15',
    'DST_ZeroBias_BTagScouting_v15',
    'DST_ZeroBias_CaloScouting_PFScouting_v14' ),
  ScoutingPFHT = cms.vstring( 'DST_HT410_BTagScouting_v16',
    'DST_HT410_PFScouting_v16' ),
  ScoutingPFMuon = cms.vstring( 'DST_DoubleMu3_noVtx_Mass10_PFScouting_v3' ),
  SingleMuHighPt = cms.vstring( 'HLT_HIL2Mu15ForPPRef_v6',
    'HLT_HIL2Mu20ForPPRef_v6',
    'HLT_HIL2Mu5_NHitQ10ForPPRef_v6',
    'HLT_HIL2Mu7_NHitQ10ForPPRef_v6',
    'HLT_HIL3Mu15ForPPRef_v6',
    'HLT_HIL3Mu20ForPPRef_v6',
    'HLT_HIL3Mu5_NHitQ15ForPPRef_v6',
    'HLT_HIL3Mu7_NHitQ15ForPPRef_v6' ),
  SingleMuLowPt = cms.vstring( 'HLT_HIL2Mu3_NHitQ10ForPPRef_v6',
    'HLT_HIL3Mu3_NHitQ15ForPPRef_v6' ),
  SingleMuon = cms.vstring( 'HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_v4',
    'HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v1',
    'HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_v1',
    'HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v1',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_v1',
    'HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v1',
    'HLT_IsoMu20_v15',
    'HLT_IsoMu24_TwoProngs35_v1',
    'HLT_IsoMu24_eta2p1_v15',
    'HLT_IsoMu24_v13',
    'HLT_IsoMu27_v16',
    'HLT_IsoMu30_v4',
    'HLT_L1SingleMu18_v3',
    'HLT_L1SingleMu25_v2',
    'HLT_L1_DoubleJet30_Mass_Min400_Mu10_v1',
    'HLT_L2Mu10_v7',
    'HLT_L2Mu50_v2',
    'HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v15',
    'HLT_Mu12_v3',
    'HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v8',
    'HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v15',
    'HLT_Mu15_IsoVVVL_PFHT450_v15',
    'HLT_Mu15_IsoVVVL_PFHT600_v19',
    'HLT_Mu15_v3',
    'HLT_Mu20_v12',
    'HLT_Mu27_v13',
    'HLT_Mu3_PFJet40_v16',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v2',
    'HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v2',
    'HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v15',
    'HLT_Mu50_IsoVVVL_PFHT450_v15',
    'HLT_Mu50_v13',
    'HLT_Mu55_v3',
    'HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v16',
    'HLT_OldMu100_v3',
    'HLT_TkMu100_v2' ),
  SingleTrack = cms.vstring(  ),
  TOTEM1part0 = cms.vstring( 'HLT_L1RomanPot_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part0_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part0_v1' ),
  TOTEM1part1 = cms.vstring( 'HLT_L1RomanPot_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part1_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part1_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part1_v1' ),
  TOTEM1part2 = cms.vstring( 'HLT_L1RomanPot_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part2_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part2_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part2_v1' ),
  TOTEM1part3 = cms.vstring( 'HLT_L1RomanPot_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part3_v1',
    'HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part3_v1',
    'HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part3_v1' ),
  TOTEM2part0 = cms.vstring( 'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part0_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part0_v1' ),
  TOTEM2part1 = cms.vstring( 'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part1_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part1_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part1_v1' ),
  TOTEM2part2 = cms.vstring( 'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part2_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part2_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part2_v1' ),
  TOTEM2part3 = cms.vstring( 'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part3_v1',
    'HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part3_v1',
    'HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part3_v1' ),
  TOTEM3 = cms.vstring( 'HLT_L1TOTEM_3_v1' ),
  TOTEM4part0 = cms.vstring( 'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part0_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part0_v1' ),
  TOTEM4part1 = cms.vstring( 'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part1_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part1_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part1_v1' ),
  TOTEM4part2 = cms.vstring( 'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part2_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part2_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part2_v1' ),
  TOTEM4part3 = cms.vstring( 'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part3_v1',
    'HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part3_v1',
    'HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part3_v1' ),
  Tau = cms.vstring( 'HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_v1',
    'HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_v1',
    'HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_v4',
    'HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_v1',
    'HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_v1',
    'HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_v1',
    'HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_v1',
    'HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_v1',
    'HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_v1',
    'HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_v11',
    'HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_v12',
    'HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_v12',
    'HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_v12',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_v12',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_v8',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_v8',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_v8',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_v3',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_v12',
    'HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_v12',
    'HLT_Photon35_TwoProngs35_v1',
    'HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_v1',
    'HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_v1',
    'HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_v1' ),
  TestEnablesEcalHcal = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v5' ),
  TestEnablesEcalHcalDQM = cms.vstring( 'HLT_EcalCalibration_v4',
    'HLT_HcalCalibration_v5' ),
  ZeroBias = cms.vstring( 'HLT_Random_v3',
    'HLT_ZeroBias_Alignment_v1',
    'HLT_ZeroBias_FirstBXAfterTrain_v3',
    'HLT_ZeroBias_FirstCollisionAfterAbortGap_v5',
    'HLT_ZeroBias_FirstCollisionInTrain_v4',
    'HLT_ZeroBias_IsolatedBunches_v5',
    'HLT_ZeroBias_LastCollisionInTrain_v3',
    'HLT_ZeroBias_v6' ),
  ZeroBiasTOTEM = cms.vstring( 'HLT_L1TOTEM2_ZeroBias_v4' ),
  ZeroBiasTOTEM1 = cms.vstring( 'HLT_ZeroBias_TOTEM_part0_v1' ),
  ZeroBiasTOTEM2 = cms.vstring( 'HLT_ZeroBias_TOTEM_part1_v1' ),
  ZeroBiasTOTEM3 = cms.vstring( 'HLT_ZeroBias_TOTEM_part2_v1' ),
  ZeroBiasTOTEM4 = cms.vstring( 'HLT_ZeroBias_TOTEM_part3_v1' ),
  ppForward = cms.vstring( 'HLT_HIL1CastorMediumJetForPPRef_v4' )
)

CSCChannelMapperESSource = cms.ESSource( "EmptyESSource",
  iovIsRunNotTime = cms.bool( True ),
  recordName = cms.string( "CSCChannelMapperRecord" ),
  firstValid = cms.vuint32( 1 )
)
CSCINdexerESSource = cms.ESSource( "EmptyESSource",
  iovIsRunNotTime = cms.bool( True ),
  recordName = cms.string( "CSCIndexerRecord" ),
  firstValid = cms.vuint32( 1 )
)
GlobalParametersRcdSource = cms.ESSource( "EmptyESSource",
  iovIsRunNotTime = cms.bool( True ),
  recordName = cms.string( "L1TGlobalParametersRcd" ),
  firstValid = cms.vuint32( 1 )
)
GlobalTag = cms.ESSource( "PoolDBESSource",
  globaltag = cms.string( "101X_dataRun2_HLT_v7" ),
  RefreshEachRun = cms.untracked.bool( False ),
  snapshotTime = cms.string( "" ),
  toGet = cms.VPSet( 
  ),
  pfnPostfix = cms.untracked.string( "None" ),
  DBParameters = cms.PSet( 
    connectionRetrialTimeOut = cms.untracked.int32( 60 ),
    idleConnectionCleanupPeriod = cms.untracked.int32( 10 ),
    enableReadOnlySessionOnUpdateConnection = cms.untracked.bool( False ),
    enablePoolAutomaticCleanUp = cms.untracked.bool( False ),
    messageLevel = cms.untracked.int32( 0 ),
    authenticationPath = cms.untracked.string( "." ),
    connectionRetrialPeriod = cms.untracked.int32( 10 ),
    connectionTimeOut = cms.untracked.int32( 0 ),
    enableConnectionSharing = cms.untracked.bool( True )
  ),
  RefreshAlways = cms.untracked.bool( False ),
  connect = cms.string( "frontier://FrontierProd/CMS_CONDITIONS" ),
  ReconnectEachRun = cms.untracked.bool( False ),
  RefreshOpenIOVs = cms.untracked.bool( False ),
  DumpStat = cms.untracked.bool( False )
)
HcalTimeSlewEP = cms.ESSource( "HcalTimeSlewEP",
  timeSlewParametersM3 = cms.VPSet( 
    cms.PSet(  tspar2 = cms.double( 0.0 ),
      tspar0 = cms.double( 12.2999 ),
      tspar1 = cms.double( -2.19142 ),
      tspar1_siPM = cms.double( 0.0 ),
      cap = cms.double( 6.0 ),
      tspar0_siPM = cms.double( 0.0 ),
      tspar2_siPM = cms.double( 0.0 )
    ),
    cms.PSet(  tspar2 = cms.double( 32.0 ),
      tspar0 = cms.double( 15.5 ),
      tspar1 = cms.double( -3.2 ),
      tspar1_siPM = cms.double( 0.0 ),
      cap = cms.double( 6.0 ),
      tspar0_siPM = cms.double( 0.0 ),
      tspar2_siPM = cms.double( 0.0 )
    ),
    cms.PSet(  tspar2 = cms.double( 0.0 ),
      tspar0 = cms.double( 12.2999 ),
      tspar1 = cms.double( -2.19142 ),
      tspar1_siPM = cms.double( 0.0 ),
      cap = cms.double( 6.0 ),
      tspar0_siPM = cms.double( 0.0 ),
      tspar2_siPM = cms.double( 0.0 )
    ),
    cms.PSet(  tspar2 = cms.double( 0.0 ),
      tspar0 = cms.double( 12.2999 ),
      tspar1 = cms.double( -2.19142 ),
      tspar1_siPM = cms.double( 0.0 ),
      cap = cms.double( 6.0 ),
      tspar0_siPM = cms.double( 0.0 ),
      tspar2_siPM = cms.double( 0.0 )
    )
  ),
  timeSlewParametersM2 = cms.VPSet( 
    cms.PSet(  slope = cms.double( -3.178648 ),
      tmax = cms.double( 16.0 ),
      tzero = cms.double( 23.960177 )
    ),
    cms.PSet(  slope = cms.double( -1.5610227 ),
      tmax = cms.double( 10.0 ),
      tzero = cms.double( 11.977461 )
    ),
    cms.PSet(  slope = cms.double( -1.075824 ),
      tmax = cms.double( 6.25 ),
      tzero = cms.double( 9.109694 )
    )
  ),
  appendToDataLabel = cms.string( "HBHE" )
)
HepPDTESSource = cms.ESSource( "HepPDTESSource",
  pdtFileName = cms.FileInPath( "SimGeneral/HepPDTESSource/data/pythiaparticle.tbl" )
)
eegeom = cms.ESSource( "EmptyESSource",
  iovIsRunNotTime = cms.bool( True ),
  recordName = cms.string( "EcalMappingRcd" ),
  firstValid = cms.vuint32( 1 )
)
es_hardcode = cms.ESSource( "HcalHardcodeCalibrations",
  fromDDD = cms.untracked.bool( False ),
  toGet = cms.untracked.vstring( 'GainWidths' )
)
hltESSBTagRecord = cms.ESSource( "EmptyESSource",
  iovIsRunNotTime = cms.bool( True ),
  recordName = cms.string( "JetTagComputerRecord" ),
  firstValid = cms.vuint32( 1 )
)
hltESSEcalSeverityLevel = cms.ESSource( "EmptyESSource",
  iovIsRunNotTime = cms.bool( True ),
  recordName = cms.string( "EcalSeverityLevelAlgoRcd" ),
  firstValid = cms.vuint32( 1 )
)
hltESSHcalSeverityLevel = cms.ESSource( "EmptyESSource",
  iovIsRunNotTime = cms.bool( True ),
  recordName = cms.string( "HcalSeverityLevelComputerRcd" ),
  firstValid = cms.vuint32( 1 )
)

hltBoostedDoubleSecondaryVertexAK8Computer = cms.ESProducer( "CandidateBoostedDoubleSecondaryVertexESProducer",
  weightFile = cms.FileInPath( "RecoBTag/SecondaryVertex/data/BoostedDoubleSV_AK8_BDT_v4.weights.xml.gz" ),
  useCondDB = cms.bool( False ),
  useGBRForest = cms.bool( True ),
  useAdaBoost = cms.bool( False )
)
AnyDirectionAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "AnyDirectionAnalyticalPropagator" ),
  PropagationDirection = cms.string( "anyDirection" )
)
CSCChannelMapperESProducer = cms.ESProducer( "CSCChannelMapperESProducer",
  AlgoName = cms.string( "CSCChannelMapperPostls1" )
)
CSCGeometryESModule = cms.ESProducer( "CSCGeometryESModule",
  useRealWireGeometry = cms.bool( True ),
  appendToDataLabel = cms.string( "" ),
  alignmentsLabel = cms.string( "" ),
  useGangedStripsInME1a = cms.bool( False ),
  debugV = cms.untracked.bool( False ),
  useOnlyWiresInME1a = cms.bool( False ),
  useDDD = cms.bool( False ),
  useCentreTIOffsets = cms.bool( False ),
  applyAlignment = cms.bool( True )
)
CSCIndexerESProducer = cms.ESProducer( "CSCIndexerESProducer",
  AlgoName = cms.string( "CSCIndexerPostls1" )
)
CSCObjectMapESProducer = cms.ESProducer( "CSCObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
CaloGeometryBuilder = cms.ESProducer( "CaloGeometryBuilder",
  SelectedCalos = cms.vstring( 'HCAL',
    'ZDC',
    'EcalBarrel',
    'EcalEndcap',
    'EcalPreshower',
    'TOWER' )
)
CaloTopologyBuilder = cms.ESProducer( "CaloTopologyBuilder" )
CaloTowerConstituentsMapBuilder = cms.ESProducer( "CaloTowerConstituentsMapBuilder",
  appendToDataLabel = cms.string( "" ),
  MapAuto = cms.untracked.bool( False ),
  SkipHE = cms.untracked.bool( False ),
  MapFile = cms.untracked.string( "Geometry/CaloTopology/data/CaloTowerEEGeometric.map.gz" )
)
CaloTowerGeometryFromDBEP = cms.ESProducer( "CaloTowerGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
CaloTowerTopologyEP = cms.ESProducer( "CaloTowerTopologyEP",
  appendToDataLabel = cms.string( "" )
)
CastorDbProducer = cms.ESProducer( "CastorDbProducer",
  appendToDataLabel = cms.string( "" )
)
ClusterShapeHitFilterESProducer = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  ComponentName = cms.string( "ClusterShapeHitFilter" ),
  PixelShapeFileL1 = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  PixelShapeFile = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" )
)
DTGeometryESModule = cms.ESProducer( "DTGeometryESModule",
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  alignmentsLabel = cms.string( "" )
)
DTObjectMapESProducer = cms.ESProducer( "DTObjectMapESProducer",
  appendToDataLabel = cms.string( "" )
)
EcalBarrelGeometryFromDBEP = cms.ESProducer( "EcalBarrelGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
EcalElectronicsMappingBuilder = cms.ESProducer( "EcalElectronicsMappingBuilder" )
EcalEndcapGeometryFromDBEP = cms.ESProducer( "EcalEndcapGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
EcalLaserCorrectionService = cms.ESProducer( "EcalLaserCorrectionService" )
EcalPreshowerGeometryFromDBEP = cms.ESProducer( "EcalPreshowerGeometryFromDBEP",
  applyAlignment = cms.bool( True )
)
GlobalParameters = cms.ESProducer( "StableParametersTrivialProducer",
  NumberL1JetCounts = cms.uint32( 12 ),
  NumberL1NoIsoEG = cms.uint32( 4 ),
  NumberL1CenJet = cms.uint32( 4 ),
  NumberL1Tau = cms.uint32( 12 ),
  NumberConditionChips = cms.uint32( 1 ),
  NumberL1EGamma = cms.uint32( 12 ),
  TotalBxInEvent = cms.int32( 5 ),
  NumberL1Mu = cms.uint32( 4 ),
  PinsOnConditionChip = cms.uint32( 512 ),
  WordLength = cms.int32( 64 ),
  PinsOnChip = cms.uint32( 512 ),
  OrderOfChip = cms.vint32( 1 ),
  IfMuEtaNumberBits = cms.uint32( 6 ),
  OrderConditionChip = cms.vint32( 1 ),
  appendToDataLabel = cms.string( "" ),
  NumberL1TauJet = cms.uint32( 4 ),
  NumberL1Jet = cms.uint32( 12 ),
  NumberPhysTriggers = cms.uint32( 512 ),
  NumberL1Muon = cms.uint32( 8 ),
  UnitLength = cms.int32( 8 ),
  NumberL1IsoEG = cms.uint32( 4 ),
  NumberTechnicalTriggers = cms.uint32( 64 ),
  NumberL1ForJet = cms.uint32( 4 ),
  IfCaloEtaNumberBits = cms.uint32( 4 ),
  NumberPsbBoards = cms.int32( 7 ),
  NumberChips = cms.uint32( 1 ),
  NumberPhysTriggersExtended = cms.uint32( 64 )
)
HcalGeometryFromDBEP = cms.ESProducer( "HcalGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
HcalTopologyIdealEP = cms.ESProducer( "HcalTopologyIdealEP",
  MergePosition = cms.untracked.bool( True ),
  Exclude = cms.untracked.string( "" ),
  appendToDataLabel = cms.string( "" )
)
MaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  ComponentName = cms.string( "PropagatorWithMaterial" ),
  Mass = cms.double( 0.105 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
MaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  ComponentName = cms.string( "PropagatorWithMaterialForHI" ),
  Mass = cms.double( 0.139 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
MaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMf" ),
  Mass = cms.double( 0.105 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
OppositeMaterialPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  ComponentName = cms.string( "PropagatorWithMaterialOpposite" ),
  Mass = cms.double( 0.105 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
OppositeMaterialPropagatorForHI = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  ComponentName = cms.string( "PropagatorWithMaterialOppositeForHI" ),
  Mass = cms.double( 0.139 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
OppositeMaterialPropagatorParabolicMF = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  ComponentName = cms.string( "PropagatorWithMaterialParabolicMfOpposite" ),
  Mass = cms.double( 0.105 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
OppositePropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStepOpposite" ),
  Mass = cms.double( 0.105 ),
  ptMin = cms.double( 0.1 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
ParametrizedMagneticFieldProducer = cms.ESProducer( "AutoParametrizedMagneticFieldProducer",
  version = cms.string( "Parabolic" ),
  valueOverride = cms.int32( -1 ),
  label = cms.untracked.string( "ParabolicMf" )
)
PropagatorWithMaterialForLoopers = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  ComponentName = cms.string( "PropagatorWithMaterialForLoopers" ),
  Mass = cms.double( 0.1396 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 4.0 ),
  useRungeKutta = cms.bool( False )
)
PropagatorWithMaterialForMixedStep = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "ParabolicMf" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  ComponentName = cms.string( "PropagatorWithMaterialForMixedStep" ),
  Mass = cms.double( 0.105 ),
  ptMin = cms.double( 0.1 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
RPCGeometryESModule = cms.ESProducer( "RPCGeometryESModule",
  useDDD = cms.untracked.bool( False ),
  compatibiltyWith11 = cms.untracked.bool( True )
)
SiStripGainESProducer = cms.ESProducer( "SiStripGainESProducer",
  printDebug = cms.untracked.bool( False ),
  appendToDataLabel = cms.string( "" ),
  APVGain = cms.VPSet( 
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGainRcd" )
    ),
    cms.PSet(  NormalizationFactor = cms.untracked.double( 1.0 ),
      Label = cms.untracked.string( "" ),
      Record = cms.string( "SiStripApvGain2Rcd" )
    )
  ),
  AutomaticNormalization = cms.bool( False )
)
SiStripQualityESProducer = cms.ESProducer( "SiStripQualityESProducer",
  appendToDataLabel = cms.string( "" ),
  PrintDebugOutput = cms.bool( False ),
  ThresholdForReducedGranularity = cms.double( 0.3 ),
  UseEmptyRunInfo = cms.bool( False ),
  ReduceGranularity = cms.bool( False ),
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiStripDetVOffRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripDetCablingRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadChannelRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadFiberRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiStripBadModuleRcd" ),
      tag = cms.string( "" )
    )
  )
)
SiStripRecHitMatcherESProducer = cms.ESProducer( "SiStripRecHitMatcherESProducer",
  PreFilter = cms.bool( False ),
  ComponentName = cms.string( "StandardMatcher" ),
  NSigmaInside = cms.double( 3.0 )
)
SiStripRegionConnectivity = cms.ESProducer( "SiStripRegionConnectivity",
  EtaDivisions = cms.untracked.uint32( 20 ),
  PhiDivisions = cms.untracked.uint32( 20 ),
  EtaMax = cms.untracked.double( 2.5 )
)
SimpleSecondaryVertex3TrkComputer = cms.ESProducer( "SimpleSecondaryVertexESProducer",
  minTracks = cms.uint32( 3 ),
  minVertices = cms.uint32( 1 ),
  use3d = cms.bool( True ),
  unBoost = cms.bool( False ),
  useSignificance = cms.bool( True )
)
SteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  NoErrorPropagation = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  returnTangentPlane = cms.bool( True ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  ComponentName = cms.string( "SteppingHelixPropagatorAny" )
)
TrackerDigiGeometryESModule = cms.ESProducer( "TrackerDigiGeometryESModule",
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False ),
  applyAlignment = cms.bool( True ),
  alignmentsLabel = cms.string( "" )
)
TrackerGeometricDetESModule = cms.ESProducer( "TrackerGeometricDetESModule",
  appendToDataLabel = cms.string( "" ),
  fromDDD = cms.bool( False )
)
TransientTrackBuilderESProducer = cms.ESProducer( "TransientTrackBuilderESProducer",
  ComponentName = cms.string( "TransientTrackBuilder" )
)
VolumeBasedMagneticFieldESProducer = cms.ESProducer( "VolumeBasedMagneticFieldESProducerFromDB",
  debugBuilder = cms.untracked.bool( False ),
  valueOverride = cms.int32( -1 ),
  label = cms.untracked.string( "" )
)
ZdcGeometryFromDBEP = cms.ESProducer( "ZdcGeometryFromDBEP",
  applyAlignment = cms.bool( False )
)
caloDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "CaloDetIdAssociator" ),
  hcalRegion = cms.int32( 2 ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  includeBadChambers = cms.bool( False ),
  includeME0 = cms.bool( False ),
  includeGEM = cms.bool( False )
)
cosmicsNavigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "CosmicNavigationSchool" ),
  SimpleMagneticField = cms.string( "" )
)
ecalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "EcalDetIdAssociator" ),
  hcalRegion = cms.int32( 2 ),
  etaBinSize = cms.double( 0.02 ),
  nEta = cms.int32( 300 ),
  nPhi = cms.int32( 360 ),
  includeBadChambers = cms.bool( False ),
  includeME0 = cms.bool( False ),
  includeGEM = cms.bool( False )
)
ecalSeverityLevel = cms.ESProducer( "EcalSeverityLevelESProducer",
  dbstatusMask = cms.PSet( 
    kBad = cms.vstring( 'kNonRespondingIsolated',
      'kDeadVFE',
      'kDeadFE',
      'kNoDataNoTP' ),
    kGood = cms.vstring( 'kOk' ),
    kRecovered = cms.vstring(  ),
    kProblematic = cms.vstring( 'kDAC',
      'kNoLaser',
      'kNoisy',
      'kNNoisy',
      'kNNNoisy',
      'kNNNNoisy',
      'kNNNNNoisy',
      'kFixedG6',
      'kFixedG1',
      'kFixedG0' ),
    kWeird = cms.vstring(  ),
    kTime = cms.vstring(  )
  ),
  timeThresh = cms.double( 2.0 ),
  flagMask = cms.PSet( 
    kBad = cms.vstring( 'kFaultyHardware',
      'kDead',
      'kKilled' ),
    kGood = cms.vstring( 'kGood' ),
    kRecovered = cms.vstring( 'kLeadingEdgeRecovered',
      'kTowerRecovered' ),
    kProblematic = cms.vstring( 'kPoorReco',
      'kPoorCalib',
      'kNoisy',
      'kSaturated' ),
    kWeird = cms.vstring( 'kWeird',
      'kDiWeird' ),
    kTime = cms.vstring( 'kOutOfTime' )
  )
)
hcalDDDRecConstants = cms.ESProducer( "HcalDDDRecConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
hcalDDDSimConstants = cms.ESProducer( "HcalDDDSimConstantsESModule",
  appendToDataLabel = cms.string( "" )
)
hcalDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HcalDetIdAssociator" ),
  hcalRegion = cms.int32( 2 ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 70 ),
  nPhi = cms.int32( 72 ),
  includeBadChambers = cms.bool( False ),
  includeME0 = cms.bool( False ),
  includeGEM = cms.bool( False )
)
hcalRecAlgos = cms.ESProducer( "HcalRecAlgoESProducer",
  phase = cms.uint32( 1 ),
  RecoveredRecHitBits = cms.vstring(  ),
  appendToDataLabel = cms.string( "" ),
  SeverityLevels = cms.VPSet( 
    cms.PSet(  ChannelStatus = cms.vstring(  ),
      RecHitFlags = cms.vstring( 'TimingFromTDC' ),
      Level = cms.int32( 0 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellCaloTowerProb' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 1 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellExcludeFromHBHENoiseSummary' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 5 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring(  ),
      RecHitFlags = cms.vstring( 'HBHEHpdHitMultiplicity',
        'HBHEIsolatedNoise',
        'HBHEFlatNoise',
        'HBHESpikeNoise',
        'HBHETS4TS5Noise',
        'HBHENegativeNoise',
        'HBHEPulseFitBit',
        'HBHEOOTPU' ),
      Level = cms.int32( 8 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring(  ),
      RecHitFlags = cms.vstring( 'HFLongShort',
        'HFS8S1Ratio',
        'HFPET',
        'HFSignalAsymmetry' ),
      Level = cms.int32( 11 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellHot' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 15 )
    ),
    cms.PSet(  ChannelStatus = cms.vstring( 'HcalCellOff',
  'HcalCellDead' ),
      RecHitFlags = cms.vstring(  ),
      Level = cms.int32( 20 )
    )
  ),
  DropChannelStatusBits = cms.vstring( 'HcalCellMask',
    'HcalCellOff',
    'HcalCellDead' )
)
hcal_db_producer = cms.ESProducer( "HcalDbProducer" )
hltCombinedSecondaryVertex = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" ),
  useTrackWeights = cms.bool( True ),
  useCategories = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( -99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  calibrationRecords = cms.vstring( 'CombinedSVRecoVertex',
    'CombinedSVPseudoVertex',
    'CombinedSVNoVertex' ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  vertexFlip = cms.bool( False ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackPseudoSelection = cms.PSet( 
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    ptMin = cms.double( 0.0 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    jetDeltaRMax = cms.double( 0.3 ),
    normChi2Max = cms.double( 99999.9 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip2dSigMin = cms.double( 2.0 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 )
  ),
  trackSort = cms.string( "sip2dSig" ),
  SoftLeptonFlip = cms.bool( False ),
  trackFlip = cms.bool( False )
)
hltCombinedSecondaryVertexV2 = cms.ESProducer( "CombinedSecondaryVertexESProducer",
  recordLabel = cms.string( "HLT" ),
  categoryVariableName = cms.string( "vertexCategory" ),
  useTrackWeights = cms.bool( True ),
  useCategories = cms.bool( True ),
  pseudoMultiplicityMin = cms.uint32( 2 ),
  correctVertexMass = cms.bool( True ),
  trackSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( -99999.9 )
  ),
  calibrationRecords = cms.vstring( 'CombinedSVIVFV2RecoVertex',
    'CombinedSVIVFV2PseudoVertex',
    'CombinedSVIVFV2NoVertex' ),
  trackPairV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.03 ) ),
  charmCut = cms.double( 1.5 ),
  vertexFlip = cms.bool( False ),
  minimumTrackWeight = cms.double( 0.5 ),
  pseudoVertexV0Filter = cms.PSet(  k0sMassWindow = cms.double( 0.05 ) ),
  trackMultiplicityMin = cms.uint32( 3 ),
  trackPseudoSelection = cms.PSet( 
    max_pT_dRcut = cms.double( 0.1 ),
    b_dR = cms.double( 0.6263 ),
    min_pT = cms.double( 120.0 ),
    b_pT = cms.double( 0.3684 ),
    ptMin = cms.double( 0.0 ),
    max_pT_trackPTcut = cms.double( 3.0 ),
    max_pT = cms.double( 500.0 ),
    useVariableJTA = cms.bool( False ),
    maxDecayLen = cms.double( 5.0 ),
    qualityClass = cms.string( "any" ),
    normChi2Max = cms.double( 99999.9 ),
    sip2dValMin = cms.double( -99999.9 ),
    sip3dValMin = cms.double( -99999.9 ),
    a_dR = cms.double( -0.001053 ),
    maxDistToAxis = cms.double( 0.07 ),
    totalHitsMin = cms.uint32( 0 ),
    a_pT = cms.double( 0.005263 ),
    sip2dSigMax = cms.double( 99999.9 ),
    sip2dValMax = cms.double( 99999.9 ),
    sip3dSigMax = cms.double( 99999.9 ),
    sip3dValMax = cms.double( 99999.9 ),
    min_pT_dRcut = cms.double( 0.5 ),
    jetDeltaRMax = cms.double( 0.3 ),
    pixelHitsMin = cms.uint32( 0 ),
    sip3dSigMin = cms.double( -99999.9 ),
    sip2dSigMin = cms.double( 2.0 )
  ),
  trackSort = cms.string( "sip2dSig" ),
  SoftLeptonFlip = cms.bool( False ),
  trackFlip = cms.bool( False )
)
hltDisplacedDijethltESPPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  maxImpactParameterSig = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  minimumImpactParameter = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  impactParameterType = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  deltaRmin = cms.double( 0.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  nthTrack = cms.int32( -1 )
)
hltDisplacedDijethltESPTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  b_pT = cms.double( 0.3684 ),
  deltaR = cms.double( -1.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  a_dR = cms.double( -0.001053 ),
  min_pT = cms.double( 120.0 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  max_pT = cms.double( 500.0 ),
  impactParameterType = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  max_pT_dRcut = cms.double( 0.1 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  useSignedImpactParameterSig = cms.bool( False )
)
hltESPAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPAnalyticalPropagator" ),
  PropagationDirection = cms.string( "alongMomentum" )
)
hltESPBwdAnalyticalPropagator = cms.ESProducer( "AnalyticalPropagatorESProducer",
  MaxDPhi = cms.double( 1.6 ),
  ComponentName = cms.string( "hltESPBwdAnalyticalPropagator" ),
  PropagationDirection = cms.string( "oppositeToMomentum" )
)
hltESPBwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  ComponentName = cms.string( "hltESPBwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
hltESPChi2ChargeLooseMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPChi2ChargeLooseMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 16.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 16.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPChi2ChargeMeasurementEstimator2000 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  MinimalTolerance = cms.double( 10.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator2000" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MaxChi2 = cms.double( 2000.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutNone" ) ),
  MinimalTolerance = cms.double( 10.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MaxChi2 = cms.double( 30.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 9.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPChi2ChargeMeasurementEstimator9ForHI = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutForHI" ) ),
  MinimalTolerance = cms.double( 10.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  ComponentName = cms.string( "hltESPChi2ChargeMeasurementEstimator9ForHI" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MaxChi2 = cms.double( 9.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPChi2ChargeTightMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPChi2ChargeTightMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 16.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPChi2MeasurementEstimator100 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator100" ),
  nSigma = cms.double( 4.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 40.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 )
)
hltESPChi2MeasurementEstimator16 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  MinimalTolerance = cms.double( 10.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator16" ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MaxChi2 = cms.double( 16.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPChi2MeasurementEstimator30 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  MinimalTolerance = cms.double( 10.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator30" ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MaxChi2 = cms.double( 30.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPChi2MeasurementEstimator9 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  MinimalTolerance = cms.double( 10.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  ComponentName = cms.string( "hltESPChi2MeasurementEstimator9" ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MaxChi2 = cms.double( 9.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPCloseComponentsMerger5D = cms.ESProducer( "CloseComponentsMergerESProducer5D",
  ComponentName = cms.string( "hltESPCloseComponentsMerger5D" ),
  MaxComponents = cms.int32( 12 ),
  DistanceMeasure = cms.string( "hltESPKullbackLeiblerDistance5D" )
)
hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPDetachedQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 9.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPDetachedQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedQuadStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPDetachedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPDetachedTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 9.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPDetachedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPDetachedTripletStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.13 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPDisplacedDijethltPromptTrackCountingESProducer = cms.ESProducer( "PromptTrackCountingESProducer",
  maxImpactParameterSig = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  minimumImpactParameter = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  impactParameterType = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  deltaRmin = cms.double( 0.0 ),
  maxImpactParameter = cms.double( 0.1 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  nthTrack = cms.int32( -1 )
)
hltESPDisplacedDijethltPromptTrackCountingESProducerLong = cms.ESProducer( "PromptTrackCountingESProducer",
  maxImpactParameterSig = cms.double( 999999.0 ),
  deltaR = cms.double( -1.0 ),
  minimumImpactParameter = cms.double( -1.0 ),
  maximumDecayLength = cms.double( 999999.0 ),
  impactParameterType = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  deltaRmin = cms.double( 0.0 ),
  maxImpactParameter = cms.double( 0.2 ),
  useSignedImpactParameterSig = cms.bool( True ),
  maximumDistanceToJetAxis = cms.double( 999999.0 ),
  nthTrack = cms.int32( -1 )
)
hltESPDisplacedDijethltTrackCounting2D1st = cms.ESProducer( "TrackCountingESProducer",
  b_pT = cms.double( 0.3684 ),
  deltaR = cms.double( -1.0 ),
  minimumImpactParameter = cms.double( 0.05 ),
  a_dR = cms.double( -0.001053 ),
  min_pT = cms.double( 120.0 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  max_pT = cms.double( 500.0 ),
  impactParameterType = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  max_pT_dRcut = cms.double( 0.1 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 1 ),
  useSignedImpactParameterSig = cms.bool( False )
)
hltESPDisplacedDijethltTrackCounting2D2ndLong = cms.ESProducer( "TrackCountingESProducer",
  b_pT = cms.double( 0.3684 ),
  deltaR = cms.double( -1.0 ),
  minimumImpactParameter = cms.double( 0.2 ),
  a_dR = cms.double( -0.001053 ),
  min_pT = cms.double( 120.0 ),
  maximumDistanceToJetAxis = cms.double( 9999999.0 ),
  max_pT = cms.double( 500.0 ),
  impactParameterType = cms.int32( 1 ),
  trackQualityClass = cms.string( "any" ),
  useVariableJTA = cms.bool( False ),
  min_pT_dRcut = cms.double( 0.5 ),
  max_pT_trackPTcut = cms.double( 3.0 ),
  max_pT_dRcut = cms.double( 0.1 ),
  b_dR = cms.double( 0.6263 ),
  a_pT = cms.double( 0.005263 ),
  maximumDecayLength = cms.double( 999999.0 ),
  nthTrack = cms.int32( 2 ),
  useSignedImpactParameterSig = cms.bool( True )
)
hltESPDummyDetLayerGeometry = cms.ESProducer( "DetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPEcalTrigTowerConstituentsMapBuilder = cms.ESProducer( "EcalTrigTowerConstituentsMapBuilder",
  MapFile = cms.untracked.string( "Geometry/EcalMapping/data/EndCap_TTMap.txt" )
)
hltESPElectronMaterialEffects = cms.ESProducer( "GsfMaterialEffectsESProducer",
  BetheHeitlerParametrization = cms.string( "BetheHeitler_cdfmom_nC6_O5.par" ),
  EnergyLossUpdator = cms.string( "GsfBetheHeitlerUpdator" ),
  ComponentName = cms.string( "hltESPElectronMaterialEffects" ),
  MultipleScatteringUpdator = cms.string( "MultipleScatteringUpdator" ),
  Mass = cms.double( 5.11E-4 ),
  BetheHeitlerCorrection = cms.int32( 2 )
)
hltESPFastSteppingHelixPropagatorAny = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  NoErrorPropagation = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  PropagationDirection = cms.string( "anyDirection" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  returnTangentPlane = cms.bool( True ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorAny" )
)
hltESPFastSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  NoErrorPropagation = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( True ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  returnTangentPlane = cms.bool( True ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  ComponentName = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" )
)
hltESPFittingSmootherIT = cms.ESProducer( "KFFittingSmootherESProducer",
  EstimateCut = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  MinNumberOfHits = cms.int32( 3 ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  MaxFractionOutliers = cms.double( 0.3 ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  ComponentName = cms.string( "hltESPFittingSmootherIT" ),
  RejectTracks = cms.bool( True )
)
hltESPFittingSmootherRK = cms.ESProducer( "KFFittingSmootherESProducer",
  EstimateCut = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  Fitter = cms.string( "hltESPTrajectoryFitterRK" ),
  MinNumberOfHits = cms.int32( 5 ),
  Smoother = cms.string( "hltESPTrajectorySmootherRK" ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  MaxFractionOutliers = cms.double( 0.3 ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  ComponentName = cms.string( "hltESPFittingSmootherRK" ),
  RejectTracks = cms.bool( True )
)
hltESPFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPFlexibleKFFittingSmoother" ),
  appendToDataLabel = cms.string( "" ),
  standardFitter = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  looperFitter = cms.string( "hltESPKFFittingSmootherForLoopers" )
)
hltESPFwdElectronPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  ComponentName = cms.string( "hltESPFwdElectronPropagator" ),
  Mass = cms.double( 5.11E-4 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( False )
)
hltESPGlobalDetLayerGeometry = cms.ESProducer( "GlobalDetLayerGeometryESProducer",
  ComponentName = cms.string( "hltESPGlobalDetLayerGeometry" )
)
hltESPGlobalTrackingGeometryESProducer = cms.ESProducer( "GlobalTrackingGeometryESProducer" )
hltESPGsfElectronFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  EstimateCut = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  Fitter = cms.string( "hltESPGsfTrajectoryFitter" ),
  MinNumberOfHits = cms.int32( 5 ),
  Smoother = cms.string( "hltESPGsfTrajectorySmoother" ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  MaxFractionOutliers = cms.double( 0.3 ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  ComponentName = cms.string( "hltESPGsfElectronFittingSmoother" ),
  RejectTracks = cms.bool( True )
)
hltESPGsfTrajectoryFitter = cms.ESProducer( "GsfTrajectoryFitterESProducer",
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectoryFitter" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  GeometricalPropagator = cms.string( "hltESPAnalyticalPropagator" )
)
hltESPGsfTrajectorySmoother = cms.ESProducer( "GsfTrajectorySmootherESProducer",
  ErrorRescaling = cms.double( 100.0 ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" ),
  Merger = cms.string( "hltESPCloseComponentsMerger5D" ),
  ComponentName = cms.string( "hltESPGsfTrajectorySmoother" ),
  GeometricalPropagator = cms.string( "hltESPBwdAnalyticalPropagator" ),
  MaterialEffectsUpdator = cms.string( "hltESPElectronMaterialEffects" )
)
hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPHighPtTripletStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 30.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPInitialStepChi2ChargeMeasurementEstimator30 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPInitialStepChi2ChargeMeasurementEstimator30" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 30.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPInitialStepChi2MeasurementEstimator36 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  MinimalTolerance = cms.double( 10.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  ComponentName = cms.string( "hltESPInitialStepChi2MeasurementEstimator36" ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MaxChi2 = cms.double( 36.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPKFFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  EstimateCut = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  Fitter = cms.string( "hltESPKFTrajectoryFitter" ),
  MinNumberOfHits = cms.int32( 5 ),
  Smoother = cms.string( "hltESPKFTrajectorySmoother" ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  MaxFractionOutliers = cms.double( 0.3 ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  ComponentName = cms.string( "hltESPKFFittingSmoother" ),
  RejectTracks = cms.bool( True )
)
hltESPKFFittingSmootherForL2Muon = cms.ESProducer( "KFFittingSmootherESProducer",
  EstimateCut = cms.double( -1.0 ),
  appendToDataLabel = cms.string( "" ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  MinNumberOfHits = cms.int32( 5 ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  MaxFractionOutliers = cms.double( 0.3 ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  ComponentName = cms.string( "hltESPKFFittingSmootherForL2Muon" ),
  RejectTracks = cms.bool( True )
)
hltESPKFFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  EstimateCut = cms.double( 20.0 ),
  appendToDataLabel = cms.string( "" ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  Fitter = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  MinNumberOfHits = cms.int32( 3 ),
  Smoother = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  MaxFractionOutliers = cms.double( 0.3 ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  ComponentName = cms.string( "hltESPKFFittingSmootherForLoopers" ),
  RejectTracks = cms.bool( True )
)
hltESPKFFittingSmootherWithOutliersRejectionAndRK = cms.ESProducer( "KFFittingSmootherESProducer",
  EstimateCut = cms.double( 20.0 ),
  appendToDataLabel = cms.string( "" ),
  LogPixelProbabilityCut = cms.double( -14.0 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  Fitter = cms.string( "hltESPRKTrajectoryFitter" ),
  MinNumberOfHits = cms.int32( 3 ),
  Smoother = cms.string( "hltESPRKTrajectorySmoother" ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( True ),
  MaxFractionOutliers = cms.double( 0.3 ),
  NoInvalidHitsBeginEnd = cms.bool( True ),
  ComponentName = cms.string( "hltESPKFFittingSmootherWithOutliersRejectionAndRK" ),
  RejectTracks = cms.bool( True )
)
hltESPKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  appendToDataLabel = cms.string( "" ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPKFTrajectoryFitter" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPKFTrajectoryFitterForL2Muon = cms.ESProducer( "KFTrajectoryFitterESProducer",
  appendToDataLabel = cms.string( "" ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForL2Muon" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorAny" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPKFTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  appendToDataLabel = cms.string( "" ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPKFTrajectoryFitterForLoopers" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
hltESPKFTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPKFTrajectorySmoother" ),
  appendToDataLabel = cms.string( "" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPKFTrajectorySmootherForL2Muon = cms.ESProducer( "KFTrajectorySmootherESProducer",
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForL2Muon" ),
  appendToDataLabel = cms.string( "" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "hltESPFastSteppingHelixPropagatorOpposite" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPKFTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForLoopers" ),
  appendToDataLabel = cms.string( "" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
hltESPKFTrajectorySmootherForMuonTrackLoader = cms.ESProducer( "KFTrajectorySmootherESProducer",
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPKFTrajectorySmootherForMuonTrackLoader" ),
  appendToDataLabel = cms.string( "" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "hltESPSmartPropagatorAnyOpposite" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPKFUpdator = cms.ESProducer( "KFUpdatorESProducer",
  ComponentName = cms.string( "hltESPKFUpdator" )
)
hltESPKullbackLeiblerDistance5D = cms.ESProducer( "DistanceBetweenComponentsESProducer5D",
  ComponentName = cms.string( "hltESPKullbackLeiblerDistance5D" ),
  DistanceMeasure = cms.string( "KullbackLeibler" )
)
hltESPL3MuKFTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  appendToDataLabel = cms.string( "" ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPL3MuKFTrajectoryFitter" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "hltESPSmartPropagatorAny" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPLowPtQuadStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 9.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPLowPtQuadStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtQuadStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPLowPtStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPLowPtTripletStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 9.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPLowPtTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPLowPtTripletStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.16 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPMeasurementTracker = cms.ESProducer( "MeasurementTrackerESProducer",
  UseStripStripQualityDB = cms.bool( True ),
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  UsePixelROCQualityDB = cms.bool( True ),
  DebugPixelROCQualityDB = cms.untracked.bool( False ),
  UseStripAPVFiberQualityDB = cms.bool( True ),
  badStripCuts = cms.PSet( 
    TOB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TIB = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TID = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    ),
    TEC = cms.PSet( 
      maxBad = cms.uint32( 4 ),
      maxConsecutiveBad = cms.uint32( 2 )
    )
  ),
  DebugStripModuleQualityDB = cms.untracked.bool( False ),
  ComponentName = cms.string( "hltESPMeasurementTracker" ),
  DebugPixelModuleQualityDB = cms.untracked.bool( False ),
  UsePixelModuleQualityDB = cms.bool( True ),
  DebugStripAPVFiberQualityDB = cms.untracked.bool( False ),
  HitMatcher = cms.string( "StandardMatcher" ),
  DebugStripStripQualityDB = cms.untracked.bool( False ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  SiStripQualityLabel = cms.string( "" ),
  UseStripModuleQualityDB = cms.bool( True ),
  MaskBadAPVFibers = cms.bool( True )
)
hltESPMixedStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  ComponentName = cms.string( "hltESPMixedStepClusterShapeHitFilter" ),
  PixelShapeFileL1 = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  PixelShapeFile = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" )
)
hltESPMixedStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPMixedTripletStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPMixedTripletStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 16.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPMixedTripletStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPMixedTripletStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPMuonDetLayerGeometryESProducer = cms.ESProducer( "MuonDetLayerGeometryESProducer" )
hltESPMuonTransientTrackingRecHitBuilder = cms.ESProducer( "MuonTransientTrackingRecHitBuilderESProducer",
  ComponentName = cms.string( "hltESPMuonTransientTrackingRecHitBuilder" )
)
hltESPPixelCPEGeneric = cms.ESProducer( "PixelCPEGenericESProducer",
  useLAAlignmentOffsets = cms.bool( False ),
  DoCosmics = cms.bool( False ),
  eff_charge_cut_highX = cms.double( 1.0 ),
  eff_charge_cut_highY = cms.double( 1.0 ),
  inflate_all_errors_no_trk_angle = cms.bool( False ),
  eff_charge_cut_lowY = cms.double( 0.0 ),
  eff_charge_cut_lowX = cms.double( 0.0 ),
  UseErrorsFromTemplates = cms.bool( True ),
  TruncatePixelCharge = cms.bool( True ),
  size_cutY = cms.double( 3.0 ),
  size_cutX = cms.double( 3.0 ),
  useLAWidthFromDB = cms.bool( False ),
  inflate_errors = cms.bool( False ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  PixelErrorParametrization = cms.string( "NOTcmsim" ),
  EdgeClusterErrorX = cms.double( 50.0 ),
  EdgeClusterErrorY = cms.double( 85.0 ),
  LoadTemplatesFromDB = cms.bool( True ),
  ComponentName = cms.string( "hltESPPixelCPEGeneric" ),
  MagneticFieldRecord = cms.ESInputTag( "" ),
  IrradiationBiasCorrection = cms.bool( False )
)
hltESPPixelCPETemplateReco = cms.ESProducer( "PixelCPETemplateRecoESProducer",
  DoLorentz = cms.bool( True ),
  DoCosmics = cms.bool( False ),
  LoadTemplatesFromDB = cms.bool( True ),
  ComponentName = cms.string( "hltESPPixelCPETemplateReco" ),
  Alpha2Order = cms.bool( True ),
  ClusterProbComputationFlag = cms.int32( 0 ),
  speed = cms.int32( -2 ),
  UseClusterSplitter = cms.bool( False )
)
hltESPPixelLessStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPPixelLessStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 16.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPPixelLessStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  ComponentName = cms.string( "hltESPPixelLessStepClusterShapeHitFilter" ),
  PixelShapeFileL1 = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  PixelShapeFile = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" )
)
hltESPPixelLessStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelLessStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.11 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPPixelPairStepChi2ChargeMeasurementEstimator9 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutLoose" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2ChargeMeasurementEstimator9" ),
  pTChargeCutThreshold = cms.double( 15.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 9.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1.0E12 )
)
hltESPPixelPairStepChi2MeasurementEstimator25 = cms.ESProducer( "Chi2MeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  MinimalTolerance = cms.double( 10.0 ),
  MaxDisplacement = cms.double( 100.0 ),
  ComponentName = cms.string( "hltESPPixelPairStepChi2MeasurementEstimator25" ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( -1.0 ),
  MaxChi2 = cms.double( 25.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPPixelPairTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPPixelPairTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.19 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  appendToDataLabel = cms.string( "" ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPRKTrajectoryFitter" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
hltESPRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPRKTrajectorySmoother" ),
  appendToDataLabel = cms.string( "" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  RecoGeometry = cms.string( "hltESPGlobalDetLayerGeometry" )
)
hltESPRungeKuttaTrackerPropagator = cms.ESProducer( "PropagatorWithMaterialESProducer",
  SimpleMagneticField = cms.string( "" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  ComponentName = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  Mass = cms.double( 0.105 ),
  ptMin = cms.double( -1.0 ),
  MaxDPhi = cms.double( 1.6 ),
  useRungeKutta = cms.bool( True )
)
hltESPSmartPropagator = cms.ESProducer( "SmartPropagatorESProducer",
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "hltESPSteppingHelixPropagatorAlong" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  ComponentName = cms.string( "hltESPSmartPropagator" )
)
hltESPSmartPropagatorAny = cms.ESProducer( "SmartPropagatorESProducer",
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterial" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "alongMomentum" ),
  ComponentName = cms.string( "hltESPSmartPropagatorAny" )
)
hltESPSmartPropagatorAnyOpposite = cms.ESProducer( "SmartPropagatorESProducer",
  Epsilon = cms.double( 5.0 ),
  TrackerPropagator = cms.string( "PropagatorWithMaterialOpposite" ),
  MuonPropagator = cms.string( "SteppingHelixPropagatorAny" ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  ComponentName = cms.string( "hltESPSmartPropagatorAnyOpposite" )
)
hltESPSoftLeptonByDistance = cms.ESProducer( "LeptonTaggerByDistanceESProducer",
  distance = cms.double( 0.5 )
)
hltESPSteppingHelixPropagatorAlong = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  NoErrorPropagation = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  PropagationDirection = cms.string( "alongMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  returnTangentPlane = cms.bool( True ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorAlong" )
)
hltESPSteppingHelixPropagatorOpposite = cms.ESProducer( "SteppingHelixPropagatorESProducer",
  NoErrorPropagation = cms.bool( False ),
  endcapShiftInZPos = cms.double( 0.0 ),
  PropagationDirection = cms.string( "oppositeToMomentum" ),
  useTuningForL2Speed = cms.bool( False ),
  useIsYokeFlag = cms.bool( True ),
  endcapShiftInZNeg = cms.double( 0.0 ),
  SetVBFPointer = cms.bool( False ),
  AssumeNoMaterial = cms.bool( False ),
  returnTangentPlane = cms.bool( True ),
  useInTeslaFromMagField = cms.bool( False ),
  VBFName = cms.string( "VolumeBasedMagneticField" ),
  useEndcapShiftsInZ = cms.bool( False ),
  sendLogWarning = cms.bool( False ),
  useMatVolumes = cms.bool( True ),
  debug = cms.bool( False ),
  ApplyRadX0Correction = cms.bool( True ),
  useMagVolumes = cms.bool( True ),
  ComponentName = cms.string( "hltESPSteppingHelixPropagatorOpposite" )
)
hltESPStripCPEfromTrackAngle = cms.ESProducer( "StripCPEESProducer",
  ComponentType = cms.string( "StripCPEfromTrackAngle" ),
  ComponentName = cms.string( "hltESPStripCPEfromTrackAngle" ),
  parameters = cms.PSet( 
    mTIB_P1 = cms.double( 0.202 ),
    maxChgOneMIP = cms.double( 6000.0 ),
    mTEC_P0 = cms.double( -1.885 ),
    mTOB_P1 = cms.double( 0.253 ),
    mTEC_P1 = cms.double( 0.471 ),
    mLC_P2 = cms.double( 0.3 ),
    mLC_P1 = cms.double( 0.618 ),
    mTOB_P0 = cms.double( -1.026 ),
    mLC_P0 = cms.double( -0.326 ),
    useLegacyError = cms.bool( False ),
    mTIB_P0 = cms.double( -0.742 ),
    mTID_P1 = cms.double( 0.433 ),
    mTID_P0 = cms.double( -1.427 )
  )
)
hltESPTTRHBWithTrackAngle = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  ComponentName = cms.string( "hltESPTTRHBWithTrackAngle" )
)
hltESPTTRHBuilderAngleAndTemplate = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  StripCPE = cms.string( "hltESPStripCPEfromTrackAngle" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  PixelCPE = cms.string( "hltESPPixelCPETemplateReco" ),
  ComponentName = cms.string( "hltESPTTRHBuilderAngleAndTemplate" )
)
hltESPTTRHBuilderPixelOnly = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  StripCPE = cms.string( "Fake" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  ComponentName = cms.string( "hltESPTTRHBuilderPixelOnly" )
)
hltESPTTRHBuilderWithoutAngle4PixelTriplets = cms.ESProducer( "TkTransientTrackingRecHitBuilderESProducer",
  StripCPE = cms.string( "Fake" ),
  Matcher = cms.string( "StandardMatcher" ),
  ComputeCoarseLocalPositionFromDisk = cms.bool( False ),
  PixelCPE = cms.string( "hltESPPixelCPEGeneric" ),
  ComponentName = cms.string( "hltESPTTRHBuilderWithoutAngle4PixelTriplets" )
)
hltESPTobTecStepChi2ChargeMeasurementEstimator16 = cms.ESProducer( "Chi2ChargeMeasurementEstimatorESProducer",
  appendToDataLabel = cms.string( "" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  MinimalTolerance = cms.double( 0.5 ),
  MaxDisplacement = cms.double( 0.5 ),
  ComponentName = cms.string( "hltESPTobTecStepChi2ChargeMeasurementEstimator16" ),
  pTChargeCutThreshold = cms.double( -1.0 ),
  nSigma = cms.double( 3.0 ),
  MaxSagitta = cms.double( 2.0 ),
  MaxChi2 = cms.double( 16.0 ),
  MinPtForHitRecoveryInGluedDet = cms.double( 1000000.0 )
)
hltESPTobTecStepClusterShapeHitFilter = cms.ESProducer( "ClusterShapeHitFilterESProducer",
  ComponentName = cms.string( "hltESPTobTecStepClusterShapeHitFilter" ),
  PixelShapeFileL1 = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_loose.par" ),
  clusterChargeCut = cms.PSet(  refToPSet_ = cms.string( "HLTSiStripClusterChargeCutTight" ) ),
  PixelShapeFile = cms.string( "RecoPixelVertexing/PixelLowPtUtilities/data/pixelShapePhase1_noL1.par" )
)
hltESPTobTecStepFittingSmoother = cms.ESProducer( "KFFittingSmootherESProducer",
  EstimateCut = cms.double( 30.0 ),
  appendToDataLabel = cms.string( "" ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  Fitter = cms.string( "hltESPTobTecStepRKFitter" ),
  MinNumberOfHits = cms.int32( 7 ),
  Smoother = cms.string( "hltESPTobTecStepRKSmoother" ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  MaxFractionOutliers = cms.double( 0.3 ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  ComponentName = cms.string( "hltESPTobTecStepFitterSmoother" ),
  RejectTracks = cms.bool( True )
)
hltESPTobTecStepFittingSmootherForLoopers = cms.ESProducer( "KFFittingSmootherESProducer",
  EstimateCut = cms.double( 30.0 ),
  appendToDataLabel = cms.string( "" ),
  LogPixelProbabilityCut = cms.double( -16.0 ),
  MinDof = cms.int32( 2 ),
  NoOutliersBeginEnd = cms.bool( False ),
  Fitter = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  MinNumberOfHits = cms.int32( 7 ),
  Smoother = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  MaxNumberOfOutliers = cms.int32( 3 ),
  BreakTrajWith2ConsecutiveMissing = cms.bool( False ),
  MaxFractionOutliers = cms.double( 0.3 ),
  NoInvalidHitsBeginEnd = cms.bool( False ),
  ComponentName = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" ),
  RejectTracks = cms.bool( True )
)
hltESPTobTecStepFlexibleKFFittingSmoother = cms.ESProducer( "FlexibleKFFittingSmootherESProducer",
  ComponentName = cms.string( "hltESPTobTecStepFlexibleKFFittingSmoother" ),
  appendToDataLabel = cms.string( "" ),
  standardFitter = cms.string( "hltESPTobTecStepFitterSmoother" ),
  looperFitter = cms.string( "hltESPTobTecStepFitterSmootherForLoopers" )
)
hltESPTobTecStepRKTrajectoryFitter = cms.ESProducer( "KFTrajectoryFitterESProducer",
  appendToDataLabel = cms.string( "" ),
  minHits = cms.int32( 7 ),
  ComponentName = cms.string( "hltESPTobTecStepRKFitter" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPTobTecStepRKTrajectoryFitterForLoopers = cms.ESProducer( "KFTrajectoryFitterESProducer",
  appendToDataLabel = cms.string( "" ),
  minHits = cms.int32( 7 ),
  ComponentName = cms.string( "hltESPTobTecStepRKFitterForLoopers" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPTobTecStepRKTrajectorySmoother = cms.ESProducer( "KFTrajectorySmootherESProducer",
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  ComponentName = cms.string( "hltESPTobTecStepRKSmoother" ),
  appendToDataLabel = cms.string( "" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "PropagatorWithMaterialParabolicMf" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPTobTecStepRKTrajectorySmootherForLoopers = cms.ESProducer( "KFTrajectorySmootherESProducer",
  errorRescaling = cms.double( 10.0 ),
  minHits = cms.int32( 7 ),
  ComponentName = cms.string( "hltESPTobTecStepRKSmootherForLoopers" ),
  appendToDataLabel = cms.string( "" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "PropagatorWithMaterialForLoopers" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPTobTecStepTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTobTecStepTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.09 ),
  ValidHitBonus = cms.double( 5.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 20.0 ),
  allowSharedFirstHit = cms.bool( True )
)
hltESPTrackAlgoPriorityOrder = cms.ESProducer( "TrackAlgoPriorityOrderESProducer",
  ComponentName = cms.string( "hltESPTrackAlgoPriorityOrder" ),
  appendToDataLabel = cms.string( "" ),
  algoOrder = cms.vstring(  )
)
hltESPTrackerRecoGeometryESProducer = cms.ESProducer( "TrackerRecoGeometryESProducer",
  appendToDataLabel = cms.string( "" ),
  trackerGeometryLabel = cms.untracked.string( "" )
)
hltESPTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "hltESPTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.5 ),
  ValidHitBonus = cms.double( 100.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 0.0 ),
  allowSharedFirstHit = cms.bool( False )
)
hltESPTrajectoryFitterRK = cms.ESProducer( "KFTrajectoryFitterESProducer",
  appendToDataLabel = cms.string( "" ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPTrajectoryFitterRK" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltESPTrajectorySmootherRK = cms.ESProducer( "KFTrajectorySmootherESProducer",
  errorRescaling = cms.double( 100.0 ),
  minHits = cms.int32( 3 ),
  ComponentName = cms.string( "hltESPTrajectorySmootherRK" ),
  appendToDataLabel = cms.string( "" ),
  Estimator = cms.string( "hltESPChi2MeasurementEstimator30" ),
  Updator = cms.string( "hltESPKFUpdator" ),
  Propagator = cms.string( "hltESPRungeKuttaTrackerPropagator" ),
  RecoGeometry = cms.string( "hltESPDummyDetLayerGeometry" )
)
hltPixelTracksCleanerBySharedHits = cms.ESProducer( "PixelTrackCleanerBySharedHitsESProducer",
  useQuadrupletAlgo = cms.bool( False ),
  ComponentName = cms.string( "hltPixelTracksCleanerBySharedHits" ),
  appendToDataLabel = cms.string( "" )
)
hltTrackCleaner = cms.ESProducer( "TrackCleanerESProducer",
  ComponentName = cms.string( "hltTrackCleaner" ),
  appendToDataLabel = cms.string( "" )
)
hoDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "HODetIdAssociator" ),
  hcalRegion = cms.int32( 2 ),
  etaBinSize = cms.double( 0.087 ),
  nEta = cms.int32( 30 ),
  nPhi = cms.int32( 72 ),
  includeBadChambers = cms.bool( False ),
  includeME0 = cms.bool( False ),
  includeGEM = cms.bool( False )
)
muonDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "MuonDetIdAssociator" ),
  hcalRegion = cms.int32( 2 ),
  etaBinSize = cms.double( 0.125 ),
  nEta = cms.int32( 48 ),
  nPhi = cms.int32( 48 ),
  includeBadChambers = cms.bool( False ),
  includeME0 = cms.bool( False ),
  includeGEM = cms.bool( False )
)
muonSeededTrajectoryCleanerBySharedHits = cms.ESProducer( "TrajectoryCleanerESProducer",
  ComponentName = cms.string( "muonSeededTrajectoryCleanerBySharedHits" ),
  fractionShared = cms.double( 0.1 ),
  ValidHitBonus = cms.double( 1000.0 ),
  ComponentType = cms.string( "TrajectoryCleanerBySharedHits" ),
  MissingHitPenalty = cms.double( 1.0 ),
  allowSharedFirstHit = cms.bool( True )
)
navigationSchoolESProducer = cms.ESProducer( "NavigationSchoolESProducer",
  ComponentName = cms.string( "SimpleNavigationSchool" ),
  SimpleMagneticField = cms.string( "ParabolicMf" )
)
preshowerDetIdAssociator = cms.ESProducer( "DetIdAssociatorESProducer",
  ComponentName = cms.string( "PreshowerDetIdAssociator" ),
  hcalRegion = cms.int32( 2 ),
  etaBinSize = cms.double( 0.1 ),
  nEta = cms.int32( 60 ),
  nPhi = cms.int32( 30 ),
  includeBadChambers = cms.bool( False ),
  includeME0 = cms.bool( False ),
  includeGEM = cms.bool( False )
)
siPixelQualityESProducer = cms.ESProducer( "SiPixelQualityESProducer",
  ListOfRecordToMerge = cms.VPSet( 
    cms.PSet(  record = cms.string( "SiPixelQualityFromDbRcd" ),
      tag = cms.string( "" )
    ),
    cms.PSet(  record = cms.string( "SiPixelDetVOffRcd" ),
      tag = cms.string( "" )
    )
  )
)
siPixelTemplateDBObjectESProducer = cms.ESProducer( "SiPixelTemplateDBObjectESProducer" )
siStripBackPlaneCorrectionDepESProducer = cms.ESProducer( "SiStripBackPlaneCorrectionDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  BackPlaneCorrectionDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  ),
  BackPlaneCorrectionPeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripBackPlaneCorrectionRcd" )
  )
)
siStripLorentzAngleDepESProducer = cms.ESProducer( "SiStripLorentzAngleDepESProducer",
  LatencyRecord = cms.PSet( 
    label = cms.untracked.string( "" ),
    record = cms.string( "SiStripLatencyRcd" )
  ),
  LorentzAngleDeconvMode = cms.PSet( 
    label = cms.untracked.string( "deconvolution" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  ),
  LorentzAnglePeakMode = cms.PSet( 
    label = cms.untracked.string( "peak" ),
    record = cms.string( "SiStripLorentzAngleRcd" )
  )
)
sistripconn = cms.ESProducer( "SiStripConnectivity" )
trackerTopology = cms.ESProducer( "TrackerTopologyEP",
  appendToDataLabel = cms.string( "" )
)

FastTimerService = cms.Service( "FastTimerService",
  dqmPath = cms.untracked.string( "HLT/TimerService" ),
  dqmModuleTimeRange = cms.untracked.double( 40.0 ),
  enableDQMbyPath = cms.untracked.bool( False ),
  dqmModuleTimeResolution = cms.untracked.double( 0.2 ),
  dqmPathMemoryResolution = cms.untracked.double( 5000.0 ),
  enableDQM = cms.untracked.bool( True ),
  enableDQMbyModule = cms.untracked.bool( False ),
  dqmModuleMemoryRange = cms.untracked.double( 100000.0 ),
  dqmMemoryResolution = cms.untracked.double( 5000.0 ),
  enableDQMbyLumiSection = cms.untracked.bool( True ),
  dqmPathTimeResolution = cms.untracked.double( 0.5 ),
  printEventSummary = cms.untracked.bool( False ),
  dqmPathTimeRange = cms.untracked.double( 100.0 ),
  dqmTimeRange = cms.untracked.double( 2000.0 ),
  enableDQMTransitions = cms.untracked.bool( False ),
  dqmLumiSectionsRange = cms.untracked.uint32( 2500 ),
  dqmPathMemoryRange = cms.untracked.double( 1000000.0 ),
  dqmMemoryRange = cms.untracked.double( 1000000.0 ),
  dqmTimeResolution = cms.untracked.double( 5.0 ),
  printRunSummary = cms.untracked.bool( True ),
  dqmModuleMemoryResolution = cms.untracked.double( 500.0 ),
  printJobSummary = cms.untracked.bool( True ),
  enableDQMbyProcesses = cms.untracked.bool( True )
)
MessageLogger = cms.Service( "MessageLogger",
  suppressInfo = cms.untracked.vstring(  ),
  debugs = cms.untracked.PSet( 
    threshold = cms.untracked.string( "INFO" ),
    placeholder = cms.untracked.bool( True ),
    suppressInfo = cms.untracked.vstring(  ),
    suppressWarning = cms.untracked.vstring(  ),
    suppressDebug = cms.untracked.vstring(  ),
    suppressError = cms.untracked.vstring(  )
  ),
  suppressDebug = cms.untracked.vstring(  ),
  cout = cms.untracked.PSet(  placeholder = cms.untracked.bool( True ) ),
  cerr_stats = cms.untracked.PSet( 
    threshold = cms.untracked.string( "WARNING" ),
    output = cms.untracked.string( "cerr" ),
    optionalPSet = cms.untracked.bool( True )
  ),
  warnings = cms.untracked.PSet( 
    threshold = cms.untracked.string( "INFO" ),
    placeholder = cms.untracked.bool( True ),
    suppressInfo = cms.untracked.vstring(  ),
    suppressWarning = cms.untracked.vstring(  ),
    suppressDebug = cms.untracked.vstring(  ),
    suppressError = cms.untracked.vstring(  )
  ),
  statistics = cms.untracked.vstring( 'cerr' ),
  cerr = cms.untracked.PSet( 
    INFO = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    noTimeStamps = cms.untracked.bool( False ),
    FwkReport = cms.untracked.PSet( 
      reportEvery = cms.untracked.int32( 1 ),
      limit = cms.untracked.int32( 0 )
    ),
    default = cms.untracked.PSet(  limit = cms.untracked.int32( 10000000 ) ),
    Root_NoDictionary = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    FwkJob = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    FwkSummary = cms.untracked.PSet( 
      reportEvery = cms.untracked.int32( 1 ),
      limit = cms.untracked.int32( 10000000 )
    ),
    threshold = cms.untracked.string( "INFO" ),
    suppressInfo = cms.untracked.vstring(  ),
    suppressWarning = cms.untracked.vstring(  ),
    suppressDebug = cms.untracked.vstring(  ),
    suppressError = cms.untracked.vstring(  )
  ),
  FrameworkJobReport = cms.untracked.PSet( 
    default = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    FwkJob = cms.untracked.PSet(  limit = cms.untracked.int32( 10000000 ) )
  ),
  suppressWarning = cms.untracked.vstring( 'hltOnlineBeamSpot',
    'hltCtf3HitL1SeededWithMaterialTracks',
    'hltL3MuonsOIState',
    'hltPixelTracksForHighMult',
    'hltHITPixelTracksHE',
    'hltHITPixelTracksHB',
    'hltCtfL1SeededWithMaterialTracks',
    'hltRegionalTracksForL3MuonIsolation',
    'hltSiPixelClusters',
    'hltActivityStartUpElectronPixelSeeds',
    'hltLightPFTracks',
    'hltPixelVertices3DbbPhi',
    'hltL3MuonsIOHit',
    'hltPixelTracks',
    'hltSiPixelDigis',
    'hltL3MuonsOIHit',
    'hltL1SeededElectronGsfTracks',
    'hltL1SeededStartUpElectronPixelSeeds',
    'hltBLifetimeRegionalCtfWithMaterialTracksbbPhiL1FastJetFastPV',
    'hltCtfActivityWithMaterialTracks' ),
  errors = cms.untracked.PSet( 
    threshold = cms.untracked.string( "INFO" ),
    placeholder = cms.untracked.bool( True ),
    suppressInfo = cms.untracked.vstring(  ),
    suppressWarning = cms.untracked.vstring(  ),
    suppressDebug = cms.untracked.vstring(  ),
    suppressError = cms.untracked.vstring(  )
  ),
  fwkJobReports = cms.untracked.vstring( 'FrameworkJobReport' ),
  debugModules = cms.untracked.vstring(  ),
  infos = cms.untracked.PSet( 
    threshold = cms.untracked.string( "INFO" ),
    Root_NoDictionary = cms.untracked.PSet(  limit = cms.untracked.int32( 0 ) ),
    placeholder = cms.untracked.bool( True ),
    suppressInfo = cms.untracked.vstring(  ),
    suppressWarning = cms.untracked.vstring(  ),
    suppressDebug = cms.untracked.vstring(  ),
    suppressError = cms.untracked.vstring(  )
  ),
  categories = cms.untracked.vstring( 'FwkJob',
    'FwkReport',
    'FwkSummary',
    'Root_NoDictionary' ),
  destinations = cms.untracked.vstring( 'warnings',
    'errors',
    'infos',
    'debugs',
    'cout',
    'cerr' ),
  threshold = cms.untracked.string( "INFO" ),
  suppressError = cms.untracked.vstring( 'hltOnlineBeamSpot',
    'hltL3MuonCandidates',
    'hltL3TkTracksFromL2OIState',
    'hltPFJetCtfWithMaterialTracks',
    'hltL3TkTracksFromL2IOHit',
    'hltL3TkTracksFromL2OIHit' )
)
PrescaleService = cms.Service( "PrescaleService",
  forceDefault = cms.bool( False ),
  prescaleTable = cms.VPSet(  *(
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet360_TrimMass30_v18" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet380_TrimMass30_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet400_TrimMass30_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet420_TrimMass30_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFHT750_TrimMass50_v12" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFHT800_TrimMass50_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFHT850_TrimMass50_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFHT900_TrimMass50_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloJet10_NoJetID_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloJet20_NoJetID_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloJet50_NoJetID_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloJet500_NoJetID_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloJet550_NoJetID_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu5_Upsilon_DoubleEle3_CaloIdL_TrackIdL_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DoubleEle7p5_CaloIdL_TrackIdL_Upsilon_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Trimuon5_3p5_2_Upsilon_Muon_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TrimuonOpen_5_3p5_2_Upsilon_Muon_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleEle25_CaloIdL_MW_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleEle27_CaloIdL_MW_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleEle33_CaloIdL_MW_v17" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleEle24_eta2p1_WPTight_Gsf_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_DZ_PFHT350_v20" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleEle8_CaloIdM_TrackIdM_Mass8_PFHT350_v20" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele27_Ele37_CaloIdL_MW_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu27_Ele37_CaloIdL_MW_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu37_Ele27_CaloIdL_MW_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu37_TkMu27_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_3_Bs_v14" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_3_Jpsi_v2" ),
      prescales = cms.vuint32( 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_JpsiTrk_Displaced_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_LowMassNonResonantTrk_Displaced_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_Trk_Tau3mu_v12" ),
      prescales = cms.vuint32( 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_TkMu_DsTau3Mu_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_PsiPrimeTrk_Displaced_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_Mass3p8_DZ_PFHT350_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3_PFJet40_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 6, 6, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7p5_L2Mu2_Jpsi_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7p5_L2Mu2_Upsilon_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7p5_Track2_Jpsi_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7p5_Track3p5_Jpsi_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7p5_Track7_Jpsi_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7p5_Track2_Upsilon_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7p5_Track3p5_Upsilon_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7p5_Track7_Upsilon_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3_L1SingleMu5orSingleMu7_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePhoton33_CaloIdL_v6" ),
      prescales = cms.vuint32( 0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePhoton70_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePhoton85_v14" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele20_WPTight_Gsf_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_WPLoose_Gsf_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele17_WPLoose_Gsf_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele20_WPLoose_Gsf_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele20_eta2p1_WPLoose_Gsf_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiEle27_WPTightCaloOnly_L1DoubleEG_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele27_WPTight_Gsf_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele28_WPTight_Gsf_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele30_WPTight_Gsf_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele32_WPTight_Gsf_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele35_WPTight_Gsf_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele35_WPTight_Gsf_L1EGMT_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele38_WPTight_Gsf_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele40_WPTight_Gsf_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele32_WPTight_Gsf_L1DoubleEG_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele24_eta2p1_WPTight_Gsf_LooseChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele24_eta2p1_WPTight_Gsf_MediumChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele24_eta2p1_WPTight_Gsf_TightChargedIsoPFTauHPS30_eta2p1_TightID_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT450_Beamspot_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT300_Beamspot_v11" ),
      prescales = cms.vuint32( 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 2, 35, 35, 8, 8, 8, 0, 0, 1, 1, 1, 1, 1, 1, 0, 35, 35 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_Beamspot_v4" ),
      prescales = cms.vuint32( 100, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 85, 37, 37, 245, 245, 245, 245, 245, 1, 1, 1, 1, 1, 1, 400, 100, 100 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_CrossL1_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu20_eta2p1_LooseChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu20_eta2p1_MediumChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu20_eta2p1_TightChargedIsoPFTauHPS27_eta2p1_TightID_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_TightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_CrossL1_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTauHPS30_Trk1_eta2p1_Reg_CrossL1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu27_LooseChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu27_MediumChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu27_TightChargedIsoPFTauHPS20_Trk1_eta2p1_SingleL1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu20_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu24_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu27_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu30_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_UncorrectedJetE30_NoBPTX_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_UncorrectedJetE30_NoBPTX3BX_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_UncorrectedJetE60_NoBPTX3BX_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_UncorrectedJetE70_NoBPTX3BX_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMu18_v3" ),
      prescales = cms.vuint32( 0, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 125, 187, 187, 187, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMu25_v2" ),
      prescales = cms.vuint32( 0, 18000, 18000, 18000, 18000, 18000, 18000, 18000, 18000, 18000, 18000, 18000, 18000, 18000, 18000, 2160, 2160, 2160, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMuOpen_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMuOpen_DT_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMuCosmics_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMu3_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMu5_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMu7_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1DoubleMu0_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleEG10_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 31, 31, 31, 0, 0, 1, 1, 1, 1, 1, 1, 1, 3, 3 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleEG15_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 3, 3 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleEG18_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 3, 3 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleJet16_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleJet20_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleJet35_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleJet8erHE_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleJet10erHE_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleJet12erHE_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleJet200_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 10, 10 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1DoubleJetC50_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 3, 3 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1EXT_HCAL_LaserMon1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1EXT_HCAL_LaserMon4_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DQMPixels_SingleMuOpen_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 20, 20 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2DoubleMu23_NoVertex_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu10_v7" ),
      prescales = cms.vuint32( 0, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 6000, 943, 943, 943, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu10_NoVertex_NoBPTX3BX_v5" ),
      prescales = cms.vuint32( 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 700, 700, 700, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu10_NoVertex_NoBPTX_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu45_NoVertex_3Sta_NoBPTX3BX_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu40_NoVertex_3Sta_NoBPTX3BX_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu50_v2" ),
      prescales = cms.vuint32( 0, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 69, 69, 69, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu23NoVtx_2Cha_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L2Mu23NoVtx_2Cha_CosmicSeed_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu30NoVtx_2Cha_CosmicSeed_Eta2p4_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu30NoVtx_2Cha_Eta2p4_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu50_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu23NoVtx_2Cha_CosmicSeed_NoL2Matched_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_NoL2Matched_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_CosmicSeed_Eta2p4_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu23NoVtx_2Cha_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu23NoVtx_2Cha_NoL2Matched_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_NoL2Matched_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleL2Mu25NoVtx_2Cha_Eta2p4_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_v14" ),
      prescales = cms.vuint32( 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_v3" ),
      prescales = cms.vuint32( 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_v15" ),
      prescales = cms.vuint32( 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_v3" ),
      prescales = cms.vuint32( 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass8_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass8_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_Mu8_TrkIsoVVL_DZ_Mass3p8_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_Mu9_TrkIsoVVL_DZ_Mass3p8_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu25_TkMu0_Onia_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu30_TkMu0_Psi_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu30_TkMu0_Upsilon_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu20_TkMu0_Phi_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu25_TkMu0_Phi_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu15_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu20_v12" ),
      prescales = cms.vuint32( 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 11, 11, 11, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu27_v13" ),
      prescales = cms.vuint32( 0, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 74, 74, 74, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu50_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu55_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_OldMu100_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TkMu100_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJet15_NoCaloMatched_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 9, 5, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJet25_NoCaloMatched_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 6, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJet15_FBEta3_NoCaloMatched_v17" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJet25_FBEta3_NoCaloMatched_v17" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve40_v14" ),
      prescales = cms.vuint32( 0, 25, 25, 25, 16, 16, 12, 12, 8, 12, 25, 12, 12, 12, 12, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve60_v14" ),
      prescales = cms.vuint32( 0, 5, 5, 5, 4, 4, 3, 3, 2, 3, 5, 3, 3, 3, 3, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve80_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve140_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve200_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve260_v14" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 96, 96, 64, 64, 32, 64, 128, 64, 64, 64, 64, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve320_v14" ),
      prescales = cms.vuint32( 0, 48, 48, 48, 36, 36, 24, 24, 12, 24, 48, 24, 24, 24, 24, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve400_v14" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 12, 12, 8, 8, 4, 8, 16, 8, 8, 8, 8, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve500_v14" ),
      prescales = cms.vuint32( 0, 4, 4, 4, 3, 3, 2, 2, 1, 2, 4, 2, 2, 2, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve15_HFJEC_v17" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 9, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve25_HFJEC_v17" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve35_HFJEC_v17" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve60_HFJEC_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve80_HFJEC_v16" ),
      prescales = cms.vuint32( 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve100_HFJEC_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve160_HFJEC_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve220_HFJEC_v16" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 6, 6, 4, 4, 2, 4, 8, 4, 4, 4, 4, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiPFJetAve300_HFJEC_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet15_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5000, 5000, 5000, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet25_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 700, 700, 700, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet40_v16" ),
      prescales = cms.vuint32( 0, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 250, 70, 70, 70, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet60_v15" ),
      prescales = cms.vuint32( 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 14, 14, 14, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet80_v15" ),
      prescales = cms.vuint32( 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8, 8, 8, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet140_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 2, 2, 4, 2, 1, 2, 2, 2, 2, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet200_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 2, 2, 4, 2, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet260_v16" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet320_v16" ),
      prescales = cms.vuint32( 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet400_v16" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet450_v16" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet500_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet550_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet15_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1000, 1000, 1000, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet25_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 100, 100, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet40_v21" ),
      prescales = cms.vuint32( 0, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet60_v21" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet80_v20" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet140_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 2, 2, 4, 2, 1, 2, 2, 2, 2, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet200_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 2, 2, 4, 2, 1, 2, 2, 2, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet260_v20" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet320_v20" ),
      prescales = cms.vuint32( 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet400_v20" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet450_v21" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet500_v21" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJet550_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd15_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 700, 700, 700, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd25_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 70, 70, 70, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd40_v19" ),
      prescales = cms.vuint32( 0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 7, 7, 7, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd60_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd80_v18" ),
      prescales = cms.vuint32( 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 15, 15, 15, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd140_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd200_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd260_v19" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd320_v19" ),
      prescales = cms.vuint32( 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd400_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd450_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFJetFwd500_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd15_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7000, 7000, 7000, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd25_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 700, 700, 700, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd40_v15" ),
      prescales = cms.vuint32( 0, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 750, 70, 70, 70, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd60_v14" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 12, 12, 12, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd80_v14" ),
      prescales = cms.vuint32( 0, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 90, 90, 90, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd140_v14" ),
      prescales = cms.vuint32( 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd200_v14" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd260_v15" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd320_v15" ),
      prescales = cms.vuint32( 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd400_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd450_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJetFwd500_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT180_v17" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT250_v17" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 7, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT370_v17" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT430_v17" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT510_v17" ),
      prescales = cms.vuint32( 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 50, 50, 50, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT590_v17" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 26, 26, 26, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT680_v17" ),
      prescales = cms.vuint32( 0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 14, 14, 14, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT780_v17" ),
      prescales = cms.vuint32( 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 8, 8, 8, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT890_v17" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT1050_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT500_PFMET100_PFMHT100_IDTight_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT500_PFMET110_PFMHT110_IDTight_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT700_PFMET85_PFMHT85_IDTight_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT700_PFMET95_PFMHT95_IDTight_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT800_PFMET75_PFMHT75_IDTight_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT800_PFMET85_PFMHT85_IDTight_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET110_PFMHT110_IDTight_v20" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 41, 41, 41, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET120_PFMHT120_IDTight_v20" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET130_PFMHT130_IDTight_v20" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET140_PFMHT140_IDTight_v20" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET100_PFMHT100_IDTight_CaloBTagDeepCSV_3p1_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET110_PFMHT110_IDTight_CaloBTagDeepCSV_3p1_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET120_PFMHT120_IDTight_CaloBTagDeepCSV_3p1_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET130_PFMHT130_IDTight_CaloBTagDeepCSV_3p1_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET140_PFMHT140_IDTight_CaloBTagDeepCSV_3p1_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET120_PFMHT120_IDTight_PFHT60_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_PFHT60_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETTypeOne120_PFMHT120_IDTight_PFHT60_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETTypeOne110_PFMHT110_IDTight_v12" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 59, 59, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETTypeOne120_PFMHT120_IDTight_v12" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETTypeOne130_PFMHT130_IDTight_v12" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETTypeOne140_PFMHT140_IDTight_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu110_PFMHTNoMu110_IDTight_v20" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 55, 55, 55, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu120_PFMHTNoMu120_IDTight_v20" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu130_PFMHTNoMu130_IDTight_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu140_PFMHTNoMu140_IDTight_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MonoCentralPFJet80_PFMETNoMu110_PFMHTNoMu110_IDTight_v20" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MonoCentralPFJet80_PFMETNoMu120_PFMHTNoMu120_IDTight_v20" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MonoCentralPFJet80_PFMETNoMu130_PFMHTNoMu130_IDTight_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MonoCentralPFJet80_PFMETNoMu140_PFMHTNoMu140_IDTight_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1ETMHadSeeds_v2" ),
      prescales = cms.vuint32( 0, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1024, 1653, 1653, 1653, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMHT90_v4" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 494, 494, 494, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET80_NotCleaned_v4" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 340, 340, 340, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET90_NotCleaned_v4" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 237, 237, 237, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET100_NotCleaned_v4" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 133, 133, 133, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET110_NotCleaned_v4" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 74, 74, 74, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET250_NotCleaned_v4" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET70_HBHECleaned_v4" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 289, 289, 289, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET80_HBHECleaned_v4" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 202, 202, 202, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET90_HBHECleaned_v4" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 148, 148, 148, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET100_HBHECleaned_v4" ),
      prescales = cms.vuint32( 0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 69, 69, 69, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET250_HBHECleaned_v4" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET300_HBHECleaned_v4" ),
      prescales = cms.vuint32( 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CaloMET350_HBHECleaned_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET200_NotCleaned_v9" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 7, 7, 7, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET200_HBHECleaned_v9" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET250_HBHECleaned_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET300_HBHECleaned_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET200_HBHE_BeamHaloCleaned_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETTypeOne200_HBHE_BeamHaloCleaned_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MET105_IsoTrk50_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MET120_IsoTrk50_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_SingleJet30_Mu12_SinglePFJet40_v11" ),
      prescales = cms.vuint32( 0, 6, 6, 6, 8, 8, 12, 12, 24, 12, 6, 12, 12, 12, 12, 9, 9, 9, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets40_CaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets100_CaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets200_CaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets350_CaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets40MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets54MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePFJets62MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePFJets40_CaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 12, 12, 12, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePFJets100_CaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 56, 56, 56, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePFJets200_CaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePFJets350_CaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePFJets116MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoublePFJets128MaxDeta1p6_DoubleCaloBTagDeepCSV_p71_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon300_NoHE_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_v12" ),
      prescales = cms.vuint32( 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 51, 51, 51, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_DiEle12_CaloIdL_TrackIdL_DZ_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_DiEle12_CaloIdL_TrackIdL_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_DZ_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_Ele8_CaloIdM_TrackIdM_Mass8_PFHT350_v19" ),
      prescales = cms.vuint32( 0, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_PFDiJet30_PFBtagDeepCSV_1p5_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_CaloDiJet30_CaloBtagDeepCSV_1p5_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v11" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_TrkIsoVVL_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu19_TrkIsoVVL_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet20_Mu5_v13" ),
      prescales = cms.vuint32( 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 8, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet40_Mu5_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet70_Mu5_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet110_Mu5_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet170_Mu5_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4Jet300_Mu5_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK8DiJet170_Mu5_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK8Jet170_DoubleMu5_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK8Jet300_Mu5_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet20_Mu5_noalgo_v13" ),
      prescales = cms.vuint32( 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 8, 8, 8, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet40_Mu5_noalgo_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet70_Mu5_noalgo_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet110_Mu5_noalgo_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4DiJet170_Mu5_noalgo_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK4Jet300_Mu5_noalgo_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK8DiJet170_Mu5_noalgo_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK8Jet170_DoubleMu5_noalgo_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_BTagMu_AK8Jet300_Mu5_noalgo_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_Ele8_CaloIdL_TrackIdL_IsoVL_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele23_Ele12_CaloIdL_TrackIdL_IsoVL_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_DZ_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu23_TrkIsoVVL_Ele12_CaloIdL_TrackIdL_IsoVL_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu23_TrkIsoVVL_Ele8_CaloIdL_TrackIdL_IsoVL_DZ_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_v7" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_TrkIsoVVL_Ele23_CaloIdL_TrackIdL_IsoVL_DZ_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_DoublePhoton20_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TriplePhoton_20_20_20_CaloIdLV2_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TriplePhoton_20_20_20_CaloIdLV2_R9IdVL_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TriplePhoton_30_30_10_CaloIdLV2_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TriplePhoton_30_30_10_CaloIdLV2_R9IdVL_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TriplePhoton_35_35_5_CaloIdLV2_R9IdVL_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon20_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 15, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon22_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon25_v4" ),
      prescales = cms.vuint32( 0, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 42, 20, 20, 20, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon33_v5" ),
      prescales = cms.vuint32( 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon50_v13" ),
      prescales = cms.vuint32( 0, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 6144, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon75_v13" ),
      prescales = cms.vuint32( 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon90_v13" ),
      prescales = cms.vuint32( 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon120_v13" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon150_v6" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon175_v14" ),
      prescales = cms.vuint32( 0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon200_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon100EB_TightID_TightIso_v2" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon110EB_TightID_TightIso_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon120EB_TightID_TightIso_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon100EBHE10_v2" ),
      prescales = cms.vuint32( 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon100EEHE10_v2" ),
      prescales = cms.vuint32( 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon100EE_TightID_TightIso_v2" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon50_R9Id90_HE10_IsoM_v14" ),
      prescales = cms.vuint32( 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 43, 43, 43, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon75_R9Id90_HE10_IsoM_v14" ),
      prescales = cms.vuint32( 0, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ300_PFJetsMJJ400DEta3_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_CaloMJJ400_PFJetsMJJ600DEta3_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon90_R9Id90_HE10_IsoM_v14" ),
      prescales = cms.vuint32( 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 5, 5, 5, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon120_R9Id90_HE10_IsoM_v14" ),
      prescales = cms.vuint32( 0, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon165_R9Id90_HE10_IsoM_v15" ),
      prescales = cms.vuint32( 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon90_CaloIdL_PFHT700_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass90_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Diphoton30_22_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass95_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_PixelVeto_Mass55_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Diphoton30PV_18PV_R9Id_AND_IsoCaloId_AND_HE_R9Id_NoPixelVeto_Mass55_v13" ),
      prescales = cms.vuint32( 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 5, 5, 5, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon35_TwoProngs35_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu24_TwoProngs35_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_L1_NoOS_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_NoVertexing_NoOS_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_v8" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_NoVertexing_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_L1_4R_0er1p5R_v7" ),
      prescales = cms.vuint32( 0, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 45, 45, 45, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi_NoVertexing_L1_4R_0er1p5R_v7" ),
      prescales = cms.vuint32( 0, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 51, 51, 51, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Jpsi3p5_Muon2_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_L1_4p5_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_L1_5_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_L1_4p5NoOS_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_L1_4p5er2p0_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_L1_4p5er2p0M_v7" ),
      prescales = cms.vuint32( 0, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 8, 8, 8, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_NoVertexing_v7" ),
      prescales = cms.vuint32( 0, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_L1_5M_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 7, 7, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_0er1p5R_v7" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23, 23, 23, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_0er1p5_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_v8" ),
      prescales = cms.vuint32( 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_4_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_4R_v7" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 40, 40, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_LowMass_L1_TM530_v6" ),
      prescales = cms.vuint32( 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Trimuon2_Upsilon5_Muon_NoL1Mass_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_Muon_L1_TM0_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon0_Upsilon_Muon_NoL1Mass_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TripleMu_5_3_3_Mass3p8_DZ_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TripleMu_10_5_5_DZ_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TripleMu_12_10_5_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_v4" ),
      prescales = cms.vuint32( 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Tau3Mu_Mu7_Mu1_TkMu1_Tau15_Charge1_v4" ),
      prescales = cms.vuint32( 0, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 2, 2, 2, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Tau3Mu_Mu7_Mu1_TkMu1_IsoTau15_Charge1_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DZ_PFMET50_PFMHT60_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DZ_PFMET70_PFMHT70_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DZ_PFMET90_PFMHT90_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_Trk_Tau3mu_NoL1Mass_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_Jpsi_Displaced_v7" ),
      prescales = cms.vuint32( 0, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 60, 7, 7, 7, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_Jpsi_NoVertexing_v7" ),
      prescales = cms.vuint32( 0, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 240, 32, 32, 32, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu4_JpsiTrkTrk_Displaced_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu43NoFiltersNoVtx_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu48NoFiltersNoVtx_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu43NoFiltersNoVtx_Photon43_CaloIdL_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu48NoFiltersNoVtx_Photon48_CaloIdL_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu38NoFiltersNoVtxDisplaced_Photon38_CaloIdL_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu43NoFiltersNoVtxDisplaced_Photon43_CaloIdL_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu33NoFiltersNoVtxDisplaced_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu40NoFiltersNoVtxDisplaced_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu20_7_Mass0to30_L1_DM4_v7" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu20_7_Mass0to30_L1_DM4EG_v8" ),
      prescales = cms.vuint32( 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT425_v9" ),
      prescales = cms.vuint32( 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 91, 91, 91, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT430_DisplacedDijet40_DisplacedTrack_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT500_DisplacedDijet40_DisplacedTrack_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT430_DisplacedDijet60_DisplacedTrack_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT400_DisplacedDijet40_DisplacedTrack_v13" ),
      prescales = cms.vuint32( 0, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT650_DisplacedDijet60_Inclusive_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HT550_DisplacedDijet60_Inclusive_v13" ),
      prescales = cms.vuint32( 0, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJet110_35_Mjj650_PFMET110_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJet110_35_Mjj650_PFMET120_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiJet110_35_Mjj650_PFMET130_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TripleJet110_35_35_Mjj650_PFMET110_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TripleJet110_35_35_Mjj650_PFMET120_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TripleJet110_35_35_Mjj650_PFMET130_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele30_eta2p1_WPTight_Gsf_CentralPFJet35_EleCleaned_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele28_eta2p1_WPTight_Gsf_HT150_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele28_HighEta_SC20_Mass55_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu20_7_Mass0to30_Photon23_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_IsoVVVL_PFHT450_PFMET50_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_IsoVVVL_PFHT450_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele50_IsoVVVL_PFHT450_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_IsoVVVL_PFHT600_v20" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu4_TrkIsoVVL_DiPFJet90_40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT300_PFMETNoMu60_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu10_TrkIsoVVL_DiPFJet40_DEta3p5_MJJ750_HTT350_PFMETNoMu60_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu15_IsoVVVL_PFHT450_CaloBTagDeepCSV_4p5_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu15_IsoVVVL_PFHT450_PFMET50_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu15_IsoVVVL_PFHT450_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu50_IsoVVVL_PFHT450_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu15_IsoVVVL_PFHT600_v19" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMET70_PFMHT70_IDTight_v2" ),
      prescales = cms.vuint32( 0, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 180, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMET80_PFMHT80_IDTight_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMET90_PFMHT90_IDTight_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMET100_PFMHT100_IDTight_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu70_PFMHTNoMu70_IDTight_v2" ),
      prescales = cms.vuint32( 0, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu80_PFMHTNoMu80_IDTight_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu90_PFMHTNoMu90_IDTight_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu3er1p5_PFJet100er2p5_PFMETNoMu100_PFMHTNoMu100_IDTight_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon10_PsiPrime_Barrel_Seagulls_v7" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon20_Jpsi_Barrel_Seagulls_v7" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon12_Upsilon_y1p4_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon14_Phi_Barrel_Seagulls_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon18_PsiPrime_v14" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon25_Jpsi_v14" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon18_PsiPrime_noCorrL1_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon24_Upsilon_noCorrL1_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon24_Phi_noCorrL1_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Dimuon25_Jpsi_noCorrL1_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiMu4_Ele9_CaloIdL_TrackIdL_DZ_Mass3p8_v17" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiMu9_Ele9_CaloIdL_TrackIdL_DZ_v17" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiMu9_Ele9_CaloIdL_TrackIdL_v17" ),
      prescales = cms.vuint32( 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleIsoMu20_eta2p1_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TrkMu12_DoubleTrkMu5NoFiltersNoVtx_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TrkMu16_DoubleTrkMu6NoFiltersNoVtx_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TrkMu17_DoubleTrkMu8NoFiltersNoVtx_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_v12" ),
      prescales = cms.vuint32( 0, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 54, 54, 54, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu19_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu17_Photon30_IsoCaloId_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdL_TrackIdL_IsoVL_PFJet30_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele12_CaloIdL_TrackIdL_IsoVL_PFJet30_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 16, 16, 16, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele15_CaloIdL_TrackIdL_IsoVL_PFJet30_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele23_CaloIdL_TrackIdL_IsoVL_PFJet30_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele8_CaloIdM_TrackIdM_PFJet30_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 5, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele17_CaloIdM_TrackIdM_PFJet30_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele23_CaloIdM_TrackIdM_PFJet30_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 7, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele50_CaloIdVT_GsfTrkIdT_PFJet165_v18" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele115_CaloIdVT_GsfTrkIdT_v14" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele135_CaloIdVT_GsfTrkIdT_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele145_CaloIdVT_GsfTrkIdT_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele200_CaloIdVT_GsfTrkIdT_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele250_CaloIdVT_GsfTrkIdT_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele300_CaloIdVT_GsfTrkIdT_v13" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT330PT30_QuadPFJet_75_60_45_40_TriplePFBTagDeepCSV_4p5_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT330PT30_QuadPFJet_75_60_45_40_v9" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 210, 210, 210, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT400_SixPFJet32_DoublePFBTagDeepCSV_2p94_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT400_SixPFJet32_v8" ),
      prescales = cms.vuint32( 0, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 65, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT450_SixPFJet36_PFBTagDeepCSV_1p59_v7" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT450_SixPFJet36_v7" ),
      prescales = cms.vuint32( 0, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT400_FivePFJet_100_100_60_30_30_v8" ),
      prescales = cms.vuint32( 0, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT400_FivePFJet_100_100_60_30_30_DoublePFBTagDeepCSV_4p5_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT400_FivePFJet_120_120_60_30_30_DoublePFBTagDeepCSV_4p5_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT350_v19" ),
      prescales = cms.vuint32( 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 61, 61, 61, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFHT350MinPFJet15_v9" ),
      prescales = cms.vuint32( 0, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 3072, 757, 757, 757, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon60_R9Id90_CaloIdL_IsoL_v5" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 26, 26, 26, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_v5" ),
      prescales = cms.vuint32( 0, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 20, 20, 20, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon60_R9Id90_CaloIdL_IsoL_DisplacedIdL_PFHT350MinPFJet15_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ECALHT800_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DiSC30_18_EIso_AND_HE_Mass70_v13" ),
      prescales = cms.vuint32( 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 28, 28, 28, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1FatEvents_v2" ),
      prescales = cms.vuint32( 25, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 35, 35, 35, 25, 25, 1, 1, 1, 1, 1, 1, 35, 25, 25 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_v7" ),
      prescales = cms.vuint32( 25, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 35, 35, 35, 35, 35, 1, 1, 1, 1, 1, 1, 2000, 25, 25 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_part0_v7" ),
      prescales = cms.vuint32( 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_part1_v7" ),
      prescales = cms.vuint32( 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_part2_v7" ),
      prescales = cms.vuint32( 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_part3_v7" ),
      prescales = cms.vuint32( 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_part4_v7" ),
      prescales = cms.vuint32( 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_part5_v7" ),
      prescales = cms.vuint32( 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_part6_v7" ),
      prescales = cms.vuint32( 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Physics_part7_v7" ),
      prescales = cms.vuint32( 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 1100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_Physics_v7" ),
      prescales = cms.vuint32( 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1, 10, 10, 10 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Random_v3" ),
      prescales = cms.vuint32( 60, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 2000, 2000, 60, 60, 60, 60, 60, 1, 1, 1, 1, 1, 1, 60, 60, 60 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Random_TOTEM_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Random_TOTEM_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Random_TOTEM_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Random_TOTEM_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_v6" ),
      prescales = cms.vuint32( 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 15, 15, 72, 72, 72, 72, 72, 1, 1, 1, 1, 1, 1, 1000, 100, 100 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_TOTEM_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_TOTEM_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_TOTEM_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_TOTEM_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_Alignment_v1" ),
      prescales = cms.vuint32( 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 52, 52, 36, 36, 36, 36, 36, 1, 1, 1, 1, 1, 1, 1000, 100, 100 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_part0_v6" ),
      prescales = cms.vuint32( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 40, 0, 4, 10, 10, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_part1_v6" ),
      prescales = cms.vuint32( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 40, 0, 4, 10, 10, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_part2_v6" ),
      prescales = cms.vuint32( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 40, 0, 4, 10, 10, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_part3_v6" ),
      prescales = cms.vuint32( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 40, 0, 4, 10, 10, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_part4_v6" ),
      prescales = cms.vuint32( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 40, 0, 4, 10, 10, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_part5_v6" ),
      prescales = cms.vuint32( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 40, 0, 4, 10, 10, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_part6_v6" ),
      prescales = cms.vuint32( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 40, 0, 4, 10, 10, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_part7_v6" ),
      prescales = cms.vuint32( 0, 0, 40, 0, 0, 0, 0, 0, 0, 0, 40, 0, 4, 10, 10, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_ZeroBias_v2" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 15, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "DST_HT250_CaloScouting_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_HT250_CaloBTagScouting_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_HT410_PFScouting_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_HT410_BTagScouting_v16" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_ZeroBias_BTagScouting_v15" ),
      prescales = cms.vuint32( 0, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 38, 38, 38, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_ZeroBias_CaloScouting_PFScouting_v14" ),
      prescales = cms.vuint32( 0, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 175, 38, 38, 38, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_CaloJet40_BTagScouting_v15" ),
      prescales = cms.vuint32( 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_CaloJet40_CaloScouting_PFScouting_v15" ),
      prescales = cms.vuint32( 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_CaloJet40_CaloBTagScouting_v14" ),
      prescales = cms.vuint32( 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_L1HTT_BTagScouting_v15" ),
      prescales = cms.vuint32( 0, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 25, 25, 25, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_L1HTT_CaloScouting_PFScouting_v15" ),
      prescales = cms.vuint32( 0, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 25, 25, 25, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_L1HTT_CaloBTagScouting_v14" ),
      prescales = cms.vuint32( 0, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 25, 25, 25, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_L1DoubleMu_BTagScouting_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_L1DoubleMu_CaloScouting_PFScouting_v15" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_DoubleMu3_noVtx_CaloScouting_Monitoring_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_DoubleMu3_noVtx_CaloScouting_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_DoubleMu1_noVtx_CaloScouting_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "DST_DoubleMu3_noVtx_Mass10_PFScouting_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet30_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet40_v10" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet50_v10" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet80_v10" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet100_v10" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet120_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet30_v19" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet50_v19" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet80_v19" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet100_v19" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet120_v18" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PixelTracks_Multiplicity60ForPPRef_v5" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PixelTracks_Multiplicity85ForPPRef_v5" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PixelTracks_Multiplicity110ForPPRef_v5" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PixelTracks_Multiplicity135ForPPRef_v5" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PixelTracks_Multiplicity160ForPPRef_v5" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet40_Eta5p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet60_Eta5p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet80_Eta5p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet100_Eta5p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet110_Eta5p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet120_Eta5p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet150ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet40_Eta5p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet60_Eta5p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet80_Eta5p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet100_Eta5p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet110_Eta5p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFJet120_Eta5p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet80_Jet35_Eta1p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet80_Jet35_Eta0p7ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet100_Jet35_Eta1p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet100_Jet35_Eta0p7ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4CaloJet80_45_45_Eta2p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_SinglePhoton10_Eta3p1ForPPRef_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_SinglePhoton15_Eta3p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_SinglePhoton20_Eta3p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_SinglePhoton30_Eta3p1ForPPRef_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 5, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_SinglePhoton40_Eta3p1ForPPRef_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_SinglePhoton50_Eta3p1ForPPRef_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_SinglePhoton60_Eta3p1ForPPRef_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon20_HoverELoose_v10" ),
      prescales = cms.vuint32( 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 81, 81, 81, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon30_HoverELoose_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 17, 17, 17, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon40_HoverELoose_v10" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon50_HoverELoose_v10" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon60_HoverELoose_v10" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu3Eta2p5_AK4CaloJet40Eta2p1ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu3Eta2p5_AK4CaloJet60Eta2p1ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu3Eta2p5_AK4CaloJet80Eta2p1ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu3Eta2p5_AK4CaloJet100Eta2p1ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1DoubleMu0ForPPRef_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1DoubleMu10ForPPRef_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2DoubleMu0_NHitQForPPRef_v5" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3DoubleMu0_OS_m2p5to4p5ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3DoubleMu0_OS_m7to14ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu3_NHitQ10ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3_NHitQ15ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu5_NHitQ10ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5_NHitQ15ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu7_NHitQ10ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu7_NHitQ15ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu15ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu15ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu20ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu20ForPPRef_v6" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_FullTrack18ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_FullTrack24ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_FullTrack34ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_FullTrack45ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_FullTrack53ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1CastorMediumJetForPPRef_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIHT80_Beamspot_ppRef5TeV_v3" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part0_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part1_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part2_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part3_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part4_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part5_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part6_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part7_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part8_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part9_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part10_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIZeroBias_part11_v6" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 36, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_HIEcalPi0EBonly_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DmesonPPTrackingGlobal_Dpt8ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DmesonPPTrackingGlobal_Dpt15ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DmesonPPTrackingGlobal_Dpt20ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DmesonPPTrackingGlobal_Dpt30ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DmesonPPTrackingGlobal_Dpt40ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DmesonPPTrackingGlobal_Dpt50ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DmesonPPTrackingGlobal_Dpt60ForPPRef_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFBJetBCSV60_Eta2p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFBJetBCSV80_Eta2p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFDJet60_Eta2p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFDJet80_Eta2p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFBJetBSSV60_Eta2p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK4PFBJetBSSV80_Eta2p1ForPPRef_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_EcalPhiSym_v9" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1UnpairedBunchBptxMinus_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1UnpairedBunchBptxPlus_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1NotBptxOR_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1TOTEM1_MinBias_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1TOTEM2_ZeroBias_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part4_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part5_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part6_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part7_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part8_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF_OR_part9_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 10, 10, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF0OR_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF1OR_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF2OR_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF2ORNoBptxGating_v5" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF1AND_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1MinimumBiasHF2AND_v4" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1_CDC_SingleMu_3_er1p2_TOP120_DPHI2p618_3p142_v2" ),
      prescales = cms.vuint32( 0, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CDC_L2cosmic_10_er1p0_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_CDC_L2cosmic_5p5_er1p0_v1" ),
      prescales = cms.vuint32( 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HcalNZS_v13" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HcalPhiSym_v15" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HcalIsolatedbunch_v5" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoTrackHB_v4" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoTrackHE_v4" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_IsolatedBunches_v5" ),
      prescales = cms.vuint32( 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 1000, 1000, 1000, 1000, 10, 10, 10, 10, 10, 1, 1, 1, 1, 1, 1, 10, 10, 10 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_FirstCollisionInTrain_v4" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_LastCollisionInTrain_v3" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_ZeroBias_FirstBXAfterTrain_v3" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_RPCMuonNormalisation_v13" ),
      prescales = cms.vuint32( 12, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 4, 12, 12 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_HIRPCMuonNormalisation_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_LumiPixels_Random_v4" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 50, 50, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 10 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_LumiPixels_ZeroBias_v8" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 12, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "MC_ReducedIterativeTracking_v12" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_PFMET_v17" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_AK4PFJets_v17" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_PFBTagDeepCSV_v10" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_PFHT_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_PFMHT_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_CaloMET_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_CaloMET_JetIdCleaned_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_AK4CaloJets_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_AK4CaloJetsFromPV_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_CaloBTagDeepCSV_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_CaloHT_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_CaloMHT_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_AK8PFJets_v17" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_AK8TrimPFJets_v17" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_AK8PFHT_v16" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_AK8CaloHT_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_Diphoton10_10_R9Id_OR_IsoCaloId_AND_HE_R9Id_Mass10_v13" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_DoubleEle5_CaloIdL_MW_v15" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_Ele5_WPTight_Gsf_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_Ele15_Ele10_CaloIdL_TrackIdL_IsoVL_DZ_v15" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_IsoMu_v15" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_IsoTkMu15_v12" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_DoubleMu_TrkIsoVVL_DZ_v11" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_DoubleGlbTrkMu_TrkIsoVVL_DZ_v12" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "MC_DoubleMuNoFiltersNoVtx_v7" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_EcalPi0EBonly_v13" ),
      prescales = cms.vuint32( 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 0, 2, 2 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_EcalPi0EEonly_v13" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_EcalEtaEBonly_v13" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "AlCa_EcalEtaEEonly_v13" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu24_eta2p1_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET90_v12" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET100_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET110_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET120_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET130_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_MET140_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau50_Trk30_eta2p1_1pr_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_1pr_v11" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau180HighPtRelaxedIso_Trk50_eta2p1_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau200HighPtRelaxedIso_Trk50_eta2p1_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_MediumChargedIsoPFTau220HighPtRelaxedIso_Trk50_eta2p1_v12" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Ele16_Ele12_Ele8_CaloIdL_TrackIdL_v9" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Rsq0p35_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Rsq0p40_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_RsqMR300_Rsq0p09_MR200_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_RsqMR320_Rsq0p09_MR200_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_RsqMR300_Rsq0p09_MR200_4jet_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_RsqMR320_Rsq0p09_MR200_4jet_v15" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1_DoubleJet30_Mass_Min400_Mu10_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_IsoMu27_MET90_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMediumChargedIsoPFTauHPS30_L1MaxMass_Trk1_eta2p1_Reg_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMediumChargedIsoPFTauHPS35_Trk1_eta2p1_Reg_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleTightChargedIsoPFTauHPS35_Trk1_TightID_eta2p1_Reg_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_eta2p1_Reg_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMediumChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleTightChargedIsoPFTauHPS40_Trk1_TightID_eta2p1_Reg_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_VBF_DoubleLooseChargedIsoPFTauHPS20_Trk1_eta2p1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_VBF_DoubleMediumChargedIsoPFTauHPS20_Trk1_eta2p1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_VBF_DoubleTightChargedIsoPFTauHPS20_Trk1_eta2p1_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon50_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_PFMET50_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ300DEta3_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Photon75_R9Id90_HE10_IsoM_EBOnly_PFJetsMJJ600DEta3_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMET100_PFMHT100_IDTight_PFHT60_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETNoMu100_PFMHTNoMu100_IDTight_PFHT60_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_PFMETTypeOne100_PFMHT100_IDTight_PFHT60_v9" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu18_Mu9_SameSign_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu18_Mu9_SameSign_DZ_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu18_Mu9_v4" ),
      prescales = cms.vuint32( 0, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 8, 8, 8, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu18_Mu9_DZ_v4" ),
      prescales = cms.vuint32( 0, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 8, 8, 8, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu20_Mu10_SameSign_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu20_Mu10_SameSign_DZ_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu20_Mu10_v4" ),
      prescales = cms.vuint32( 0, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 6, 6, 6, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu20_Mu10_DZ_v4" ),
      prescales = cms.vuint32( 0, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 6, 6, 6, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu23_Mu12_SameSign_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu23_Mu12_SameSign_DZ_v4" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu23_Mu12_v4" ),
      prescales = cms.vuint32( 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 5, 5, 5, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu23_Mu12_DZ_v4" ),
      prescales = cms.vuint32( 0, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 4, 4, 4, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu2_Jpsi_DoubleTrk1_Phi1p05_v6" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu2_Jpsi_DoubleTkMu0_Phi_v5" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleMu3_DCA_PFMET50_PFMHT60_v10" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TripleMu_5_3_3_Mass3p8_DCA_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet98_83_71_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet103_88_75_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet111_90_80_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet98_83_71_15_PFBTagDeepCSV_1p3_VBF2_v8" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet103_88_75_15_PFBTagDeepCSV_1p3_VBF2_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet105_88_76_15_PFBTagDeepCSV_1p3_VBF2_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet111_90_80_15_PFBTagDeepCSV_1p3_VBF2_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet98_83_71_15_v5" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet103_88_75_15_v5" ),
      prescales = cms.vuint32( 0, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 256, 100, 100, 100, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet105_88_76_15_v5" ),
      prescales = cms.vuint32( 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 97, 97, 97, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet111_90_80_15_v5" ),
      prescales = cms.vuint32( 0, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 512, 78, 78, 78, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p17_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet330_TrimMass30_PFAK8BTagDeepCSV_p1_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_p02_v3" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np2_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_AK8PFJet330_TrimMass30_PFAK8BoostedDoubleB_np4_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_Mass55_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Diphoton30_18_R9IdL_AND_HE_AND_IsoCaloId_NoPixelVeto_v2" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_IP6_ToCSCS_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_IP6_part0_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_IP6_part1_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_IP6_part2_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_IP6_part3_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu12_IP6_part4_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 5, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP5_ToCSCS_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP5_part0_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP5_part1_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP5_part2_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP5_part3_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP5_part4_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7_IP4_ToCSCS_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7_IP4_part0_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7_IP4_part1_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7_IP4_part2_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7_IP4_part3_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu7_IP4_part4_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP4_ToCSCS_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP4_part0_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP4_part1_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP4_part2_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP4_part3_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP4_part4_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP5_ToCSCS_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP5_part0_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP5_part1_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP5_part2_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP5_part3_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP5_part4_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP6_ToCSCS_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP6_part0_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP6_part1_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP6_part2_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP6_part3_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP6_part4_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP6_ToCSCS_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP6_part0_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP6_part1_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP6_part2_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP6_part3_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP6_part4_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 5, 5, 5, 5, 5, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP3_ToCSCS_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP3_part0_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP3_part1_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP3_part2_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP3_part3_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu8_IP3_part4_v3" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP0_part0_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 3000, 3000, 3000, 3000, 3000, 3000, 0, 0, 3000, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_Mu9_IP3_part0_v2" ),
      prescales = cms.vuint32( 0, 0, 0, 1000, 1000, 1000, 1000, 1000, 1000, 0, 0, 1000, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_QuadPFJet105_88_76_15_DoublePFBTagDeepCSV_1p3_7p7_VBF1_v8" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_DoubleTrkMu_16_6_NoFiltersNoVtx_v1" ),
      prescales = cms.vuint32( 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult1_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult2_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_Mult3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult1_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult2_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_Mult3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult1_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult2_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_Mult3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult1_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult2_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelTrackCounting_BPixOnly_Mult3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult1_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult2_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelTrackCounting_BPixOnly_Mult3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult1_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult2_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelTrackCounting_BPixOnly_Mult3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu5NLay4_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu6NLay4_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_1_AND_PixelClusterCounting_BPixNClu7NLay4_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu5NLay4_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu6NLay4_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_2_AND_PixelClusterCounting_BPixNClu7NLay4_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu5NLay4_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu6NLay4_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay3_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_TOTEM_4_AND_PixelClusterCounting_BPixNClu7NLay4_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1TOTEM_3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1RomanPot_part0_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1RomanPot_part1_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1RomanPot_part2_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1RomanPot_part3_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1DoubleMu_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1SingleMu_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1DoubleJet_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1DoubleJetANDTotem_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1DoubleJet_gap_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_L1HFveto_v1" ),
      prescales = cms.vuint32( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part0_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part2_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part3_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part4_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part5_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part6_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part7_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part8_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part9_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part10_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part11_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part12_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part13_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part14_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part15_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part16_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part17_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part18_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part19_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part20_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part21_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part22_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part23_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part24_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIMinimumBias_part25_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 48, 67, 80, 60, 80, 40, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet40Eta5p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 53, 307, 367, 241, 71, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet60Eta5p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 37, 29, 29, 23, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet80Eta5p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 7, 13, 7, 3, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet40Eta5p1_Centrality_30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 11, 13, 31, 23, 5, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet40Eta5p1_Centrality_50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 7, 7, 7, 5, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet60Eta5p1_Centrality_30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 3, 5, 5, 5, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet60Eta5p1_Centrality_50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet80Eta5p1_Centrality_30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 7, 3, 3, 3, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet80Eta5p1_Centrality_50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet100Eta5p1_Centrality_30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99999, 99999, 9999, 9999, 9999, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet100Eta5p1_Centrality_50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99999, 99999, 9999, 9999, 9999, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet80_35_Eta1p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 7, 3, 3, 2, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet100_35_Eta1p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet80_35_Eta0p7_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 5, 2, 2, 2, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet100_35_Eta0p7_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet80_45_45_Eta2p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIPuAK4CaloJet40Fwd_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 17, 29, 23, 7, 7, 13, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton10_Eta3p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 503, 797, 907, 397, 599, 127, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton10_Eta1p5_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 151, 211, 199, 97, 179, 59, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton20_Eta3p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 101, 149, 173, 97, 149, 101, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton20_Eta1p5_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 17, 23, 23, 13, 13, 11, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton30_Eta3p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 17, 41, 23, 11, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton30_Eta1p5_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 5, 2, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton10_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 313, 499, 599, 293, 293, 179, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton20_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 31, 29, 29, 19, 29, 23, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton30_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 5, 11, 7, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton10_EB_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 101, 227, 229, 97, 149, 59, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton20_EB_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 11, 5, 17, 7, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton30_EB_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton10_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 339, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton20_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 21, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton30_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 7, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton40_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton50_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton60_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton10_EB_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 47, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton20_EB_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 2, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton30_EB_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton40_EB_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton50_EB_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton60_EB_HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIEle10Gsf_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 7, 7, 7, 3, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIEle15Gsf_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 2, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1Mu3Eta2p5_Ele10Gsf_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1Mu3Eta2p5_Ele15Gsf_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1Mu3Eta2p5_Ele20Gsf_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1Mu5Eta2p5_Ele10Gsf_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1Mu5Eta2p5_Ele15Gsf_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1Mu7Eta2p5_Ele10Gsf_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1Mu7Eta2p5_Ele15Gsf_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIEle10Gsf_PuAK4CaloJet40Eta2p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 11, 7, 5, 3, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIEle15Gsf_PuAK4CaloJet40Eta2p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDmesonPPTrackingGlobal_Dpt15_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 17, 13, 11, 11, 13, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDmesonPPTrackingGlobal_Dpt20_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 7, 11, 13, 11, 13, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDmesonPPTrackingGlobal_Dpt30_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 7, 11, 11, 7, 23, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDmesonPPTrackingGlobal_Dpt40_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 13, 21, 41, 23, 13, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDmesonPPTrackingGlobal_Dpt50_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 11, 19, 31, 19, 11, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDmesonPPTrackingGlobal_Dpt60_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 19, 11, 17, 17, 13, 7, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDsPPTrackingGlobal_Dpt20_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 5, 3, 3, 5, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDsPPTrackingGlobal_Dpt30_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 3, 2, 5, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDsPPTrackingGlobal_Dpt40_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 7, 5, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDsPPTrackingGlobal_Dpt50_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 5, 3, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIDsPPTrackingGlobal_Dpt60_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 2, 2, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HILcPPTrackingGlobal_Dpt20_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 5, 5, 5, 5, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HILcPPTrackingGlobal_Dpt30_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 5, 3, 3, 11, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HILcPPTrackingGlobal_Dpt40_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 13, 11, 5, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HILcPPTrackingGlobal_Dpt50_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 5, 7, 7, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HILcPPTrackingGlobal_Dpt60_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 131, 7, 5, 3, 3, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIFullTracks2018_HighPt18_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 137, 223, 347, 599, 449, 439, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIFullTracks2018_HighPt24_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 331, 239, 281, 557, 409, 383, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIFullTracks2018_HighPt34_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 157, 251, 313, 503, 443, 1381, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIFullTracks2018_HighPt45_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 151, 311, 1451, 3323, 1777, 1087, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1DoubleMuOpen_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 409, 379, 281, 211, 139, 71, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1DoubleMuOpen_Centrality_30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 17, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1DoubleMuOpen_er1p6_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1DoubleMuOpen_OS_er1p6_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1DoubleMu0_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 83, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2DoubleMuOpen_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 271, 201, 157, 127, 79, 37, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3DoubleMuOpen_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 5, 3, 2, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu0_L2Mu0_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 61, 53, 37, 29, 19, 11, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL1MuOpen_Centrality_70_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 13, 11, 5, 2, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu3_NHitQ15_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 383, 337, 263, 181, 127, 31, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu5_NHitQ15_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 131, 113, 89, 59, 41, 11, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL2Mu7_NHitQ15_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 47, 37, 29, 19, 13, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu2p5_L1DoubleMu0_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3_L1DoubleMuOpen_OS_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3NHitQ10_L1DoubleMuOpen_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3_L1TripleMuOpen_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 23, 23, 17, 13, 7, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3_NHitQ10_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 211, 173, 127, 97, 67, 7, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5_NHitQ10_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 43, 37, 31, 41, 29, 5, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu7_NHitQ10_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 17, 11, 11, 7, 5, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleMuOpen_BptxAND_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleMuOpen_NotMBHF2OR_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleMu0_NotMBHF2OR_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_DoubleMu0_NotMBHF2OR_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleMu3_NotMBHF2OR_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleMu0_BptxAND_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleMu3_BptxAND_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_DoubleEG2_NotMBHF2OR_SinglePixelTrack_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_NotMBHF2OR_BptxAND_SinglePixelTrack_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_NotMBHF2AND_SinglePixelTrack_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_NotMBHF2AND_SinglePixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 7, 7, 7, 7, 7, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_NotMBHF2AND_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 16, 16, 16, 16, 16, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_NotMBHF2OR_BptxAND_SinglePixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 8, 8, 8, 8, 8, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_DoubleEG2_NotMBHF2OR_SinglePixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_DoubleEG5_NotMBHF2OR_SinglePixelTrack_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleEG5_NotMBHF2OR_SinglePixelTrack_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleEG3_NotMBHF2OR_SinglePixelTrack_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleEG3_NotMBHF2AND_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIUPC_SingleEG3_BptxAND_SinglePixelTrack_MaxPixelTrack_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICsAK4PFJet60Eta1p5_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 11, 19, 17, 7, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICsAK4PFJet80Eta1p5_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 7, 5, 3, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICsAK4PFJet60Eta1p5_Centrality_30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 5, 3, 3, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICsAK4PFJet60Eta1p5_Centrality_50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 2, 2, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICsAK4PFJet80Eta1p5_Centrality_30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 2, 2, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICsAK4PFJet80Eta1p5_Centrality_50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 1, 1, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICsAK4PFJet100Eta1p5_Centrality_30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99999, 99999, 9999, 9999, 9999, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICsAK4PFJet100Eta1p5_Centrality_50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99999, 99999, 9999, 9999, 9999, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3_EG10HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 23, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3_EG15HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3_EG20HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3_EG30HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5_EG10HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 7, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5_EG15HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5_EG20HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5_EG30HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu7_EG10HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 3, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu7_EG15HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu7_EG20HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu7_EG30HECut_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 61, 61, 47, 31, 23, 13, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 3, 3, 2, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3Eta2p5_PuAK4CaloJet40Eta2p1_FilterDr_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 61, 61, 47, 31, 23, 13, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu3Eta2p5_PuAK4CaloJet60Eta2p1_FilterDr_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 5, 3, 2, 2, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 19, 19, 17, 13, 5, 5, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5Eta2p5_PuAK4CaloJet40Eta2p1_FilterDr_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 19, 19, 17, 13, 7, 5, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIL3Mu5Eta2p5_PuAK4CaloJet60Eta2p1_FilterDr_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_MediumJet_NotMBHF2AND_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_MediumJet_NotMBHF2OR_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_MediumJet_BptxAND_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_MediumJet_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_HighJet_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_HighJet_BptxAND_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_HighJet_NotMBHF2OR_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_HighJet_NotMBHF2AND_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_Muon_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HICastor_Muon_BptxAND_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton10_Eta3p1_Cent30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 17, 13, 199, 149, 59, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton20_Eta3p1_Cent30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 19, 11, 5, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton30_Eta3p1_Cent30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 5, 5, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton40_Eta3p1_Cent30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99999, 99999, 9999, 9999, 9999, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton10_Eta3p1_Cent50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 13, 11, 71, 41, 19, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton20_Eta3p1_Cent50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton30_Eta3p1_Cent50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 2, 3, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIIslandPhoton40_Eta3p1_Cent50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99999, 99999, 9999, 9999, 9999, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton10_Cent30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 9, 7, 101, 89, 29, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton20_Cent30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 11, 3, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton30_Cent30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 7, 5, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton40_Cent30_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99999, 99999, 9999, 9999, 9999, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton10_Cent50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 13, 11, 71, 41, 19, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton20_Cent50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 7, 7, 2, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton30_Cent50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 1, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "HLT_HIGEDPhoton40_Cent50_100_v1" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 99999, 99999, 9999, 9999, 9999, 1, 1, 1 )
    ),
    cms.PSet(  pathName = cms.string( "DQMOutput" ),
      prescales = cms.vuint32( 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 1, 1, 1, 1, 1, 7, 7, 7 )
    ),
    cms.PSet(  pathName = cms.string( "DQMCalibrationOutput" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 10, 10 )
    ),
    cms.PSet(  pathName = cms.string( "ALCALUMIPIXELSEXPRESSOutput" ),
      prescales = cms.vuint32( 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0 )
    )
) ),
  lvl1DefaultLabel = cms.string( "2.0e34+ZB+HLTPhysics" ),
  lvl1Labels = cms.vstring( 'Emergency',
    '2.2e34',
    '2.0e34+ZB+HLTPhysics',
    '1.7e34',
    '1.5e34',
    '1.3e34',
    '1.1e34',
    '9.0e33',
    '6.0e33',
    '1.7 to 0.6 e34 No Parking',
    '2.0e34 Backup',
    '900b',
    '600b',
    '3b',
    '3b_2coll',
    'LowPU',
    'LowPU Safety',
    'LowPU MB',
    '90m 1450b_all',
    '90m 3b_align',
    'HI60kHz',
    'HI50kHz',
    'HI40kHz',
    'HI30kHz',
    'HI20kHz',
    'HI10kHz',
    'PRef',
    'CRUZET',
    'CRAFT' )
)
ThroughputService = cms.Service( "ThroughputService",
  dqmPath = cms.untracked.string( "HLT/Throughput" ),
  timeRange = cms.untracked.double( 60000.0 ),
  dqmPathByProcesses = cms.untracked.bool( False ),
  timeResolution = cms.untracked.double( 5.828 )
)


